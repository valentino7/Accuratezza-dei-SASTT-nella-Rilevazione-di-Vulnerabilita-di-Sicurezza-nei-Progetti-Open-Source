<?xml version="1.0" encoding="UTF-8"?>
<pmd xmlns="http://pmd.sourceforge.net/report/2.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://pmd.sourceforge.net/report/2.0.0 http://pmd.sourceforge.net/report_2_0_0.xsd" version="6.44.0" timestamp="2023-10-12T18:14:42.641">
<file name="/mnt/c/Users/Valentino/Documents/Universita/Tesi/Tesi/Pacchetto_di_replicabilita/Correttiva/src/CWE-264/bad$00921f22ff9a8792d7663ef8fadd4823402a6324$0$TransportConnection.java">
<violation beginline="230" endline="230" begincolumn="21" endcolumn="101" rule="GuardLogStatement" ruleset="Best Practices" package="org.apache.activemq.broker" class="TransportConnection" method="serviceTransportException" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_bestpractices.html#guardlogstatement" priority="2">
Logger calls should be surrounded by log level guards.
</violation>
<violation beginline="252" endline="252" begincolumn="31" endcolumn="99" rule="UselessParentheses" ruleset="Code Style" package="org.apache.activemq.broker" class="TransportConnection" method="expected" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#uselessparentheses" priority="4">
Useless parentheses.
</violation>
<violation beginline="338" endline="357" begincolumn="11" endcolumn="9" rule="AvoidCatchingThrowable" ruleset="Error Prone" package="org.apache.activemq.broker" class="TransportConnection" method="service" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_errorprone.html#avoidcatchingthrowable" priority="3">
A catch statement should never catch throwable since it includes errors.
</violation>
<violation beginline="344" endline="344" begincolumn="17" endcolumn="17" rule="AvoidInstanceofChecksInCatchClause" ruleset="Error Prone" package="org.apache.activemq.broker" class="TransportConnection" method="service" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_errorprone.html#avoidinstanceofchecksincatchclause" priority="3">
An instanceof check is being performed on the caught exception.  Create a separate catch clause for this exception type.
</violation>
<violation beginline="344" endline="344" begincolumn="57" endcolumn="102" rule="UselessParentheses" ruleset="Code Style" package="org.apache.activemq.broker" class="TransportConnection" method="service" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#uselessparentheses" priority="4">
Useless parentheses.
</violation>
<violation beginline="350" endline="350" begincolumn="21" endcolumn="21" rule="AvoidInstanceofChecksInCatchClause" ruleset="Error Prone" package="org.apache.activemq.broker" class="TransportConnection" method="service" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_errorprone.html#avoidinstanceofchecksincatchclause" priority="3">
An instanceof check is being performed on the caught exception.  Create a separate catch clause for this exception type.
</violation>
<violation beginline="429" endline="429" begincolumn="35" endcolumn="45" rule="UnusedLocalVariable" ruleset="Best Practices" package="org.apache.activemq.broker" class="TransportConnection" method="getActiveTransactionCount" variable="transaction" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_bestpractices.html#unusedlocalvariable" priority="3">
Avoid unused local variables such as 'transaction'.
</violation>
<violation beginline="486" endline="486" begincolumn="13" endcolumn="28" rule="UnnecessaryLocalBeforeReturn" ruleset="Code Style" package="org.apache.activemq.broker" class="TransportConnection" method="processPrepareTransaction" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#unnecessarylocalbeforereturn" priority="3">
Consider simply returning the value vs storing it in local variable 'response'
</violation>
<violation beginline="489" endline="489" begincolumn="13" endcolumn="28" rule="UnnecessaryLocalBeforeReturn" ruleset="Code Style" package="org.apache.activemq.broker" class="TransportConnection" method="processPrepareTransaction" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#unnecessarylocalbeforereturn" priority="3">
Consider simply returning the value vs storing it in local variable 'response'
</violation>
<violation beginline="735" endline="737" begincolumn="15" endcolumn="13" rule="AvoidCatchingThrowable" ruleset="Error Prone" package="org.apache.activemq.broker" class="TransportConnection" method="processRemoveSession" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_errorprone.html#avoidcatchingthrowable" priority="3">
A catch statement should never catch throwable since it includes errors.
</violation>
<violation beginline="742" endline="744" begincolumn="15" endcolumn="13" rule="AvoidCatchingThrowable" ruleset="Error Prone" package="org.apache.activemq.broker" class="TransportConnection" method="processRemoveSession" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_errorprone.html#avoidcatchingthrowable" priority="3">
A catch statement should never catch throwable since it includes errors.
</violation>
<violation beginline="774" endline="774" begincolumn="17" endcolumn="108" rule="GuardLogStatement" ruleset="Best Practices" package="org.apache.activemq.broker" class="TransportConnection" method="processAddConnection" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_bestpractices.html#guardlogstatement" priority="2">
Logger calls should be surrounded by log level guards.
</violation>
<violation beginline="776" endline="776" begincolumn="17" endcolumn="140" rule="GuardLogStatement" ruleset="Best Practices" package="org.apache.activemq.broker" class="TransportConnection" method="processAddConnection" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_bestpractices.html#guardlogstatement" priority="2">
Logger calls should be surrounded by log level guards.
</violation>
<violation beginline="815" endline="815" begincolumn="13" endcolumn="78" rule="GuardLogStatement" ruleset="Best Practices" package="org.apache.activemq.broker" class="TransportConnection" method="processAddConnection" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_bestpractices.html#guardlogstatement" priority="2">
Logger calls should be surrounded by log level guards.
</violation>
<violation beginline="816" endline="816" begincolumn="17" endcolumn="17" rule="AvoidInstanceofChecksInCatchClause" ruleset="Error Prone" package="org.apache.activemq.broker" class="TransportConnection" method="processAddConnection" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_errorprone.html#avoidinstanceofchecksincatchclause" priority="3">
An instanceof check is being performed on the caught exception.  Create a separate catch clause for this exception type.
</violation>
<violation beginline="847" endline="849" begincolumn="19" endcolumn="17" rule="AvoidCatchingThrowable" ruleset="Error Prone" package="org.apache.activemq.broker" class="TransportConnection" method="processRemoveConnection" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_errorprone.html#avoidcatchingthrowable" priority="3">
A catch statement should never catch throwable since it includes errors.
</violation>
<violation beginline="856" endline="858" begincolumn="19" endcolumn="17" rule="AvoidCatchingThrowable" ruleset="Error Prone" package="org.apache.activemq.broker" class="TransportConnection" method="processRemoveConnection" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_errorprone.html#avoidcatchingthrowable" priority="3">
A catch statement should never catch throwable since it includes errors.
</violation>
<violation beginline="857" endline="857" begincolumn="21" endcolumn="98" rule="GuardLogStatement" ruleset="Best Practices" package="org.apache.activemq.broker" class="TransportConnection" method="processRemoveConnection" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_bestpractices.html#guardlogstatement" priority="2">
Logger calls should be surrounded by log level guards.
</violation>
<violation beginline="863" endline="865" begincolumn="15" endcolumn="13" rule="AvoidCatchingThrowable" ruleset="Error Prone" package="org.apache.activemq.broker" class="TransportConnection" method="processRemoveConnection" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_errorprone.html#avoidcatchingthrowable" priority="3">
A catch statement should never catch throwable since it includes errors.
</violation>
<violation beginline="864" endline="864" begincolumn="17" endcolumn="82" rule="GuardLogStatement" ruleset="Best Practices" package="org.apache.activemq.broker" class="TransportConnection" method="processRemoveConnection" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_bestpractices.html#guardlogstatement" priority="2">
Logger calls should be surrounded by log level guards.
</violation>
<violation beginline="965" endline="966" begincolumn="27" endcolumn="25" rule="AvoidCatchingThrowable" ruleset="Error Prone" package="org.apache.activemq.broker" class="TransportConnection" method="iterate" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_errorprone.html#avoidcatchingthrowable" priority="3">
A catch statement should never catch throwable since it includes errors.
</violation>
<violation beginline="965" endline="966" begincolumn="27" endcolumn="25" rule="EmptyCatchBlock" ruleset="Error Prone" package="org.apache.activemq.broker" class="TransportConnection" method="iterate" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_errorprone.html#emptycatchblock" priority="3">
Avoid empty catch blocks
</violation>
<violation beginline="1060" endline="1060" begincolumn="13" endcolumn="111" rule="GuardLogStatement" ruleset="Best Practices" package="org.apache.activemq.broker" class="TransportConnection" method="stop" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_bestpractices.html#guardlogstatement" priority="2">
Logger calls should be surrounded by log level guards.
</violation>
<violation beginline="1077" endline="1077" begincolumn="29" endcolumn="100" rule="GuardLogStatement" ruleset="Best Practices" package="org.apache.activemq.broker" class="TransportConnection" method="run" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_bestpractices.html#guardlogstatement" priority="2">
Logger calls should be surrounded by log level guards.
</violation>
<violation beginline="1082" endline="1084" begincolumn="15" endcolumn="13" rule="AvoidCatchingThrowable" ruleset="Error Prone" package="org.apache.activemq.broker" class="TransportConnection" method="delayedStop" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_errorprone.html#avoidcatchingthrowable" priority="3">
A catch statement should never catch throwable since it includes errors.
</violation>
<violation beginline="1114" endline="1116" begincolumn="27" endcolumn="25" rule="AvoidCatchingThrowable" ruleset="Error Prone" package="org.apache.activemq.broker" class="TransportConnection" method="run" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_errorprone.html#avoidcatchingthrowable" priority="3">
A catch statement should never catch throwable since it includes errors.
</violation>
<violation beginline="1122" endline="1125" begincolumn="15" endcolumn="13" rule="AvoidCatchingThrowable" ruleset="Error Prone" package="org.apache.activemq.broker" class="TransportConnection" method="stopAsync" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_errorprone.html#avoidcatchingthrowable" priority="3">
A catch statement should never catch throwable since it includes errors.
</violation>
<violation beginline="1135" endline="1135" begincolumn="9" endcolumn="74" rule="GuardLogStatement" ruleset="Best Practices" package="org.apache.activemq.broker" class="TransportConnection" method="doStop" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_bestpractices.html#guardlogstatement" priority="2">
Logger calls should be surrounded by log level guards.
</violation>
<violation beginline="1148" endline="1148" begincolumn="13" endcolumn="76" rule="GuardLogStatement" ruleset="Best Practices" package="org.apache.activemq.broker" class="TransportConnection" method="doStop" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_bestpractices.html#guardlogstatement" priority="2">
Logger calls should be surrounded by log level guards.
</violation>
<violation beginline="1150" endline="1150" begincolumn="13" endcolumn="116" rule="GuardLogStatement" ruleset="Best Practices" package="org.apache.activemq.broker" class="TransportConnection" method="doStop" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_bestpractices.html#guardlogstatement" priority="2">
Logger calls should be surrounded by log level guards.
</violation>
<violation beginline="1160" endline="1170" begincolumn="13" endcolumn="13" rule="ForLoopCanBeForeach" ruleset="Best Practices" package="org.apache.activemq.broker" class="TransportConnection" method="doStop" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_bestpractices.html#forloopcanbeforeach" priority="3">
This for loop can be replaced by a foreach loop
</violation>
<violation beginline="1182" endline="1182" begincolumn="21" endcolumn="89" rule="GuardLogStatement" ruleset="Best Practices" package="org.apache.activemq.broker" class="TransportConnection" method="doStop" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_bestpractices.html#guardlogstatement" priority="2">
Logger calls should be surrounded by log level guards.
</violation>
<violation beginline="1184" endline="1186" begincolumn="19" endcolumn="17" rule="AvoidCatchingThrowable" ruleset="Error Prone" package="org.apache.activemq.broker" class="TransportConnection" method="doStop" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_errorprone.html#avoidcatchingthrowable" priority="3">
A catch statement should never catch throwable since it includes errors.
</violation>
<violation beginline="1189" endline="1189" begincolumn="9" endcolumn="63" rule="GuardLogStatement" ruleset="Best Practices" package="org.apache.activemq.broker" class="TransportConnection" method="doStop" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_bestpractices.html#guardlogstatement" priority="2">
Logger calls should be surrounded by log level guards.
</violation>
<violation beginline="1335" endline="1335" begincolumn="13" endcolumn="117" rule="GuardLogStatement" ruleset="Best Practices" package="org.apache.activemq.broker" class="TransportConnection" method="processBrokerInfo" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_bestpractices.html#guardlogstatement" priority="2">
Logger calls should be surrounded by log level guards.
</violation>
<violation beginline="1355" endline="1363" begincolumn="21" endcolumn="21" rule="ForLoopCanBeForeach" ruleset="Best Practices" package="org.apache.activemq.broker" class="TransportConnection" method="processBrokerInfo" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_bestpractices.html#forloopcanbeforeach" priority="3">
This for loop can be replaced by a foreach loop
</violation>
<violation beginline="1357" endline="1357" begincolumn="30" endcolumn="38" rule="UselessParentheses" ruleset="Code Style" package="org.apache.activemq.broker" class="TransportConnection" method="processBrokerInfo" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#uselessparentheses" priority="4">
Useless parentheses.
</violation>
<violation beginline="1357" endline="1357" begincolumn="45" endcolumn="108" rule="UselessParentheses" ruleset="Code Style" package="org.apache.activemq.broker" class="TransportConnection" method="processBrokerInfo" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#uselessparentheses" priority="4">
Useless parentheses.
</violation>
<violation beginline="1408" endline="1408" begincolumn="13" endcolumn="35" rule="LooseCoupling" ruleset="Best Practices" package="org.apache.activemq.broker" class="TransportConnection" method="createMap" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_bestpractices.html#loosecoupling" priority="3">
Avoid using implementation types like 'HashMap'; use the interface instead
</violation>
<violation beginline="1437" endline="1437" begincolumn="13" endcolumn="61" rule="AvoidBranchingStatementAsLastInLoop" ruleset="Error Prone" package="org.apache.activemq.broker" class="TransportConnection" method="getConnectionId" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_errorprone.html#avoidbranchingstatementaslastinloop" priority="2">
Avoid using a branching statement as the last in a loop.
</violation>
<violation beginline="1468" endline="1468" begincolumn="47" endcolumn="114" rule="UselessParentheses" ruleset="Code Style" package="org.apache.activemq.broker" class="TransportConnection" method="getProducerBrokerExchange" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#uselessparentheses" priority="4">
Useless parentheses.
</violation>
<violation beginline="1496" endline="1496" begincolumn="9" endcolumn="22" rule="UnnecessaryLocalBeforeReturn" ruleset="Code Style" package="org.apache.activemq.broker" class="TransportConnection" method="getConsumerBrokerExchange" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#unnecessarylocalbeforereturn" priority="3">
Consider simply returning the value vs storing it in local variable 'result'
</violation>
</file>
</pmd>
