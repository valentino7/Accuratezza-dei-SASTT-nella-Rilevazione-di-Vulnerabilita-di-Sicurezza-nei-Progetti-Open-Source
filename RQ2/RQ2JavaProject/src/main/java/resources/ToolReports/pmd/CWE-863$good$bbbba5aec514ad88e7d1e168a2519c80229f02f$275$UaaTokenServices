<?xml version="1.0" encoding="UTF-8"?>
<pmd xmlns="http://pmd.sourceforge.net/report/2.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://pmd.sourceforge.net/report/2.0.0 http://pmd.sourceforge.net/report_2_0_0.xsd" version="6.44.0" timestamp="2023-10-12T23:15:25.973">
<file name="/mnt/c/Users/Valentino/Documents/Universita/Tesi/Tesi/Pacchetto_di_replicabilita/Correttiva/src/CWE-863/good$bbbba5aec514ad88e7d1e168a2519c80229f02f$275$UaaTokenServices.java">
<violation beginline="142" endline="142" begincolumn="19" endcolumn="61" rule="ProperLogger" ruleset="Error Prone" package="org.cloudfoundry.identity.uaa.oauth" class="UaaTokenServices" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_errorprone.html#properlogger" priority="3">
Logger should be defined private static final and have the correct class
</violation>
<violation beginline="246" endline="246" begincolumn="90" endcolumn="124" rule="UnnecessaryFullyQualifiedName" ruleset="Code Style" package="org.cloudfoundry.identity.uaa.oauth" class="UaaTokenServices" method="refreshAccessToken" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#unnecessaryfullyqualifiedname" priority="4">
Unnecessary use of fully qualified name 'TokenConstants.REQUEST_TOKEN_FORMAT' due to existing static import 'org.cloudfoundry.identity.uaa.oauth.token.TokenConstants.REQUEST_TOKEN_FORMAT'
</violation>
<violation beginline="248" endline="248" begincolumn="40" endcolumn="86" rule="SimplifiedTernary" ruleset="Design" package="org.cloudfoundry.identity.uaa.oauth" class="UaaTokenServices" method="refreshAccessToken" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_design.html#simplifiedternary" priority="3">
Ternary operators that can be simplified with || or &amp;&amp;
</violation>
<violation beginline="355" endline="355" begincolumn="21" endcolumn="94" rule="GuardLogStatement" ruleset="Best Practices" package="org.cloudfoundry.identity.uaa.oauth" class="UaaTokenServices" method="checkForApproval" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_bestpractices.html#guardlogstatement" priority="2">
Logger calls should be surrounded by log level guards.
</violation>
<violation beginline="366" endline="366" begincolumn="13" endcolumn="108" rule="GuardLogStatement" ruleset="Best Practices" package="org.cloudfoundry.identity.uaa.oauth" class="UaaTokenServices" method="checkForApproval" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_bestpractices.html#guardlogstatement" priority="2">
Logger calls should be surrounded by log level guards.
</violation>
<violation beginline="400" endline="400" begincolumn="40" endcolumn="59" rule="UseCollectionIsEmpty" ruleset="Best Practices" package="org.cloudfoundry.identity.uaa.oauth" class="UaaTokenServices" method="createAccessToken" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_bestpractices.html#usecollectionisempty" priority="3">
Substitute calls to size() == 0 (or size() != 0, size() &gt; 0, size() &lt; 1) with calls to isEmpty()
</violation>
<violation beginline="443" endline="443" begincolumn="38" endcolumn="128" rule="UselessParentheses" ruleset="Code Style" package="org.cloudfoundry.identity.uaa.oauth" class="UaaTokenServices" method="createAccessToken" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#uselessparentheses" priority="4">
Useless parentheses.
</violation>
<violation beginline="458" endline="458" begincolumn="17" endcolumn="83" rule="PreserveStackTrace" ruleset="Best Practices" package="org.cloudfoundry.identity.uaa.oauth" class="UaaTokenServices" method="createAccessToken" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_bestpractices.html#preservestacktrace" priority="3">
New exception is thrown in catch block, original stack trace may be lost
</violation>
<violation beginline="531" endline="531" begincolumn="13" endcolumn="31" rule="UnnecessaryFullyQualifiedName" ruleset="Code Style" package="org.cloudfoundry.identity.uaa.oauth" class="UaaTokenServices" method="createJWTAccessToken" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#unnecessaryfullyqualifiedname" priority="4">
Unnecessary use of fully qualified name 'StringUtils.hasText' due to existing static import 'org.springframework.util.StringUtils.hasText'
</violation>
<violation beginline="722" endline="724" begincolumn="15" endcolumn="13" rule="EmptyCatchBlock" ruleset="Error Prone" package="org.cloudfoundry.identity.uaa.oauth" class="UaaTokenServices" method="persistRevocableToken" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_errorprone.html#emptycatchblock" priority="3">
Avoid empty catch blocks
</violation>
<violation beginline="776" endline="776" begincolumn="24" endcolumn="30" rule="LocalVariableNamingConventions" ruleset="Code Style" package="org.cloudfoundry.identity.uaa.oauth" class="UaaTokenServices" method="getAdditionalAuthorizationAttributes" variable="az_attr" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#localvariablenamingconventions" priority="1">
The local variable name 'az_attr' doesn't match '[a-z][a-zA-Z0-9]*'
</violation>
<violation beginline="778" endline="778" begincolumn="28" endcolumn="31" rule="ReturnEmptyCollectionRatherThanNull" ruleset="Error Prone" package="org.cloudfoundry.identity.uaa.oauth" class="UaaTokenServices" method="getAdditionalAuthorizationAttributes" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_errorprone.html#returnemptycollectionratherthannull" priority="1">
Return an empty collection rather than null.
</violation>
<violation beginline="778" endline="778" begincolumn="21" endcolumn="32" rule="ControlStatementBraces" ruleset="Code Style" package="org.cloudfoundry.identity.uaa.oauth" class="UaaTokenServices" method="getAdditionalAuthorizationAttributes" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
<violation beginline="783" endline="783" begincolumn="17" endcolumn="57" rule="UnnecessaryLocalBeforeReturn" ruleset="Code Style" package="org.cloudfoundry.identity.uaa.oauth" class="UaaTokenServices" method="getAdditionalAuthorizationAttributes" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#unnecessarylocalbeforereturn" priority="3">
Consider simply returning the value vs storing it in local variable 'additionalAuthorizationAttributes'
</violation>
<violation beginline="784" endline="786" begincolumn="15" endcolumn="13" rule="AvoidCatchingThrowable" ruleset="Error Prone" package="org.cloudfoundry.identity.uaa.oauth" class="UaaTokenServices" method="getAdditionalAuthorizationAttributes" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_errorprone.html#avoidcatchingthrowable" priority="3">
A catch statement should never catch throwable since it includes errors.
</violation>
<violation beginline="789" endline="789" begincolumn="16" endcolumn="19" rule="ReturnEmptyCollectionRatherThanNull" ruleset="Error Prone" package="org.cloudfoundry.identity.uaa.oauth" class="UaaTokenServices" method="getAdditionalAuthorizationAttributes" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_errorprone.html#returnemptycollectionratherthannull" priority="1">
Return an empty collection rather than null.
</violation>
<violation beginline="833" endline="833" begincolumn="9" endcolumn="28" rule="UnnecessaryLocalBeforeReturn" ruleset="Code Style" package="org.cloudfoundry.identity.uaa.oauth" class="UaaTokenServices" method="createRefreshToken" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#unnecessarylocalbeforereturn" priority="3">
Consider simply returning the value vs storing it in local variable 'refreshToken'
</violation>
<violation beginline="878" endline="878" begincolumn="26" endcolumn="49" rule="UnnecessaryFullyQualifiedName" ruleset="Code Style" package="org.cloudfoundry.identity.uaa.oauth" class="UaaTokenServices" method="createJWTRefreshToken" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#unnecessaryfullyqualifiedname" priority="4">
Unnecessary use of fully qualified name 'ClaimConstants.REVOCABLE' due to existing static import 'org.cloudfoundry.identity.uaa.oauth.token.ClaimConstants.REVOCABLE'
</violation>
<violation beginline="1025" endline="1025" begincolumn="31" endcolumn="41" rule="UseCollectionIsEmpty" ruleset="Best Practices" package="org.cloudfoundry.identity.uaa.oauth" class="UaaTokenServices" method="readAccessToken" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_bestpractices.html#usecollectionisempty" priority="3">
Substitute calls to size() == 0 (or size() != 0, size() &gt; 0, size() &lt; 1) with calls to isEmpty()
</violation>
<violation beginline="1060" endline="1060" begincolumn="17" endcolumn="113" rule="PreserveStackTrace" ruleset="Best Practices" package="org.cloudfoundry.identity.uaa.oauth" class="UaaTokenServices" method="validateToken" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_bestpractices.html#preservestacktrace" priority="3">
New exception is thrown in catch block, original stack trace may be lost
</violation>
<violation beginline="1101" endline="1101" begincolumn="13" endcolumn="75" rule="PreserveStackTrace" ruleset="Best Practices" package="org.cloudfoundry.identity.uaa.oauth" class="UaaTokenServices" method="validateToken" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_bestpractices.html#preservestacktrace" priority="3">
New exception is thrown in catch block, original stack trace may be lost
</violation>
<violation beginline="1108" endline="1108" begincolumn="17" endcolumn="97" rule="PreserveStackTrace" ruleset="Best Practices" package="org.cloudfoundry.identity.uaa.oauth" class="UaaTokenServices" method="validateToken" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_bestpractices.html#preservestacktrace" priority="3">
New exception is thrown in catch block, original stack trace may be lost
</violation>
<violation beginline="1154" endline="1154" begincolumn="13" endcolumn="80" rule="GuardLogStatement" ruleset="Best Practices" package="org.cloudfoundry.identity.uaa.oauth" class="UaaTokenServices" method="getTokenEndpoint" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_bestpractices.html#guardlogstatement" priority="2">
Logger calls should be surrounded by log level guards.
</violation>
</file>
</pmd>
