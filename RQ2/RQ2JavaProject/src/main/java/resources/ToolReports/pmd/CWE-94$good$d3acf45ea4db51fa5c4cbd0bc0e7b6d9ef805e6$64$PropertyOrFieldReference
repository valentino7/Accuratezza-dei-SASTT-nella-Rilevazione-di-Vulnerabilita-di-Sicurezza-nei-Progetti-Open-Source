<?xml version="1.0" encoding="UTF-8"?>
<pmd xmlns="http://pmd.sourceforge.net/report/2.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://pmd.sourceforge.net/report/2.0.0 http://pmd.sourceforge.net/report_2_0_0.xsd" version="6.44.0" timestamp="2023-10-12T23:28:41.093">
<file name="/mnt/c/Users/Valentino/Documents/Universita/Tesi/Tesi/Pacchetto_di_replicabilita/Correttiva/src/CWE-94/good$d3acf45ea4db51fa5c4cbd0bc0e7b6d9ef805e6$64$PropertyOrFieldReference.java">
<violation beginline="55" endline="55" begincolumn="19" endcolumn="54" rule="AvoidUsingVolatile" ruleset="Multithreading" package="org.springframework.expression.spel.ast" class="PropertyOrFieldReference" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_multithreading.html#avoidusingvolatile" priority="2">
Use of modifier volatile is not recommended.
</violation>
<violation beginline="57" endline="57" begincolumn="19" endcolumn="55" rule="AvoidUsingVolatile" ruleset="Multithreading" package="org.springframework.expression.spel.ast" class="PropertyOrFieldReference" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_multithreading.html#avoidusingvolatile" priority="2">
Use of modifier volatile is not recommended.
</violation>
<violation beginline="107" endline="107" begincolumn="25" endcolumn="33" rule="LooseCoupling" ruleset="Best Practices" package="org.springframework.expression.spel.ast" class="PropertyOrFieldReference" method="getValueInternal" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_bestpractices.html#loosecoupling" priority="3">
Avoid using implementation types like 'ArrayList'; use the interface instead
</violation>
<violation beginline="116" endline="119" begincolumn="5" endcolumn="5" rule="IdenticalCatchBranches" ruleset="Code Style" package="org.springframework.expression.spel.ast" class="PropertyOrFieldReference" method="getValueInternal" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#identicalcatchbranches" priority="3">
'catch' branch identical to 'InstantiationException' branch
</violation>
<violation beginline="124" endline="124" begincolumn="25" endcolumn="31" rule="LooseCoupling" ruleset="Best Practices" package="org.springframework.expression.spel.ast" class="PropertyOrFieldReference" method="getValueInternal" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_bestpractices.html#loosecoupling" priority="3">
Avoid using implementation types like 'HashMap'; use the interface instead
</violation>
<violation beginline="133" endline="136" begincolumn="5" endcolumn="5" rule="IdenticalCatchBranches" ruleset="Code Style" package="org.springframework.expression.spel.ast" class="PropertyOrFieldReference" method="getValueInternal" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#identicalcatchbranches" priority="3">
'catch' branch identical to 'InstantiationException' branch
</violation>
<violation beginline="151" endline="154" begincolumn="5" endcolumn="5" rule="IdenticalCatchBranches" ruleset="Code Style" package="org.springframework.expression.spel.ast" class="PropertyOrFieldReference" method="getValueInternal" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#identicalcatchbranches" priority="3">
'catch' branch identical to 'InstantiationException' branch
</violation>
<violation beginline="194" endline="197" begincolumn="5" endcolumn="5" rule="EmptyCatchBlock" ruleset="Error Prone" package="org.springframework.expression.spel.ast" class="PropertyOrFieldReference" method="readProperty" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_errorprone.html#emptycatchblock" priority="3">
Avoid empty catch blocks
</violation>
<violation beginline="247" endline="250" begincolumn="5" endcolumn="5" rule="EmptyCatchBlock" ruleset="Error Prone" package="org.springframework.expression.spel.ast" class="PropertyOrFieldReference" method="writeProperty" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_errorprone.html#emptycatchblock" priority="3">
Avoid empty catch blocks
</violation>
<violation beginline="293" endline="295" begincolumn="5" endcolumn="5" rule="EmptyCatchBlock" ruleset="Error Prone" package="org.springframework.expression.spel.ast" class="PropertyOrFieldReference" method="isWritableProperty" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_errorprone.html#emptycatchblock" priority="3">
Avoid empty catch blocks
</violation>
<violation beginline="314" endline="314" begincolumn="26" endcolumn="80" rule="UselessParentheses" ruleset="Code Style" package="org.springframework.expression.spel.ast" class="PropertyOrFieldReference" method="getPropertyAccessorsToTry" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#uselessparentheses" priority="4">
Useless parentheses.
</violation>
<violation beginline="346" endline="347" begincolumn="11" endcolumn="63" rule="UselessParentheses" ruleset="Code Style" package="org.springframework.expression.spel.ast" class="PropertyOrFieldReference" method="isCompilable" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#uselessparentheses" priority="4">
Useless parentheses.
</violation>
</file>
</pmd>
