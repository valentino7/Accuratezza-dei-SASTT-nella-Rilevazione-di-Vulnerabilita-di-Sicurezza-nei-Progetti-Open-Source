<?xml version="1.0" encoding="UTF-8"?>
<pmd xmlns="http://pmd.sourceforge.net/report/2.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://pmd.sourceforge.net/report/2.0.0 http://pmd.sourceforge.net/report_2_0_0.xsd" version="6.44.0" timestamp="2023-10-12T21:18:08.322">
<file name="/mnt/c/Users/Valentino/Documents/Universita/Tesi/Tesi/Pacchetto_di_replicabilita/Correttiva/src/CWE-502/bad$4c337213bd2964bb36cef2d31509b49647ca6f2a$39$PyBytecode.java">
<violation beginline="15" endline="20" begincolumn="33" endcolumn="5" rule="MethodNamingConventions" ruleset="Code Style" package="org.python.core" class="PyBytecode" method="get_dis" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#methodnamingconventions" priority="1">
The static method name 'get_dis' doesn't match '[a-z][a-zA-Z0-9]*'
</violation>
<violation beginline="23" endline="28" begincolumn="33" endcolumn="5" rule="MethodNamingConventions" ruleset="Code Style" package="org.python.core" class="PyBytecode" method="get_opname" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#methodnamingconventions" priority="1">
The static method name 'get_opname' doesn't match '[a-z][a-zA-Z0-9]*'
</violation>
<violation beginline="31" endline="33" begincolumn="19" endcolumn="5" rule="MethodNamingConventions" ruleset="Code Style" package="org.python.core" class="PyBytecode" method="_allDebug" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#methodnamingconventions" priority="1">
The static method name '_allDebug' doesn't match '[a-z][a-zA-Z0-9]*'
</violation>
<violation beginline="35" endline="39" begincolumn="12" endcolumn="5" rule="MethodNamingConventions" ruleset="Code Style" package="org.python.core" class="PyBytecode" method="_debug" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#methodnamingconventions" priority="1">
The instance method name '_debug' doesn't match '[a-z][a-zA-Z0-9]*'
</violation>
<violation beginline="104" endline="108" begincolumn="9" endcolumn="9" rule="ForLoopCanBeForeach" ruleset="Best Practices" package="org.python.core" class="PyBytecode" method="throwReadonly" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_bestpractices.html#forloopcanbeforeach" priority="3">
This for loop can be replaced by a foreach loop
</violation>
<violation beginline="105" endline="105" begincolumn="17" endcolumn="38" rule="CompareObjectsWithEquals" ruleset="Error Prone" package="org.python.core" class="PyBytecode" method="throwReadonly" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_errorprone.html#compareobjectswithequals" priority="3">
Use equals() to compare object references.
</violation>
<violation beginline="105" endline="105" begincolumn="17" endcolumn="38" rule="UseEqualsToCompareStrings" ruleset="Error Prone" package="org.python.core" class="PyBytecode" method="throwReadonly" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_errorprone.html#useequalstocomparestrings" priority="3">
Use equals() to compare strings instead of '==' or '!='
</violation>
<violation beginline="112" endline="115" begincolumn="12" endcolumn="5" rule="MethodNamingConventions" ruleset="Code Style" package="org.python.core" class="PyBytecode" method="__setattr__" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#methodnamingconventions" priority="1">
The instance method name '__setattr__' doesn't match '[a-z][a-zA-Z0-9]*'
</violation>
<violation beginline="117" endline="119" begincolumn="12" endcolumn="5" rule="MethodNamingConventions" ruleset="Code Style" package="org.python.core" class="PyBytecode" method="__delattr__" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#methodnamingconventions" priority="1">
The instance method name '__delattr__' doesn't match '[a-z][a-zA-Z0-9]*'
</violation>
<violation beginline="133" endline="163" begincolumn="12" endcolumn="5" rule="MethodNamingConventions" ruleset="Code Style" package="org.python.core" class="PyBytecode" method="__findattr_ex__" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#methodnamingconventions" priority="1">
The instance method name '__findattr_ex__' doesn't match '[a-z][a-zA-Z0-9]*'
</violation>
<violation beginline="135" endline="135" begincolumn="13" endcolumn="33" rule="CompareObjectsWithEquals" ruleset="Error Prone" package="org.python.core" class="PyBytecode" method="__findattr_ex__" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_errorprone.html#compareobjectswithequals" priority="3">
Use equals() to compare object references.
</violation>
<violation beginline="135" endline="135" begincolumn="13" endcolumn="33" rule="UseEqualsToCompareStrings" ruleset="Error Prone" package="org.python.core" class="PyBytecode" method="__findattr_ex__" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_errorprone.html#useequalstocomparestrings" priority="3">
Use equals() to compare strings instead of '==' or '!='
</violation>
<violation beginline="138" endline="138" begincolumn="13" endcolumn="33" rule="CompareObjectsWithEquals" ruleset="Error Prone" package="org.python.core" class="PyBytecode" method="__findattr_ex__" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_errorprone.html#compareobjectswithequals" priority="3">
Use equals() to compare object references.
</violation>
<violation beginline="138" endline="138" begincolumn="13" endcolumn="33" rule="UseEqualsToCompareStrings" ruleset="Error Prone" package="org.python.core" class="PyBytecode" method="__findattr_ex__" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_errorprone.html#useequalstocomparestrings" priority="3">
Use equals() to compare strings instead of '==' or '!='
</violation>
<violation beginline="141" endline="141" begincolumn="13" endcolumn="33" rule="CompareObjectsWithEquals" ruleset="Error Prone" package="org.python.core" class="PyBytecode" method="__findattr_ex__" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_errorprone.html#compareobjectswithequals" priority="3">
Use equals() to compare object references.
</violation>
<violation beginline="141" endline="141" begincolumn="13" endcolumn="33" rule="UseEqualsToCompareStrings" ruleset="Error Prone" package="org.python.core" class="PyBytecode" method="__findattr_ex__" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_errorprone.html#useequalstocomparestrings" priority="3">
Use equals() to compare strings instead of '==' or '!='
</violation>
<violation beginline="144" endline="144" begincolumn="13" endcolumn="33" rule="CompareObjectsWithEquals" ruleset="Error Prone" package="org.python.core" class="PyBytecode" method="__findattr_ex__" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_errorprone.html#compareobjectswithequals" priority="3">
Use equals() to compare object references.
</violation>
<violation beginline="144" endline="144" begincolumn="13" endcolumn="33" rule="UseEqualsToCompareStrings" ruleset="Error Prone" package="org.python.core" class="PyBytecode" method="__findattr_ex__" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_errorprone.html#useequalstocomparestrings" priority="3">
Use equals() to compare strings instead of '==' or '!='
</violation>
<violation beginline="147" endline="147" begincolumn="13" endcolumn="29" rule="CompareObjectsWithEquals" ruleset="Error Prone" package="org.python.core" class="PyBytecode" method="__findattr_ex__" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_errorprone.html#compareobjectswithequals" priority="3">
Use equals() to compare object references.
</violation>
<violation beginline="147" endline="147" begincolumn="13" endcolumn="29" rule="UseEqualsToCompareStrings" ruleset="Error Prone" package="org.python.core" class="PyBytecode" method="__findattr_ex__" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_errorprone.html#useequalstocomparestrings" priority="3">
Use equals() to compare strings instead of '==' or '!='
</violation>
<violation beginline="150" endline="150" begincolumn="13" endcolumn="29" rule="CompareObjectsWithEquals" ruleset="Error Prone" package="org.python.core" class="PyBytecode" method="__findattr_ex__" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_errorprone.html#compareobjectswithequals" priority="3">
Use equals() to compare object references.
</violation>
<violation beginline="150" endline="150" begincolumn="13" endcolumn="29" rule="UseEqualsToCompareStrings" ruleset="Error Prone" package="org.python.core" class="PyBytecode" method="__findattr_ex__" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_errorprone.html#useequalstocomparestrings" priority="3">
Use equals() to compare strings instead of '==' or '!='
</violation>
<violation beginline="153" endline="153" begincolumn="13" endcolumn="31" rule="CompareObjectsWithEquals" ruleset="Error Prone" package="org.python.core" class="PyBytecode" method="__findattr_ex__" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_errorprone.html#compareobjectswithequals" priority="3">
Use equals() to compare object references.
</violation>
<violation beginline="153" endline="153" begincolumn="13" endcolumn="31" rule="UseEqualsToCompareStrings" ruleset="Error Prone" package="org.python.core" class="PyBytecode" method="__findattr_ex__" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_errorprone.html#useequalstocomparestrings" priority="3">
Use equals() to compare strings instead of '==' or '!='
</violation>
<violation beginline="156" endline="156" begincolumn="13" endcolumn="31" rule="CompareObjectsWithEquals" ruleset="Error Prone" package="org.python.core" class="PyBytecode" method="__findattr_ex__" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_errorprone.html#compareobjectswithequals" priority="3">
Use equals() to compare object references.
</violation>
<violation beginline="156" endline="156" begincolumn="13" endcolumn="31" rule="UseEqualsToCompareStrings" ruleset="Error Prone" package="org.python.core" class="PyBytecode" method="__findattr_ex__" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_errorprone.html#useequalstocomparestrings" priority="3">
Use equals() to compare strings instead of '==' or '!='
</violation>
<violation beginline="159" endline="159" begincolumn="13" endcolumn="30" rule="CompareObjectsWithEquals" ruleset="Error Prone" package="org.python.core" class="PyBytecode" method="__findattr_ex__" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_errorprone.html#compareobjectswithequals" priority="3">
Use equals() to compare object references.
</violation>
<violation beginline="159" endline="159" begincolumn="13" endcolumn="30" rule="UseEqualsToCompareStrings" ruleset="Error Prone" package="org.python.core" class="PyBytecode" method="__findattr_ex__" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_errorprone.html#useequalstocomparestrings" priority="3">
Use equals() to compare strings instead of '==' or '!='
</violation>
<violation beginline="219" endline="233" begincolumn="20" endcolumn="5" rule="MethodNamingConventions" ruleset="Code Style" package="org.python.core" class="PyBytecode" method="stringify_blocks" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#methodnamingconventions" priority="1">
The static method name 'stringify_blocks' doesn't match '[a-z][a-zA-Z0-9]*'
</violation>
<violation beginline="235" endline="235" begincolumn="45" endcolumn="54" rule="UnusedFormalParameter" ruleset="Best Practices" package="org.python.core" class="PyBytecode" method="print_debug" variable="next_instr" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_bestpractices.html#unusedformalparameter" priority="3">
Avoid unused method parameters such as 'next_instr'.
</violation>
<violation beginline="235" endline="244" begincolumn="13" endcolumn="5" rule="MethodNamingConventions" ruleset="Code Style" package="org.python.core" class="PyBytecode" method="print_debug" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#methodnamingconventions" priority="1">
The instance method name 'print_debug' doesn't match '[a-z][a-zA-Z0-9]*'
</violation>
<violation beginline="235" endline="235" begincolumn="45" endcolumn="54" rule="FormalParameterNamingConventions" ruleset="Code Style" package="org.python.core" class="PyBytecode" method="print_debug" variable="next_instr" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#formalparameternamingconventions" priority="1">
The method parameter name 'next_instr' doesn't match '[a-z][a-zA-Z0-9]*'
</violation>
<violation beginline="272" endline="272" begincolumn="13" endcolumn="22" rule="LocalVariableNamingConventions" ruleset="Code Style" package="org.python.core" class="PyBytecode" method="interpret" variable="next_instr" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#localvariablenamingconventions" priority="1">
The local variable name 'next_instr' doesn't match '[a-z][a-zA-Z0-9]*'
</violation>
<violation beginline="278" endline="278" begincolumn="13" endcolumn="21" rule="LocalVariableNamingConventions" ruleset="Code Style" package="org.python.core" class="PyBytecode" method="interpret" variable="last_line" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#localvariablenamingconventions" priority="1">
The local variable name 'last_line' doesn't match '[a-z][a-zA-Z0-9]*'
</violation>
<violation beginline="315" endline="315" begincolumn="27" endcolumn="60" rule="UselessParentheses" ruleset="Code Style" package="org.python.core" class="PyBytecode" method="interpret" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#uselessparentheses" priority="4">
Useless parentheses.
</violation>
<violation beginline="751" endline="751" begincolumn="37" endcolumn="52" rule="UselessParentheses" ruleset="Code Style" package="org.python.core" class="PyBytecode" method="interpret" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#uselessparentheses" priority="4">
Useless parentheses.
</violation>
<violation beginline="911" endline="952" begincolumn="25" endcolumn="25" rule="SwitchStmtsShouldHaveDefault" ruleset="Best Practices" package="org.python.core" class="PyBytecode" method="interpret" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_bestpractices.html#switchstmtsshouldhavedefault" priority="3">
Switch statements should be exhaustive, add a default case (or missing enum branches)
</violation>
<violation beginline="957" endline="957" begincolumn="34" endcolumn="43" rule="LocalVariableNamingConventions" ruleset="Code Style" package="org.python.core" class="PyBytecode" method="interpret" variable="__import__" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#localvariablenamingconventions" priority="1">
The local variable name '__import__' doesn't match '[a-z][a-zA-Z0-9]*'
</violation>
<violation beginline="986" endline="986" begincolumn="33" endcolumn="103" rule="PreserveStackTrace" ruleset="Best Practices" package="org.python.core" class="PyBytecode" method="interpret" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_bestpractices.html#preservestacktrace" priority="3">
New exception is thrown in catch block, original stack trace may be lost
</violation>
<violation beginline="1142" endline="1142" begincolumn="36" endcolumn="48" rule="LocalVariableNamingConventions" ruleset="Code Style" package="org.python.core" class="PyBytecode" method="interpret" variable="closure_cells" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#localvariablenamingconventions" priority="1">
The local variable name 'closure_cells' doesn't match '[a-z][a-zA-Z0-9]*'
</violation>
<violation beginline="1176" endline="1183" begincolumn="13" endcolumn="13" rule="AvoidCatchingThrowable" ruleset="Error Prone" package="org.python.core" class="PyBytecode" method="interpret" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_errorprone.html#avoidcatchingthrowable" priority="3">
A catch statement should never catch throwable since it includes errors.
</violation>
<violation beginline="1199" endline="1199" begincolumn="25" endcolumn="40" rule="UselessParentheses" ruleset="Code Style" package="org.python.core" class="PyBytecode" method="interpret" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#uselessparentheses" priority="4">
Useless parentheses.
</violation>
<violation beginline="1214" endline="1214" begincolumn="58" endcolumn="112" rule="UselessParentheses" ruleset="Code Style" package="org.python.core" class="PyBytecode" method="interpret" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#uselessparentheses" priority="4">
Useless parentheses.
</violation>
<violation beginline="1272" endline="1315" begincolumn="20" endcolumn="5" rule="MethodNamingConventions" ruleset="Code Style" package="org.python.core" class="PyBytecode" method="call_function" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#methodnamingconventions" priority="1">
The static method name 'call_function' doesn't match '[a-z][a-zA-Z0-9]*'
</violation>
<violation beginline="1273" endline="1314" begincolumn="9" endcolumn="9" rule="ImplicitSwitchFallThrough" ruleset="Error Prone" package="org.python.core" class="PyBytecode" method="call_function" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_errorprone.html#implicitswitchfallthrough" priority="3">
A switch statement does not contain a break
</violation>
<violation beginline="1317" endline="1333" begincolumn="20" endcolumn="5" rule="MethodNamingConventions" ruleset="Code Style" package="org.python.core" class="PyBytecode" method="call_function" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#methodnamingconventions" priority="1">
The static method name 'call_function' doesn't match '[a-z][a-zA-Z0-9]*'
</violation>
<violation beginline="1335" endline="1354" begincolumn="20" endcolumn="5" rule="MethodNamingConventions" ruleset="Code Style" package="org.python.core" class="PyBytecode" method="call_function" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#methodnamingconventions" priority="1">
The static method name 'call_function' doesn't match '[a-z][a-zA-Z0-9]*'
</violation>
<violation beginline="1356" endline="1374" begincolumn="20" endcolumn="5" rule="MethodNamingConventions" ruleset="Code Style" package="org.python.core" class="PyBytecode" method="unpack_iterable" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#methodnamingconventions" priority="1">
The static method name 'unpack_iterable' doesn't match '[a-z][a-zA-Z0-9]*'
</violation>
<violation beginline="1401" endline="1403" begincolumn="9" endcolumn="9" rule="MethodNamingConventions" ruleset="Code Style" package="org.python.core" class="PyBytecode$PyStack" method="set_top" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#methodnamingconventions" priority="1">
The instance method name 'set_top' doesn't match '[a-z][a-zA-Z0-9]*'
</violation>
<violation beginline="1464" endline="1464" begincolumn="17" endcolumn="17" rule="LocalVariableNamingConventions" ruleset="Code Style" package="org.python.core" class="PyBytecode$PyStack" method="toString" variable="N" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#localvariablenamingconventions" priority="1">
The local variable name 'N' doesn't match '[a-z][a-zA-Z0-9]*'
</violation>
<violation beginline="1563" endline="1563" begincolumn="21" endcolumn="29" rule="LocalVariableNamingConventions" ruleset="Code Style" package="org.python.core" class="PyBytecode$LineCache" method="LineCache" variable="byte_incr" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#localvariablenamingconventions" priority="1">
The local variable name 'byte_incr' doesn't match '[a-z][a-zA-Z0-9]*'
</violation>
<violation beginline="1564" endline="1564" begincolumn="21" endcolumn="29" rule="LocalVariableNamingConventions" ruleset="Code Style" package="org.python.core" class="PyBytecode$LineCache" method="LineCache" variable="line_incr" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#localvariablenamingconventions" priority="1">
The local variable name 'line_incr' doesn't match '[a-z][a-zA-Z0-9]*'
</violation>
<violation beginline="1580" endline="1580" begincolumn="21" endcolumn="38" rule="UnusedPrivateMethod" ruleset="Best Practices" package="org.python.core" class="PyBytecode$LineCache" method="getline" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_bestpractices.html#unusedprivatemethod" priority="3">
Avoid unused private methods such as 'getline(int)'.
</violation>
</file>
</pmd>
