<?xml version="1.0" encoding="UTF-8"?>
<pmd xmlns="http://pmd.sourceforge.net/report/2.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://pmd.sourceforge.net/report/2.0.0 http://pmd.sourceforge.net/report_2_0_0.xsd" version="6.44.0" timestamp="2023-10-12T16:38:57.821">
<file name="/mnt/c/Users/Valentino/Documents/Universita/Tesi/Tesi/Pacchetto_di_replicabilita/Correttiva/src/CWE-200/bad$6b710a42e00acca405e085724c89cda016cf7442$51$MRAppMaster.java">
<violation beginline="216" endline="216" begincolumn="11" endcolumn="66" rule="SingularField" ruleset="Design" package="org.apache.hadoop.mapreduce.v2.app" class="MRAppMaster" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_design.html#singularfield" priority="3">
Perhaps 'taskAttemptFinishingMonitor' could be replaced by a local variable.
</violation>
<violation beginline="223" endline="223" begincolumn="22" endcolumn="51" rule="AvoidUsingVolatile" ruleset="Multithreading" package="org.apache.hadoop.mapreduce.v2.app" class="MRAppMaster" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_multithreading.html#avoidusingvolatile" priority="2">
Use of modifier volatile is not recommended.
</violation>
<violation beginline="258" endline="258" begincolumn="5" endcolumn="75" rule="GuardLogStatement" ruleset="Best Practices" package="org.apache.hadoop.mapreduce.v2.app" class="MRAppMaster" method="MRAppMaster" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_bestpractices.html#guardlogstatement" priority="2">
Logger calls should be surrounded by log level guards.
</violation>
<violation beginline="264" endline="264" begincolumn="5" endcolumn="19" rule="UnnecessaryLocalBeforeReturn" ruleset="Code Style" package="org.apache.hadoop.mapreduce.v2.app" class="MRAppMaster" method="createTaskAttemptFinishingMonitor" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#unnecessarylocalbeforereturn" priority="3">
Consider simply returning the value vs storing it in local variable 'monitor'
</violation>
<violation beginline="292" endline="293" begincolumn="10" endcolumn="56" rule="UselessParentheses" ruleset="Code Style" package="org.apache.hadoop.mapreduce.v2.app" class="MRAppMaster" method="serviceInit" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#uselessparentheses" priority="4">
Useless parentheses.
</violation>
<violation beginline="294" endline="295" begincolumn="12" endcolumn="58" rule="UselessParentheses" ruleset="Code Style" package="org.apache.hadoop.mapreduce.v2.app" class="MRAppMaster" method="serviceInit" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#uselessparentheses" priority="4">
Useless parentheses.
</violation>
<violation beginline="314" endline="316" begincolumn="9" endcolumn="54" rule="GuardLogStatement" ruleset="Best Practices" package="org.apache.hadoop.mapreduce.v2.app" class="MRAppMaster" method="serviceInit" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_bestpractices.html#guardlogstatement" priority="2">
Logger calls should be surrounded by log level guards.
</violation>
<violation beginline="326" endline="328" begincolumn="9" endcolumn="45" rule="GuardLogStatement" ruleset="Best Practices" package="org.apache.hadoop.mapreduce.v2.app" class="MRAppMaster" method="serviceInit" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_bestpractices.html#guardlogstatement" priority="2">
Logger calls should be surrounded by log level guards.
</violation>
<violation beginline="355" endline="355" begincolumn="29" endcolumn="76" rule="UnnecessaryFullyQualifiedName" ruleset="Code Style" package="org.apache.hadoop.mapreduce.v2.app" class="MRAppMaster" method="serviceInit" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#unnecessaryfullyqualifiedname" priority="4">
Unnecessary use of fully qualified name 'org.apache.hadoop.mapreduce.jobhistory.EventType' due to existing import 'org.apache.hadoop.mapreduce.jobhistory.EventType'
</violation>
<violation beginline="358" endline="358" begincolumn="29" endcolumn="76" rule="UnnecessaryFullyQualifiedName" ruleset="Code Style" package="org.apache.hadoop.mapreduce.v2.app" class="MRAppMaster" method="serviceInit" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#unnecessaryfullyqualifiedname" priority="4">
Unnecessary use of fully qualified name 'org.apache.hadoop.mapreduce.jobhistory.EventType' due to existing import 'org.apache.hadoop.mapreduce.jobhistory.EventType'
</violation>
<violation beginline="422" endline="422" begincolumn="27" endcolumn="74" rule="UnnecessaryFullyQualifiedName" ruleset="Code Style" package="org.apache.hadoop.mapreduce.v2.app" class="MRAppMaster" method="serviceInit" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#unnecessaryfullyqualifiedname" priority="4">
Unnecessary use of fully qualified name 'org.apache.hadoop.mapreduce.jobhistory.EventType' due to existing import 'org.apache.hadoop.mapreduce.jobhistory.EventType'
</violation>
<violation beginline="482" endline="483" begincolumn="9" endcolumn="56" rule="GuardLogStatement" ruleset="Best Practices" package="org.apache.hadoop.mapreduce.v2.app" class="MRAppMaster" method="call" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_bestpractices.html#guardlogstatement" priority="2">
Logger calls should be surrounded by log level guards.
</violation>
<violation beginline="486" endline="486" begincolumn="11" endcolumn="59" rule="UnnecessaryFullyQualifiedName" ruleset="Code Style" package="org.apache.hadoop.mapreduce.v2.app" class="MRAppMaster" method="call" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#unnecessaryfullyqualifiedname" priority="4">
Unnecessary use of fully qualified name 'org.apache.hadoop.mapreduce.v2.api.records.TaskId' due to existing import 'org.apache.hadoop.mapreduce.v2.api.records.TaskId'
</violation>
<violation beginline="505" endline="505" begincolumn="9" endcolumn="72" rule="GuardLogStatement" ruleset="Best Practices" package="org.apache.hadoop.mapreduce.v2.app" class="MRAppMaster" method="call" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_bestpractices.html#guardlogstatement" priority="2">
Logger calls should be surrounded by log level guards.
</violation>
<violation beginline="518" endline="519" begincolumn="13" endcolumn="33" rule="UselessParentheses" ruleset="Code Style" package="org.apache.hadoop.mapreduce.v2.app" class="MRAppMaster" method="keepJobFiles" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#uselessparentheses" priority="4">
Useless parentheses.
</violation>
<violation beginline="552" endline="553" begincolumn="9" endcolumn="29" rule="GuardLogStatement" ruleset="Best Practices" package="org.apache.hadoop.mapreduce.v2.app" class="MRAppMaster" method="cleanupStagingDir" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_bestpractices.html#guardlogstatement" priority="2">
Logger calls should be surrounded by log level guards.
</violation>
<violation beginline="557" endline="557" begincolumn="7" endcolumn="66" rule="GuardLogStatement" ruleset="Best Practices" package="org.apache.hadoop.mapreduce.v2.app" class="MRAppMaster" method="cleanupStagingDir" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_bestpractices.html#guardlogstatement" priority="2">
Logger calls should be surrounded by log level guards.
</violation>
<violation beginline="587" endline="587" begincolumn="7" endcolumn="17" rule="UselessQualifiedThis" ruleset="Code Style" package="org.apache.hadoop.mapreduce.v2.app" class="MRAppMaster" method="shutDownJob" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#uselessqualifiedthis" priority="3">
Useless qualified this usage in the same class.
</violation>
<violation beginline="594" endline="595" begincolumn="13" endcolumn="45" rule="GuardLogStatement" ruleset="Best Practices" package="org.apache.hadoop.mapreduce.v2.app" class="MRAppMaster" method="shutDownJob" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_bestpractices.html#guardlogstatement" priority="2">
Logger calls should be surrounded by log level guards.
</violation>
<violation beginline="607" endline="608" begincolumn="13" endcolumn="49" rule="GuardLogStatement" ruleset="Best Practices" package="org.apache.hadoop.mapreduce.v2.app" class="MRAppMaster" method="shutDownJob" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_bestpractices.html#guardlogstatement" priority="2">
Logger calls should be surrounded by log level guards.
</violation>
<violation beginline="619" endline="622" begincolumn="7" endcolumn="5" rule="AvoidCatchingThrowable" ruleset="Error Prone" package="org.apache.hadoop.mapreduce.v2.app" class="MRAppMaster" method="shutDownJob" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_errorprone.html#avoidcatchingthrowable" priority="3">
A catch statement should never catch throwable since it includes errors.
</violation>
<violation beginline="644" endline="649" begincolumn="7" endcolumn="5" rule="EmptyCatchBlock" ruleset="Error Prone" package="org.apache.hadoop.mapreduce.v2.app" class="MRAppMaster" method="exitMRAppMaster" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_errorprone.html#emptycatchblock" priority="3">
Avoid empty catch blocks
</violation>
<violation beginline="739" endline="739" begincolumn="11" endcolumn="24" rule="UnnecessaryLocalBeforeReturn" ruleset="Code Style" package="org.apache.hadoop.mapreduce.v2.app" class="MRAppMaster" method="call" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#unnecessarylocalbeforereturn" priority="3">
Consider simply returning the value vs storing it in local variable 'result'
</violation>
<violation beginline="741" endline="742" begincolumn="11" endcolumn="53" rule="GuardLogStatement" ruleset="Best Practices" package="org.apache.hadoop.mapreduce.v2.app" class="MRAppMaster" method="call" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_bestpractices.html#guardlogstatement" priority="2">
Logger calls should be surrounded by log level guards.
</violation>
<violation beginline="744" endline="748" begincolumn="11" endcolumn="9" rule="IdenticalCatchBranches" ruleset="Code Style" package="org.apache.hadoop.mapreduce.v2.app" class="MRAppMaster" method="call" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#identicalcatchbranches" priority="3">
'catch' branch identical to 'InstantiationException' branch
</violation>
<violation beginline="745" endline="746" begincolumn="11" endcolumn="53" rule="GuardLogStatement" ruleset="Best Practices" package="org.apache.hadoop.mapreduce.v2.app" class="MRAppMaster" method="call" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_bestpractices.html#guardlogstatement" priority="2">
Logger calls should be surrounded by log level guards.
</violation>
<violation beginline="748" endline="752" begincolumn="11" endcolumn="9" rule="IdenticalCatchBranches" ruleset="Code Style" package="org.apache.hadoop.mapreduce.v2.app" class="MRAppMaster" method="call" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#identicalcatchbranches" priority="3">
'catch' branch identical to 'InstantiationException' branch
</violation>
<violation beginline="749" endline="750" begincolumn="11" endcolumn="53" rule="GuardLogStatement" ruleset="Best Practices" package="org.apache.hadoop.mapreduce.v2.app" class="MRAppMaster" method="call" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_bestpractices.html#guardlogstatement" priority="2">
Logger calls should be surrounded by log level guards.
</violation>
<violation beginline="752" endline="756" begincolumn="11" endcolumn="9" rule="IdenticalCatchBranches" ruleset="Code Style" package="org.apache.hadoop.mapreduce.v2.app" class="MRAppMaster" method="call" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#identicalcatchbranches" priority="3">
'catch' branch identical to 'InstantiationException' branch
</violation>
<violation beginline="753" endline="754" begincolumn="11" endcolumn="53" rule="GuardLogStatement" ruleset="Best Practices" package="org.apache.hadoop.mapreduce.v2.app" class="MRAppMaster" method="call" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_bestpractices.html#guardlogstatement" priority="2">
Logger calls should be surrounded by log level guards.
</violation>
<violation beginline="766" endline="766" begincolumn="5" endcolumn="15" rule="UnnecessaryLocalBeforeReturn" ruleset="Code Style" package="org.apache.hadoop.mapreduce.v2.app" class="MRAppMaster" method="createTaskAttemptListener" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#unnecessarylocalbeforereturn" priority="3">
Consider simply returning the value vs storing it in local variable 'lis'
</violation>
<violation beginline="1132" endline="1132" begincolumn="21" endcolumn="80" rule="UselessParentheses" ruleset="Code Style" package="org.apache.hadoop.mapreduce.v2.app" class="MRAppMaster" method="serviceStart" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#uselessparentheses" priority="4">
Useless parentheses.
</violation>
<violation beginline="1141" endline="1143" begincolumn="9" endcolumn="42" rule="GuardLogStatement" ruleset="Best Practices" package="org.apache.hadoop.mapreduce.v2.app" class="MRAppMaster" method="serviceStart" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_bestpractices.html#guardlogstatement" priority="2">
Logger calls should be surrounded by log level guards.
</violation>
<violation beginline="1149" endline="1150" begincolumn="9" endcolumn="41" rule="GuardLogStatement" ruleset="Best Practices" package="org.apache.hadoop.mapreduce.v2.app" class="MRAppMaster" method="serviceStart" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_bestpractices.html#guardlogstatement" priority="2">
Logger calls should be surrounded by log level guards.
</violation>
<violation beginline="1183" endline="1183" begincolumn="24" endcolumn="34" rule="LocalVariableNamingConventions" ruleset="Code Style" package="org.apache.hadoop.mapreduce.v2.app" class="MRAppMaster" method="isRecoverySupported" variable="_jobContext" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#localvariablenamingconventions" priority="1">
The final local variable name '_jobContext' doesn't match '[a-z][a-zA-Z0-9]*'
</violation>
<violation beginline="1231" endline="1236" begincolumn="7" endcolumn="42" rule="GuardLogStatement" ruleset="Best Practices" package="org.apache.hadoop.mapreduce.v2.app" class="MRAppMaster" method="processRecovery" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_bestpractices.html#guardlogstatement" priority="2">
Logger calls should be surrounded by log level guards.
</violation>
<violation beginline="1247" endline="1247" begincolumn="5" endcolumn="58" rule="GuardLogStatement" ruleset="Best Practices" package="org.apache.hadoop.mapreduce.v2.app" class="MRAppMaster" method="getPreviousJobHistoryStream" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_bestpractices.html#guardlogstatement" priority="2">
Logger calls should be surrounded by log level guards.
</violation>
<violation beginline="1275" endline="1276" begincolumn="9" endcolumn="57" rule="GuardLogStatement" ruleset="Best Practices" package="org.apache.hadoop.mapreduce.v2.app" class="MRAppMaster" method="parsePreviousJobHistory" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_bestpractices.html#guardlogstatement" priority="2">
Logger calls should be surrounded by log level guards.
</violation>
<violation beginline="1279" endline="1280" begincolumn="5" endcolumn="47" rule="GuardLogStatement" ruleset="Best Practices" package="org.apache.hadoop.mapreduce.v2.app" class="MRAppMaster" method="parsePreviousJobHistory" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_bestpractices.html#guardlogstatement" priority="2">
Logger calls should be surrounded by log level guards.
</violation>
<violation beginline="1390" endline="1390" begincolumn="22" endcolumn="38" rule="AvoidUsingVolatile" ruleset="Multithreading" package="org.apache.hadoop.mapreduce.v2.app" class="MRAppMaster$SpeculatorEventDispatcher" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_multithreading.html#avoidusingvolatile" priority="2">
Use of modifier volatile is not recommended.
</violation>
<violation beginline="1419" endline="1419" begincolumn="13" endcolumn="69" rule="UselessParentheses" ruleset="Code Style" package="org.apache.hadoop.mapreduce.v2.app" class="MRAppMaster$SpeculatorEventDispatcher" method="handle" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#uselessparentheses" priority="4">
Useless parentheses.
</violation>
<violation beginline="1420" endline="1420" begincolumn="13" endcolumn="75" rule="UselessParentheses" ruleset="Code Style" package="org.apache.hadoop.mapreduce.v2.app" class="MRAppMaster$SpeculatorEventDispatcher" method="handle" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#uselessparentheses" priority="4">
Useless parentheses.
</violation>
<violation beginline="1505" endline="1508" begincolumn="7" endcolumn="5" rule="AvoidCatchingThrowable" ruleset="Error Prone" package="org.apache.hadoop.mapreduce.v2.app" class="MRAppMaster" method="main" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_errorprone.html#avoidcatchingthrowable" priority="3">
A catch statement should never catch throwable since it includes errors.
</violation>
<violation beginline="1535" endline="1535" begincolumn="7" endcolumn="71" rule="GuardLogStatement" ruleset="Best Practices" package="org.apache.hadoop.mapreduce.v2.app" class="MRAppMaster" method="notifyIsLastAMRetry" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_bestpractices.html#guardlogstatement" priority="2">
Logger calls should be surrounded by log level guards.
</violation>
<violation beginline="1540" endline="1540" begincolumn="7" endcolumn="61" rule="GuardLogStatement" ruleset="Best Practices" package="org.apache.hadoop.mapreduce.v2.app" class="MRAppMaster" method="notifyIsLastAMRetry" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_bestpractices.html#guardlogstatement" priority="2">
Logger calls should be surrounded by log level guards.
</violation>
<violation beginline="1611" endline="1611" begincolumn="35" endcolumn="70" rule="CompareObjectsWithEquals" ruleset="Error Prone" package="org.apache.hadoop.mapreduce.v2.app" class="MRAppMaster" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_errorprone.html#compareobjectswithequals" priority="3">
Use equals() to compare object references.
</violation>
<violation beginline="1648" endline="1648" begincolumn="35" endcolumn="70" rule="CompareObjectsWithEquals" ruleset="Error Prone" package="org.apache.hadoop.mapreduce.v2.app" class="MRAppMaster" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_errorprone.html#compareobjectswithequals" priority="3">
Use equals() to compare object references.
</violation>
<violation beginline="1656" endline="1658" begincolumn="7" endcolumn="5" rule="IdenticalCatchBranches" ruleset="Code Style" package="org.apache.hadoop.mapreduce.v2.app" class="MRAppMaster" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#identicalcatchbranches" priority="3">
'catch' branch identical to 'IOException' branch
</violation>
<violation beginline="1672" endline="1674" begincolumn="18" endcolumn="3" rule="UnnecessaryModifier" ruleset="Code Style" package="org.apache.hadoop.mapreduce.v2.app" class="MRAppMaster$Action" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifier 'static' on interface 'Action': member interfaces are implicitly static
</violation>
<violation beginline="1676" endline="1678" begincolumn="18" endcolumn="3" rule="UnnecessaryModifier" ruleset="Code Style" package="org.apache.hadoop.mapreduce.v2.app" class="MRAppMaster$ExceptionAction" externalInfoUrl="https://pmd.github.io/pmd-6.44.0/pmd_rules_java_codestyle.html#unnecessarymodifier" priority="3">
Unnecessary modifier 'static' on interface 'ExceptionAction': member interfaces are implicitly static
</violation>
</file>
</pmd>
