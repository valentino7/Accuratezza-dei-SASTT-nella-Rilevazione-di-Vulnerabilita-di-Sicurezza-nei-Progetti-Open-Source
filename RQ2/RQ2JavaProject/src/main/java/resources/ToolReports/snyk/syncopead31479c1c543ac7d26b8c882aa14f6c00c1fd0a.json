{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "SnykCode",
          "semanticVersion": "1.0.0",
          "version": "1.0.0",
          "rules": [
            {
              "id": "java/NonCryptoHardcodedSecret/test",
              "name": "NonCryptoHardcodedSecret/test",
              "shortDescription": {
                "text": "Use of Hardcoded, Security-relevant Constants"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "## Details\n\nWhen constants are hardcoded into applications, this information could easily be reverse-engineered and become known to attackers. For example, if a breached authentication token is hardcoded in multiple places in the application, it may lead to components of the application remaining vulnerable if not all instances are changed.\nAnother negative effect of hard-coding constants is potential unpredictability in the application's performance if the development team fails to update every single instance of the hardcoded constant throughout the code. For these reasons, hard-coding security-relevant constants is considered bad coding practice and should be remedied if present and avoided in future.\n\n### Best practices for prevention\n* Never hard code security-related constants; use symbolic names or configuration lookup files.\n* As hard coding is often done by coders working alone on a small scale, examine all legacy code components and test carefully when scaling.\n* Adopt a \"future-proof code\" mindset: While use of constants may save a little time now and make development simpler in the short term, it could cost time and money adapting to scale or other unforeseen circumstances (such as new hardware) in the future.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/RocketChat/Rocket.Chat.Java.SDK/commit/6f17474770cd120650daa9945ed65273aaa5ec5c?diff=split#diff-fc51f9a049d8a8cd9df2a4226b87c214L19",
                    "lines": [
                      {
                        "line": "String username = \"sachin.shinde\";",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "String password = \"sachin9924\";",
                        "lineNumber": 18,
                        "lineChange": "removed"
                      },
                      {
                        "line": "String password = \"sachin123\";",
                        "lineNumber": 23,
                        "lineChange": "added"
                      },
                      {
                        "line": "private static String serverurl = \"wss://demo.rocket.chat\";",
                        "lineNumber": 25,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/wso2-attic/ballerina-message-broker/commit/8d606a4838b057411b7226e4651f7ca59d9746ce?diff=split#diff-2d8482e5c13da266ce6e6196d45bdf1eL66",
                    "lines": [
                      {
                        "line": "private String user = \"wso2carbon\";",
                        "lineNumber": 63,
                        "lineChange": "removed"
                      },
                      {
                        "line": "private String user = \"ballerina\";",
                        "lineNumber": 63,
                        "lineChange": "added"
                      },
                      {
                        "line": "private String password = \"wso2carbon\";",
                        "lineNumber": 65,
                        "lineChange": "removed"
                      },
                      {
                        "line": "private String password = \"ballerina\";",
                        "lineNumber": 65,
                        "lineChange": "added"
                      },
                      {
                        "line": "public String getUrl() {",
                        "lineNumber": 67,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/games647/FlexibleLogin/commit/9ea9726f145063f4436ca47ef864735e247c34c1?diff=split#diff-02a91e75dcc99d9c759ee4d9e0c88734L26",
                    "lines": [
                      {
                        "line": "@Setting(comment = \"Password in order to login\")",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "private String password = \"password123456789\";",
                        "lineNumber": 25,
                        "lineChange": "removed"
                      },
                      {
                        "line": "private String password = \"\";",
                        "lineNumber": 25,
                        "lineChange": "added"
                      },
                      {
                        "line": "public SQLType getType() {",
                        "lineNumber": 27,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Removed test keys",
                  "Remove API keys",
                  "Remove DropBox sync API libraries and dependencies"
                ],
                "precision": "very-high",
                "repoDatasetSize": 158,
                "cwe": [
                  "CWE-547"
                ]
              }
            },
            {
              "id": "java/HttpResponseSplitting",
              "name": "HttpResponseSplitting",
              "shortDescription": {
                "text": "Improper Neutralization of CRLF Sequences in HTTP Headers"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nCRLF is an abbreviation for the terms \"carriage return\" and \"line feed.\" These two special characters are a legacy of old-fashioned printing terminals used in the early days of computing. However, today both are still often used as delimiters between data. When this weakness exists, CR and LF characters (represented respectively in code as `\\r` and `\\n`) are permitted to be present in HTTP headers, usually due to poor planning for data handling during development.\n\nCRLF sequences in HTTP headers are known as \"response splitting\" because these characters effectively split the response from the browser, causing the single line to be accepted as multiple lines by the server (for example, the single line First Line\\r\\nSecond Line would be accepted by the server as two lines of input).\n\nWhile response splitting in itself is not an attack, and can be completely harmless unless exploited, its presence could lead to an injection attack (known as CRLF injection) and a variety of unpredictable and potentially dangerous behavior. This weakness can be exploited in a number of ways, such as page hijacking or cross-user defacement, in which an attacker displays false site content and/or captures confidential information such as credentials. It can even lead to cross-site scripting attacks, in which attackers can cause malicious code to execute in the user's browser.\n\nFor example, the following code is vulnerable:\n\n```\nprotected void doGet(HttpServletRequest request, HttpServletResponse response) {\n  Cookie cookie = new Cookie(\"name\", request.getParameter(\"name\"));\n  response.addCookie(cookie);\n}\n```\n\nbecause the user may provide a name parameter with a value like `XYZ\\r\\nHTTP/1.1 200 OK\\nATTACKER CONTROLLED`. In this case, they will produce a second HTTP response:\n\n```\nHTTP/1.1 200 OK\nATTACKER CONTROLLED\n```\n\nA possible fix is to remove all non-alphanumerical characters:\n\n```\nprotected void doGet(HttpServletRequest request, HttpServletResponse response) {\n  String name = request.getParameter(\"name\")\n      .replaceAll(\"[^a-zA-Z ]\", \"\");\n  Cookie cookie = new Cookie(\"name\", name);\n  response.addCookie(cookie);\n}\n```\n\nIn this case, the attacker would be unable to produce a second HTTP response.\n\n\n### Best practices for prevention\n* Assume all input is potentially malicious. Define acceptable responses wherever possible, and if not possible, encode CR and LF characters to prevent header splitting.\n* Replace both `\\r` (carriage return) and `\\n` (line feed) with \"\" (empty string)-many platforms handle these characters interchangeably so the weakness may still exist if one of the two is permitted.\nFollow best practices and strip all other special characters (\", /, \\, ;, etc., as well as spaces) wherever possible.\nBe sure to sanitize special characters in both directions-from the browser to the server and also in data sent back to the browser.\nIdeally, adopt current development resources, such as languages and libraries, that block CR and LF injection in headers.\nBe vigilant with all input types that could potentially be tampered with or modified at the user end (intentionally or unintentionally), which could lead to injection attacks. These include GET, POST, cookies, and other HTTP headers.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/gzsll/TLint/commit/26407f9d7fc2fcc917cca4228addd34d7b7a0339?diff=split#diff-ee1b33b10d96e72dd93d67632f828d50L34",
                    "lines": [
                      {
                        "line": "Request original = chain.request();",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "if (!TextUtils.isEmpty(mUserStorage.getCookie())) {",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Request request = original.newBuilder().addHeader(\"Cookie\", \"u=\" + mUserStorage.getCookie() + \";\").build();",
                        "lineNumber": 33,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    Request request = original.newBuilder().addHeader(\"Cookie\", \"u=\" + URLEncoder.encode(mUserStorage.getCookie()) + \";\").build();",
                        "lineNumber": 34,
                        "lineChange": "added"
                      },
                      {
                        "line": "    return chain.proceed(request);",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "} else {",
                        "lineNumber": 36,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/http-builder-ng/http-builder-ng/commit/d533d480a249d279d5d281c07304150e300ce4ce?diff=split#diff-6becea663e2a2b1de3ad29a739f25bb5L260",
                    "lines": [
                      {
                        "line": "//technically cookies are headers, so add them here",
                        "lineNumber": 258,
                        "lineChange": "none"
                      },
                      {
                        "line": "List<Cookie> cookies = e.cookies(new ArrayList());",
                        "lineNumber": 259,
                        "lineChange": "removed"
                      },
                      {
                        "line": "List<Cookie> cookies = cr.actualCookies(new ArrayList());",
                        "lineNumber": 259,
                        "lineChange": "added"
                      },
                      {
                        "line": "for(Cookie cookie : cookies) {",
                        "lineNumber": 260,
                        "lineChange": "none"
                      },
                      {
                        "line": "    cookieStore.addCookie(cookie);",
                        "lineNumber": 261,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 262,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/apache/commons-vfs/commit/e07f9edd339973fb532ecfa88928884c75794957?diff=split#diff-c81d6f105c7fe7ff1f4734a6c1a3cbf6L344",
                    "lines": [
                      {
                        "line": "    final FileSystemOptions fileSystemOptions) {",
                        "lineNumber": 341,
                        "lineChange": "none"
                      },
                      {
                        "line": "final CookieStore cookieStore = new BasicCookieStore();",
                        "lineNumber": 342,
                        "lineChange": "none"
                      },
                      {
                        "line": "final Cookie[] cookies = builder.getCookies(fileSystemOptions);",
                        "lineNumber": 343,
                        "lineChange": "none"
                      },
                      {
                        "line": "if (cookies != null) {",
                        "lineNumber": 345,
                        "lineChange": "none"
                      },
                      {
                        "line": "    for (Cookie cookie : cookies) {",
                        "lineNumber": 346,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    for (final Cookie cookie : cookies) {",
                        "lineNumber": 346,
                        "lineChange": "added"
                      },
                      {
                        "line": "        cookieStore.addCookie(cookie);",
                        "lineNumber": 347,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }",
                        "lineNumber": 348,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 349,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Support HTTP Range requests for resuming interrupted file downloads.",
                  "* integration test server post response and logging",
                  "Added usage of java Cookies and other changes"
                ],
                "precision": "very-high",
                "repoDatasetSize": 232,
                "cwe": [
                  "CWE-113"
                ]
              }
            },
            {
              "id": "java/Sqli",
              "name": "Sqli",
              "shortDescription": {
                "text": "SQL Injection"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nIn an SQL injection attack, the user can submit an SQL query directly to the database, gaining access without providing appropriate credentials. Attackers can then view, export, modify, and delete confidential information; change passwords and other authentication information; and possibly gain access to other systems within the network. This is one of the most commonly exploited categories of vulnerability, but can largely be avoided through good coding practices.\n\n### Best practices for prevention\n* Avoid passing user-entered parameters directly to the SQL server.\n* Avoid using string concatenation to build SQL queries from user-entered parameters.\n* When coding, define SQL code first, then pass in parameters. Use prepared statements with parameterized queries. Examples include `SqlCommand()` in .NET and `bindParam()` in PHP.\n* Use strong typing for all parameters so unexpected user data will be rejected.\n* Where direct user input cannot be avoided for performance reasons, validate input against a very strict allowlist of permitted characters, avoiding special characters such as `? & / < > ; - ' \" \\` and spaces. Use a vendor-supplied escaping routine if possible.\n* Develop your application in an environment and/or using libraries that provide protection against SQL injection.\n* Harden your entire environment around a least-privilege model, ideally with isolated accounts with privileges only for particular tasks.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/jeffdcamp/dbtools-android/commit/2643c30c302955a03233847c154350e424cca1d9?diff=split#diff-e2f0ab1619799e644c57ba98ebe6f39aL474",
                    "lines": [
                      {
                        "line": "}",
                        "lineNumber": 471,
                        "lineChange": "none"
                      },
                      {
                        "line": "public int delete(@Nonnull SQLiteDatabase db, @Nullable String where, @Nullable String[] whereArgs) {",
                        "lineNumber": 473,
                        "lineChange": "removed"
                      },
                      {
                        "line": "public int delete(@Nonnull DatabaseWrapper db, @Nullable String where, @Nullable String[] whereArgs) {",
                        "lineNumber": 412,
                        "lineChange": "added"
                      },
                      {
                        "line": "    checkDB(db);",
                        "lineNumber": 474,
                        "lineChange": "none"
                      },
                      {
                        "line": "    int rowsAffected = 0;",
                        "lineNumber": 475,
                        "lineChange": "none"
                      },
                      {
                        "line": "for (int tryCount = 0; tryCount < MAX_TRY_COUNT && !success; tryCount++) {",
                        "lineNumber": 479,
                        "lineChange": "none"
                      },
                      {
                        "line": "    try {",
                        "lineNumber": 480,
                        "lineChange": "none"
                      },
                      {
                        "line": "        rowsAffected = db.delete(getTableName(), where, whereArgs);",
                        "lineNumber": 481,
                        "lineChange": "none"
                      },
                      {
                        "line": "        postDeleteEvent(db, getTableName(), rowsAffected);",
                        "lineNumber": 482,
                        "lineChange": "none"
                      },
                      {
                        "line": "        success = true;",
                        "lineNumber": 483,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/keycloak/keycloak/commit/c8c86d2badb5ed97f9fbfe2c98e190c5a73cdb66?diff=split#diff-df89d441bd8b2c3dd63c28b12e23245dL47",
                    "lines": [
                      {
                        "line": "@Inject",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "private EntityManager entityManager;",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "@Context",
                        "lineNumber": 48,
                        "lineChange": "none"
                      },
                      {
                        "line": "@Path(\"{id}\")",
                        "lineNumber": 99,
                        "lineChange": "none"
                      },
                      {
                        "line": "@Produces(\"application/json\")",
                        "lineNumber": 100,
                        "lineChange": "none"
                      },
                      {
                        "line": "public Response findById(@PathParam(\"id\") String id) {",
                        "lineNumber": 101,
                        "lineChange": "none"
                      },
                      {
                        "line": "    List result = this.entityManager.createQuery(\"from Album where id = \" + id).getResultList();",
                        "lineNumber": 102,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    List result = this.entityManager.createQuery(\"from Album where id = \" + Long.valueOf(id)).getResultList();",
                        "lineNumber": 102,
                        "lineChange": "added"
                      },
                      {
                        "line": "    if (result.isEmpty()) {",
                        "lineNumber": 104,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/nuls-io/nuls/commit/7ff6aaf43ba54ec5cce6d03f7243e5a941fb3e4a?diff=split#diff-0444fba3b07c567a52ceed78978dc18bR532",
                    "lines": [
                      {
                        "line": "}",
                        "lineNumber": 536,
                        "lineChange": "none"
                      },
                      {
                        "line": " * @return",
                        "lineNumber": 529,
                        "lineChange": "added"
                      },
                      {
                        "line": " */",
                        "lineNumber": 530,
                        "lineChange": "added"
                      },
                      {
                        "line": "@Deprecated",
                        "lineNumber": 531,
                        "lineChange": "added"
                      },
                      {
                        "line": "public static Result delete(String area, String key) {",
                        "lineNumber": 538,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (!baseCheckArea(area)) {",
                        "lineNumber": 539,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return new Result(true, \"KV_AREA_NOT_EXISTS\");",
                        "lineNumber": 540,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }",
                        "lineNumber": 541,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (StringUtils.isBlank(key)) {",
                        "lineNumber": 542,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return Result.getFailed(KernelErrorCode.NULL_PARAMETER);",
                        "lineNumber": 543,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }",
                        "lineNumber": 544,
                        "lineChange": "none"
                      },
                      {
                        "line": "    try {",
                        "lineNumber": 545,
                        "lineChange": "none"
                      },
                      {
                        "line": "        DB db = AREAS.get(area);",
                        "lineNumber": 546,
                        "lineChange": "none"
                      },
                      {
                        "line": "        db.delete(bytes(key));",
                        "lineNumber": 547,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return Result.getSuccess();",
                        "lineNumber": 548,
                        "lineChange": "none"
                      },
                      {
                        "line": "    } catch (Exception e) {",
                        "lineNumber": 549,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "- Support hive user impersonation on hive tables page",
                  "* Moves converter pattern to Java 11",
                  "Add query logging."
                ],
                "precision": "very-high",
                "repoDatasetSize": 197,
                "cwe": [
                  "CWE-89"
                ]
              }
            },
            {
              "id": "java/TooPermissiveTrustManager",
              "name": "TooPermissiveTrustManager",
              "shortDescription": {
                "text": "Improper Certificate Validation"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nCommunication through encrypted TLS/SSL protocols can only take place when the server bears a valid certificate associating that server with a valid public-key identity issued by a third-party authority. If certificate validation is cursory or incomplete, this creates a weakness whereby an attacker can spoof one or more certificate details (e.g., expiration date), gaining unauthorized access to confidential data and privileged actions.\n\n### Best practices for prevention\n* Verify all aspects of any certificate provided, particularly chain of trust (issuing authority), host identity, and expiration.\n* Limit the validity period for certificates.\n* Avoid using self-signed certificates, certificate pinning, and wildcard certificates, as these all add levels of convenience but can also lead to loss of control over site/app security.\n* Disable older and insecure protocols (for example, SSL 2.0/3.0, MD5, and 3DES).\n* Ensure that all team members are familiar with current best practices and approaches, such as current TLS protocols.\n* Implement automated and manual testing using current tools and techniques designed to reveal this and related SSL weaknesses (for example, web application scanners).",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/pentaho/pentaho-kettle/commit/5a4014d3e4e7307198635a1d9d1cbe7e868fb889?diff=split#diff-b711fa3a1339a77fb1b62ea5a608f827L143",
                    "lines": [
                      {
                        "line": "  }",
                        "lineNumber": 143,
                        "lineChange": "none"
                      },
                      {
                        "line": "  @Override",
                        "lineNumber": 145,
                        "lineChange": "none"
                      },
                      {
                        "line": "  public X509Certificate[] getAcceptedIssuers() {",
                        "lineNumber": 146,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return null;",
                        "lineNumber": 144,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    return new X509Certificate[0];",
                        "lineNumber": 147,
                        "lineChange": "added"
                      },
                      {
                        "line": "  }",
                        "lineNumber": 148,
                        "lineChange": "none"
                      },
                      {
                        "line": "};",
                        "lineNumber": 149,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/guardianproject/NetCipher/commit/3b971438ed74870685f404c43feae65fc413d703?diff=split#diff-6f4869070d4eee5c76931a7bf27ed055L179",
                    "lines": [
                      {
                        "line": "}",
                        "lineNumber": 181,
                        "lineChange": "none"
                      },
                      {
                        "line": "public void checkClientTrusted(X509Certificate[] arg0, String arg1) throws CertificateException {",
                        "lineNumber": 183,
                        "lineChange": "none"
                      },
                      {
                        "line": "    //not yet implemented",
                        "lineNumber": 179,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    ",
                        "lineNumber": 184,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tdebug (\"WARNING: Client Cert Trust NOT YET IMPLEMENTED\");",
                        "lineNumber": 185,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 186,
                        "lineChange": "none"
                      },
                      {
                        "line": "{",
                        "lineNumber": 671,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tif (SHOW_DEBUG_OUTPUT)",
                        "lineNumber": 672,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tLog.d(TAG, msg);",
                        "lineNumber": 673,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 674,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/HtmlUnit/htmlunit/commit/2ab74fb459fa25764fa3c6f56d00cf076fadf69d?diff=split#diff-3070dfb96ed2fae966d731bf849982d1L125",
                    "lines": [
                      {
                        "line": " * {@inheritDoc}",
                        "lineNumber": 127,
                        "lineChange": "none"
                      },
                      {
                        "line": " */",
                        "lineNumber": 128,
                        "lineChange": "none"
                      },
                      {
                        "line": "public void checkClientTrusted(final X509Certificate[] chain, final String authType) throws CertificateException {",
                        "lineNumber": 129,
                        "lineChange": "none"
                      },
                      {
                        "line": "    // Everyone is trusted!",
                        "lineNumber": 130,
                        "lineChange": "none"
                      },
                      {
                        "line": "    acceptedIssuers_.addAll(Arrays.asList(chain));",
                        "lineNumber": 131,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 132,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Finalize tests for HTTP libraries",
                  "Relates elastic/elasticsearch",
                  "* Allow possibility for pushing trust issue to user"
                ],
                "precision": "very-high",
                "repoDatasetSize": 54,
                "cwe": [
                  "CWE-295"
                ]
              }
            },
            {
              "id": "java/XXE/test",
              "name": "XXE/test",
              "shortDescription": {
                "text": "XML External Entity (XXE) Injection"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nFor convenience, XML documents can use system identifiers to enable access to stored content, whether local or remote. The XML processor then uses the system identifier to access the resource rather than using the URI. When this weakness exists, the application permits user-supplied data, which could include the address of an XML external identity, to be passed directly to the XML parser. The application will then attempt to retrieve documents from outside of secure, controlled areas.\n\nAttackers can exploit this weakness to expose sensitive data, execute port scanning on the server side, or launch a denial-of-service attack (DoS) such as Billion Laughs.\n\n### Best practices for prevention\n\n* When possible, disable loading of data from external entities. The method of doing this will vary based on the language and XML parser being used.\n* Use a local, static document type definitions (DTDs) and ensure that external DTDs are disallowed entirely.\n* If user input cannot be avoided, perform validation against an allowlist of possible data sources. However, as long as external DTDs are allowed, XML code remains inherently vulnerable to attacks exploiting this weakness.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/Unidata/netcdf-java/commit/475707c10fd20b92a48187aad1ac6379fe126e32?diff=split#diff-2ab50dd3fd1834707ceae5e424963a52L98",
                    "lines": [
                      {
                        "line": "static private org.jdom.Document getCapabilities(String endpoint) throws IOException {",
                        "lineNumber": 95,
                        "lineChange": "none"
                      },
                      {
                        "line": "  org.jdom.Document doc;",
                        "lineNumber": 96,
                        "lineChange": "none"
                      },
                      {
                        "line": "  HttpMethod method = null;",
                        "lineNumber": 97,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  HTTPMethod method = null;",
                        "lineNumber": 97,
                        "lineChange": "added"
                      },
                      {
                        "line": "  try {",
                        "lineNumber": 98,
                        "lineChange": "none"
                      },
                      {
                        "line": "    method = CdmRemote.sendQuery(endpoint, \"req=capabilities\");",
                        "lineNumber": 99,
                        "lineChange": "none"
                      },
                      {
                        "line": "    InputStream in = method.getResponseBodyAsStream();",
                        "lineNumber": 100,
                        "lineChange": "none"
                      },
                      {
                        "line": "    SAXBuilder builder = new SAXBuilder(false);",
                        "lineNumber": 101,
                        "lineChange": "none"
                      },
                      {
                        "line": "    doc = builder.build(in);",
                        "lineNumber": 102,
                        "lineChange": "none"
                      },
                      {
                        "line": "  } catch (Throwable t) {",
                        "lineNumber": 104,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/wirecardBrasil/mockkid/commit/002008cf918a84f962f2fe27cbdb4ba2685c6ae0?diff=split#diff-b441fb2c8c0aa00121642142978b8a0bL18",
                    "lines": [
                      {
                        "line": "private static final Logger logger = LoggerFactory.getLogger(XMLBodyVariableResolver.class);",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "public static String extractValueFromXml(String name, HttpServletRequest request) {",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "    try {",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "        DocumentBuilderFactory builderFactory =",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "                DocumentBuilderFactory.newInstance();",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "        DocumentBuilder builder = builderFactory.newDocumentBuilder();",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "        Document document = builder.parse(request.getInputStream());",
                        "lineNumber": 22,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        Document document = builder.parse(((MockkidRequest) request).getSafeInputStream());",
                        "lineNumber": 23,
                        "lineChange": "added"
                      },
                      {
                        "line": "        XPath xPath =  XPathFactory.newInstance().newXPath();",
                        "lineNumber": 25,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/IanDarwin/javasrc/commit/8251ef48893e6333dee02e29925c16ba933d7d14?diff=split#diff-f4d7011ca260d567d50d5aa022009b3dL17",
                    "lines": [
                      {
                        "line": " */",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "public class SAXLister {",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "  public static void main(String[] args) throws Exception {",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "    new SAXLister(args);",
                        "lineNumber": 19,
                        "lineChange": "added"
                      },
                      {
                        "line": "  }",
                        "lineNumber": 20,
                        "lineChange": "added"
                      },
                      {
                        "line": "  ",
                        "lineNumber": 21,
                        "lineChange": "added"
                      },
                      {
                        "line": "  public SAXLister(String[] args) throws SAXException, IOException {",
                        "lineNumber": 22,
                        "lineChange": "added"
                      },
                      {
                        "line": "    XMLReader parser = XMLReaderFactory",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "        .createXMLReader(\"org.apache.xerces.parsers.SAXParser\");",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "    // should load properties rather than hardcoding class name",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "    parser.setContentHandler(new PeopleHandler());",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "    parser.parse(args.length == 1 ? args[0] : \"parents.xml\");",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "  }",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "  ",
                        "lineNumber": 29,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Move loadind XML documents from streams to XML utils class.",
                  "Added support for File comparator",
                  "Adding unit tests"
                ],
                "precision": "very-high",
                "repoDatasetSize": 110,
                "cwe": [
                  "CWE-611"
                ]
              }
            },
            {
              "id": "javascript/DOMXSS/test",
              "name": "DOMXSS/test",
              "shortDescription": {
                "text": "Cross-site Scripting (XSS)"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "## Details\n\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\n\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser's Same Origin Policy.\n\nInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\n\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they've been correctly escaped in the application code and in this way the attempted attack is diverted.\n\nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware.\n\n### Types of attacks\nThere are a few methods by which XSS can be manipulated:\n\n|Type|Origin|Description|\n|--|--|--|\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user's browser.|\n|**DOM-based**|Client|The attacker forces the user's browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\n\n### Affected environments\nThe following environments are susceptible to an XSS attack:\n\n* Web servers\n* Application servers\n* Web application environments\n\n### How to prevent\nThis section describes the top best practices designed to specifically protect your code:\n\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches.\n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents.\n* Give users the option to disable client-side scripts.\n* Redirect invalid requests.\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/jbt/markdown-editor/commit/4c02744b8a51de4a23002a7064e3d5a9a712f78c?diff=split#diff-0eb547304658805aad788d320f10bf1f292797b5e6d745a3bf617584da017051L187",
                    "lines": [
                      {
                        "line": "  document.getElementById('out').innerHTML = marked(val);",
                        "lineNumber": 186,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 187,
                        "lineChange": "none"
                      },
                      {
                        "line": "var editor = CodeMirror.fromTextArea(document.getElementById('code'), {",
                        "lineNumber": 189,
                        "lineChange": "none"
                      },
                      {
                        "line": "  mode: 'gfm',",
                        "lineNumber": 190,
                        "lineChange": "none"
                      },
                      {
                        "line": "  lineNumbers: true,",
                        "lineNumber": 191,
                        "lineChange": "none"
                      },
                      {
                        "line": "  matchBrackets: true,",
                        "lineNumber": 192,
                        "lineChange": "none"
                      },
                      {
                        "line": "  lineWrapping: true,",
                        "lineNumber": 193,
                        "lineChange": "none"
                      },
                      {
                        "line": "  theme: 'default',",
                        "lineNumber": 194,
                        "lineChange": "none"
                      },
                      {
                        "line": "  onChange: update",
                        "lineNumber": 195,
                        "lineChange": "none"
                      },
                      {
                        "line": "});",
                        "lineNumber": 196,
                        "lineChange": "none"
                      },
                      {
                        "line": "document.addEventListener('drop', function(e){",
                        "lineNumber": 198,
                        "lineChange": "none"
                      },
                      {
                        "line": "  e.preventDefault();",
                        "lineNumber": 199,
                        "lineChange": "none"
                      },
                      {
                        "line": "  e.stopPropagation();",
                        "lineNumber": 200,
                        "lineChange": "none"
                      },
                      {
                        "line": "  var theFile = e.dataTransfer.files[0];",
                        "lineNumber": 202,
                        "lineChange": "none"
                      },
                      {
                        "line": "  var theReader = new FileReader();",
                        "lineNumber": 203,
                        "lineChange": "none"
                      },
                      {
                        "line": "  theReader.onload = function(e){",
                        "lineNumber": 204,
                        "lineChange": "none"
                      },
                      {
                        "line": "    editor.setValue(e.target.result);",
                        "lineNumber": 205,
                        "lineChange": "none"
                      },
                      {
                        "line": "  };",
                        "lineNumber": 206,
                        "lineChange": "none"
                      },
                      {
                        "line": "  theReader.readAsText(theFile);",
                        "lineNumber": 208,
                        "lineChange": "none"
                      },
                      {
                        "line": "}, false);",
                        "lineNumber": 209,
                        "lineChange": "none"
                      },
                      {
                        "line": "function save(){",
                        "lineNumber": 211,
                        "lineChange": "none"
                      },
                      {
                        "line": "  var code = editor.getValue();",
                        "lineNumber": 212,
                        "lineChange": "none"
                      },
                      {
                        "line": "  var blob = new Blob([code], { type: 'text/plain' });",
                        "lineNumber": 213,
                        "lineChange": "none"
                      },
                      {
                        "line": "  saveBlob(blob);",
                        "lineNumber": 214,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 215,
                        "lineChange": "none"
                      },
                      {
                        "line": "function saveBlob(blob){",
                        "lineNumber": 217,
                        "lineChange": "none"
                      },
                      {
                        "line": "  var name = \"untitled.md\";",
                        "lineNumber": 218,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if(window.saveAs){",
                        "lineNumber": 219,
                        "lineChange": "none"
                      },
                      {
                        "line": "    window.saveAs(blob, name);",
                        "lineNumber": 220,
                        "lineChange": "none"
                      },
                      {
                        "line": "  }else if(navigator.saveBlob){",
                        "lineNumber": 221,
                        "lineChange": "none"
                      },
                      {
                        "line": "    navigator.saveBlob(blob, name);",
                        "lineNumber": 222,
                        "lineChange": "none"
                      },
                      {
                        "line": "  }else{",
                        "lineNumber": 223,
                        "lineChange": "none"
                      },
                      {
                        "line": "    url = URL.createObjectURL(blob);",
                        "lineNumber": 224,
                        "lineChange": "none"
                      },
                      {
                        "line": "    var link = document.createElement(\"a\");",
                        "lineNumber": 225,
                        "lineChange": "none"
                      },
                      {
                        "line": "    link.setAttribute(\"href\",url);",
                        "lineNumber": 226,
                        "lineChange": "none"
                      },
                      {
                        "line": "    link.setAttribute(\"download\",name);",
                        "lineNumber": 227,
                        "lineChange": "none"
                      },
                      {
                        "line": "    var event = document.createEvent('MouseEvents');",
                        "lineNumber": 228,
                        "lineChange": "none"
                      },
                      {
                        "line": "    event.initMouseEvent('click', true, true, window, 1, 0, 0, 0, 0, false, false, false, false, 0, null);",
                        "lineNumber": 229,
                        "lineChange": "none"
                      },
                      {
                        "line": "    link.dispatchEvent(event);",
                        "lineNumber": 230,
                        "lineChange": "none"
                      },
                      {
                        "line": "  }",
                        "lineNumber": 231,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 232,
                        "lineChange": "none"
                      },
                      {
                        "line": "document.addEventListener('keydown', function(e){",
                        "lineNumber": 234,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if(e.keyCode == 83 && (e.ctrlKey || e.metaKey)){",
                        "lineNumber": 235,
                        "lineChange": "none"
                      },
                      {
                        "line": "    e.preventDefault();",
                        "lineNumber": 236,
                        "lineChange": "none"
                      },
                      {
                        "line": "    save();",
                        "lineNumber": 237,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return false;",
                        "lineNumber": 238,
                        "lineChange": "none"
                      },
                      {
                        "line": "  }",
                        "lineNumber": 239,
                        "lineChange": "none"
                      },
                      {
                        "line": "})",
                        "lineNumber": 240,
                        "lineChange": "none"
                      },
                      {
                        "line": "var hashto;",
                        "lineNumber": 242,
                        "lineChange": "none"
                      },
                      {
                        "line": "function updateHash(){",
                        "lineNumber": 244,
                        "lineChange": "none"
                      },
                      {
                        "line": "  window.location.hash = btoa(RawDeflate.deflate(editor.getValue()));",
                        "lineNumber": 245,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  window.location.hash = btoa(RawDeflate.deflate(unescape(encodeURIComponent(editor.getValue()))))",
                        "lineNumber": 245,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 246,
                        "lineChange": "none"
                      },
                      {
                        "line": "if(window.location.hash){",
                        "lineNumber": 248,
                        "lineChange": "none"
                      },
                      {
                        "line": "  var h = window.location.hash.replace(/^#/, '');",
                        "lineNumber": 249,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if(h.slice(0,5) == 'view:'){",
                        "lineNumber": 250,
                        "lineChange": "none"
                      },
                      {
                        "line": "    setOutput(RawDeflate.inflate(atob(h.slice(5))));",
                        "lineNumber": 251,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    setOutput(decodeURIComponent(escape(RawDeflate.inflate(atob(h.slice(5))))));",
                        "lineNumber": 251,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/RasPlex/OpenPHT/commit/ea03c88ab96c2607d7fc7bdb04bed16a2c14afa5?diff=split#diff-cbc600141d5846348060616895d0adbb51a9720d9504a4d7d33cd5eb65e44d4bL57",
                    "lines": [
                      {
                        "line": "document.write('<img src=\"' + thumbnail + '\" class=\"cover\"></img>');",
                        "lineNumber": 56,
                        "lineChange": "removed"
                      },
                      {
                        "line": "var imgSrc = item[\"thumbnail\"] ? ('vfs/' + escape(item[\"thumbnail\"])) : \"images/DefaultVideo.png\";",
                        "lineNumber": 53,
                        "lineChange": "added"
                      },
                      {
                        "line": "document.write('<img src=\"' + imgSrc + '\" class=\"cover\"></img>');",
                        "lineNumber": 54,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/RasPlex/OpenPHT/commit/ea03c88ab96c2607d7fc7bdb04bed16a2c14afa5?diff=split#diff-07d3f208648c3e9987149a3900a8c9f269a0edd8ad11f1f0be50ad475bb36320L60",
                    "lines": [
                      {
                        "line": "if (array[activeItem][\"thumbnail\"])",
                        "lineNumber": 59,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  document.write('<img src=\"thumb/' + array[activeItem][\"thumbnail\"] + '.jpg\"></img>\"');",
                        "lineNumber": 60,
                        "lineChange": "removed"
                      },
                      {
                        "line": " else",
                        "lineNumber": 61,
                        "lineChange": "removed"
                      },
                      {
                        "line": "   document.write('<img src=\"images/DefaultAlbumCover.png\"></img>');",
                        "lineNumber": 62,
                        "lineChange": "removed"
                      },
                      {
                        "line": " var imgSrc = array[activeItem][\"thumbnail\"] ? ('vfs/' + escape(array[activeItem][\"thumbnail\"])) : \"images/DefaultAlbumCover.png\";",
                        "lineNumber": 59,
                        "lineChange": "added"
                      },
                      {
                        "line": " document.write('<img src=\"' + imgSrc + '\"></img>');",
                        "lineNumber": 60,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Add unit test.",
                  "e3db0cd CHANGES.md\n84d1acf Add tests.",
                  "Update and clean up the tests by using the iframe's load event."
                ],
                "precision": "very-high",
                "repoDatasetSize": 1490,
                "cwe": [
                  "CWE-79"
                ]
              }
            },
            {
              "id": "java/ReturnsPassword",
              "name": "ReturnsPassword",
              "shortDescription": {
                "text": "Unprotected Storage of Credentials"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nIf credentials are not protected or not sufficiently protected through strong encryption, attackers can access this information in a number of ways. Developers may rely on plain-text storage of credentials when they believe the system is completely secure from attack or only accessible to insiders. This confidence is misguided and dangerous. If a malicious insider-such as a former employee-or a hostile attacker using SQL injection, XML injection, or a brute-force attack accesses the system, they can access this credential information to gain unauthorized permissions within the system and to export other confidential and secure information.\n\n### Best practices for prevention\n* Ensure that passwords are never stored in plain text, even for \"purely internal\" use.\n* Never rely on password encoding, such as base 64 encoding; choose a complex encryption algorithm that includes salting, then hashing.\n* Implement zero-trust approaches in which users have access only to information needed for legitimate business purposes.\n* To the greatest extent possible, secure the application against injection attacks and other types of weaknesses.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/Raysmond/SpringBlog/commit/3fbcae1e4627151fef017182e2be25404efb6778?diff=split#diff-5db28c34e3a8215d068e1650562a5e85L78",
                    "lines": [
                      {
                        "line": "logger.info(\"\" + passwordEncoder.matches(password, user.getPassword()));",
                        "lineNumber": 76,
                        "lineChange": "none"
                      },
                      {
                        "line": "if (!user.getPassword().equals(passwordEncoder.encode(password)))",
                        "lineNumber": 77,
                        "lineChange": "removed"
                      },
                      {
                        "line": "boolean match = passwordEncoder.matches(password, user.getPassword());",
                        "lineNumber": 77,
                        "lineChange": "added"
                      },
                      {
                        "line": "if (!match)",
                        "lineNumber": 78,
                        "lineChange": "added"
                      },
                      {
                        "line": "    return false;",
                        "lineNumber": 79,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/linlinjava/litemall/commit/62964b8be5856976d673e0942a3457d252147d47?diff=split#diff-350e06b09af70876f8b603fb1d33080fL64",
                    "lines": [
                      {
                        "line": "}",
                        "lineNumber": 62,
                        "lineChange": "none"
                      },
                      {
                        "line": "if(!user.getPassword().equals(password)){",
                        "lineNumber": 63,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    return ResponseUtil.badArgumentValue();",
                        "lineNumber": 64,
                        "lineChange": "removed"
                      },
                      {
                        "line": "BCryptPasswordEncoder encoder = new BCryptPasswordEncoder();",
                        "lineNumber": 64,
                        "lineChange": "added"
                      },
                      {
                        "line": "if(!encoder.matches(password, user.getPassword())){",
                        "lineNumber": 65,
                        "lineChange": "added"
                      },
                      {
                        "line": "    return ResponseUtil.fail(403, \"Þ┤ªÕÅÀÕ»åþáüõ©ìÕ»╣\");",
                        "lineNumber": 66,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 67,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/guchengwuyue/yshopmall/commit/28985ae95e09e9433788475d8bef2a10a197d0ec?diff=split#diff-3eddbc993068925ffebe6bd98b170164L155",
                    "lines": [
                      {
                        "line": "    throw new BadRequestException(\"õ┐«µö╣Õñ▒Þ┤Ñ´╝îµùºÕ»åþáüÚöÖÞ»»\");",
                        "lineNumber": 176,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 177,
                        "lineChange": "none"
                      },
                      {
                        "line": "if(userDetails.getPassword().equals(EncryptUtils.encryptPassword(user.getNewPass()))){",
                        "lineNumber": 154,
                        "lineChange": "removed"
                      },
                      {
                        "line": "if(passwordEncoder.matches(newPass, user.getPassword())){",
                        "lineNumber": 178,
                        "lineChange": "added"
                      },
                      {
                        "line": "    throw new BadRequestException(\"µû░Õ»åþáüõ©ìÞâ¢õ©ÄµùºÕ»åþáüþø©ÕÉî\");",
                        "lineNumber": 179,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 180,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Rollback to Password File instead of password"
                ],
                "precision": "very-high",
                "repoDatasetSize": 147,
                "cwe": [
                  "CWE-256"
                ]
              }
            },
            {
              "id": "java/OR",
              "name": "OR",
              "shortDescription": {
                "text": "Open Redirect"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\nAn open redirect attack takes place when a web application redirects the user to an unauthorized and untrusted site. In general, URL redirection refers to the ability of a website or application to redirect users to another site. This is often a benign and useful feature. For example, if a resource has moved to a new location, URL redirection can transfer the user to that location rather than displaying an error message.\nHowever, this ability can be exploited through social engineering, tricking the user into believing they are accessing one site when, in reality, they are being redirected to a dangerous site, such as a phishing site. Once there, the user may be further tricked into entering credentials or personally identifiable information (PII), believing they are still within the original, trusted domain. Attackers can then use these credentials to gain unauthorized access or leverage the user's PII for sale or ransom.\n\n### Best practices for prevention\n* When developing a site or web app, consider implementing a disclaimer page to remind users that they are leaving a secure site.\n* Adopt a zero-trust approach in which all input is treated with suspicion.\n* Validate all input against deny-lists to ensure it does not contain code to redirect the user. This method is good but inherently incomplete.\n* Be aware of all sources of untrusted input being sent to the server that could be used to redirect the user, such as cookies, URL components, filenames, query results, request headers, and more.\n* In particular, be aware of potential API calls that could send input indirectly to redirect the user.\n* To protect end users, use a firewall to block known malicious sites, train users to recognize basic signs of a phishing attack, and ensure that all network endpoints are patched with the most current updates.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/otto-de/edison-microservice/commit/582f8f65f5d2e68cb7ef9f0b0eba3b5cb5f81a6c?diff=split#diff-ead42f7bee67adeefd20bf881888897aL77",
                    "lines": [
                      {
                        "line": "        value = \"/internal/jobs/{jobType}\",",
                        "lineNumber": 77,
                        "lineChange": "none"
                      },
                      {
                        "line": "        method = POST)",
                        "lineNumber": 78,
                        "lineChange": "none"
                      },
                      {
                        "line": "public void startJob(final @PathVariable String jobType,",
                        "lineNumber": 79,
                        "lineChange": "none"
                      },
                      {
                        "line": "                     final HttpServletRequest request,",
                        "lineNumber": 80,
                        "lineChange": "added"
                      },
                      {
                        "line": "                     final HttpServletResponse response) throws IOException {",
                        "lineNumber": 81,
                        "lineChange": "none"
                      },
                      {
                        "line": "    final URI jobUri = jobService.startAsyncJob(jobType);",
                        "lineNumber": 82,
                        "lineChange": "none"
                      },
                      {
                        "line": "    response.setHeader(\"Location\", jobUri.toString());",
                        "lineNumber": 79,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    response.setHeader(\"Location\", baseUriOf(request) + jobUri.toString());",
                        "lineNumber": 83,
                        "lineChange": "added"
                      },
                      {
                        "line": "    response.setStatus(SC_NO_CONTENT);",
                        "lineNumber": 84,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 85,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/sakaiproject/sakai/commit/aada0a93ad5b4b1a2d0c34d6578c0ebc5fc405e2?diff=split#diff-4b464d789bfe9e583cdf0c6057df69ddL60",
                    "lines": [
                      {
                        "line": "public void handleAccess(HttpServletRequest req, HttpServletResponse res, EntityReference ref) {    ",
                        "lineNumber": 58,
                        "lineChange": "removed"
                      },
                      {
                        "line": "public void handleAccess(EntityView view, HttpServletRequest req, HttpServletResponse res) {",
                        "lineNumber": 66,
                        "lineChange": "added"
                      },
                      {
                        "line": "  M_log.debug(\"handleAccess()\");",
                        "lineNumber": 67,
                        "lineChange": "added"
                      },
                      {
                        "line": "  Map<String, String> props = entityBroker.getProperties(req.getPathInfo());",
                        "lineNumber": 68,
                        "lineChange": "none"
                      },
                      {
                        "line": "  String target = props.get(\"url\");",
                        "lineNumber": 69,
                        "lineChange": "none"
                      },
                      {
                        "line": "  M_log.debug(\"handleAccess() -> \" + target);",
                        "lineNumber": 70,
                        "lineChange": "added"
                      },
                      {
                        "line": "  String user = props.get(\"security.user\");",
                        "lineNumber": 71,
                        "lineChange": "none"
                      },
                      {
                        "line": "  String site_function = props.get(\"security.site.function\");",
                        "lineNumber": 72,
                        "lineChange": "none"
                      },
                      {
                        "line": "try {",
                        "lineNumber": 117,
                        "lineChange": "none"
                      },
                      {
                        "line": "  setNoCacheHeaders(res);",
                        "lineNumber": 118,
                        "lineChange": "added"
                      },
                      {
                        "line": "  res.sendRedirect(target);\t\t  ",
                        "lineNumber": 119,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 120,
                        "lineChange": "none"
                      },
                      {
                        "line": "catch (IOException e) {",
                        "lineNumber": 121,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/ModeShape/modeshape/commit/f6eb1262d007c5c892e99ae96b2acb8c8c30e6c9?diff=split#diff-0a0e48d9f362849b7a26faca19b1b35bL42",
                    "lines": [
                      {
                        "line": "protected void processRequest( HttpServletRequest request,",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "                               HttpServletResponse response ) throws ServletException, IOException {",
                        "lineNumber": 42,
                        "lineChange": "none"
                      },
                      {
                        "line": "    String url = request.getRequestURI();",
                        "lineNumber": 43,
                        "lineChange": "none"
                      },
                      {
                        "line": "    String servletPath = request.getServletPath();",
                        "lineNumber": 44,
                        "lineChange": "none"
                      },
                      {
                        "line": "    request.getSession(true).setAttribute(\"initial.uri\", url);",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "    logger.debug(\"Store requested uri \" + url);",
                        "lineNumber": 47,
                        "lineChange": "added"
                      },
                      {
                        "line": "    ",
                        "lineNumber": 48,
                        "lineChange": "added"
                      },
                      {
                        "line": "    String dest = url.substring(0, url.indexOf(servletPath));",
                        "lineNumber": 49,
                        "lineChange": "none"
                      },
                      {
                        "line": "    response.sendRedirect(dest);",
                        "lineNumber": 50,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 51,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Get better control of redirection after logging in.",
                  "Add Bitbucket Server pull requests ()"
                ],
                "precision": "very-high",
                "repoDatasetSize": 85,
                "cwe": [
                  "CWE-601"
                ]
              }
            },
            {
              "id": "java/XSS",
              "name": "XSS",
              "shortDescription": {
                "text": "Cross-site Scripting (XSS)"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "## Details\n\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\n\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser's Same Origin Policy.\n\nInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\n\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they've been correctly escaped in the application code and in this way the attempted attack is diverted.\n\nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware.\n\n### Types of attacks\nThere are a few methods by which XSS can be manipulated:\n\n|Type|Origin|Description|\n|--|--|--|\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user's browser.|\n|**DOM-based**|Client|The attacker forces the user's browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\n\n### Affected environments\nThe following environments are susceptible to an XSS attack:\n\n* Web servers\n* Application servers\n* Web application environments\n\n### How to prevent\nThis section describes the top best practices designed to specifically protect your code:\n\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches.\n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents.\n* Give users the option to disable client-side scripts.\n* Redirect invalid requests.\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/lutece-platform/lutece-core/commit/5387450fe0f3cf1b705bda89d553a6f67bc342b6?diff=split#diff-015efa4f075bbbac52efd486f29f3ca5L80",
                    "lines": [
                      {
                        "line": " *             the io exception",
                        "lineNumber": 79,
                        "lineChange": "none"
                      },
                      {
                        "line": " */",
                        "lineNumber": 80,
                        "lineChange": "none"
                      },
                      {
                        "line": "protected void processRequest( HttpServletRequest request, HttpServletResponse response ) throws ServletException, IOException",
                        "lineNumber": 81,
                        "lineChange": "none"
                      },
                      {
                        "line": "{",
                        "lineNumber": 82,
                        "lineChange": "none"
                      },
                      {
                        "line": "    String strValue = request.getParameter( PARAMETER_DATA );",
                        "lineNumber": 83,
                        "lineChange": "none"
                      },
                      {
                        "line": "    String strValueReturn = ( strValue != null ) ? EditorBbcodeService.getInstance( ).parse( strValue ) : \"\";",
                        "lineNumber": 82,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    String strEscaped = StringEscapeUtils.escapeHtml( strValue );",
                        "lineNumber": 84,
                        "lineChange": "added"
                      },
                      {
                        "line": "    String strValueReturn = ( strValue != null ) ? EditorBbcodeService.getInstance( ).parse( strEscaped ) : \"\";",
                        "lineNumber": 85,
                        "lineChange": "added"
                      },
                      {
                        "line": "    OutputStream out = response.getOutputStream( );",
                        "lineNumber": 86,
                        "lineChange": "none"
                      },
                      {
                        "line": "    out.write( strValueReturn.getBytes( AppPropertiesService.getProperty( PROPERTY_ENCODING ) ) );",
                        "lineNumber": 87,
                        "lineChange": "none"
                      },
                      {
                        "line": "    out.flush( );",
                        "lineNumber": 88,
                        "lineChange": "none"
                      },
                      {
                        "line": "    out.close( );",
                        "lineNumber": 89,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/square/keywhiz/commit/b08aeb5d31e17cd3706f646c595884181813121b?diff=split#diff-37c8fdba6768ae3e9126a316519ae714L35",
                    "lines": [
                      {
                        "line": "}",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "@Override protected void doPost(HttpServletRequest req, HttpServletResponse resp)",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "    throws ServletException, IOException {",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "  String path = req.getPathInfo();",
                        "lineNumber": 36,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  String path = StringEscapeUtils.escapeHtml4(req.getPathInfo());",
                        "lineNumber": 37,
                        "lineChange": "added"
                      },
                      {
                        "line": "  if(path != null && path.equals(\"/enable\")){",
                        "lineNumber": 38,
                        "lineChange": "none"
                      },
                      {
                        "line": "    mshc.setHealthy(true);",
                        "lineNumber": 39,
                        "lineChange": "none"
                      },
                      {
                        "line": "  } else if(path != null && path.equals(\"/disable\")) {",
                        "lineNumber": 40,
                        "lineChange": "none"
                      },
                      {
                        "line": "    mshc.setHealthy(false);",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "  } else {",
                        "lineNumber": 42,
                        "lineChange": "none"
                      },
                      {
                        "line": "    resp.sendError(HttpServletResponse.SC_NOT_FOUND,",
                        "lineNumber": 43,
                        "lineChange": "none"
                      },
                      {
                        "line": "        \"Need to pass /status/enable or /status/disable, not /status\" + path);",
                        "lineNumber": 44,
                        "lineChange": "none"
                      },
                      {
                        "line": "  }",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 46,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/apereo/cas/commit/9d81e9ba85945b0d0caaab58b10bf0c3b2e0af73?diff=split#diff-d950cb17562422f18fa1b11dc72e57deL72",
                    "lines": [
                      {
                        "line": "@Override",
                        "lineNumber": 71,
                        "lineChange": "none"
                      },
                      {
                        "line": "public final boolean preHandle(final HttpServletRequest request, final HttpServletResponse response, final Object o) throws Exception {",
                        "lineNumber": 72,
                        "lineChange": "none"
                      },
                      {
                        "line": "    // we only care about post because that's the only instance where we can get anything useful besides IP address.",
                        "lineNumber": 73,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (!\"POST\".equals(request.getMethod())) {",
                        "lineNumber": 74,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return true;",
                        "lineNumber": 75,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }",
                        "lineNumber": 76,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (exceedsThreshold(request)) {",
                        "lineNumber": 78,
                        "lineChange": "none"
                      },
                      {
                        "line": "        recordThrottle(request);",
                        "lineNumber": 79,
                        "lineChange": "none"
                      },
                      {
                        "line": "        response.sendError(403, \"Access Denied for user [\" + request.getParameter(usernameParameter)",
                        "lineNumber": 79,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        final String username = StringEscapeUtils.escapeHtml4(request.getParameter(usernameParameter));",
                        "lineNumber": 81,
                        "lineChange": "added"
                      },
                      {
                        "line": "        response.sendError(403, \"Access Denied for user [\" + username",
                        "lineNumber": 82,
                        "lineChange": "added"
                      },
                      {
                        "line": "                            + \" from IP Address [\" + request.getRemoteAddr() + \"]\");",
                        "lineNumber": 83,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return false;",
                        "lineNumber": 84,
                        "lineChange": "none"
                      },
                      {
                        "line": " * @param request the request",
                        "lineNumber": 143,
                        "lineChange": "none"
                      },
                      {
                        "line": " */",
                        "lineNumber": 144,
                        "lineChange": "none"
                      },
                      {
                        "line": "protected void recordThrottle(final HttpServletRequest request) {",
                        "lineNumber": 145,
                        "lineChange": "none"
                      },
                      {
                        "line": "    logger.warn(\"Throttling submission from {}.  More than {} failed login attempts within {} seconds.\",",
                        "lineNumber": 146,
                        "lineChange": "none"
                      },
                      {
                        "line": "            new Object[] {request.getRemoteAddr(), failureThreshold, failureRangeInSeconds});",
                        "lineNumber": 147,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Also started a IT testing harness to test servlets with a live sling instance",
                  "* using properties file so that spring boot can read it too"
                ],
                "precision": "very-high",
                "repoDatasetSize": 308,
                "cwe": [
                  "CWE-79"
                ]
              }
            },
            {
              "id": "java/TooSmallRsaKeySizeUsed/test",
              "name": "TooSmallRsaKeySizeUsed/test",
              "shortDescription": {
                "text": "Cryptographic Issues"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nThe category of cryptographic issues refers not to a single specific vulnerability but rather to a wide range of problems surrounding the implementation of cryptography and related security algorithms in programs and web apps. For example, weaknesses in generating the pseudorandom numbers used to create session keys can make keys excessively easy for hackers to guess via brute-force attack algorithms. Another example is when developers use weak hashes to encode passwords and other confidential data, which can lead to collisions that ultimately bypass authentication techniques.\n\nEach individual weakness will obviously require a different strategy, but there are a few common best practices that can help avoid or mitigate attacks.\n\n### Best practices for prevention\n* Implement multi-factor authentication, which relies on two or more factors such as password and SMS confirmation, prior to permitting secure access.\n* Always use a strong hashing algorithm for tighter encryption. Consider an adaptive hash function with built-in salting, although these can have a negative impact on performance.\n* Check all certificate details to verify its validity-not only the issuing entity but expiry, domain, and all other factors.\n* Developers should familiarize themselves with deprecated security algorithms and implement schemes that require greater computational effort to resolve, therefore making them more resistant to current attacks.\n* Implement all software architecture and design around the principle of least privilege, releasing secure information only after authentication as needed for business purposes.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/matthewmccullough/encryption-jvm-bootcamp/commit/ea472a1abc126e9f048e350dbf3258a6c3bb888c?diff=split#diff-8cb247227b9b9984facca2bbba486fd3L25",
                    "lines": [
                      {
                        "line": "public void Initialize() throws Exception",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "{",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "  KeyPairGenerator keygen = KeyPairGenerator.getInstance(\"RSA\");",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "  keygen.initialize(512);",
                        "lineNumber": 25,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  keygen.initialize(3072);",
                        "lineNumber": 25,
                        "lineChange": "added"
                      },
                      {
                        "line": "  keyPair = keygen.generateKeyPair();",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 27,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/codeabovelab/haven-platform/commit/1cd80b7f5d0d5f29bc814ab7fb73a1f203f529cb?diff=split#diff-b59758382a60d055818e61235e9adf75L142",
                    "lines": [
                      {
                        "line": "static KeyPair createKeypair() throws Exception {",
                        "lineNumber": 140,
                        "lineChange": "none"
                      },
                      {
                        "line": "    KeyPairGenerator kpg = KeyPairGenerator.getInstance(\"RSA\", \"BC\");",
                        "lineNumber": 141,
                        "lineChange": "none"
                      },
                      {
                        "line": "    kpg.initialize(1024);",
                        "lineNumber": 142,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    kpg.initialize(2048);",
                        "lineNumber": 142,
                        "lineChange": "added"
                      },
                      {
                        "line": "    return kpg.generateKeyPair();",
                        "lineNumber": 143,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 144,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Nordstrom/xrpc/commit/1d04125ef5fd1004b8b86976ef8f00031af2c515?diff=split#diff-a21119d465ff87f08ea795261ecac45fL44",
                    "lines": [
                      {
                        "line": "//Generate an RSA key pair.",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "final KeyPair keypair;",
                        "lineNumber": 42,
                        "lineChange": "none"
                      },
                      {
                        "line": "KeyPairGenerator keyGen = KeyPairGenerator.getInstance(\"RSA\");",
                        "lineNumber": 43,
                        "lineChange": "none"
                      },
                      {
                        "line": "keyGen.initialize(1024, null);",
                        "lineNumber": 44,
                        "lineChange": "removed"
                      },
                      {
                        "line": "keyGen.initialize(2048, null);",
                        "lineNumber": 44,
                        "lineChange": "added"
                      },
                      {
                        "line": "keypair = keyGen.generateKeyPair();",
                        "lineNumber": 45,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "generates 2048 RSA key",
                  "So this patch changes the generated key size to 2048"
                ],
                "precision": "very-high",
                "repoDatasetSize": 57,
                "cwe": [
                  "CWE-310"
                ]
              }
            },
            {
              "id": "java/HardcodedPassword/test",
              "name": "HardcodedPassword/test",
              "shortDescription": {
                "text": "Use of Hardcoded Credentials"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nDevelopers may use hardcoded credentials for convenience when coding in order to simplify their workflow. While they are responsible for removing these before production, occasionally this task may fall through the cracks. This also becomes a maintenance challenge when credentials are re-used across multiple applications.\n\nOnce attackers gain access, they may take advantage of privilege level to remove or alter data, take down a site or app, or hold any of the above for ransom. The risk across multiple similar projects is even greater. If code containing the credentials is reused across multiple projects, they will all be compromised.\n\n### Best practices for prevention\n* Plan software architecture such that keys and passwords are always stored outside the code, wherever possible.\n* Plan encryption into software architecture for all credential information and ensure proper handling of keys, credentials, and passwords.\n* Prompt for a secure password on first login rather than hard-code a default password.\n* If a hardcoded password or credential must be used, limit its use, for example, to system console users rather than via the network.\n* Use strong hashes for inbound password authentication, ideally with randomly assigned salts to increase the difficulty level in case of brute-force attack.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/utluiz/spring-examples/commit/56e44932a3a004c3ac96ce1caa3e6d8817230f6e?diff=split#diff-19d771f687bc8ca37d378c39d20ed425L26",
                    "lines": [
                      {
                        "line": "  ds.setUrl(\"jdbc:mysql://localhost:3311/agenda\");",
                        "lineNumber": 23,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  ds.setUrl(\"jdbc:mysql://localhost/agenda\");",
                        "lineNumber": 20,
                        "lineChange": "added"
                      },
                      {
                        "line": "  ds.setUser(\"root\");",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "  ds.setPassword(\"root\");",
                        "lineNumber": 25,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  ds.setPassword(\"\");",
                        "lineNumber": 22,
                        "lineChange": "added"
                      },
                      {
                        "line": "  return ds;",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 27,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Evolveum/midpoint/commit/9ce1d7ff1e78ca65d6b614c52035e1971d1187cd?diff=split#diff-0003b3a408395a5640011d7c8422d19bL43",
                    "lines": [
                      {
                        "line": "      // set the password for our message.",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "      pc.setPassword(\"5ecr3t\");",
                        "lineNumber": 42,
                        "lineChange": "removed"
                      },
                      {
                        "line": "      pc.setPassword(Main.ADM_PASSWORD);",
                        "lineNumber": 42,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 43,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/theonedev/onedev/commit/ee60c786981347fc5ab6685656f3de2ea67045f7?diff=split#diff-7f6f95fdc3f39c216b4bd099d0ca65b6L60",
                    "lines": [
                      {
                        "line": "  System.exit(1);",
                        "lineNumber": 61,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 62,
                        "lineChange": "none"
                      },
                      {
                        "line": "root.setPassword(\"12345\");",
                        "lineNumber": 59,
                        "lineChange": "removed"
                      },
                      {
                        "line": "String password = Bootstrap.command.getArgs()[0];",
                        "lineNumber": 63,
                        "lineChange": "added"
                      },
                      {
                        "line": "root.setPassword(password);",
                        "lineNumber": 64,
                        "lineChange": "added"
                      },
                      {
                        "line": "accountManager.save(root);",
                        "lineNumber": 65,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Added user/password configuration from YML file.",
                  "Added ability to configure databases to run tests against."
                ],
                "precision": "very-high",
                "repoDatasetSize": 383,
                "cwe": [
                  "CWE-798",
                  "CWE-259"
                ]
              }
            },
            {
              "id": "java/NonCryptoHardcodedSecret",
              "name": "NonCryptoHardcodedSecret",
              "shortDescription": {
                "text": "Use of Hardcoded, Security-relevant Constants"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "## Details\n\nWhen constants are hardcoded into applications, this information could easily be reverse-engineered and become known to attackers. For example, if a breached authentication token is hardcoded in multiple places in the application, it may lead to components of the application remaining vulnerable if not all instances are changed.\nAnother negative effect of hard-coding constants is potential unpredictability in the application's performance if the development team fails to update every single instance of the hardcoded constant throughout the code. For these reasons, hard-coding security-relevant constants is considered bad coding practice and should be remedied if present and avoided in future.\n\n### Best practices for prevention\n* Never hard code security-related constants; use symbolic names or configuration lookup files.\n* As hard coding is often done by coders working alone on a small scale, examine all legacy code components and test carefully when scaling.\n* Adopt a \"future-proof code\" mindset: While use of constants may save a little time now and make development simpler in the short term, it could cost time and money adapting to scale or other unforeseen circumstances (such as new hardware) in the future.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/RocketChat/Rocket.Chat.Java.SDK/commit/6f17474770cd120650daa9945ed65273aaa5ec5c?diff=split#diff-fc51f9a049d8a8cd9df2a4226b87c214L19",
                    "lines": [
                      {
                        "line": "String username = \"sachin.shinde\";",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "String password = \"sachin9924\";",
                        "lineNumber": 18,
                        "lineChange": "removed"
                      },
                      {
                        "line": "String password = \"sachin123\";",
                        "lineNumber": 23,
                        "lineChange": "added"
                      },
                      {
                        "line": "private static String serverurl = \"wss://demo.rocket.chat\";",
                        "lineNumber": 25,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/wso2-attic/ballerina-message-broker/commit/8d606a4838b057411b7226e4651f7ca59d9746ce?diff=split#diff-2d8482e5c13da266ce6e6196d45bdf1eL66",
                    "lines": [
                      {
                        "line": "private String user = \"wso2carbon\";",
                        "lineNumber": 63,
                        "lineChange": "removed"
                      },
                      {
                        "line": "private String user = \"ballerina\";",
                        "lineNumber": 63,
                        "lineChange": "added"
                      },
                      {
                        "line": "private String password = \"wso2carbon\";",
                        "lineNumber": 65,
                        "lineChange": "removed"
                      },
                      {
                        "line": "private String password = \"ballerina\";",
                        "lineNumber": 65,
                        "lineChange": "added"
                      },
                      {
                        "line": "public String getUrl() {",
                        "lineNumber": 67,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/games647/FlexibleLogin/commit/9ea9726f145063f4436ca47ef864735e247c34c1?diff=split#diff-02a91e75dcc99d9c759ee4d9e0c88734L26",
                    "lines": [
                      {
                        "line": "@Setting(comment = \"Password in order to login\")",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "private String password = \"password123456789\";",
                        "lineNumber": 25,
                        "lineChange": "removed"
                      },
                      {
                        "line": "private String password = \"\";",
                        "lineNumber": 25,
                        "lineChange": "added"
                      },
                      {
                        "line": "public SQLType getType() {",
                        "lineNumber": 27,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Removed test keys",
                  "Remove API keys",
                  "Remove DropBox sync API libraries and dependencies"
                ],
                "precision": "very-high",
                "repoDatasetSize": 158,
                "cwe": [
                  "CWE-547"
                ]
              }
            },
            {
              "id": "java/HardcodedPassword",
              "name": "HardcodedPassword",
              "shortDescription": {
                "text": "Use of Hardcoded Credentials"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nDevelopers may use hardcoded credentials for convenience when coding in order to simplify their workflow. While they are responsible for removing these before production, occasionally this task may fall through the cracks. This also becomes a maintenance challenge when credentials are re-used across multiple applications.\n\nOnce attackers gain access, they may take advantage of privilege level to remove or alter data, take down a site or app, or hold any of the above for ransom. The risk across multiple similar projects is even greater. If code containing the credentials is reused across multiple projects, they will all be compromised.\n\n### Best practices for prevention\n* Plan software architecture such that keys and passwords are always stored outside the code, wherever possible.\n* Plan encryption into software architecture for all credential information and ensure proper handling of keys, credentials, and passwords.\n* Prompt for a secure password on first login rather than hard-code a default password.\n* If a hardcoded password or credential must be used, limit its use, for example, to system console users rather than via the network.\n* Use strong hashes for inbound password authentication, ideally with randomly assigned salts to increase the difficulty level in case of brute-force attack.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/utluiz/spring-examples/commit/56e44932a3a004c3ac96ce1caa3e6d8817230f6e?diff=split#diff-19d771f687bc8ca37d378c39d20ed425L26",
                    "lines": [
                      {
                        "line": "  ds.setUrl(\"jdbc:mysql://localhost:3311/agenda\");",
                        "lineNumber": 23,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  ds.setUrl(\"jdbc:mysql://localhost/agenda\");",
                        "lineNumber": 20,
                        "lineChange": "added"
                      },
                      {
                        "line": "  ds.setUser(\"root\");",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "  ds.setPassword(\"root\");",
                        "lineNumber": 25,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  ds.setPassword(\"\");",
                        "lineNumber": 22,
                        "lineChange": "added"
                      },
                      {
                        "line": "  return ds;",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 27,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Evolveum/midpoint/commit/9ce1d7ff1e78ca65d6b614c52035e1971d1187cd?diff=split#diff-0003b3a408395a5640011d7c8422d19bL43",
                    "lines": [
                      {
                        "line": "      // set the password for our message.",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "      pc.setPassword(\"5ecr3t\");",
                        "lineNumber": 42,
                        "lineChange": "removed"
                      },
                      {
                        "line": "      pc.setPassword(Main.ADM_PASSWORD);",
                        "lineNumber": 42,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 43,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/theonedev/onedev/commit/ee60c786981347fc5ab6685656f3de2ea67045f7?diff=split#diff-7f6f95fdc3f39c216b4bd099d0ca65b6L60",
                    "lines": [
                      {
                        "line": "  System.exit(1);",
                        "lineNumber": 61,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 62,
                        "lineChange": "none"
                      },
                      {
                        "line": "root.setPassword(\"12345\");",
                        "lineNumber": 59,
                        "lineChange": "removed"
                      },
                      {
                        "line": "String password = Bootstrap.command.getArgs()[0];",
                        "lineNumber": 63,
                        "lineChange": "added"
                      },
                      {
                        "line": "root.setPassword(password);",
                        "lineNumber": 64,
                        "lineChange": "added"
                      },
                      {
                        "line": "accountManager.save(root);",
                        "lineNumber": 65,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Added user/password configuration from YML file.",
                  "Added ability to configure databases to run tests against."
                ],
                "precision": "very-high",
                "repoDatasetSize": 383,
                "cwe": [
                  "CWE-798",
                  "CWE-259"
                ]
              }
            },
            {
              "id": "java/HardcodedSecret/test",
              "name": "HardcodedSecret/test",
              "shortDescription": {
                "text": "Hardcoded Secret"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "## Details\n\nWhen constants are hardcoded into applications, this information could easily be reverse-engineered and become known to attackers. For example, if a breached authentication token is hardcoded in multiple places in the application, it may lead to components of the application remaining vulnerable if not all instances are changed.\nAnother negative effect of hard-coding constants is potential unpredictability in the application's performance if the development team fails to update every single instance of the hardcoded constant throughout the code. For these reasons, hard-coding security-relevant constants is considered bad coding practice and should be remedied if present and avoided in future.\n\n### Best practices for prevention\n- Never hard code security-related constants; use symbolic names or configuration lookup files.\n- As hard coding is often done by coders working alone on a small scale, examine all legacy code components and test carefully when scaling.\n- Adopt a \"future-proof code\" mindset: While use of constants may save a little time now and make development simpler in the short term, it could cost time and money adapting to scale or other unforeseen circumstances (such as new hardware) in the future.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/aberic/fabric-net-server/commit/963bb9fe026b454672fb83fd739f3d754b6844e1?diff=split#diff-759baf3d057123b5320b6a399e775967L67",
                    "lines": [
                      {
                        "line": "app.setKey(MathUtil.getRandom8());",
                        "lineNumber": 77,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.setPublicKey(\"pub1\");",
                        "lineNumber": 65,
                        "lineChange": "removed"
                      },
                      {
                        "line": "app.setPrivateKey(\"pri1\");",
                        "lineNumber": 66,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    }",
                        "lineNumber": 81,
                        "lineChange": "added"
                      },
                      {
                        "line": "    app.setPublicKey(key.getPublicKey());",
                        "lineNumber": 82,
                        "lineChange": "added"
                      },
                      {
                        "line": "    app.setPrivateKey(key.getPrivateKey());",
                        "lineNumber": 83,
                        "lineChange": "added"
                      },
                      {
                        "line": "    return appMapper.updateKey(app);",
                        "lineNumber": 84,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 85,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/karutaproject/karuta-backend/commit/a05377ace2292896e3768e70aa2fde992ddaae62?diff=split#diff-a46279e5e2a97eaacfba9b55e2e3b9b0L104",
                    "lines": [
                      {
                        "line": "{",
                        "lineNumber": 108,
                        "lineChange": "none"
                      },
                      {
                        "line": "  rc4 = Cipher.getInstance(\"RC4\");",
                        "lineNumber": 109,
                        "lineChange": "none"
                      },
                      {
                        "line": "  SecretKeySpec key = new SecretKeySpec(\"testkey\".getBytes(), \"RC4\");",
                        "lineNumber": 103,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  String secretkey = ConfigUtils.get(\"directkey\");",
                        "lineNumber": 110,
                        "lineChange": "added"
                      },
                      {
                        "line": "  SecretKeySpec key = new SecretKeySpec(secretkey.getBytes(), \"RC4\");",
                        "lineNumber": 111,
                        "lineChange": "added"
                      },
                      {
                        "line": "  rc4.init(Cipher.DECRYPT_MODE, key);",
                        "lineNumber": 112,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/apache/cloudstack/commit/0653d6d7f6283752984ea181ef27559bed4b05af?diff=split#diff-af0be1b2a17efe3a3d4ae1941c2e946fL309",
                    "lines": [
                      {
                        "line": "long ts = (new Date()).getTime();",
                        "lineNumber": 306,
                        "lineChange": "removed"
                      },
                      {
                        "line": "long ts = normalizedHashTime.getTime();",
                        "lineNumber": 310,
                        "lineChange": "added"
                      },
                      {
                        "line": "ts = ts/60000;\t\t// round up to 1 minute",
                        "lineNumber": 311,
                        "lineChange": "none"
                      },
                      {
                        "line": "String secretKey = \"cloud.com\";",
                        "lineNumber": 308,
                        "lineChange": "removed"
                      },
                      {
                        "line": "String secretKey = _ms.getHashKey();",
                        "lineNumber": 312,
                        "lineChange": "added"
                      },
                      {
                        "line": "SecretKeySpec keySpec = new SecretKeySpec(secretKey.getBytes(), \"HmacSHA1\");",
                        "lineNumber": 314,
                        "lineChange": "none"
                      },
                      {
                        "line": "mac.init(keySpec);",
                        "lineNumber": 315,
                        "lineChange": "none"
                      },
                      {
                        "line": "mac.update(params.getBytes());",
                        "lineNumber": 316,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Api keys from json file",
                  "Made security file and session key configurable"
                ],
                "precision": "very-high",
                "repoDatasetSize": 62,
                "cwe": [
                  "CWE-547"
                ]
              }
            },
            {
              "id": "java/ServerInformationExposure",
              "name": "ServerInformationExposure",
              "shortDescription": {
                "text": "Server Information Exposure"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nWhen a command to your site or application fails, it should do so gracefully, meaning that the user is informed that there has been a problem, rather than experiencing erratic behavior, such as crashing, hanging, or returning a 404 or similar generic error page.\n\nIn some cases, developers include information in an error message to help pinpoint the source of an error; these may include username, password, application path, stack values, and other internal details. When this weakness is present, if these logs are accessible to an attacker, it may give them clues as to the inner workings of the app, helping them plan a focused attack. For example, clues revealing SQL database details may help plan an SQL injection attack.\n\n### Best practices for prevention\n* Keep error messages to the barest minimum of helpful information that users absolutely need to know.\n* Use consistent error messages that do not give attackers clues that they might be on the right track to a successful attack, such as \"File not found\" or \"User name does not exist\".\n* Ensure that debugging information is removed from code prior to release.\n* Create clear policy for the types of errors that must be logged, which messages will be displayed to users, and which details will be logged for later alerting and debugging.\n* When logging error details, never include sensitive information such as passwords.\n* Implement naming conventions that will help you flag and defend sensitive information.\n* Use dynamic (white box) test techniques to identify conditions that could cause errors and failures and test thoroughly to ensure that the code performs gracefully without revealing sensitive data under these stress conditions.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/Nastel/tnt4j-stream-jmx/commit/624c5a0fb347a42756d8585cc79af68fa337e9f0?diff=split#diff-35c1f73e10eae0fa3bae03b3fac7f022L139",
                    "lines": [
                      {
                        "line": "@Override",
                        "lineNumber": 153,
                        "lineChange": "none"
                      },
                      {
                        "line": "protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {",
                        "lineNumber": 154,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if (req.getRequestURI().endsWith(\"/js/tntJmx.js\")) {",
                        "lineNumber": 155,
                        "lineChange": "added"
                      },
                      {
                        "line": "    resp.setContentType(\"application/javascript\");",
                        "lineNumber": 156,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 165,
                        "lineChange": "added"
                      },
                      {
                        "line": "PrintWriter out = resp.getWriter();",
                        "lineNumber": 167,
                        "lineChange": "none"
                      },
                      {
                        "line": "out.println(\"<html>\");",
                        "lineNumber": 168,
                        "lineChange": "none"
                      },
                      {
                        "line": "out.println(\"<body>\");",
                        "lineNumber": 173,
                        "lineChange": "none"
                      },
                      {
                        "line": "} catch (Exception e) {",
                        "lineNumber": 361,
                        "lineChange": "none"
                      },
                      {
                        "line": "  out.println(\"!!! NO captured output available !!!\");",
                        "lineNumber": 362,
                        "lineChange": "none"
                      },
                      {
                        "line": "  e.printStackTrace(out);",
                        "lineNumber": 363,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 364,
                        "lineChange": "none"
                      },
                      {
                        "line": "out.println(\"</textarea>\");",
                        "lineNumber": 365,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/nidi3/raml-tester-proxy/commit/32b2457bebfeeb1f72610b98a2ff31ac2361f092?diff=split#diff-3414551db540ee26f840d182e6e6c029L77",
                    "lines": [
                      {
                        "line": "}",
                        "lineNumber": 78,
                        "lineChange": "none"
                      },
                      {
                        "line": "public boolean handleCommands(HttpServletRequest request, HttpServletResponse response) throws IOException {",
                        "lineNumber": 80,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (!request.getPathInfo().startsWith(\"/@@@proxy\")) {",
                        "lineNumber": 77,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    if (!request.getPathInfo().startsWith(COMMAND_PATH) || \"true\".equals(request.getHeader(IGNORE_COMMANDS_HEADER))) {",
                        "lineNumber": 81,
                        "lineChange": "added"
                      },
                      {
                        "line": "        return false;",
                        "lineNumber": 82,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }",
                        "lineNumber": 83,
                        "lineChange": "none"
                      },
                      {
                        "line": "    final String command = request.getPathInfo().substring(10);",
                        "lineNumber": 84,
                        "lineChange": "none"
                      },
                      {
                        "line": "    final PrintWriter writer = response.getWriter();",
                        "lineNumber": 85,
                        "lineChange": "none"
                      },
                      {
                        "line": "    switch (command) {",
                        "lineNumber": 86,
                        "lineChange": "none"
                      },
                      {
                        "line": "        case \"stop\":",
                        "lineNumber": 87,
                        "lineChange": "none"
                      },
                      {
                        "line": "    } catch (Exception e) {",
                        "lineNumber": 160,
                        "lineChange": "none"
                      },
                      {
                        "line": "        writer.println(\"illegal options: '\" + raw + \"'\");",
                        "lineNumber": 161,
                        "lineChange": "none"
                      },
                      {
                        "line": "        e.printStackTrace(writer);",
                        "lineNumber": 162,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }",
                        "lineNumber": 163,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 164,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/dropwizard/dropwizard/commit/0d143d7bc35351a135f8dc82c5e6f78d1eb39268?diff=split#diff-2339a287a25047fea1fc16e74728a1c1L116",
                    "lines": [
                      {
                        "line": "@Override",
                        "lineNumber": 116,
                        "lineChange": "none"
                      },
                      {
                        "line": "protected void doPost(HttpServletRequest req,",
                        "lineNumber": 117,
                        "lineChange": "none"
                      },
                      {
                        "line": "                      HttpServletResponse resp) throws ServletException, IOException {",
                        "lineNumber": 118,
                        "lineChange": "none"
                      },
                      {
                        "line": "    final Task task = tasks.get(req.getPathInfo());",
                        "lineNumber": 119,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (task != null) {",
                        "lineNumber": 120,
                        "lineChange": "none"
                      },
                      {
                        "line": "        resp.setContentType(MediaType.PLAIN_TEXT_UTF_8.toString());",
                        "lineNumber": 118,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        resp.setContentType(CONTENT_TYPE);",
                        "lineNumber": 121,
                        "lineChange": "added"
                      },
                      {
                        "line": "        final PrintWriter output = resp.getWriter();",
                        "lineNumber": 122,
                        "lineChange": "none"
                      },
                      {
                        "line": "        try {",
                        "lineNumber": 123,
                        "lineChange": "none"
                      },
                      {
                        "line": "            final TaskExecutor taskExecutor = taskExecutors.get(task);",
                        "lineNumber": 124,
                        "lineChange": "none"
                      },
                      {
                        "line": "    output.println();",
                        "lineNumber": 129,
                        "lineChange": "none"
                      },
                      {
                        "line": "    output.println(e.getMessage());",
                        "lineNumber": 130,
                        "lineChange": "none"
                      },
                      {
                        "line": "    e.printStackTrace(output);",
                        "lineNumber": 131,
                        "lineChange": "none"
                      },
                      {
                        "line": "} finally {",
                        "lineNumber": 132,
                        "lineChange": "none"
                      },
                      {
                        "line": "    output.close();",
                        "lineNumber": 133,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Create a base class for API controller servlets.",
                  "Unit tests for import and export APIs",
                  "SDB/MySQL connection pooling"
                ],
                "precision": "very-high",
                "repoDatasetSize": 27,
                "cwe": [
                  "CWE-209"
                ]
              }
            },
            {
              "id": "java/InsecureHash",
              "name": "InsecureHash",
              "shortDescription": {
                "text": "Use of Password Hash With Insufficient Computational Effort"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nSensitive information should never be stored in plain text, since this makes it very easy for unauthorized users, whether malicious insiders or outside attackers, to access. Hashing methods are used to make stored passwords and other sensitive data unreadable to users. For example, when a password is defined for the first time, it is hashed and then stored. The next time that user attempts to log on, the password they enter is hashed following the same procedure and compared with the stored value. In this way, the original password never needs to be stored in the system.\n\nHashing is a one-way scheme, meaning a hashed password cannot be reverse engineered. However, if an outdated or custom programmed hashing scheme is used, it becomes simple for an attacker with powerful modern computing power to gain access to the hashes used. This opens up access to all stored password information, leading to breached security. Therefore, it is essential for developers to understand modern, secure password hashing techniques.\n\n### Best practices for prevention\n* Use strong standard algorithms for hashing rather than simpler but outdated methods or DIY hashing schemes, which may have inherent weaknesses.\n* Use modular design for all code dealing with hashing so it can be swapped out as security standards change over time.\n* Use salting in combination with hashing (While this places more demands on resources, it is an essential step for tighter security.).\n* Implement zero-trust architecture to ensure that access to password data is granted only for legitimate business purposes.\n* Increase developer awareness of current standards in data security and cryptography.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/tita/tita/commit/398f6b776a2aea7f20bf604768b8721beff8d93a?diff=split#diff-dd34c5e6a15ca48bff6f9ca749e68243L164",
                    "lines": [
                      {
                        "line": " */",
                        "lineNumber": 161,
                        "lineChange": "none"
                      },
                      {
                        "line": "private String getHashedPassword(String pwd) throws NoSuchAlgorithmException {",
                        "lineNumber": 162,
                        "lineChange": "none"
                      },
                      {
                        "line": "    MessageDigest md = MessageDigest.getInstance(\"SHA-1\");",
                        "lineNumber": 163,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    MessageDigest md = MessageDigest.getInstance(\"SHA-256\");",
                        "lineNumber": 103,
                        "lineChange": "added"
                      },
                      {
                        "line": "    byte[] encryptMsg = md.digest(pwd.getBytes());",
                        "lineNumber": 164,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return new String(encryptMsg);",
                        "lineNumber": 165,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    return bytes2String(encryptMsg);",
                        "lineNumber": 105,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/devonfw/my-thai-star/commit/095a3fb6bb860a2411cb51e812121ec2a6b99894?diff=split#diff-4f73d1042058dd462057744068125d4eL242",
                    "lines": [
                      {
                        "line": "    + String.format(\"%02d\", ldt1.getSecond());",
                        "lineNumber": 240,
                        "lineChange": "none"
                      },
                      {
                        "line": "MessageDigest md = MessageDigest.getInstance(\"MD5\");",
                        "lineNumber": 241,
                        "lineChange": "removed"
                      },
                      {
                        "line": "MessageDigest md = MessageDigest.getInstance(\"SHA-256\");",
                        "lineNumber": 242,
                        "lineChange": "added"
                      },
                      {
                        "line": "md.update((email + date + time).getBytes());",
                        "lineNumber": 243,
                        "lineChange": "none"
                      },
                      {
                        "line": "byte[] digest = md.digest();",
                        "lineNumber": 244,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/SecurityCompass/AndroidLabs/commit/5608f75dd665beac85dbad08f80b91d73b27904a?diff=split#diff-ffc047d4a5f84de13e373f2392bfb11bL148",
                    "lines": [
                      {
                        "line": "byte[] passwordBytes = (password).getBytes(\"UTF-8\");",
                        "lineNumber": 145,
                        "lineChange": "none"
                      },
                      {
                        "line": "MessageDigest md = MessageDigest.getInstance(\"SHA-1\");",
                        "lineNumber": 147,
                        "lineChange": "removed"
                      },
                      {
                        "line": "MessageDigest md = MessageDigest.getInstance(\"SHA-256\");",
                        "lineNumber": 147,
                        "lineChange": "added"
                      },
                      {
                        "line": "md.reset();",
                        "lineNumber": 148,
                        "lineChange": "none"
                      },
                      {
                        "line": "md.update(salt);",
                        "lineNumber": 149,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Added an enum for the supported encryption algorithms",
                  "Added #hash(byte[], String)",
                  "Added support for\nsha256 and nonce token."
                ],
                "precision": "very-high",
                "repoDatasetSize": 122,
                "cwe": [
                  "CWE-916"
                ]
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "java/NonCryptoHardcodedSecret/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found hardcoded secret.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found hardcoded {0}.",
            "arguments": [
              "[secret](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/PullTaskITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 928,
                  "endLine": 928,
                  "startColumn": 39,
                  "endColumn": 52
                }
              }
            }
          ],
          "fingerprints": {
            "0": "666fee8f638ccb1f5c1eb63dce21b1c7e5e8535b6fda423920677222a36e77b0",
            "1": "19689298.96f6c2ef.b39fb465.ede9cf8e.4a9c8cbc.ba2b7f9a.be04624c.54d46e25.19689298.e8c02a15.fc7d5400.e22980a8.f1d9f854.935029da.be04624c.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/PullTaskITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 928,
                            "endLine": 928,
                            "startColumn": 39,
                            "endColumn": 52
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/NonCryptoHardcodedSecret/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found hardcoded secret.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found hardcoded {0}.",
            "arguments": [
              "[secret](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/PullTaskITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 937,
                  "endLine": 937,
                  "startColumn": 39,
                  "endColumn": 56
                }
              }
            }
          ],
          "fingerprints": {
            "0": "9e98bd2502741c504e3a2c47d825030880229f26fbd2f633a1179e8403d48e2e",
            "1": "27ad1387.22078dd2.bc45c849.d24553fd.4068704f.46392668.5ab3f737.54d46e25.27ad1387.22078dd2.71846166.e22980a8.f1d9f854.46392668.c069f39c.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/PullTaskITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 937,
                            "endLine": 937,
                            "startColumn": 39,
                            "endColumn": 56
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HttpResponseSplitting",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from the request URL flows into setHeader and reaches an HTTP header returned to the user. This may allow a malicious input that contain CR/LF to split the http response into two responses and the second response to be controlled by the attacker. This may be used to mount a range of attacks such as cross-site scripting or cache poisoning.",
            "markdown": "Unsanitized input from {0} {1} into {2} and reaches an HTTP header returned to the user. This may allow a malicious input that contain CR/LF to split the http response into two responses and the second response to be controlled by the attacker. This may be used to mount a range of attacks such as cross-site scripting or cache poisoning.",
            "arguments": [
              "[the request URL](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19)",
              "[setHeader](20)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Login.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 50,
                  "endLine": 50,
                  "startColumn": 13,
                  "endColumn": 20
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6a9824c3c89aca1eec6db963b35a10173243916d1fd08a3a1052d74b6bb4505c",
            "1": "862b262c.1cbd3ff4.c1299410.a398a1f2.6c69ab4e.aadfed46.ece99fb3.54d46e25.862b262c.9f996d4c.c1299410.e22980a8.53e0e770.95df3f17.ece99fb3.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Login.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 48,
                            "endLine": 48,
                            "startColumn": 49,
                            "endColumn": 70
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Login.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 48,
                            "endLine": 48,
                            "startColumn": 49,
                            "endColumn": 70
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Login.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 48,
                            "endLine": 48,
                            "startColumn": 49,
                            "endColumn": 81
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Login.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 48,
                            "endLine": 48,
                            "startColumn": 21,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Login.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 47,
                            "endLine": 47,
                            "startColumn": 40,
                            "endColumn": 101
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Login.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 47,
                            "endLine": 47,
                            "startColumn": 28,
                            "endColumn": 102
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Login.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 50,
                            "endLine": 50,
                            "startColumn": 31,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 46,
                            "endLine": 46,
                            "startColumn": 64,
                            "endColumn": 94
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 17,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 51,
                            "endLine": 51,
                            "startColumn": 52,
                            "endColumn": 61
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 51,
                            "endLine": 51,
                            "startColumn": 52,
                            "endColumn": 82
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 51,
                            "endLine": 51,
                            "startColumn": 33,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 51,
                            "endLine": 51,
                            "startColumn": 28,
                            "endColumn": 85
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 52,
                            "endLine": 52,
                            "startColumn": 17,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 53,
                            "endLine": 53,
                            "startColumn": 17,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 17,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 55,
                            "endLine": 55,
                            "startColumn": 17,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 48,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 48,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 48,
                            "endColumn": 72
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 17,
                            "endColumn": 35
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HttpResponseSplitting",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from the request URL flows into setHeader and reaches an HTTP header returned to the user. This may allow a malicious input that contain CR/LF to split the http response into two responses and the second response to be controlled by the attacker. This may be used to mount a range of attacks such as cross-site scripting or cache poisoning.",
            "markdown": "Unsanitized input from {0} {1} into {2} and reaches an HTTP header returned to the user. This may allow a malicious input that contain CR/LF to split the http response into two responses and the second response to be controlled by the attacker. This may be used to mount a range of attacks such as cross-site scripting or cache poisoning.",
            "arguments": [
              "[the request URL](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19)",
              "[setHeader](20)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Logout.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 99,
                  "endLine": 99,
                  "startColumn": 17,
                  "endColumn": 24
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d25cd29813b1e063347dd578030d0f4b95114db6b6d2b8a52846764225e63ae1",
            "1": "862b262c.1cbd3ff4.c1299410.a398a1f2.6c69ab4e.aadfed46.ece99fb3.54d46e25.862b262c.9f996d4c.e0eaa42c.e22980a8.d31a8364.aadfed46.ece99fb3.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Logout.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 97,
                            "endLine": 97,
                            "startColumn": 53,
                            "endColumn": 74
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Logout.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 97,
                            "endLine": 97,
                            "startColumn": 53,
                            "endColumn": 74
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Logout.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 97,
                            "endLine": 97,
                            "startColumn": 53,
                            "endColumn": 85
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Logout.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 97,
                            "endLine": 97,
                            "startColumn": 25,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Logout.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 96,
                            "endLine": 96,
                            "startColumn": 44,
                            "endColumn": 103
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Logout.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 96,
                            "endLine": 96,
                            "startColumn": 32,
                            "endColumn": 101
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Logout.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 99,
                            "endLine": 99,
                            "startColumn": 35,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 46,
                            "endLine": 46,
                            "startColumn": 64,
                            "endColumn": 94
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 17,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 51,
                            "endLine": 51,
                            "startColumn": 52,
                            "endColumn": 61
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 51,
                            "endLine": 51,
                            "startColumn": 52,
                            "endColumn": 82
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 51,
                            "endLine": 51,
                            "startColumn": 33,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 51,
                            "endLine": 51,
                            "startColumn": 28,
                            "endColumn": 85
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 52,
                            "endLine": 52,
                            "startColumn": 17,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 53,
                            "endLine": 53,
                            "startColumn": 17,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 17,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 55,
                            "endLine": 55,
                            "startColumn": 17,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 48,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 48,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 48,
                            "endColumn": 72
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 17,
                            "endColumn": 35
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/Sqli",
          "ruleIndex": 2,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from the database flows into prepareStatement, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
            "arguments": [
              "[the database](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14)",
              "[prepareStatement](15)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/content/XMLContentExporter.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 308,
                  "endLine": 308,
                  "startColumn": 20,
                  "endColumn": 41
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c6b65b9ea044b6cd0eb846e8891f17ab4f2f8dbf1c43d3ee1b3df724596d9b0f",
            "1": "54a059af.b5ec4abe.33fa5dbe.ede9cf8e.4a9c8cbc.7fda7c5e.df7e59ba.54d46e25.9485d037.6f391d93.925380ba.2c674c84.c41fd899.7fda7c5e.349b623d.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/content/XMLContentExporter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 402,
                            "endLine": 402,
                            "startColumn": 36,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/content/XMLContentExporter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 402,
                            "endLine": 402,
                            "startColumn": 36,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/content/XMLContentExporter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 402,
                            "endLine": 402,
                            "startColumn": 24,
                            "endColumn": 62
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/content/XMLContentExporter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 404,
                            "endLine": 404,
                            "startColumn": 36,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/content/XMLContentExporter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 100,
                            "endLine": 100,
                            "startColumn": 36,
                            "endColumn": 58
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/content/XMLContentExporter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 405,
                            "endLine": 405,
                            "startColumn": 21,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/content/XMLContentExporter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 412,
                            "endLine": 412,
                            "startColumn": 37,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/content/XMLContentExporter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 412,
                            "endLine": 412,
                            "startColumn": 25,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/content/XMLContentExporter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 415,
                            "endLine": 415,
                            "startColumn": 91,
                            "endColumn": 100
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/content/XMLContentExporter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 235,
                            "endLine": 235,
                            "startColumn": 13,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/content/XMLContentExporter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 301,
                            "endLine": 301,
                            "startColumn": 13,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/content/XMLContentExporter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 301,
                            "endLine": 301,
                            "startColumn": 13,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/content/XMLContentExporter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 301,
                            "endLine": 301,
                            "startColumn": 13,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/content/XMLContentExporter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 308,
                            "endLine": 308,
                            "startColumn": 42,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/content/XMLContentExporter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 308,
                            "endLine": 308,
                            "startColumn": 42,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/content/XMLContentExporter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 308,
                            "endLine": 308,
                            "startColumn": 20,
                            "endColumn": 41
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 501,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/TooPermissiveTrustManager",
          "ruleIndex": 3,
          "level": "warning",
          "message": {
            "text": "TrustManager might be too permissive: all clients are trusted.",
            "markdown": "TrustManager might be too permissive: {0}.",
            "arguments": [
              "[all clients are trusted](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/ConnIdBundleManagerImpl.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 148,
                  "endLine": 148,
                  "startColumn": 33,
                  "endColumn": 51
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c78d8838bc6857616578aa270e108fbaa9433d1e0ac18906fdd4d70db30243ec",
            "1": "d3279c65.528e35bc.b1ce14cf.e22980a8.f0e1baa5.eacd09e2.7011a60a.1d874c72.d3279c65.528e35bc.b1ce14cf.e22980a8.f0e1baa5.eacd09e2.7011a60a.1d874c72"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/ConnIdBundleManagerImpl.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 33,
                            "endColumn": 51
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/TooPermissiveTrustManager",
          "ruleIndex": 3,
          "level": "warning",
          "message": {
            "text": "TrustManager might be too permissive: all servers are trusted.",
            "markdown": "TrustManager might be too permissive: {0}.",
            "arguments": [
              "[all servers are trusted](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/ConnIdBundleManagerImpl.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 154,
                  "endLine": 154,
                  "startColumn": 33,
                  "endColumn": 51
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f0670a7902c26d0f53c9fb9dc84b302ef2c36426e257355ed61bf507a7489d3f",
            "1": "d3279c65.528e35bc.b1ce14cf.e22980a8.f0e1baa5.eacd09e2.7011a60a.1d874c72.d3279c65.528e35bc.b1ce14cf.e22980a8.f0e1baa5.eacd09e2.7011a60a.1d874c72"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/ConnIdBundleManagerImpl.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 154,
                            "endLine": 154,
                            "startColumn": 33,
                            "endColumn": 51
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/TooPermissiveTrustManager",
          "ruleIndex": 3,
          "level": "warning",
          "message": {
            "text": "TrustManager might be too permissive: all Certificate Authorities are trusted.",
            "markdown": "TrustManager might be too permissive: {0}.",
            "arguments": [
              "[all Certificate Authorities are trusted](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/ConnIdBundleManagerImpl.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 160,
                  "endLine": 160,
                  "startColumn": 46,
                  "endColumn": 64
                }
              }
            }
          ],
          "fingerprints": {
            "0": "4cc4700779d09bced45f6d40d13da301d22a3f902421ace2e4798b3158269594",
            "1": "8df8fa68.528e35bc.b1ce14cf.e22980a8.f0e1baa5.eacd09e2.f1ccdb3e.1d874c72.8df8fa68.528e35bc.5821b615.e22980a8.3fe90ae4.eacd09e2.7c57638b.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/ConnIdBundleManagerImpl.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 161,
                            "endLine": 161,
                            "startColumn": 32,
                            "endColumn": 36
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/XXE/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a local file flows into parse, which allows expansion of external entity references. This may result in a XXE attack leading to the disclosure of confidential data or denial of service.",
            "markdown": "Unsanitized input from a local file {0} into {1}, which allows expansion of external entity references. This may result in a XXE attack leading to the disclosure of confidential data or denial of service.",
            "arguments": [
              "[flows](0)",
              "[parse](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "client/cli/src/test/java/org/apache/syncope/client/cli/commands/MigrateTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 81,
                  "endLine": 81,
                  "startColumn": 13,
                  "endColumn": 25
                }
              }
            }
          ],
          "fingerprints": {
            "0": "9b009be7d93853d7b17d64d19efcc8044af9d2f48f119b37a68d0d58ac3bf83d",
            "1": "19689298.83dbfe52.481cbae6.6c52ae28.d31a8364.2f4e1548.bae646e8.54d46e25.19689298.1cbd3ff4.481cbae6.c48320d7.a7b964d9.b051b3b8.bae646e8.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "client/cli/src/test/java/org/apache/syncope/client/cli/commands/MigrateTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 81,
                            "endLine": 81,
                            "startColumn": 26,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "client/cli/src/test/java/org/apache/syncope/client/cli/commands/MigrateTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 81,
                            "endLine": 81,
                            "startColumn": 13,
                            "endColumn": 25
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 351,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/DOMXSS/test",
          "ruleIndex": 5,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an exception flows into innerHTML, where it is used to dynamically construct the HTML page on client side. This may result in a DOM Based Cross-Site Scripting attack (DOMXSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to dynamically construct the HTML page on client side. This may result in a DOM Based Cross-Site Scripting attack (DOMXSS).",
            "arguments": [
              "[an exception](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39),(40),(41),(42),(43),(44),(45),(46),(47),(48),(49),(50),(51),(52),(53),(54),(55),(56),(57),(58),(59),(60),(61),(62),(63),(64),(65),(66),(67),(68),(69),(70),(71),(72),(73),(74),(75),(76),(77),(78),(79),(80),(81)",
              "[innerHTML](82)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 819,
                  "endLine": 819,
                  "startColumn": 5,
                  "endColumn": 70
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b3208c7173e31e199843bb92ef6232c4824e9f45073e46ed9d0c4e993c5e42af",
            "1": "2d06e3d6.9a74fed2.656daf57.41ad5cda.921998f5.dbe83c7e.cd61fc56.545e9171.08510d78.bf4464f1.7603686c.d3185418.3f452f8c.dbe83c7e.f0256597.9fed00c4"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 178,
                            "endLine": 178,
                            "startColumn": 71,
                            "endColumn": 78
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 178,
                            "endLine": 178,
                            "startColumn": 71,
                            "endColumn": 78
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 178,
                            "endLine": 178,
                            "startColumn": 106,
                            "endColumn": 107
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 178,
                            "endLine": 178,
                            "startColumn": 87,
                            "endColumn": 104
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1388,
                            "endLine": 1388,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 465,
                            "endLine": 465,
                            "startColumn": 108,
                            "endColumn": 128
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 14,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1407,
                            "endLine": 1407,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 946,
                            "endLine": 946,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 535,
                            "endLine": 535,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 536,
                            "endLine": 536,
                            "startColumn": 22,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 537,
                            "endLine": 537,
                            "startColumn": 86,
                            "endColumn": 92
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1414,
                            "endLine": 1414,
                            "startColumn": 22,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1415,
                            "endLine": 1415,
                            "startColumn": 8,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1295,
                            "endLine": 1295,
                            "startColumn": 4,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1295,
                            "endLine": 1295,
                            "startColumn": 19,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1293,
                            "endLine": 1296,
                            "startColumn": 20,
                            "endColumn": 4
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1296,
                            "endLine": 1296,
                            "startColumn": 5,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1293,
                            "endLine": 1293,
                            "startColumn": 12,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1293,
                            "endLine": 1293,
                            "startColumn": 3,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1581,
                            "endLine": 1581,
                            "startColumn": 20,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1581,
                            "endLine": 1581,
                            "startColumn": 48,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1581,
                            "endLine": 1581,
                            "startColumn": 60,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1582,
                            "endLine": 1582,
                            "startColumn": 3,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1582,
                            "endLine": 1582,
                            "startColumn": 12,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1287,
                            "endLine": 1287,
                            "startColumn": 3,
                            "endColumn": 5
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1208,
                            "endLine": 1208,
                            "startColumn": 10,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1208,
                            "endLine": 1208,
                            "startColumn": 3,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1211,
                            "endLine": 1211,
                            "startColumn": 7,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 29,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1251,
                            "endLine": 1251,
                            "startColumn": 2,
                            "endColumn": 8
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 30,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1254,
                            "endLine": 1254,
                            "startColumn": 7,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 31,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1256,
                            "endLine": 1256,
                            "startColumn": 10,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 32,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1257,
                            "endLine": 1257,
                            "startColumn": 12,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 33,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1258,
                            "endLine": 1258,
                            "startColumn": 12,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 34,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1258,
                            "endLine": 1258,
                            "startColumn": 37,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 35,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1259,
                            "endLine": 1259,
                            "startColumn": 11,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 36,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1262,
                            "endLine": 1262,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 37,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1267,
                            "endLine": 1267,
                            "startColumn": 27,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 38,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1268,
                            "endLine": 1268,
                            "startColumn": 12,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 39,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1268,
                            "endLine": 1268,
                            "startColumn": 31,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 40,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1276,
                            "endLine": 1276,
                            "startColumn": 4,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 41,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1278,
                            "endLine": 1278,
                            "startColumn": 4,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 42,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1290,
                            "endLine": 1290,
                            "startColumn": 7,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 43,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1300,
                            "endLine": 1300,
                            "startColumn": 7,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 44,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1300,
                            "endLine": 1300,
                            "startColumn": 51,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 45,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1316,
                            "endLine": 1316,
                            "startColumn": 11,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 46,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1318,
                            "endLine": 1318,
                            "startColumn": 10,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 47,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1326,
                            "endLine": 1326,
                            "startColumn": 12,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 48,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1326,
                            "endLine": 1326,
                            "startColumn": 29,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 49,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1327,
                            "endLine": 1327,
                            "startColumn": 12,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 50,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1327,
                            "endLine": 1327,
                            "startColumn": 29,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 51,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1336,
                            "endLine": 1336,
                            "startColumn": 7,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 52,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1437,
                            "endLine": 1437,
                            "startColumn": 2,
                            "endColumn": 8
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 53,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1439,
                            "endLine": 1439,
                            "startColumn": 7,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 54,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1439,
                            "endLine": 1439,
                            "startColumn": 26,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 55,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1449,
                            "endLine": 1449,
                            "startColumn": 17,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 56,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1449,
                            "endLine": 1449,
                            "startColumn": 2,
                            "endColumn": 8
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 57,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1451,
                            "endLine": 1451,
                            "startColumn": 10,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 58,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1451,
                            "endLine": 1451,
                            "startColumn": 34,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 59,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1459,
                            "endLine": 1459,
                            "startColumn": 2,
                            "endColumn": 8
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 60,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1460,
                            "endLine": 1460,
                            "startColumn": 16,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 61,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1460,
                            "endLine": 1460,
                            "startColumn": 36,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 62,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1460,
                            "endLine": 1460,
                            "startColumn": 59,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 63,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 447,
                            "endLine": 447,
                            "startColumn": 8,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 64,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 488,
                            "endLine": 488,
                            "startColumn": 3,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 65,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 489,
                            "endLine": 489,
                            "startColumn": 3,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 66,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 491,
                            "endLine": 491,
                            "startColumn": 8,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 67,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 517,
                            "endLine": 517,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 68,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 525,
                            "endLine": 525,
                            "startColumn": 13,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 69,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 526,
                            "endLine": 526,
                            "startColumn": 11,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 70,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1597,
                            "endLine": 1597,
                            "startColumn": 15,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 71,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 956,
                            "endLine": 956,
                            "startColumn": 3,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 72,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 916,
                            "endLine": 916,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 73,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 922,
                            "endLine": 922,
                            "startColumn": 13,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 74,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 969,
                            "endLine": 969,
                            "startColumn": 5,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 75,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 968,
                            "endLine": 968,
                            "startColumn": 4,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 76,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 986,
                            "endLine": 986,
                            "startColumn": 4,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 77,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 987,
                            "endLine": 987,
                            "startColumn": 81,
                            "endColumn": 87
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 78,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 987,
                            "endLine": 987,
                            "startColumn": 69,
                            "endColumn": 79
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 79,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1420,
                            "endLine": 1420,
                            "startColumn": 11,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 80,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 819,
                            "endLine": 819,
                            "startColumn": 32,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 81,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 819,
                            "endLine": 819,
                            "startColumn": 5,
                            "endColumn": 70
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 82,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 819,
                            "endLine": 819,
                            "startColumn": 5,
                            "endColumn": 70
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 501,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              },
              {
                "label": true,
                "type": "commonlyFixed"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/DOMXSS/test",
          "ruleIndex": 5,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an exception flows into innerHTML, where it is used to dynamically construct the HTML page on client side. This may result in a DOM Based Cross-Site Scripting attack (DOMXSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to dynamically construct the HTML page on client side. This may result in a DOM Based Cross-Site Scripting attack (DOMXSS).",
            "arguments": [
              "[an exception](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39)",
              "[innerHTML](40)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1126,
                  "endLine": 1126,
                  "startColumn": 22,
                  "endColumn": 146
                }
              }
            }
          ],
          "fingerprints": {
            "0": "122de63a8ddf39648580b5cb61e509a5b088f39b945b9eb070603b9d59214c3f",
            "1": "2d06e3d6.c10c9cd6.98501263.7da15f0a.9cde7c93.dbe83c7e.cd61fc56.ba6006e5.08510d78.bf4464f1.7603686c.d3185418.3f452f8c.dbe83c7e.f0256597.9fed00c4"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 178,
                            "endLine": 178,
                            "startColumn": 71,
                            "endColumn": 78
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 178,
                            "endLine": 178,
                            "startColumn": 71,
                            "endColumn": 78
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 178,
                            "endLine": 178,
                            "startColumn": 106,
                            "endColumn": 107
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 178,
                            "endLine": 178,
                            "startColumn": 87,
                            "endColumn": 104
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1388,
                            "endLine": 1388,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 465,
                            "endLine": 465,
                            "startColumn": 108,
                            "endColumn": 128
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 14,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1407,
                            "endLine": 1407,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 946,
                            "endLine": 946,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 535,
                            "endLine": 535,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 536,
                            "endLine": 536,
                            "startColumn": 22,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 537,
                            "endLine": 537,
                            "startColumn": 86,
                            "endColumn": 92
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1414,
                            "endLine": 1414,
                            "startColumn": 22,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1415,
                            "endLine": 1415,
                            "startColumn": 8,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1094,
                            "endLine": 1094,
                            "startColumn": 18,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1420,
                            "endLine": 1420,
                            "startColumn": 11,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 819,
                            "endLine": 819,
                            "startColumn": 32,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 818,
                            "endLine": 818,
                            "startColumn": 10,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 818,
                            "endLine": 818,
                            "startColumn": 4,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1582,
                            "endLine": 1582,
                            "startColumn": 12,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1287,
                            "endLine": 1287,
                            "startColumn": 3,
                            "endColumn": 5
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1208,
                            "endLine": 1208,
                            "startColumn": 10,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1208,
                            "endLine": 1208,
                            "startColumn": 3,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1211,
                            "endLine": 1211,
                            "startColumn": 7,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1251,
                            "endLine": 1251,
                            "startColumn": 2,
                            "endColumn": 8
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1254,
                            "endLine": 1254,
                            "startColumn": 7,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1256,
                            "endLine": 1256,
                            "startColumn": 10,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1257,
                            "endLine": 1257,
                            "startColumn": 12,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1258,
                            "endLine": 1258,
                            "startColumn": 12,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 29,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1258,
                            "endLine": 1258,
                            "startColumn": 37,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 30,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1259,
                            "endLine": 1259,
                            "startColumn": 11,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 31,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1597,
                            "endLine": 1597,
                            "startColumn": 15,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 32,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1262,
                            "endLine": 1262,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 33,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1267,
                            "endLine": 1267,
                            "startColumn": 27,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 34,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1268,
                            "endLine": 1268,
                            "startColumn": 12,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 35,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1268,
                            "endLine": 1268,
                            "startColumn": 12,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 36,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1269,
                            "endLine": 1280,
                            "startColumn": 10,
                            "endColumn": 4
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 37,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1280,
                            "endLine": 1280,
                            "startColumn": 5,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 38,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1269,
                            "endLine": 1269,
                            "startColumn": 3,
                            "endColumn": 7
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 39,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1126,
                            "endLine": 1126,
                            "startColumn": 22,
                            "endColumn": 146
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 40,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1126,
                            "endLine": 1126,
                            "startColumn": 22,
                            "endColumn": 146
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 501,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              },
              {
                "label": true,
                "type": "commonlyFixed"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/DOMXSS/test",
          "ruleIndex": 5,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an exception flows into innerHTML, where it is used to dynamically construct the HTML page on client side. This may result in a DOM Based Cross-Site Scripting attack (DOMXSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to dynamically construct the HTML page on client side. This may result in a DOM Based Cross-Site Scripting attack (DOMXSS).",
            "arguments": [
              "[an exception](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39),(40),(41),(42),(43),(44),(45),(46),(47),(48),(49),(50),(51),(52),(53),(54),(55),(56),(57),(58),(59),(60),(61),(62),(63),(64),(65),(66),(67),(68),(69),(70),(71),(72),(73),(74),(75),(76),(77),(78),(79),(80),(81),(82),(83),(84),(85)",
              "[innerHTML](86)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1172,
                  "endLine": 1172,
                  "startColumn": 44,
                  "endColumn": 57
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3fba52c7e537c4348fd47b4c9625e155e50f11c451f861ec4023987cf0c4fed6",
            "1": "2d06e3d6.941f7e15.693cee93.d7919eeb.5c2b5c9d.dbe83c7e.f0256597.036c6bc7.08510d78.bf4464f1.7603686c.d3185418.3f452f8c.dbe83c7e.f0256597.9fed00c4"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 178,
                            "endLine": 178,
                            "startColumn": 71,
                            "endColumn": 78
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 178,
                            "endLine": 178,
                            "startColumn": 71,
                            "endColumn": 78
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 178,
                            "endLine": 178,
                            "startColumn": 106,
                            "endColumn": 107
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 178,
                            "endLine": 178,
                            "startColumn": 87,
                            "endColumn": 104
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1388,
                            "endLine": 1388,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 465,
                            "endLine": 465,
                            "startColumn": 108,
                            "endColumn": 128
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 14,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1407,
                            "endLine": 1407,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 946,
                            "endLine": 946,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 535,
                            "endLine": 535,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 536,
                            "endLine": 536,
                            "startColumn": 22,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 537,
                            "endLine": 537,
                            "startColumn": 86,
                            "endColumn": 92
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1414,
                            "endLine": 1414,
                            "startColumn": 22,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1415,
                            "endLine": 1415,
                            "startColumn": 8,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1295,
                            "endLine": 1295,
                            "startColumn": 4,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1295,
                            "endLine": 1295,
                            "startColumn": 19,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1293,
                            "endLine": 1296,
                            "startColumn": 20,
                            "endColumn": 4
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1296,
                            "endLine": 1296,
                            "startColumn": 5,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1293,
                            "endLine": 1293,
                            "startColumn": 12,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1293,
                            "endLine": 1293,
                            "startColumn": 3,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1290,
                            "endLine": 1290,
                            "startColumn": 35,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1290,
                            "endLine": 1290,
                            "startColumn": 63,
                            "endColumn": 71
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1295,
                            "endLine": 1295,
                            "startColumn": 4,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 819,
                            "endLine": 819,
                            "startColumn": 32,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1126,
                            "endLine": 1126,
                            "startColumn": 10,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1126,
                            "endLine": 1126,
                            "startColumn": 3,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1582,
                            "endLine": 1582,
                            "startColumn": 12,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1287,
                            "endLine": 1287,
                            "startColumn": 3,
                            "endColumn": 5
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1208,
                            "endLine": 1208,
                            "startColumn": 10,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 29,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1208,
                            "endLine": 1208,
                            "startColumn": 3,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 30,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1211,
                            "endLine": 1211,
                            "startColumn": 7,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 31,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1251,
                            "endLine": 1251,
                            "startColumn": 2,
                            "endColumn": 8
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 32,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1254,
                            "endLine": 1254,
                            "startColumn": 7,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 33,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1256,
                            "endLine": 1256,
                            "startColumn": 10,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 34,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1257,
                            "endLine": 1257,
                            "startColumn": 12,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 35,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1258,
                            "endLine": 1258,
                            "startColumn": 12,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 36,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1258,
                            "endLine": 1258,
                            "startColumn": 37,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 37,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1259,
                            "endLine": 1259,
                            "startColumn": 11,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 38,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1262,
                            "endLine": 1262,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 39,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1267,
                            "endLine": 1267,
                            "startColumn": 27,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 40,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1268,
                            "endLine": 1268,
                            "startColumn": 12,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 41,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1268,
                            "endLine": 1268,
                            "startColumn": 31,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 42,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1276,
                            "endLine": 1276,
                            "startColumn": 4,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 43,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1278,
                            "endLine": 1278,
                            "startColumn": 4,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 44,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1290,
                            "endLine": 1290,
                            "startColumn": 7,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 45,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1300,
                            "endLine": 1300,
                            "startColumn": 7,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 46,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1300,
                            "endLine": 1300,
                            "startColumn": 51,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 47,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1316,
                            "endLine": 1316,
                            "startColumn": 11,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 48,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1318,
                            "endLine": 1318,
                            "startColumn": 10,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 49,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1326,
                            "endLine": 1326,
                            "startColumn": 12,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 50,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1326,
                            "endLine": 1326,
                            "startColumn": 29,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 51,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1327,
                            "endLine": 1327,
                            "startColumn": 12,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 52,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1327,
                            "endLine": 1327,
                            "startColumn": 29,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 53,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1336,
                            "endLine": 1336,
                            "startColumn": 7,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 54,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1437,
                            "endLine": 1437,
                            "startColumn": 2,
                            "endColumn": 8
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 55,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1439,
                            "endLine": 1439,
                            "startColumn": 7,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 56,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1439,
                            "endLine": 1439,
                            "startColumn": 26,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 57,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1449,
                            "endLine": 1449,
                            "startColumn": 17,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 58,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1449,
                            "endLine": 1449,
                            "startColumn": 2,
                            "endColumn": 8
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 59,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1451,
                            "endLine": 1451,
                            "startColumn": 10,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 60,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1451,
                            "endLine": 1451,
                            "startColumn": 34,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 61,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1459,
                            "endLine": 1459,
                            "startColumn": 2,
                            "endColumn": 8
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 62,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1460,
                            "endLine": 1460,
                            "startColumn": 16,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 63,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1460,
                            "endLine": 1460,
                            "startColumn": 36,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 64,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1460,
                            "endLine": 1460,
                            "startColumn": 59,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 65,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 447,
                            "endLine": 447,
                            "startColumn": 8,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 66,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 488,
                            "endLine": 488,
                            "startColumn": 3,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 67,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 489,
                            "endLine": 489,
                            "startColumn": 3,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 68,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 491,
                            "endLine": 491,
                            "startColumn": 8,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 69,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 517,
                            "endLine": 517,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 70,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 525,
                            "endLine": 525,
                            "startColumn": 13,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 71,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 526,
                            "endLine": 526,
                            "startColumn": 11,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 72,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1597,
                            "endLine": 1597,
                            "startColumn": 15,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 73,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 956,
                            "endLine": 956,
                            "startColumn": 3,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 74,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 916,
                            "endLine": 916,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 75,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 922,
                            "endLine": 922,
                            "startColumn": 13,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 76,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 969,
                            "endLine": 969,
                            "startColumn": 5,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 77,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 968,
                            "endLine": 968,
                            "startColumn": 4,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 78,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 986,
                            "endLine": 986,
                            "startColumn": 4,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 79,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 987,
                            "endLine": 987,
                            "startColumn": 81,
                            "endColumn": 87
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 80,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 987,
                            "endLine": 987,
                            "startColumn": 69,
                            "endColumn": 79
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 81,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1094,
                            "endLine": 1094,
                            "startColumn": 18,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 82,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1420,
                            "endLine": 1420,
                            "startColumn": 11,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 83,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1093,
                            "endLine": 1093,
                            "startColumn": 39,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 84,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1089,
                            "endLine": 1089,
                            "startColumn": 3,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 85,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1172,
                            "endLine": 1172,
                            "startColumn": 44,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 86,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1172,
                            "endLine": 1172,
                            "startColumn": 44,
                            "endColumn": 57
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 501,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              },
              {
                "label": true,
                "type": "commonlyFixed"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/DOMXSS/test",
          "ruleIndex": 5,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an exception flows into innerHTML, where it is used to dynamically construct the HTML page on client side. This may result in a DOM Based Cross-Site Scripting attack (DOMXSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to dynamically construct the HTML page on client side. This may result in a DOM Based Cross-Site Scripting attack (DOMXSS).",
            "arguments": [
              "[an exception](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39),(40),(41),(42),(43),(44),(45),(46),(47),(48),(49),(50),(51),(52),(53),(54),(55),(56),(57),(58),(59),(60),(61),(62),(63),(64),(65),(66),(67),(68),(69),(70),(71),(72),(73),(74),(75),(76),(77),(78),(79),(80),(81),(82),(83),(84),(85),(86)",
              "[innerHTML](87)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1189,
                  "endLine": 1189,
                  "startColumn": 29,
                  "endColumn": 45
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a76832e53a6b3a681094984ebf8612cc8387a52426db412b1f464c560af17a3c",
            "1": "2d06e3d6.5a267ca1.693cee93.cd16a919.5c2b5c9d.dbe83c7e.f0256597.9bc872dd.08510d78.bf4464f1.7603686c.d3185418.3f452f8c.dbe83c7e.f0256597.9fed00c4"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 178,
                            "endLine": 178,
                            "startColumn": 71,
                            "endColumn": 78
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 178,
                            "endLine": 178,
                            "startColumn": 71,
                            "endColumn": 78
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 178,
                            "endLine": 178,
                            "startColumn": 106,
                            "endColumn": 107
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 178,
                            "endLine": 178,
                            "startColumn": 87,
                            "endColumn": 104
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1388,
                            "endLine": 1388,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 465,
                            "endLine": 465,
                            "startColumn": 108,
                            "endColumn": 128
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 14,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1407,
                            "endLine": 1407,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 946,
                            "endLine": 946,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 535,
                            "endLine": 535,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 536,
                            "endLine": 536,
                            "startColumn": 22,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 537,
                            "endLine": 537,
                            "startColumn": 86,
                            "endColumn": 92
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1414,
                            "endLine": 1414,
                            "startColumn": 22,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1415,
                            "endLine": 1415,
                            "startColumn": 8,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1295,
                            "endLine": 1295,
                            "startColumn": 4,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1295,
                            "endLine": 1295,
                            "startColumn": 19,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1293,
                            "endLine": 1296,
                            "startColumn": 20,
                            "endColumn": 4
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1296,
                            "endLine": 1296,
                            "startColumn": 5,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1293,
                            "endLine": 1293,
                            "startColumn": 12,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1293,
                            "endLine": 1293,
                            "startColumn": 3,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1290,
                            "endLine": 1290,
                            "startColumn": 35,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1290,
                            "endLine": 1290,
                            "startColumn": 63,
                            "endColumn": 71
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1295,
                            "endLine": 1295,
                            "startColumn": 4,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 819,
                            "endLine": 819,
                            "startColumn": 32,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1126,
                            "endLine": 1126,
                            "startColumn": 10,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1126,
                            "endLine": 1126,
                            "startColumn": 3,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1582,
                            "endLine": 1582,
                            "startColumn": 12,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1287,
                            "endLine": 1287,
                            "startColumn": 3,
                            "endColumn": 5
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1208,
                            "endLine": 1208,
                            "startColumn": 10,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 29,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1208,
                            "endLine": 1208,
                            "startColumn": 3,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 30,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1211,
                            "endLine": 1211,
                            "startColumn": 7,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 31,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1251,
                            "endLine": 1251,
                            "startColumn": 2,
                            "endColumn": 8
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 32,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1254,
                            "endLine": 1254,
                            "startColumn": 7,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 33,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1256,
                            "endLine": 1256,
                            "startColumn": 10,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 34,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1257,
                            "endLine": 1257,
                            "startColumn": 12,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 35,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1258,
                            "endLine": 1258,
                            "startColumn": 12,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 36,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1258,
                            "endLine": 1258,
                            "startColumn": 37,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 37,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1259,
                            "endLine": 1259,
                            "startColumn": 11,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 38,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1262,
                            "endLine": 1262,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 39,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1267,
                            "endLine": 1267,
                            "startColumn": 27,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 40,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1268,
                            "endLine": 1268,
                            "startColumn": 12,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 41,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1268,
                            "endLine": 1268,
                            "startColumn": 31,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 42,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1276,
                            "endLine": 1276,
                            "startColumn": 4,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 43,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1278,
                            "endLine": 1278,
                            "startColumn": 4,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 44,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1290,
                            "endLine": 1290,
                            "startColumn": 7,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 45,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1300,
                            "endLine": 1300,
                            "startColumn": 7,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 46,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1300,
                            "endLine": 1300,
                            "startColumn": 51,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 47,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1316,
                            "endLine": 1316,
                            "startColumn": 11,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 48,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1318,
                            "endLine": 1318,
                            "startColumn": 10,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 49,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1326,
                            "endLine": 1326,
                            "startColumn": 12,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 50,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1326,
                            "endLine": 1326,
                            "startColumn": 29,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 51,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1327,
                            "endLine": 1327,
                            "startColumn": 12,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 52,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1327,
                            "endLine": 1327,
                            "startColumn": 29,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 53,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1336,
                            "endLine": 1336,
                            "startColumn": 7,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 54,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1437,
                            "endLine": 1437,
                            "startColumn": 2,
                            "endColumn": 8
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 55,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1439,
                            "endLine": 1439,
                            "startColumn": 7,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 56,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1439,
                            "endLine": 1439,
                            "startColumn": 26,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 57,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1449,
                            "endLine": 1449,
                            "startColumn": 17,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 58,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1449,
                            "endLine": 1449,
                            "startColumn": 2,
                            "endColumn": 8
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 59,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1451,
                            "endLine": 1451,
                            "startColumn": 10,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 60,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1451,
                            "endLine": 1451,
                            "startColumn": 34,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 61,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1459,
                            "endLine": 1459,
                            "startColumn": 2,
                            "endColumn": 8
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 62,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1460,
                            "endLine": 1460,
                            "startColumn": 16,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 63,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1460,
                            "endLine": 1460,
                            "startColumn": 36,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 64,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1460,
                            "endLine": 1460,
                            "startColumn": 59,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 65,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 447,
                            "endLine": 447,
                            "startColumn": 8,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 66,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 488,
                            "endLine": 488,
                            "startColumn": 3,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 67,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 489,
                            "endLine": 489,
                            "startColumn": 3,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 68,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 491,
                            "endLine": 491,
                            "startColumn": 8,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 69,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 517,
                            "endLine": 517,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 70,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 525,
                            "endLine": 525,
                            "startColumn": 13,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 71,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 526,
                            "endLine": 526,
                            "startColumn": 11,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 72,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1597,
                            "endLine": 1597,
                            "startColumn": 15,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 73,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 956,
                            "endLine": 956,
                            "startColumn": 3,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 74,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 916,
                            "endLine": 916,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 75,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 922,
                            "endLine": 922,
                            "startColumn": 13,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 76,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 969,
                            "endLine": 969,
                            "startColumn": 5,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 77,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 968,
                            "endLine": 968,
                            "startColumn": 4,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 78,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 986,
                            "endLine": 986,
                            "startColumn": 4,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 79,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 987,
                            "endLine": 987,
                            "startColumn": 81,
                            "endColumn": 87
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 80,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 987,
                            "endLine": 987,
                            "startColumn": 69,
                            "endColumn": 79
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 81,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1113,
                            "endLine": 1113,
                            "startColumn": 11,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 82,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1420,
                            "endLine": 1420,
                            "startColumn": 11,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 83,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1111,
                            "endLine": 1111,
                            "startColumn": 44,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 84,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1111,
                            "endLine": 1111,
                            "startColumn": 4,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 85,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1115,
                            "endLine": 1115,
                            "startColumn": 2,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 86,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1189,
                            "endLine": 1189,
                            "startColumn": 29,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 87,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1189,
                            "endLine": 1189,
                            "startColumn": 29,
                            "endColumn": 45
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 501,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              },
              {
                "label": true,
                "type": "commonlyFixed"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/DOMXSS/test",
          "ruleIndex": 5,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an exception flows into innerHTML, where it is used to dynamically construct the HTML page on client side. This may result in a DOM Based Cross-Site Scripting attack (DOMXSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to dynamically construct the HTML page on client side. This may result in a DOM Based Cross-Site Scripting attack (DOMXSS).",
            "arguments": [
              "[an exception](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39)",
              "[innerHTML](40)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1287,
                  "endLine": 1287,
                  "startColumn": 40,
                  "endColumn": 44
                }
              }
            }
          ],
          "fingerprints": {
            "0": "75b2575b5b04e90bd29afc1ff4cc9547d9562de03b74d0c7f50af7b6c4d3312c",
            "1": "2d06e3d6.4773f344.6bb8eed2.d7919eeb.d3b893ab.dbe83c7e.cd61fc56.545e9171.08510d78.bf4464f1.7603686c.d3185418.3f452f8c.dbe83c7e.f0256597.9fed00c4"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 178,
                            "endLine": 178,
                            "startColumn": 71,
                            "endColumn": 78
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 178,
                            "endLine": 178,
                            "startColumn": 71,
                            "endColumn": 78
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 178,
                            "endLine": 178,
                            "startColumn": 106,
                            "endColumn": 107
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 178,
                            "endLine": 178,
                            "startColumn": 87,
                            "endColumn": 104
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1388,
                            "endLine": 1388,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 465,
                            "endLine": 465,
                            "startColumn": 108,
                            "endColumn": 128
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 14,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1407,
                            "endLine": 1407,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 946,
                            "endLine": 946,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 535,
                            "endLine": 535,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 536,
                            "endLine": 536,
                            "startColumn": 22,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 537,
                            "endLine": 537,
                            "startColumn": 86,
                            "endColumn": 92
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1414,
                            "endLine": 1414,
                            "startColumn": 22,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1415,
                            "endLine": 1415,
                            "startColumn": 8,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1094,
                            "endLine": 1094,
                            "startColumn": 18,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1420,
                            "endLine": 1420,
                            "startColumn": 11,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 819,
                            "endLine": 819,
                            "startColumn": 32,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1126,
                            "endLine": 1126,
                            "startColumn": 10,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1126,
                            "endLine": 1126,
                            "startColumn": 3,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1582,
                            "endLine": 1582,
                            "startColumn": 12,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1287,
                            "endLine": 1287,
                            "startColumn": 3,
                            "endColumn": 5
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1208,
                            "endLine": 1208,
                            "startColumn": 10,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1208,
                            "endLine": 1208,
                            "startColumn": 3,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1211,
                            "endLine": 1211,
                            "startColumn": 7,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1597,
                            "endLine": 1597,
                            "startColumn": 15,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 956,
                            "endLine": 956,
                            "startColumn": 3,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 916,
                            "endLine": 916,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 963,
                            "endLine": 963,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1587,
                            "endLine": 1587,
                            "startColumn": 3,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 29,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1057,
                            "endLine": 1057,
                            "startColumn": 2,
                            "endColumn": 8
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 30,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1251,
                            "endLine": 1251,
                            "startColumn": 2,
                            "endColumn": 8
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 31,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1254,
                            "endLine": 1254,
                            "startColumn": 7,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 32,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1262,
                            "endLine": 1262,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 33,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1267,
                            "endLine": 1267,
                            "startColumn": 27,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 34,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1268,
                            "endLine": 1268,
                            "startColumn": 12,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 35,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1268,
                            "endLine": 1268,
                            "startColumn": 12,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 36,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1269,
                            "endLine": 1280,
                            "startColumn": 10,
                            "endColumn": 4
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 37,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1280,
                            "endLine": 1280,
                            "startColumn": 5,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 38,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1269,
                            "endLine": 1269,
                            "startColumn": 3,
                            "endColumn": 7
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 39,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1287,
                            "endLine": 1287,
                            "startColumn": 40,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 40,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1287,
                            "endLine": 1287,
                            "startColumn": 40,
                            "endColumn": 44
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 501,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              },
              {
                "label": true,
                "type": "commonlyFixed"
              }
            ]
          }
        },
        {
          "ruleId": "java/ReturnsPassword",
          "ruleIndex": 6,
          "level": "warning",
          "message": {
            "text": "An attacker might be able to detect the value of the password due to the exposure of comparison timing. When the functions Arrays.equals() or String.equals() are called, they will exit earlier if fewer bytes are matched. Use password encoder such as BCrypt for comparing passwords.",
            "markdown": "An attacker might be able to detect the value of the password due to the exposure of comparison timing. When the functions Arrays.equals() or String.equals() are called, they will exit earlier if fewer bytes are matched. Use password encoder such as BCrypt for comparing passwords.",
            "arguments": []
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "common/lib/src/main/java/org/apache/syncope/common/lib/AnyOperations.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 264,
                  "endLine": 264,
                  "startColumn": 56,
                  "endColumn": 76
                }
              }
            }
          ],
          "fingerprints": {
            "0": "eb0d8234045cce36c3b04e70c9522ff40977939b6b20d66782f97e8c7416d00c",
            "1": "524d7e3a.02e6f4cd.f0ccf3e9.9998adc9.dd06b926.e4d7b7ac.53690dc9.121c2b24.524d7e3a.02e6f4cd.f0ccf3e9.9998adc9.dd06b926.e4d7b7ac.53690dc9.b732d57d"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "common/lib/src/main/java/org/apache/syncope/common/lib/AnyOperations.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 264,
                            "endLine": 264,
                            "startColumn": 56,
                            "endColumn": 76
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/ReturnsPassword",
          "ruleIndex": 6,
          "level": "warning",
          "message": {
            "text": "An attacker might be able to detect the value of the password due to the exposure of comparison timing. When the functions Arrays.equals() or String.equals() are called, they will exit earlier if fewer bytes are matched. Use password encoder such as BCrypt for comparing passwords.",
            "markdown": "An attacker might be able to detect the value of the password due to the exposure of comparison timing. When the functions Arrays.equals() or String.equals() are called, they will exit earlier if fewer bytes are matched. Use password encoder such as BCrypt for comparing passwords.",
            "arguments": []
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fit/build-tools/src/main/java/org/apache/syncope/fit/buildtools/cxf/UserServiceImpl.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 101,
                  "endLine": 101,
                  "startColumn": 53,
                  "endColumn": 74
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5743e6905c4e2d848f7a652ec48b31b6d2a09275a81a9b7179982b69dcc4ebc8",
            "1": "c90cb73f.7f413d6f.71a71d19.9998adc9.dd06b926.dd62fee0.5b1ccecb.87dfd8cc.c90cb73f.7f413d6f.71a71d19.9998adc9.dd06b926.dd62fee0.5b1ccecb.1d874c72"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "fit/build-tools/src/main/java/org/apache/syncope/fit/buildtools/cxf/UserServiceImpl.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 101,
                            "endLine": 101,
                            "startColumn": 53,
                            "endColumn": 74
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 501,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/OR",
          "ruleIndex": 7,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from the request URL flows into setHeader, where it is used as an URL to redirect the user. This may result in an Open Redirect vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as an URL to redirect the user. This may result in an Open Redirect vulnerability.",
            "arguments": [
              "[the request URL](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19)",
              "[setHeader](20)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Login.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 50,
                  "endLine": 50,
                  "startColumn": 13,
                  "endColumn": 20
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b368d1bd61ee95c21cffb9b9977c53742b038efd5096d371efe83c05846e3040",
            "1": "862b262c.1cbd3ff4.c1299410.a398a1f2.6c69ab4e.aadfed46.ece99fb3.54d46e25.862b262c.9f996d4c.c1299410.e22980a8.53e0e770.95df3f17.ece99fb3.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Login.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 48,
                            "endLine": 48,
                            "startColumn": 49,
                            "endColumn": 70
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Login.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 48,
                            "endLine": 48,
                            "startColumn": 49,
                            "endColumn": 70
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Login.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 48,
                            "endLine": 48,
                            "startColumn": 49,
                            "endColumn": 81
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Login.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 48,
                            "endLine": 48,
                            "startColumn": 21,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Login.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 47,
                            "endLine": 47,
                            "startColumn": 40,
                            "endColumn": 101
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Login.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 47,
                            "endLine": 47,
                            "startColumn": 28,
                            "endColumn": 102
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Login.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 50,
                            "endLine": 50,
                            "startColumn": 31,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 46,
                            "endLine": 46,
                            "startColumn": 64,
                            "endColumn": 94
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 17,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 51,
                            "endLine": 51,
                            "startColumn": 52,
                            "endColumn": 61
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 51,
                            "endLine": 51,
                            "startColumn": 52,
                            "endColumn": 82
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 51,
                            "endLine": 51,
                            "startColumn": 33,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 51,
                            "endLine": 51,
                            "startColumn": 28,
                            "endColumn": 85
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 52,
                            "endLine": 52,
                            "startColumn": 17,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 53,
                            "endLine": 53,
                            "startColumn": 17,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 17,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 55,
                            "endLine": 55,
                            "startColumn": 17,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 48,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 48,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 48,
                            "endColumn": 72
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 17,
                            "endColumn": 35
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/OR",
          "ruleIndex": 7,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from the request URL flows into setHeader, where it is used as an URL to redirect the user. This may result in an Open Redirect vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as an URL to redirect the user. This may result in an Open Redirect vulnerability.",
            "arguments": [
              "[the request URL](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19)",
              "[setHeader](20)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Logout.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 99,
                  "endLine": 99,
                  "startColumn": 17,
                  "endColumn": 24
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c969fda846ce747c07abdb7fe8b4e2633798830e6f24a169cf0c465441229e91",
            "1": "862b262c.1cbd3ff4.c1299410.a398a1f2.6c69ab4e.aadfed46.ece99fb3.54d46e25.862b262c.9f996d4c.e0eaa42c.e22980a8.d31a8364.aadfed46.ece99fb3.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Logout.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 97,
                            "endLine": 97,
                            "startColumn": 53,
                            "endColumn": 74
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Logout.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 97,
                            "endLine": 97,
                            "startColumn": 53,
                            "endColumn": 74
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Logout.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 97,
                            "endLine": 97,
                            "startColumn": 53,
                            "endColumn": 85
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Logout.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 97,
                            "endLine": 97,
                            "startColumn": 25,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Logout.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 96,
                            "endLine": 96,
                            "startColumn": 44,
                            "endColumn": 103
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Logout.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 96,
                            "endLine": 96,
                            "startColumn": 32,
                            "endColumn": 101
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Logout.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 99,
                            "endLine": 99,
                            "startColumn": 35,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 46,
                            "endLine": 46,
                            "startColumn": 64,
                            "endColumn": 94
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 17,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 51,
                            "endLine": 51,
                            "startColumn": 52,
                            "endColumn": 61
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 51,
                            "endLine": 51,
                            "startColumn": 52,
                            "endColumn": 82
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 51,
                            "endLine": 51,
                            "startColumn": 33,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 51,
                            "endLine": 51,
                            "startColumn": 28,
                            "endColumn": 85
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 52,
                            "endLine": 52,
                            "startColumn": 17,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 53,
                            "endLine": 53,
                            "startColumn": 17,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 17,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 55,
                            "endLine": 55,
                            "startColumn": 17,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 48,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 48,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 48,
                            "endColumn": 72
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 17,
                            "endColumn": 35
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/XSS",
          "ruleIndex": 8,
          "level": "error",
          "message": {
            "text": "Unsanitized input from the request URL flows into write, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "arguments": [
              "[the request URL](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13)",
              "[write](14)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Login.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 50,
                  "endLine": 50,
                  "startColumn": 13,
                  "endColumn": 20
                }
              }
            }
          ],
          "fingerprints": {
            "0": "64996e538a81cbea6c29cb845f2bef394cccca81292afd57a5ab4d35876244ac",
            "1": "862b262c.1cbd3ff4.c1299410.a398a1f2.6c69ab4e.aadfed46.ece99fb3.54d46e25.862b262c.9f996d4c.c1299410.e22980a8.53e0e770.95df3f17.ece99fb3.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Login.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 48,
                            "endLine": 48,
                            "startColumn": 49,
                            "endColumn": 70
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Login.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 48,
                            "endLine": 48,
                            "startColumn": 49,
                            "endColumn": 70
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Login.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 48,
                            "endLine": 48,
                            "startColumn": 49,
                            "endColumn": 81
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Login.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 48,
                            "endLine": 48,
                            "startColumn": 21,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Login.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 47,
                            "endLine": 47,
                            "startColumn": 40,
                            "endColumn": 101
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Login.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 47,
                            "endLine": 47,
                            "startColumn": 28,
                            "endColumn": 102
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Login.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 50,
                            "endLine": 50,
                            "startColumn": 31,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 46,
                            "endLine": 46,
                            "startColumn": 64,
                            "endColumn": 94
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 17,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 67,
                            "endLine": 67,
                            "startColumn": 49,
                            "endColumn": 58
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 69,
                            "endLine": 69,
                            "startColumn": 50,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 50,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 50,
                            "endColumn": 73
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 64,
                            "endLine": 64,
                            "startColumn": 44,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 64,
                            "endLine": 64,
                            "startColumn": 17,
                            "endColumn": 43
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 801,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/XSS",
          "ruleIndex": 8,
          "level": "error",
          "message": {
            "text": "Unsanitized input from the request URL flows into write, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "arguments": [
              "[the request URL](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13)",
              "[write](14)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Logout.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 99,
                  "endLine": 99,
                  "startColumn": 17,
                  "endColumn": 24
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e1ad611fb8cd59891cdf471f0db13a87ff4da5e5226597db1e7d30cbdf5dc4af",
            "1": "862b262c.1cbd3ff4.c1299410.a398a1f2.6c69ab4e.aadfed46.ece99fb3.54d46e25.862b262c.9f996d4c.e0eaa42c.e22980a8.d31a8364.aadfed46.ece99fb3.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Logout.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 97,
                            "endLine": 97,
                            "startColumn": 53,
                            "endColumn": 74
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Logout.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 97,
                            "endLine": 97,
                            "startColumn": 53,
                            "endColumn": 74
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Logout.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 97,
                            "endLine": 97,
                            "startColumn": 53,
                            "endColumn": 85
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Logout.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 97,
                            "endLine": 97,
                            "startColumn": 25,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Logout.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 96,
                            "endLine": 96,
                            "startColumn": 44,
                            "endColumn": 103
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Logout.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 96,
                            "endLine": 96,
                            "startColumn": 32,
                            "endColumn": 101
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Logout.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 99,
                            "endLine": 99,
                            "startColumn": 35,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 46,
                            "endLine": 46,
                            "startColumn": 64,
                            "endColumn": 94
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 17,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 67,
                            "endLine": 67,
                            "startColumn": 49,
                            "endColumn": 58
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 69,
                            "endLine": 69,
                            "startColumn": 50,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 50,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 50,
                            "endColumn": 73
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 64,
                            "endLine": 64,
                            "startColumn": 44,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AbstractSAML2SPServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 64,
                            "endLine": 64,
                            "startColumn": 17,
                            "endColumn": 43
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 801,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/TooSmallRsaKeySizeUsed/test",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "Key size of 1024 bits used in initialize is considered insecure for RSA. Use a key with at least 2048 bits.",
            "markdown": "Key size of {0} bits used in {1} is considered insecure for RSA. Use a key with at least 2048 bits.",
            "arguments": [
              "[1024](0)",
              "[initialize](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/SAML2ITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 530,
                  "endLine": 530,
                  "startColumn": 9,
                  "endColumn": 36
                }
              }
            }
          ],
          "fingerprints": {
            "0": "9c46b1e0f84262cd008ccc9b90d9c1ca1587962fba957114d3b830d5f10fb0b5",
            "1": "19689298.83dbfe52.f9fce1b0.e22980a8.c2f26574.cef4478f.94e10d1f.54d46e25.19689298.1cbd3ff4.f9fce1b0.8f744b73.c2f26574.cef4478f.94e10d1f.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/SAML2ITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 530,
                            "endLine": 530,
                            "startColumn": 37,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/SAML2ITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 530,
                            "endLine": 530,
                            "startColumn": 9,
                            "endColumn": 36
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/PullTaskITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 199,
                  "endLine": 199,
                  "startColumn": 9,
                  "endColumn": 29
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7f561cb81df3571aae85aa008f721ff60a0a909775de80981bdc278b09151721",
            "1": "5387ee68.e8c02a15.fc7d5400.e22980a8.e2f68b26.935029da.94b7b297.fde7589e.5387ee68.e8c02a15.fc7d5400.e22980a8.e2f68b26.935029da.94b7b297.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/PullTaskITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 199,
                            "endLine": 199,
                            "startColumn": 30,
                            "endColumn": 43
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 406,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/PullTaskITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 644,
                  "endLine": 644,
                  "startColumn": 9,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8648e928a8601b1e20b026d70b3b8797bba36233fcb30e65fbb8db77688e2480",
            "1": "c9d43d39.e8c02a15.fc7d5400.e22980a8.e2f68b26.935029da.94b7b297.fde7589e.c9d43d39.e8c02a15.fc7d5400.e22980a8.e2f68b26.935029da.94b7b297.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/PullTaskITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 644,
                            "endLine": 644,
                            "startColumn": 28,
                            "endColumn": 41
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 406,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/PullTaskITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 842,
                  "endLine": 842,
                  "startColumn": 9,
                  "endColumn": 29
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f8db0aecac01547c150b381a0ec31b6ae1a33318479f09d34ea7ce3a00165dc7",
            "1": "19689298.df846294.7a8afdd4.1b8e61cd.75e62e70.935029da.64c9ca4b.fde7589e.19689298.df846294.7a8afdd4.1b8e61cd.75e62e70.935029da.64c9ca4b.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/PullTaskITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 842,
                            "endLine": 842,
                            "startColumn": 30,
                            "endColumn": 45
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 406,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/PullTaskITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 868,
                  "endLine": 868,
                  "startColumn": 9,
                  "endColumn": 25
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8c6ee1cc60c36b8f255a43281825992efbd5aa094da0e4c1506f8127a0c6a2de",
            "1": "6cdf77a6.e8c02a15.23ea54dd.e22980a8.0bf67f0b.4e1269f6.498ce792.fde7589e.6cdf77a6.e8c02a15.23ea54dd.e22980a8.0bf67f0b.4e1269f6.498ce792.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/PullTaskITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 868,
                            "endLine": 868,
                            "startColumn": 26,
                            "endColumn": 39
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 406,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/PullTaskITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 930,
                  "endLine": 930,
                  "startColumn": 13,
                  "endColumn": 29
                }
              }
            }
          ],
          "fingerprints": {
            "0": "55cfa6e43ef1b07169806056f605b92f95fa4050380fa0b68727c3e66c421307",
            "1": "5387ee68.e8c02a15.33fa5dbe.e22980a8.d31a8364.7fda7c5e.bae646e8.fde7589e.19689298.e8c02a15.33fa5dbe.e22980a8.d31a8364.7fda7c5e.bae646e8.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/PullTaskITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 928,
                            "endLine": 928,
                            "startColumn": 39,
                            "endColumn": 52
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 406,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/ExceptionMapperITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 81,
                  "endLine": 81,
                  "startColumn": 9,
                  "endColumn": 28
                }
              }
            }
          ],
          "fingerprints": {
            "0": "56ced7ab12efdf4aa166320e706d64f143e055f371548f14c0688b7dfee1e7bc",
            "1": "5387ee68.e8c02a15.fc7d5400.e22980a8.f1d9f854.935029da.94b7b297.fde7589e.5387ee68.e8c02a15.fc7d5400.e22980a8.f1d9f854.935029da.94b7b297.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/ExceptionMapperITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 81,
                            "endLine": 81,
                            "startColumn": 29,
                            "endColumn": 42
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 406,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/ExceptionMapperITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 96,
                  "endLine": 96,
                  "startColumn": 9,
                  "endColumn": 28
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0d1238986b2c07f150f05c9d99375495584d0312539024c64810d1066989688b",
            "1": "5387ee68.e8c02a15.fc7d5400.e22980a8.f1d9f854.935029da.94b7b297.fde7589e.5387ee68.e8c02a15.fc7d5400.e22980a8.f1d9f854.935029da.94b7b297.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/ExceptionMapperITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 96,
                            "endLine": 96,
                            "startColumn": 29,
                            "endColumn": 42
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 406,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/ExceptionMapperITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 142,
                  "endLine": 142,
                  "startColumn": 9,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d0234a1961aba5330767ff6e174d132d0c36d24aaf700e46a7f3585e669a5e70",
            "1": "5387ee68.e8c02a15.fc7d5400.e22980a8.f1d9f854.ada8aa50.13b08e16.fde7589e.5387ee68.e8c02a15.fc7d5400.e22980a8.f1d9f854.ada8aa50.13b08e16.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/ExceptionMapperITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 142,
                            "endLine": 142,
                            "startColumn": 28,
                            "endColumn": 41
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 406,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/DynRealmITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 122,
                  "endLine": 122,
                  "startColumn": 13,
                  "endColumn": 38
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8af2b740c8eeb7f7980763e5e74dfa9e5b81b462a0eef2e0ae190ab8fb1a6ebc",
            "1": "f4c789dc.e8c02a15.23ea54dd.e22980a8.d31a8364.935029da.bae646e8.fde7589e.f4c789dc.e8c02a15.23ea54dd.e22980a8.d31a8364.935029da.bae646e8.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/DynRealmITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 122,
                            "endLine": 122,
                            "startColumn": 39,
                            "endColumn": 52
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 406,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 105,
                  "endLine": 105,
                  "startColumn": 9,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "9fe173afcd1b0dc6162e74e96c4980a37a31928abfa79a510da1c8a5bd2ac6e5",
            "1": "5387ee68.69e6637c.fc7d5400.e22980a8.e2f68b26.d57658f9.94b7b297.fde7589e.5387ee68.69e6637c.fc7d5400.e22980a8.e2f68b26.d57658f9.94b7b297.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 105,
                            "endLine": 105,
                            "startColumn": 28,
                            "endColumn": 41
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 406,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 124,
                  "endLine": 124,
                  "startColumn": 9,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "04f8a02b2de2d0146cc6c8bab244185db6267ffea69ddadde1176d96bcb06683",
            "1": "19689298.52ea4e90.fc7d5400.e22980a8.7aea3353.66846dd3.365649ed.fde7589e.19689298.52ea4e90.fc7d5400.e22980a8.7aea3353.66846dd3.365649ed.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 124,
                            "endLine": 124,
                            "startColumn": 28,
                            "endColumn": 41
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 406,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 145,
                  "endLine": 145,
                  "startColumn": 9,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c553f2bfa2591e3c97342e90e54f6e2ec9bb2cecf2b770ea443c4b0c7d331755",
            "1": "5387ee68.e8c02a15.fc7d5400.e22980a8.75e62e70.935029da.be04624c.fde7589e.5387ee68.e8c02a15.fc7d5400.e22980a8.75e62e70.935029da.be04624c.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 145,
                            "endLine": 145,
                            "startColumn": 28,
                            "endColumn": 43
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 406,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 182,
                  "endLine": 182,
                  "startColumn": 13,
                  "endColumn": 31
                }
              }
            }
          ],
          "fingerprints": {
            "0": "4738fa24b75dd086c1d6a86e7e147337ffc18d47a86c05dd7f037c14b43281cf",
            "1": "5387ee68.e8c02a15.33fa5dbe.e22980a8.d31a8364.7fda7c5e.bae646e8.fde7589e.5387ee68.e8c02a15.33fa5dbe.e22980a8.d31a8364.7fda7c5e.bae646e8.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 182,
                            "endLine": 182,
                            "startColumn": 32,
                            "endColumn": 47
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 406,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 214,
                  "endLine": 214,
                  "startColumn": 9,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c57ce6b55036b433f4a97569927d5702552eb4dc171063f753bff73162125956",
            "1": "19689298.e8c02a15.dc5b7594.e22980a8.3cfce590.935029da.0cd958bf.fde7589e.19689298.e8c02a15.dc5b7594.e22980a8.3cfce590.935029da.0cd958bf.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 214,
                            "endLine": 214,
                            "startColumn": 28,
                            "endColumn": 34
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 406,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 232,
                  "endLine": 232,
                  "startColumn": 9,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b92e932f7873111ce79a705144b82b938eac6209d08fd933a88e73a3ab8363db",
            "1": "19689298.e8c02a15.7ddbc572.e22980a8.bdc892fe.935029da.be04624c.fde7589e.19689298.e8c02a15.7ddbc572.e22980a8.bdc892fe.935029da.be04624c.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 232,
                            "endLine": 232,
                            "startColumn": 28,
                            "endColumn": 39
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 406,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 242,
                  "endLine": 242,
                  "startColumn": 9,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f2e01970a0b87facdd90a9cc6f9f9db735b1f4ac1d83999b9e9a0fafbf748316",
            "1": "19689298.e8c02a15.7ddbc572.5373c67d.bdc892fe.935029da.c720394e.fde7589e.19689298.e8c02a15.7ddbc572.5373c67d.bdc892fe.935029da.c720394e.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 242,
                            "endLine": 242,
                            "startColumn": 28,
                            "endColumn": 39
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 406,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserIssuesITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 101,
                  "endLine": 101,
                  "startColumn": 9,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "310426ea5d09159f184ef81e35118e937bbf9e0e40f8badaf048753f87344ace",
            "1": "5387ee68.e8c02a15.374cb727.e22980a8.911debcd.935029da.94b7b297.fde7589e.5387ee68.e8c02a15.374cb727.e22980a8.911debcd.935029da.94b7b297.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserIssuesITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 101,
                            "endLine": 101,
                            "startColumn": 28,
                            "endColumn": 41
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 406,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserIssuesITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 376,
                  "endLine": 376,
                  "startColumn": 9,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a919acae9e54a364b260cf961d0978e90fe38c27e16e164e73ad9e16ad7c8617",
            "1": "19689298.e8c02a15.9c5585f0.e22980a8.3cfce590.935029da.ab413d37.fde7589e.19689298.e8c02a15.9c5585f0.e22980a8.3cfce590.935029da.ab413d37.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserIssuesITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 376,
                            "endLine": 376,
                            "startColumn": 28,
                            "endColumn": 38
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 406,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserIssuesITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 767,
                  "endLine": 767,
                  "startColumn": 9,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "75642e0e0eeec80a6bc7ef1d5797bc95b9907c6e391d2aef6bb67784e89413b5",
            "1": "5387ee68.e8c02a15.fc7d5400.e22980a8.f1d9f854.935029da.94b7b297.fde7589e.5387ee68.e8c02a15.fc7d5400.e22980a8.f1d9f854.935029da.94b7b297.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserIssuesITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 767,
                            "endLine": 767,
                            "startColumn": 28,
                            "endColumn": 41
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 406,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserIssuesITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 972,
                  "endLine": 972,
                  "startColumn": 9,
                  "endColumn": 25
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e1358f068516e808296bbf90ff468dd45c154ac7430c7ff7ed729b2e6e3b17cd",
            "1": "19689298.e8c02a15.23ea54dd.e22980a8.0bf67f0b.4e1269f6.498ce792.fde7589e.19689298.e8c02a15.23ea54dd.e22980a8.0bf67f0b.4e1269f6.498ce792.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserIssuesITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 972,
                            "endLine": 972,
                            "startColumn": 26,
                            "endColumn": 39
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 406,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserIssuesITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1012,
                  "endLine": 1012,
                  "startColumn": 9,
                  "endColumn": 25
                }
              }
            }
          ],
          "fingerprints": {
            "0": "70f49ef816120dd6fcb6c3e9c2ce8be3dce3644f9276cf3a78047c924030476d",
            "1": "19689298.e8c02a15.23ea54dd.e22980a8.0bf67f0b.4e1269f6.498ce792.fde7589e.19689298.e8c02a15.23ea54dd.e22980a8.0bf67f0b.4e1269f6.498ce792.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserIssuesITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1012,
                            "endLine": 1012,
                            "startColumn": 26,
                            "endColumn": 39
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 406,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserIssuesITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1091,
                  "endLine": 1091,
                  "startColumn": 9,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b3aede49a30f3a53d430640752ebb95e71eacbc360c45f4bd0181d0613827ecc",
            "1": "f9a1953e.e8c02a15.33fa5dbe.e22980a8.f1d9f854.7fda7c5e.498ce792.fde7589e.f9a1953e.e8c02a15.33fa5dbe.e22980a8.f1d9f854.7fda7c5e.498ce792.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserIssuesITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1091,
                            "endLine": 1091,
                            "startColumn": 28,
                            "endColumn": 47
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 406,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserIssuesITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1109,
                  "endLine": 1109,
                  "startColumn": 9,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0e2bb57b5366b15172480478b6d05ae56113b53b47dfb8b79cd65dc02230f57b",
            "1": "f9a1953e.e8c02a15.33fa5dbe.e22980a8.f1d9f854.7fda7c5e.498ce792.fde7589e.f9a1953e.e8c02a15.33fa5dbe.e22980a8.f1d9f854.7fda7c5e.498ce792.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserIssuesITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1109,
                            "endLine": 1109,
                            "startColumn": 28,
                            "endColumn": 47
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 406,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserIssuesITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1216,
                  "endLine": 1216,
                  "startColumn": 13,
                  "endColumn": 29
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b26e47f9d9126be6e08a0f5a6d6169cd790e234b691ebee50f78243040b57d2c",
            "1": "5387ee68.e8c02a15.fc7d5400.e22980a8.d31a8364.935029da.bae646e8.fde7589e.5387ee68.e8c02a15.fc7d5400.e22980a8.d31a8364.935029da.bae646e8.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserIssuesITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1216,
                            "endLine": 1216,
                            "startColumn": 30,
                            "endColumn": 43
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 406,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/SCIMITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 339,
                  "endLine": 339,
                  "startColumn": 9,
                  "endColumn": 25
                }
              }
            }
          ],
          "fingerprints": {
            "0": "1c592f0854facb302b43a775368a4d8519c323b34f2742c31bc65a03809f9de2",
            "1": "19689298.e8c02a15.b2d7db8c.4ad892ab.0bf67f0b.4e1269f6.e8a7d86b.fde7589e.19689298.e8c02a15.b2d7db8c.4ad892ab.0bf67f0b.4e1269f6.e8a7d86b.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/SCIMITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 339,
                            "endLine": 339,
                            "startColumn": 26,
                            "endColumn": 39
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 406,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/SAML2ITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 204,
                  "endLine": 204,
                  "startColumn": 13,
                  "endColumn": 26
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8230936206726fe95146c0b6937daf3468b65f3a8910b82999dcd2ed71e824ae",
            "1": "888178d5.1cbd3ff4.075f7928.383ea08e.d31a8364.98054aaf.bae646e8.54d46e25.888178d5.1cbd3ff4.075f7928.383ea08e.d31a8364.98054aaf.bae646e8.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/SAML2ITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 204,
                            "endLine": 204,
                            "startColumn": 67,
                            "endColumn": 77
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 406,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/SAML2ITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 516,
                  "endLine": 516,
                  "startColumn": 13,
                  "endColumn": 26
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7efb28942c818806320cb7bfb19f6eb94e7ba3e9b77c033c5e6fdc0e8b515252",
            "1": "19689298.c8c8034f.075f7928.383ea08e.ade640d7.e2f0b62f.eb64cfae.54d46e25.19689298.c8c8034f.075f7928.383ea08e.ade640d7.80e5b635.6d877eaa.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/SAML2ITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 516,
                            "endLine": 516,
                            "startColumn": 34,
                            "endColumn": 44
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 406,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/SAML2ITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 550,
                  "endLine": 550,
                  "startColumn": 9,
                  "endColumn": 22
                }
              }
            }
          ],
          "fingerprints": {
            "0": "72ed12aea5c181c5ddaba5ec21baf93e738b6b432f931ac0f5d12ebc89d0b284",
            "1": "19689298.83dbfe52.f9fce1b0.383ea08e.ade640d7.e2f0b62f.6a222d4e.54d46e25.19689298.1cbd3ff4.f9fce1b0.383ea08e.ade640d7.e2f0b62f.6a222d4e.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/SAML2ITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 550,
                            "endLine": 550,
                            "startColumn": 29,
                            "endColumn": 39
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 406,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/SAML2ITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 551,
                  "endLine": 551,
                  "startColumn": 9,
                  "endColumn": 29
                }
              }
            }
          ],
          "fingerprints": {
            "0": "34c625bc7a22615bfceb89ee5a38b28b006485b55e27a73de88c002493ae2856",
            "1": "f6a358ae.62a42ac7.f9fce1b0.e22980a8.ade640d7.72c7f2aa.6a222d4e.198d7340.19689298.1cbd3ff4.f9fce1b0.383ea08e.ade640d7.e2f0b62f.6a222d4e.198d7340"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/SAML2ITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 551,
                            "endLine": 551,
                            "startColumn": 63,
                            "endColumn": 73
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 406,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/SAML2ITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 556,
                  "endLine": 556,
                  "startColumn": 13,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b832a2d0bea6ff050faa929b3136f6be924556141b65da809f38321326c57854",
            "1": "f6a358ae.534a433e.2d7fb774.d6ab05b5.d31a8364.e2f0b62f.bae646e8.54d46e25.19689298.534a433e.075f7928.383ea08e.d31a8364.e2f0b62f.bae646e8.198d7340"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/SAML2ITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 556,
                            "endLine": 556,
                            "startColumn": 36,
                            "endColumn": 46
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 406,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/SAML2ITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 562,
                  "endLine": 562,
                  "startColumn": 9,
                  "endColumn": 24
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8e2d712bb8330fe3afa262df676d00072fc2d5be43e4cfd9489fa723e5dc2c1e",
            "1": "1be82056.aae31176.f9fce1b0.383ea08e.ade640d7.987d5477.86be49a8.54d46e25.1be82056.1cbd3ff4.f9fce1b0.383ea08e.ade640d7.987d5477.86be49a8.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/SAML2ITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 562,
                            "endLine": 562,
                            "startColumn": 31,
                            "endColumn": 41
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 406,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/SAML2ITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 568,
                  "endLine": 568,
                  "startColumn": 13,
                  "endColumn": 29
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f66eb06ace61569940922b8c915238f9f2088e3517b9fb268f4f11dd864fd141",
            "1": "f6a358ae.534a433e.2d7fb774.d6ab05b5.d31a8364.987d5477.bae646e8.54d46e25.1be82056.534a433e.075f7928.383ea08e.d31a8364.987d5477.bae646e8.198d7340"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/SAML2ITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 568,
                            "endLine": 568,
                            "startColumn": 38,
                            "endColumn": 48
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 406,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/SAML2ITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 577,
                  "endLine": 577,
                  "startColumn": 9,
                  "endColumn": 22
                }
              }
            }
          ],
          "fingerprints": {
            "0": "30498a6f2af1a88fbd7b9cdffc213dbb961dc997c16e59fe8cf8f7cce7803e88",
            "1": "d83a1957.83dbfe52.075f7928.383ea08e.ade640d7.e2f0b62f.eb64cfae.54d46e25.d83a1957.1cbd3ff4.075f7928.383ea08e.ade640d7.e2f0b62f.6d877eaa.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/SAML2ITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 577,
                            "endLine": 577,
                            "startColumn": 30,
                            "endColumn": 40
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 406,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/AuthenticationITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 542,
                  "endLine": 542,
                  "startColumn": 9,
                  "endColumn": 25
                }
              }
            }
          ],
          "fingerprints": {
            "0": "650e18965a2c774e6a1800e2c13fc292ecd735bc2e7ad47552b45ad332f7385c",
            "1": "5387ee68.e8c02a15.fc7d5400.e22980a8.e2f68b26.d73ac7e8.be04624c.fde7589e.5387ee68.e8c02a15.fc7d5400.e22980a8.e2f68b26.d73ac7e8.be04624c.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/AuthenticationITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 542,
                            "endLine": 542,
                            "startColumn": 26,
                            "endColumn": 39
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 356,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/MultitenancyITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 121,
                  "endLine": 121,
                  "startColumn": 9,
                  "endColumn": 25
                }
              }
            }
          ],
          "fingerprints": {
            "0": "971431c8efb657de3270e87849e69d7fa87c6f22775a7f5f0770270797b3e6d3",
            "1": "5387ee68.e8c02a15.227ac669.e22980a8.0bf67f0b.8f456eb7.94b7b297.fde7589e.5387ee68.e8c02a15.227ac669.e22980a8.0bf67f0b.8f456eb7.94b7b297.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/MultitenancyITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 121,
                            "endLine": 121,
                            "startColumn": 26,
                            "endColumn": 36
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 356,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/UserTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 148,
                  "endLine": 148,
                  "startColumn": 9,
                  "endColumn": 25
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0b8ed597dc1bd3f067a300c9c0651927ded61cd5007a111ca13e59b188f7b469",
            "1": "5387ee68.2825d4a6.ef26b073.e22980a8.0bf67f0b.3a8b7127.d335c8b3.fde7589e.5387ee68.2825d4a6.ef26b073.e22980a8.0bf67f0b.3a8b7127.d335c8b3.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/UserTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 26,
                            "endColumn": 32
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 406,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/UserTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 157,
                  "endLine": 157,
                  "startColumn": 9,
                  "endColumn": 25
                }
              }
            }
          ],
          "fingerprints": {
            "0": "aae76f5dbd644c6976d7403e2f0feab4727f80296c0b960c71628a282a4dd0ba",
            "1": "5387ee68.2825d4a6.ef26b073.e22980a8.0bf67f0b.3a8b7127.94b7b297.fde7589e.5387ee68.2825d4a6.ef26b073.e22980a8.0bf67f0b.3a8b7127.94b7b297.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/UserTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 157,
                            "endLine": 157,
                            "startColumn": 26,
                            "endColumn": 39
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 406,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/UserTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 195,
                  "endLine": 195,
                  "startColumn": 9,
                  "endColumn": 25
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c62f8486244eae8730dda84667267c9ee9dc200961b16f4718e30adc68123e31",
            "1": "dfacb19b.e8c02a15.fc7d5400.e22980a8.0bf67f0b.935029da.be04624c.fde7589e.dfacb19b.e8c02a15.fc7d5400.e22980a8.0bf67f0b.935029da.be04624c.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/UserTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 195,
                            "endLine": 195,
                            "startColumn": 26,
                            "endColumn": 39
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 406,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/outer/PlainSchemaTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 93,
                  "endLine": 93,
                  "startColumn": 56,
                  "endColumn": 91
                }
              }
            }
          ],
          "fingerprints": {
            "0": "323d5af42213b4f16bd88e0ccbd6f5518f32595ff71d5d1d711741e8bab2651e",
            "1": "19689298.41d4ee69.750d773f.1bc7f334.346b2ab4.34428aef.9959382a.f2b19afb.19689298.41d4ee69.750d773f.1bc7f334.346b2ab4.34428aef.9959382a.93974b55"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/outer/PlainSchemaTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 95,
                            "endLine": 95,
                            "startColumn": 65,
                            "endColumn": 80
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 406,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/outer/PlainSchemaTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 94,
                  "endLine": 94,
                  "startColumn": 21,
                  "endColumn": 71
                }
              }
            }
          ],
          "fingerprints": {
            "0": "27232c97b227f5c369d5644d64287d626db7b29e2336b9c6db810493de823de2",
            "1": "ac4e7c8b.4760e844.2c9f3a7e.6c52ae28.68003c41.34428aef.9959382a.ac8386d7.ac4e7c8b.1b0fc519.636c9be1.6c52ae28.68003c41.34428aef.9959382a.ac8386d7"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/outer/PlainSchemaTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 95,
                            "endLine": 95,
                            "startColumn": 34,
                            "endColumn": 49
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 406,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/ResourceTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 115,
                  "endLine": 115,
                  "startColumn": 56,
                  "endColumn": 91
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7795599db99cce9fbb4476fdb9d5b05fe77035cd0a71454b58a22499a19fcae4",
            "1": "19689298.41d4ee69.750d773f.1bc7f334.346b2ab4.34428aef.9959382a.f2b19afb.19689298.41d4ee69.750d773f.1bc7f334.346b2ab4.34428aef.9959382a.93974b55"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/ResourceTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 117,
                            "endLine": 117,
                            "startColumn": 65,
                            "endColumn": 80
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 406,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/ResourceTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 116,
                  "endLine": 116,
                  "startColumn": 21,
                  "endColumn": 71
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d7a114ec00c101f1dd790bb297ada84f42fa1654c420def9eca662f5bab50b98",
            "1": "ac4e7c8b.4760e844.2c9f3a7e.6c52ae28.68003c41.34428aef.9959382a.ac8386d7.ac4e7c8b.1b0fc519.636c9be1.6c52ae28.68003c41.34428aef.9959382a.ac8386d7"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/ResourceTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 117,
                            "endLine": 117,
                            "startColumn": 34,
                            "endColumn": 49
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 406,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/ConnInstanceTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 69,
                  "endLine": 69,
                  "startColumn": 56,
                  "endColumn": 91
                }
              }
            }
          ],
          "fingerprints": {
            "0": "41a770d661048e5f65159831b89b8d2c8b966cbeabf23e5b23d3660ca072b0bf",
            "1": "19689298.41d4ee69.750d773f.1bc7f334.346b2ab4.34428aef.9959382a.f2b19afb.19689298.41d4ee69.750d773f.1bc7f334.346b2ab4.34428aef.9959382a.93974b55"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/ConnInstanceTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 65,
                            "endColumn": 80
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 406,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/ConnInstanceTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 70,
                  "endLine": 70,
                  "startColumn": 21,
                  "endColumn": 71
                }
              }
            }
          ],
          "fingerprints": {
            "0": "fa6059712fc7a7a8c09f9034407b49b60b7b6a5f7891c62d7dce9bc3bb2fdfbc",
            "1": "ac4e7c8b.4760e844.2c9f3a7e.6c52ae28.68003c41.34428aef.9959382a.ac8386d7.ac4e7c8b.1b0fc519.636c9be1.6c52ae28.68003c41.34428aef.9959382a.ac8386d7"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/ConnInstanceTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 34,
                            "endColumn": 49
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 406,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/CamelRouteITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 160,
                  "endLine": 160,
                  "startColumn": 13,
                  "endColumn": 31
                }
              }
            }
          ],
          "fingerprints": {
            "0": "9152888562bd93678fa9f8a27ee500529b4297ba369d96ce7bc7e72690213d1b",
            "1": "5387ee68.e8c02a15.fc7d5400.e22980a8.d31a8364.935029da.bae646e8.fde7589e.5387ee68.e8c02a15.fc7d5400.e22980a8.d31a8364.935029da.bae646e8.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/CamelRouteITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 160,
                            "endLine": 160,
                            "startColumn": 32,
                            "endColumn": 45
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 356,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/DomainTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 65,
                  "endLine": 65,
                  "startColumn": 9,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "20092a469d218894b222a994493f8b2325226cbfb41c8f19039987747fe5481a",
            "1": "5387ee68.2825d4a6.ef26b073.e22980a8.f1d9f854.2def77f4.2c2de590.fde7589e.5387ee68.2825d4a6.ef26b073.e22980a8.f1d9f854.2def77f4.2c2de590.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/DomainTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 65,
                            "endLine": 65,
                            "startColumn": 28,
                            "endColumn": 38
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 406,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/DomainTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 77,
                  "endLine": 77,
                  "startColumn": 9,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "15bb32424e7df142f31ec2e9af6db89d0d34a3ea30c6e0e33ee9440a0fe6109c",
            "1": "5387ee68.e8c02a15.da2ba733.e22980a8.f1d9f854.2def77f4.2c2de590.fde7589e.5387ee68.e8c02a15.da2ba733.e22980a8.f1d9f854.2def77f4.2c2de590.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/DomainTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 77,
                            "endLine": 77,
                            "startColumn": 28,
                            "endColumn": 38
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 406,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/provisioning-java/src/test/java/org/apache/syncope/core/provisioning/java/ResourceDataBinderTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 83,
                  "endLine": 83,
                  "startColumn": 56,
                  "endColumn": 91
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8ba2970e749ce2de88b09a984966d26f213d183eba32600b1c626c4e2808132c",
            "1": "19689298.41d4ee69.750d773f.1bc7f334.346b2ab4.34428aef.9959382a.f2b19afb.19689298.41d4ee69.750d773f.1bc7f334.346b2ab4.34428aef.9959382a.93974b55"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/provisioning-java/src/test/java/org/apache/syncope/core/provisioning/java/ResourceDataBinderTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 85,
                            "endLine": 85,
                            "startColumn": 65,
                            "endColumn": 80
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 406,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/provisioning-java/src/test/java/org/apache/syncope/core/provisioning/java/ResourceDataBinderTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 84,
                  "endLine": 84,
                  "startColumn": 21,
                  "endColumn": 71
                }
              }
            }
          ],
          "fingerprints": {
            "0": "bda095450c2134d1b7cb238c4dc14aea6482153827819e7b088bc8c951380b02",
            "1": "ac4e7c8b.4760e844.2c9f3a7e.6c52ae28.68003c41.34428aef.9959382a.ac8386d7.ac4e7c8b.1b0fc519.636c9be1.6c52ae28.68003c41.34428aef.9959382a.ac8386d7"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/provisioning-java/src/test/java/org/apache/syncope/core/provisioning/java/ResourceDataBinderTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 85,
                            "endLine": 85,
                            "startColumn": 34,
                            "endColumn": 49
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 406,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/MultitenancyTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 72,
                  "endLine": 72,
                  "startColumn": 56,
                  "endColumn": 91
                }
              }
            }
          ],
          "fingerprints": {
            "0": "087406347b6d9953bf14f29265224b19f4c74f42656ef78b0c1cc21513476a3e",
            "1": "19689298.41d4ee69.750d773f.1bc7f334.346b2ab4.34428aef.9959382a.f2b19afb.19689298.41d4ee69.750d773f.1bc7f334.346b2ab4.34428aef.9959382a.93974b55"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/MultitenancyTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 74,
                            "endLine": 74,
                            "startColumn": 65,
                            "endColumn": 80
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 406,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/MultitenancyTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 73,
                  "endLine": 73,
                  "startColumn": 21,
                  "endColumn": 71
                }
              }
            }
          ],
          "fingerprints": {
            "0": "87602bd76375d7705ff336996bff2805f265e4044c97d075485331844a161437",
            "1": "ac4e7c8b.4760e844.2c9f3a7e.6c52ae28.68003c41.34428aef.9959382a.ac8386d7.ac4e7c8b.1b0fc519.636c9be1.6c52ae28.68003c41.34428aef.9959382a.ac8386d7"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/MultitenancyTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 74,
                            "endLine": 74,
                            "startColumn": 34,
                            "endColumn": 49
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 406,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/MultitenancyTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 102,
                  "endLine": 102,
                  "startColumn": 9,
                  "endColumn": 25
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8e65d91ba6d99357928f15f8c9a8124bb3ba9bc8d0d59043c93857e51eaaa823",
            "1": "5387ee68.e8c02a15.227ac669.e22980a8.e2f68b26.8f456eb7.94b7b297.fde7589e.5387ee68.e8c02a15.227ac669.e22980a8.e2f68b26.8f456eb7.94b7b297.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/MultitenancyTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 102,
                            "endLine": 102,
                            "startColumn": 26,
                            "endColumn": 36
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 406,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/NonCryptoHardcodedSecret",
          "ruleIndex": 11,
          "level": "error",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found hardcoded secret.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found hardcoded {0}.",
            "arguments": [
              "[secret](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/spring/src/main/java/org/apache/syncope/core/spring/security/Encryptor.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 50,
                  "endLine": 50,
                  "startColumn": 54,
                  "endColumn": 80
                }
              }
            }
          ],
          "fingerprints": {
            "0": "dbed44b28ddf350bb0ae0ee64b0d27e01b35e99b62dd1838990d99d7d094f6f0",
            "1": "3626593c.f19c7705.e1deb58b.de031890.8b2d3351.7fda7c5e.7351b430.fc342a9e.19689298.f19c7705.e1deb58b.de031890.bb61bed7.7fda7c5e.d112323a.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/spring/src/main/java/org/apache/syncope/core/spring/security/Encryptor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 50,
                            "endLine": 50,
                            "startColumn": 54,
                            "endColumn": 80
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 801,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/NonCryptoHardcodedSecret",
          "ruleIndex": 11,
          "level": "error",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found hardcoded secret.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found hardcoded {0}.",
            "arguments": [
              "[secret](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/spring/src/main/java/org/apache/syncope/core/spring/security/DefaultCredentialChecker.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 33,
                  "endLine": 33,
                  "startColumn": 58,
                  "endColumn": 100
                }
              }
            }
          ],
          "fingerprints": {
            "0": "478d52aba5704813cd3e8a05ebcbb0e7a663f2be4cc70349ba726584b3328fe8",
            "1": "416089e6.dd05ec30.25b7486a.de031890.8b2d3351.ce109560.a32ea6a9.1bd2a0d2.ebfb44dd.dd05ec30.33fa5dbe.de031890.bb61bed7.7fda7c5e.a32ea6a9.1bd2a0d2"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/spring/src/main/java/org/apache/syncope/core/spring/security/DefaultCredentialChecker.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 33,
                            "endLine": 33,
                            "startColumn": 58,
                            "endColumn": 100
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 801,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword",
          "ruleIndex": 12,
          "level": "warning",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/spring/src/main/java/org/apache/syncope/core/spring/security/AuthContextUtils.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 62,
                  "endLine": 62,
                  "startColumn": 21,
                  "endColumn": 25
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b9c61c879dad87c8080e1a7f7c5b4d3224770734fbfc030e50baca3e1cd0c645",
            "1": "f7732231.3f7f5f6f.1d6be930.6c52ae28.68003c41.bc7da5bd.9959382a.45face8a.17bdde5c.3f7f5f6f.636c9be1.6c52ae28.68003c41.bc7da5bd.9959382a.45face8a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/spring/src/main/java/org/apache/syncope/core/spring/security/AuthContextUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 62,
                            "endLine": 62,
                            "startColumn": 39,
                            "endColumn": 54
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword",
          "ruleIndex": 12,
          "level": "warning",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/spring/src/main/java/org/apache/syncope/core/spring/security/AuthContextUtils.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 125,
                  "endLine": 125,
                  "startColumn": 56,
                  "endColumn": 91
                }
              }
            }
          ],
          "fingerprints": {
            "0": "1a6b0012d59e0280d1f44291c96134f6b3d9e3951cfbc5865f783e2e255dd963",
            "1": "19689298.41d4ee69.750d773f.1bc7f334.346b2ab4.34428aef.9959382a.f2b19afb.19689298.41d4ee69.750d773f.1bc7f334.346b2ab4.34428aef.9959382a.93974b55"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/spring/src/main/java/org/apache/syncope/core/spring/security/AuthContextUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 127,
                            "endLine": 127,
                            "startColumn": 56,
                            "endColumn": 71
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword",
          "ruleIndex": 12,
          "level": "warning",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/spring/src/main/java/org/apache/syncope/core/spring/security/AuthContextUtils.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 126,
                  "endLine": 126,
                  "startColumn": 21,
                  "endColumn": 25
                }
              }
            }
          ],
          "fingerprints": {
            "0": "04e74e31036e4a88f814fe55e174ed937861c91235863a5a47a8570bf3e1f73b",
            "1": "07d43dd7.97acdc08.27d266c3.be97a4ff.68003c41.34428aef.9959382a.203bd690.07d43dd7.33ef5aea.4c9ff0bc.be97a4ff.68003c41.34428aef.9959382a.93974b55"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/spring/src/main/java/org/apache/syncope/core/spring/security/AuthContextUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 127,
                            "endLine": 127,
                            "startColumn": 25,
                            "endColumn": 40
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword",
          "ruleIndex": 12,
          "level": "warning",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/spring/src/main/java/org/apache/syncope/core/spring/security/DefaultCredentialChecker.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 45,
                  "endLine": 45,
                  "startColumn": 37,
                  "endColumn": 66
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b43871953db81ee2a717e87d4cbb895aa7e0ef3cd6cad8e0c5380e89652e436f",
            "1": "ebfb44dd.dd05ec30.6fb3ccc0.de031890.19a789c7.7fda7c5e.a32ea6a9.54d46e25.ebfb44dd.dd05ec30.6fb3ccc0.de031890.f0e1baa5.7fda7c5e.350df66e.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/spring/src/main/java/org/apache/syncope/core/spring/security/DefaultCredentialChecker.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 33,
                            "endLine": 33,
                            "startColumn": 58,
                            "endColumn": 100
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword",
          "ruleIndex": 12,
          "level": "warning",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/DefaultPropagationTaskCallable.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 82,
                  "endLine": 82,
                  "startColumn": 56,
                  "endColumn": 91
                }
              }
            }
          ],
          "fingerprints": {
            "0": "722e96daf3bc6cba18ef0d150d0bbc259024caf3926670b834f3eafba56c2892",
            "1": "19689298.41d4ee69.750d773f.1bc7f334.346b2ab4.34428aef.9959382a.f2b19afb.19689298.41d4ee69.750d773f.1bc7f334.346b2ab4.34428aef.9959382a.93974b55"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/DefaultPropagationTaskCallable.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 83,
                            "endLine": 83,
                            "startColumn": 67,
                            "endColumn": 82
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword",
          "ruleIndex": 12,
          "level": "warning",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/DefaultPropagationTaskCallable.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 83,
                  "endLine": 83,
                  "startColumn": 21,
                  "endColumn": 25
                }
              }
            }
          ],
          "fingerprints": {
            "0": "838c529e9cf8baac8c5a9a6d92bbb467afc5e16e40bf4df76c7c293539a008df",
            "1": "59784258.97acdc08.ecc5c209.6c52ae28.68003c41.34428aef.9959382a.203bd690.59784258.1b0fc519.33fa5dbe.6c52ae28.68003c41.7fda7c5e.9959382a.93974b55"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/DefaultPropagationTaskCallable.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 83,
                            "endLine": 83,
                            "startColumn": 36,
                            "endColumn": 51
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword",
          "ruleIndex": 12,
          "level": "warning",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "client/cli/src/main/java/org/apache/syncope/client/cli/util/JasyptUtils.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 40,
                  "endLine": 40,
                  "startColumn": 9,
                  "endColumn": 34
                }
              }
            }
          ],
          "fingerprints": {
            "0": "52b6094bf1848013337369433d21cb9980a21565f3b035dfa408c2b51fae8c1d",
            "1": "5387ee68.0b7bca51.33fa5dbe.e22980a8.cfab7a6f.7fda7c5e.a260396d.fde7589e.5387ee68.15905c73.2702f26a.e22980a8.cfab7a6f.7fda7c5e.1caebcbe.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "client/cli/src/main/java/org/apache/syncope/client/cli/util/JasyptUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 46,
                            "endColumn": 76
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 501,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedSecret/test",
          "ruleIndex": 13,
          "level": "note",
          "message": {
            "text": "Hardcoded value string is used as a cipher key. Generate the value with a cryptographically strong random number generator such as java.security.SecureRandom instead.",
            "markdown": "Hardcoded value {0} is used as a {1}. Generate the value with a cryptographically strong random number generator such as java.security.SecureRandom instead.",
            "arguments": [
              "[string](0)",
              "[cipher key](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/PlainSchemaITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 137,
                  "endLine": 137,
                  "startColumn": 9,
                  "endColumn": 30
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d725e5fbdda98cc40b3e54234e39fee5d99ab4f216b838c99bee6daaf78e1b37",
            "1": "ac4e7c8b.2a259447.d8761960.e22980a8.f1d9f854.8f7c1ec1.5d8964bb.279e7079.c4643828.2a259447.d8761960.e22980a8.f1d9f854.2f4e1548.5d8964bb.279e7079"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/PlainSchemaITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 137,
                            "endLine": 137,
                            "startColumn": 31,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "fit/core-reference/src/test/java/org/apache/syncope/fit/core/PlainSchemaITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 137,
                            "endLine": 137,
                            "startColumn": 9,
                            "endColumn": 30
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/ServerInformationExposure",
          "ruleIndex": 14,
          "level": "warning",
          "message": {
            "text": "The stack trace from printStackTrace flows into HTTP response and is leaked to the user. This may disclose sensitive server information to the attackers.",
            "markdown": "The stack trace from {0} flows into {1} and is leaked to the user. This may disclose sensitive server information to the attackers.",
            "arguments": [
              "[printStackTrace](0)",
              "[HTTP response](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AssertionConsumer.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 70,
                  "endLine": 70,
                  "startColumn": 17,
                  "endColumn": 34
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b54eecd7d9446cdd32c32642c54cd27a5f16012b4a226eb80a409d563e0c3e33",
            "1": "9cf53582.c8c8034f.cd271e66.e22980a8.6c69ab4e.5d0a18c6.16062bba.54d46e25.b98c40f6.7f413d6f.a224ef38.e22980a8.f0e1baa5.95df3f17.76a0da3b.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AssertionConsumer.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 17,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AssertionConsumer.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 17,
                            "endColumn": 34
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/ServerInformationExposure",
          "ruleIndex": 14,
          "level": "warning",
          "message": {
            "text": "The stack trace from printStackTrace flows into HTTP response and is leaked to the user. This may disclose sensitive server information to the attackers.",
            "markdown": "The stack trace from {0} flows into {1} and is leaked to the user. This may disclose sensitive server information to the attackers.",
            "arguments": [
              "[printStackTrace](0)",
              "[HTTP response](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Login.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 59,
                  "endLine": 59,
                  "startColumn": 17,
                  "endColumn": 34
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c4702b4ecb93edc143655243acc6cf1643dfad167eddb6ccea4fb929c2fb0919",
            "1": "9cf53582.c8c8034f.cd271e66.e22980a8.6c69ab4e.5d0a18c6.16062bba.54d46e25.b98c40f6.9f996d4c.531dd78b.e22980a8.f0e1baa5.95df3f17.76a0da3b.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Login.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 59,
                            "endLine": 59,
                            "startColumn": 17,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Login.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 59,
                            "endLine": 59,
                            "startColumn": 17,
                            "endColumn": 34
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/ServerInformationExposure",
          "ruleIndex": 14,
          "level": "warning",
          "message": {
            "text": "The stack trace from printStackTrace flows into HTTP response and is leaked to the user. This may disclose sensitive server information to the attackers.",
            "markdown": "The stack trace from {0} flows into {1} and is leaked to the user. This may disclose sensitive server information to the attackers.",
            "arguments": [
              "[printStackTrace](0)",
              "[HTTP response](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Logout.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 72,
                  "endLine": 72,
                  "startColumn": 17,
                  "endColumn": 34
                }
              }
            }
          ],
          "fingerprints": {
            "0": "00d3bdde5bd58ccb7ba03875034e2f431de0a2443e713c4a52ca85a0b4c3acac",
            "1": "9cf53582.c8c8034f.cd271e66.e22980a8.6c69ab4e.5d0a18c6.16062bba.54d46e25.b98c40f6.7f413d6f.02e2dd03.e22980a8.0a7733cb.95df3f17.76a0da3b.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Logout.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 72,
                            "endLine": 72,
                            "startColumn": 17,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Logout.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 72,
                            "endLine": 72,
                            "startColumn": 17,
                            "endColumn": 34
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/ServerInformationExposure",
          "ruleIndex": 14,
          "level": "warning",
          "message": {
            "text": "The stack trace from printStackTrace flows into HTTP response and is leaked to the user. This may disclose sensitive server information to the attackers.",
            "markdown": "The stack trace from {0} flows into {1} and is leaked to the user. This may disclose sensitive server information to the attackers.",
            "arguments": [
              "[printStackTrace](0)",
              "[HTTP response](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Logout.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 108,
                  "endLine": 108,
                  "startColumn": 21,
                  "endColumn": 38
                }
              }
            }
          ],
          "fingerprints": {
            "0": "1e469c0f333b79af027dff9f5e2edde35a36ca6bc56c4d8e530a054bdf1149d2",
            "1": "9cf53582.c8c8034f.cd271e66.e22980a8.6c69ab4e.5d0a18c6.16062bba.54d46e25.b98c40f6.9f996d4c.531dd78b.e22980a8.0a7733cb.95df3f17.76a0da3b.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Logout.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 108,
                            "endLine": 108,
                            "startColumn": 21,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Logout.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 108,
                            "endLine": 108,
                            "startColumn": 21,
                            "endColumn": 38
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/InsecureHash",
          "ruleIndex": 15,
          "level": "warning",
          "message": {
            "text": "The SHA-1 hash (used in java.security.MessageDigest.getInstance) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The {0} hash (used in {1}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[SHA-1](0)",
              "[java.security.MessageDigest.getInstance](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "installer/src/main/java/org/apache/syncope/installer/utilities/MavenUtils.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 121,
                  "endLine": 121,
                  "startColumn": 45,
                  "endColumn": 70
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8a4780a6708b22767c331853c1fea56859f7c12fb74971b46094e7193acf2b24",
            "1": "19689298.7797192f.09fc77c2.841706af.408180c7.c80ba7fb.2a1a68a1.54d46e25.19689298.7797192f.09fc77c2.841706af.408180c7.c80ba7fb.df7e59ba.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "installer/src/main/java/org/apache/syncope/installer/utilities/MavenUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 121,
                            "endLine": 121,
                            "startColumn": 71,
                            "endColumn": 78
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "installer/src/main/java/org/apache/syncope/installer/utilities/MavenUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 121,
                            "endLine": 121,
                            "startColumn": 45,
                            "endColumn": 70
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/InsecureHash",
          "ruleIndex": 15,
          "level": "warning",
          "message": {
            "text": "The SHA-1 hash (used in java.security.MessageDigest.getInstance) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The {0} hash (used in {1}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[SHA-1](0)",
              "[java.security.MessageDigest.getInstance](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "installer/src/main/java/org/apache/syncope/installer/utilities/PasswordGenerator.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 32,
                  "endLine": 32,
                  "startColumn": 41,
                  "endColumn": 66
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5cd3eb5d3e6ff78242c905ea0c5e405ffc930ebbc822cda2da581a6af3553525",
            "1": "19689298.7797192f.09fc77c2.841706af.408180c7.c80ba7fb.2a1a68a1.54d46e25.19689298.7797192f.09fc77c2.841706af.408180c7.c80ba7fb.df7e59ba.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "installer/src/main/java/org/apache/syncope/installer/utilities/PasswordGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 32,
                            "endLine": 32,
                            "startColumn": 67,
                            "endColumn": 74
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "installer/src/main/java/org/apache/syncope/installer/utilities/PasswordGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 32,
                            "endLine": 32,
                            "startColumn": 41,
                            "endColumn": 66
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 501,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/InsecureHash",
          "ruleIndex": 15,
          "level": "warning",
          "message": {
            "text": "The MD2 hash (used in org.apache.commons.codec.digest.DigestUtils.md2Hex) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The MD2 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[org.apache.commons.codec.digest.DigestUtils.md2Hex](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "client/enduser/src/main/java/org/apache/syncope/client/enduser/util/SaltGenerator.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 33,
                  "endLine": 33,
                  "startColumn": 16,
                  "endColumn": 34
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e729af790afe84f1e1f9026abbcb332eea5f17d6f017cc29ec589b814e15846f",
            "1": "e6fcc0e0.1cbd3ff4.fc7d5400.e22980a8.10af9ac5.9b0859ac.a0230d31.54d46e25.e6fcc0e0.1cbd3ff4.fc7d5400.e22980a8.10af9ac5.9b0859ac.a0230d31.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "client/enduser/src/main/java/org/apache/syncope/client/enduser/util/SaltGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 33,
                            "endLine": 33,
                            "startColumn": 16,
                            "endColumn": 34
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        }
      ],
      "properties": {
        "coverage": [
          {
            "files": 224,
            "isSupported": true,
            "lang": "XML"
          },
          {
            "files": 793,
            "isSupported": true,
            "lang": "HTML"
          },
          {
            "files": 2086,
            "isSupported": true,
            "lang": "Java"
          },
          {
            "files": 283,
            "isSupported": true,
            "lang": "JavaScript"
          },
          {
            "files": 24,
            "isSupported": false,
            "lang": "Unknown"
          },
          {
            "files": 14,
            "isSupported": false,
            "lang": "Roff Manpage"
          }
        ]
      }
    }
  ]
}
