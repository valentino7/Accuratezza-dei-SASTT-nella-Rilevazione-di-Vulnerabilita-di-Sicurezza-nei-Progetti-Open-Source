{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "SnykCode",
          "semanticVersion": "1.0.0",
          "version": "1.0.0",
          "rules": [
            {
              "id": "java/TooPermissiveHostnameVerifier",
              "name": "TooPermissiveHostnameVerifier",
              "shortDescription": {
                "text": "Improper Certificate Validation"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nCommunication through encrypted TLS/SSL protocols can only take place when the server bears a valid certificate associating that server with a valid public-key identity issued by a third-party authority. If certificate validation is cursory or incomplete, this creates a weakness whereby an attacker can spoof one or more certificate details (e.g., expiration date), gaining unauthorized access to confidential data and privileged actions.\n\n### Best practices for prevention\n* Verify all aspects of any certificate provided, particularly chain of trust (issuing authority), host identity, and expiration.\n* Limit the validity period for certificates.\n* Avoid using self-signed certificates, certificate pinning, and wildcard certificates, as these all add levels of convenience but can also lead to loss of control over site/app security.\n* Disable older and insecure protocols (for example, SSL 2.0/3.0, MD5, and 3DES).\n* Ensure that all team members are familiar with current best practices and approaches, such as current TLS protocols.\n* Implement automated and manual testing using current tools and techniques designed to reveal this and related SSL weaknesses (for example, web application scanners).",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/bonigarcia/webdrivermanager/commit/90dedd67b71d59a9a15a9b11892be3cd0a1c2e4e?diff=split#diff-5fd27e182b6d09ea7f5901daab03449dL114",
                    "lines": [
                      {
                        "line": "HostnameVerifier allHostsValid = new HostnameVerifier() {",
                        "lineNumber": 112,
                        "lineChange": "none"
                      },
                      {
                        "line": "    public boolean verify(String hostname, SSLSession session) {",
                        "lineNumber": 113,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return true;",
                        "lineNumber": 114,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        return hostname.equalsIgnoreCase(session.getPeerHost());",
                        "lineNumber": 114,
                        "lineChange": "added"
                      },
                      {
                        "line": "    }",
                        "lineNumber": 115,
                        "lineChange": "none"
                      },
                      {
                        "line": "};",
                        "lineNumber": 116,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/wso2-attic/product-private-paas/commit/a42df7abce437ad996fad1097a74ca7bf83da0c0?diff=split#diff-7568b7c1be7d23d9a86361e05ff18598L47",
                    "lines": [
                      {
                        "line": "if (Constants.ENABLE_SELF_CERTIFIED) {",
                        "lineNumber": 44,
                        "lineChange": "none"
                      },
                      {
                        "line": "    HttpsURLConnection.setDefaultHostnameVerifier(new HostnameVerifier() {",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "        @Override public boolean verify(String s, SSLSession sslSession) {",
                        "lineNumber": 46,
                        "lineChange": "removed"
                      },
                      {
                        "line": "            return true;",
                        "lineNumber": 47,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        public boolean verify(String hostname, SSLSession session) {",
                        "lineNumber": 40,
                        "lineChange": "added"
                      },
                      {
                        "line": "            return hostname.equals(System.getProperty(Constants.HOSTNAME));",
                        "lineNumber": 41,
                        "lineChange": "added"
                      },
                      {
                        "line": "        }",
                        "lineNumber": 48,
                        "lineChange": "none"
                      },
                      {
                        "line": "    });",
                        "lineNumber": 49,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Liberuman/SimpleProject/commit/f7afc6477bcfb9b2f78f742df913aa9a86d251d1?diff=split#diff-68c680467370001ab531d6c88431244dL95",
                    "lines": [
                      {
                        "line": ".sslSocketFactory(sslContext.getSocketFactory(), trustManager)",
                        "lineNumber": 94,
                        "lineChange": "none"
                      },
                      {
                        "line": ".hostnameVerifier(new HostnameVerifier() {",
                        "lineNumber": 95,
                        "lineChange": "none"
                      },
                      {
                        "line": "  @Override",
                        "lineNumber": 96,
                        "lineChange": "none"
                      },
                      {
                        "line": "  public boolean verify(String hostname, SSLSession session) {",
                        "lineNumber": 97,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return true;",
                        "lineNumber": 96,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    if (!TextUtils.isEmpty(baseUrl) && baseUrl.contains(hostname)) {",
                        "lineNumber": 98,
                        "lineChange": "added"
                      },
                      {
                        "line": "      return true;",
                        "lineNumber": 99,
                        "lineChange": "added"
                      },
                      {
                        "line": "    } else {",
                        "lineNumber": 100,
                        "lineChange": "added"
                      },
                      {
                        "line": "  }",
                        "lineNumber": 104,
                        "lineChange": "none"
                      },
                      {
                        "line": "})",
                        "lineNumber": 105,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "merged the rest client and test cases according to the new folder structure",
                  "workaround for SSL verify",
                  "Smarter hostname verifier"
                ],
                "precision": "very-high",
                "repoDatasetSize": 53,
                "cwe": [
                  "CWE-295"
                ]
              }
            },
            {
              "id": "java/InsecureHash",
              "name": "InsecureHash",
              "shortDescription": {
                "text": "Use of Password Hash With Insufficient Computational Effort"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nSensitive information should never be stored in plain text, since this makes it very easy for unauthorized users, whether malicious insiders or outside attackers, to access. Hashing methods are used to make stored passwords and other sensitive data unreadable to users. For example, when a password is defined for the first time, it is hashed and then stored. The next time that user attempts to log on, the password they enter is hashed following the same procedure and compared with the stored value. In this way, the original password never needs to be stored in the system.\n\nHashing is a one-way scheme, meaning a hashed password cannot be reverse engineered. However, if an outdated or custom programmed hashing scheme is used, it becomes simple for an attacker with powerful modern computing power to gain access to the hashes used. This opens up access to all stored password information, leading to breached security. Therefore, it is essential for developers to understand modern, secure password hashing techniques.\n\n### Best practices for prevention\n* Use strong standard algorithms for hashing rather than simpler but outdated methods or DIY hashing schemes, which may have inherent weaknesses.\n* Use modular design for all code dealing with hashing so it can be swapped out as security standards change over time.\n* Use salting in combination with hashing (While this places more demands on resources, it is an essential step for tighter security.).\n* Implement zero-trust architecture to ensure that access to password data is granted only for legitimate business purposes.\n* Increase developer awareness of current standards in data security and cryptography.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/tita/tita/commit/398f6b776a2aea7f20bf604768b8721beff8d93a?diff=split#diff-dd34c5e6a15ca48bff6f9ca749e68243L164",
                    "lines": [
                      {
                        "line": " */",
                        "lineNumber": 161,
                        "lineChange": "none"
                      },
                      {
                        "line": "private String getHashedPassword(String pwd) throws NoSuchAlgorithmException {",
                        "lineNumber": 162,
                        "lineChange": "none"
                      },
                      {
                        "line": "    MessageDigest md = MessageDigest.getInstance(\"SHA-1\");",
                        "lineNumber": 163,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    MessageDigest md = MessageDigest.getInstance(\"SHA-256\");",
                        "lineNumber": 103,
                        "lineChange": "added"
                      },
                      {
                        "line": "    byte[] encryptMsg = md.digest(pwd.getBytes());",
                        "lineNumber": 164,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return new String(encryptMsg);",
                        "lineNumber": 165,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    return bytes2String(encryptMsg);",
                        "lineNumber": 105,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/devonfw/my-thai-star/commit/095a3fb6bb860a2411cb51e812121ec2a6b99894?diff=split#diff-4f73d1042058dd462057744068125d4eL242",
                    "lines": [
                      {
                        "line": "    + String.format(\"%02d\", ldt1.getSecond());",
                        "lineNumber": 240,
                        "lineChange": "none"
                      },
                      {
                        "line": "MessageDigest md = MessageDigest.getInstance(\"MD5\");",
                        "lineNumber": 241,
                        "lineChange": "removed"
                      },
                      {
                        "line": "MessageDigest md = MessageDigest.getInstance(\"SHA-256\");",
                        "lineNumber": 242,
                        "lineChange": "added"
                      },
                      {
                        "line": "md.update((email + date + time).getBytes());",
                        "lineNumber": 243,
                        "lineChange": "none"
                      },
                      {
                        "line": "byte[] digest = md.digest();",
                        "lineNumber": 244,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/SecurityCompass/AndroidLabs/commit/5608f75dd665beac85dbad08f80b91d73b27904a?diff=split#diff-ffc047d4a5f84de13e373f2392bfb11bL148",
                    "lines": [
                      {
                        "line": "byte[] passwordBytes = (password).getBytes(\"UTF-8\");",
                        "lineNumber": 145,
                        "lineChange": "none"
                      },
                      {
                        "line": "MessageDigest md = MessageDigest.getInstance(\"SHA-1\");",
                        "lineNumber": 147,
                        "lineChange": "removed"
                      },
                      {
                        "line": "MessageDigest md = MessageDigest.getInstance(\"SHA-256\");",
                        "lineNumber": 147,
                        "lineChange": "added"
                      },
                      {
                        "line": "md.reset();",
                        "lineNumber": 148,
                        "lineChange": "none"
                      },
                      {
                        "line": "md.update(salt);",
                        "lineNumber": 149,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Added an enum for the supported encryption algorithms",
                  "Added #hash(byte[], String)",
                  "Added support for\nsha256 and nonce token."
                ],
                "precision": "very-high",
                "repoDatasetSize": 122,
                "cwe": [
                  "CWE-916"
                ]
              }
            },
            {
              "id": "java/Sqli/test",
              "name": "Sqli/test",
              "shortDescription": {
                "text": "SQL Injection"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "## Details\n\nIn an SQL injection attack, the user can submit an SQL query directly to the database, gaining access without providing appropriate credentials. Attackers can then view, export, modify, and delete confidential information; change passwords and other authentication information; and possibly gain access to other systems within the network. This is one of the most commonly exploited categories of vulnerability, but can largely be avoided through good coding practices.\n\n### Best practices for prevention\n* Avoid passing user-entered parameters directly to the SQL server.\n* Avoid using string concatenation to build SQL queries from user-entered parameters.\n* When coding, define SQL code first, then pass in parameters. Use prepared statements with parameterized queries. Examples include `SqlCommand()` in .NET and `bindParam()` in PHP.\n* Use strong typing for all parameters so unexpected user data will be rejected.\n* Where direct user input cannot be avoided for performance reasons, validate input against a very strict allowlist of permitted characters, avoiding special characters such as `? & / < > ; - ' \" \\` and spaces. Use a vendor-supplied escaping routine if possible.\n* Develop your application in an environment and/or using libraries that provide protection against SQL injection.\n* Harden your entire environment around a least-privilege model, ideally with isolated accounts with privileges only for particular tasks.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/jeffdcamp/dbtools-android/commit/2643c30c302955a03233847c154350e424cca1d9?diff=split#diff-e2f0ab1619799e644c57ba98ebe6f39aL474",
                    "lines": [
                      {
                        "line": "}",
                        "lineNumber": 471,
                        "lineChange": "none"
                      },
                      {
                        "line": "public int delete(@Nonnull SQLiteDatabase db, @Nullable String where, @Nullable String[] whereArgs) {",
                        "lineNumber": 473,
                        "lineChange": "removed"
                      },
                      {
                        "line": "public int delete(@Nonnull DatabaseWrapper db, @Nullable String where, @Nullable String[] whereArgs) {",
                        "lineNumber": 412,
                        "lineChange": "added"
                      },
                      {
                        "line": "    checkDB(db);",
                        "lineNumber": 474,
                        "lineChange": "none"
                      },
                      {
                        "line": "    int rowsAffected = 0;",
                        "lineNumber": 475,
                        "lineChange": "none"
                      },
                      {
                        "line": "for (int tryCount = 0; tryCount < MAX_TRY_COUNT && !success; tryCount++) {",
                        "lineNumber": 479,
                        "lineChange": "none"
                      },
                      {
                        "line": "    try {",
                        "lineNumber": 480,
                        "lineChange": "none"
                      },
                      {
                        "line": "        rowsAffected = db.delete(getTableName(), where, whereArgs);",
                        "lineNumber": 481,
                        "lineChange": "none"
                      },
                      {
                        "line": "        postDeleteEvent(db, getTableName(), rowsAffected);",
                        "lineNumber": 482,
                        "lineChange": "none"
                      },
                      {
                        "line": "        success = true;",
                        "lineNumber": 483,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/keycloak/keycloak/commit/c8c86d2badb5ed97f9fbfe2c98e190c5a73cdb66?diff=split#diff-df89d441bd8b2c3dd63c28b12e23245dL47",
                    "lines": [
                      {
                        "line": "@Inject",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "private EntityManager entityManager;",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "@Context",
                        "lineNumber": 48,
                        "lineChange": "none"
                      },
                      {
                        "line": "@Path(\"{id}\")",
                        "lineNumber": 99,
                        "lineChange": "none"
                      },
                      {
                        "line": "@Produces(\"application/json\")",
                        "lineNumber": 100,
                        "lineChange": "none"
                      },
                      {
                        "line": "public Response findById(@PathParam(\"id\") String id) {",
                        "lineNumber": 101,
                        "lineChange": "none"
                      },
                      {
                        "line": "    List result = this.entityManager.createQuery(\"from Album where id = \" + id).getResultList();",
                        "lineNumber": 102,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    List result = this.entityManager.createQuery(\"from Album where id = \" + Long.valueOf(id)).getResultList();",
                        "lineNumber": 102,
                        "lineChange": "added"
                      },
                      {
                        "line": "    if (result.isEmpty()) {",
                        "lineNumber": 104,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/nuls-io/nuls/commit/7ff6aaf43ba54ec5cce6d03f7243e5a941fb3e4a?diff=split#diff-0444fba3b07c567a52ceed78978dc18bR532",
                    "lines": [
                      {
                        "line": "}",
                        "lineNumber": 536,
                        "lineChange": "none"
                      },
                      {
                        "line": " * @return",
                        "lineNumber": 529,
                        "lineChange": "added"
                      },
                      {
                        "line": " */",
                        "lineNumber": 530,
                        "lineChange": "added"
                      },
                      {
                        "line": "@Deprecated",
                        "lineNumber": 531,
                        "lineChange": "added"
                      },
                      {
                        "line": "public static Result delete(String area, String key) {",
                        "lineNumber": 538,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (!baseCheckArea(area)) {",
                        "lineNumber": 539,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return new Result(true, \"KV_AREA_NOT_EXISTS\");",
                        "lineNumber": 540,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }",
                        "lineNumber": 541,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (StringUtils.isBlank(key)) {",
                        "lineNumber": 542,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return Result.getFailed(KernelErrorCode.NULL_PARAMETER);",
                        "lineNumber": 543,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }",
                        "lineNumber": 544,
                        "lineChange": "none"
                      },
                      {
                        "line": "    try {",
                        "lineNumber": 545,
                        "lineChange": "none"
                      },
                      {
                        "line": "        DB db = AREAS.get(area);",
                        "lineNumber": 546,
                        "lineChange": "none"
                      },
                      {
                        "line": "        db.delete(bytes(key));",
                        "lineNumber": 547,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return Result.getSuccess();",
                        "lineNumber": 548,
                        "lineChange": "none"
                      },
                      {
                        "line": "    } catch (Exception e) {",
                        "lineNumber": 549,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "- Support hive user impersonation on hive tables page",
                  "* Moves converter pattern to Java 11",
                  "Add query logging."
                ],
                "precision": "very-high",
                "repoDatasetSize": 197,
                "cwe": [
                  "CWE-89"
                ]
              }
            },
            {
              "id": "javascript/NoHardcodedPasswords",
              "name": "NoHardcodedPasswords",
              "shortDescription": {
                "text": "Use of Hardcoded Credentials"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nDevelopers may use hardcoded credentials for convenience when coding in order to simplify their workflow. While they are responsible for removing these before production, occasionally this task may fall through the cracks. This also becomes a maintenance challenge when credentials are re-used across multiple applications.\n\nOnce attackers gain access, they may take advantage of privilege level to remove or alter data, take down a site or app, or hold any of the above for ransom. The risk across multiple similar projects is even greater. If code containing the credentials is reused across multiple projects, they will all be compromised.\n\n### Best practices for prevention\n* Plan software architecture such that keys and passwords are always stored outside the code, wherever possible.\n* Plan encryption into software architecture for all credential information and ensure proper handling of keys, credentials, and passwords.\n* Prompt for a secure password on first login rather than hard-code a default password.\n* If a hardcoded password or credential must be used, limit its use, for example, to system console users rather than via the network.\n* Use strong hashes for inbound password authentication, ideally with randomly assigned salts to increase the difficulty level in case of brute-force attack.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/csprance/MisRCON/commit/72964f54abde81f9f40d88ebe16b583ebfec8904?diff=split#diff-3733a6fa6d50cc4d78c76e60f128404eL11",
                    "lines": [
                      {
                        "line": "ip: 'loading',",
                        "lineNumber": 8,
                        "lineChange": "removed"
                      },
                      {
                        "line": "ip: '',",
                        "lineNumber": 8,
                        "lineChange": "added"
                      },
                      {
                        "line": "port: 0,",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "password: 'THisIsCool324HashMan',",
                        "lineNumber": 10,
                        "lineChange": "removed"
                      },
                      {
                        "line": "password: '',",
                        "lineNumber": 10,
                        "lineChange": "added"
                      },
                      {
                        "line": "active: true,",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "selfHosted: false,",
                        "lineNumber": 12,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/bradwestfall/house-rules/commit/f96c3465d59030b2d853574e01f58d2d8fef4556?diff=split#diff-c90d23fc26d6eeec89e1d77807b6bbbbL21",
                    "lines": [
                      {
                        "line": " ",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "let errors = loginFormSchema.validate({",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "  email: 'test@test.com',",
                        "lineNumber": 19,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  password: 'somepassword'",
                        "lineNumber": 20,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  password: undefined",
                        "lineNumber": 19,
                        "lineChange": "added"
                      },
                      {
                        "line": "})",
                        "lineNumber": 21,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Madmous/madClones/commit/31843ab238a5d3d988c360bc3b01b719cc588c9f?diff=split#diff-374c156c3cd1b9952bee7d8064382f69L26",
                    "lines": [
                      {
                        "line": "  email: 'testEmail@email.com',",
                        "lineNumber": 23,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  email: 'test@email.com',",
                        "lineNumber": 23,
                        "lineChange": "added"
                      },
                      {
                        "line": "  application: 'test application',",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "  password: 'testPassword'",
                        "lineNumber": 25,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  password: 'test'",
                        "lineNumber": 25,
                        "lineChange": "added"
                      },
                      {
                        "line": "});",
                        "lineNumber": 26,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Fixing type errors in tests",
                  "This commit disables the password change tests.",
                  "Mock api() tests"
                ],
                "precision": "very-high",
                "repoDatasetSize": 522,
                "cwe": [
                  "CWE-798",
                  "CWE-259"
                ]
              }
            },
            {
              "id": "python/Jinja2AutoEscapeFalse/test",
              "name": "Jinja2AutoEscapeFalse/test",
              "shortDescription": {
                "text": "Jinja auto-escape is set to false."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "## Details\n\nJinja2 is a python templating library that can be configured to escape values and avoid XSS vulnerabilities. However, the library by default sets the autoescaping to false.\n\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\n\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser's Same Origin Policy.\n\nInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\n\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they've been correctly escaped in the application code and in this way the attempted attack is diverted.\n\nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware.\n\n### Types of attacks\nThere are a few methods by which XSS can be manipulated:\n\n|Type|Origin|Description|\n|--|--|--|\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user's browser.|\n|**DOM-based**|Client|The attacker forces the user's browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\n\n### Affected environments\nThe following environments are susceptible to an XSS attack:\n\n* Web servers\n* Application servers\n* Web application environments\n\n### How to prevent\nThis section describes the top best practices designed to specifically protect your code:\n\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches.\n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents.\n* Give users the option to disable client-side scripts.\n* Redirect invalid requests.\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/pallets/jinja/commit/d767d27f12710ddb332731aa6eacdfffdb5801d6?diff=split#diff-b096534cf5e66f487efd00c464cf19b3L475",
                    "lines": [
                      {
                        "line": "def test_autoescape_macros(self):",
                        "lineNumber": 473,
                        "lineChange": "none"
                      },
                      {
                        "line": "    env = Environment(autoescape=False, extensions=['jinja2.ext.autoescape'])",
                        "lineNumber": 474,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    env = Environment(autoescape=False, extensions=['jinja.ext.autoescape'])",
                        "lineNumber": 465,
                        "lineChange": "added"
                      },
                      {
                        "line": "    template = (",
                        "lineNumber": 475,
                        "lineChange": "none"
                      },
                      {
                        "line": "        '{% macro m() %}<html>{% endmacro %}'",
                        "lineNumber": 476,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/alanmcruickshank/sqlfluff/commit/7ebd003db8018d603c6750209bdae6f9d5932772?diff=split#diff-194c35328c635537a15ed65c37e578baL212",
                    "lines": [
                      {
                        "line": "from jinja2 import Environment, StrictUndefined  # noqa",
                        "lineNumber": 209,
                        "lineChange": "removed"
                      },
                      {
                        "line": "from jinja2.sandbox import SandboxedEnvironment  # noqa ",
                        "lineNumber": 210,
                        "lineChange": "added"
                      },
                      {
                        "line": "# We explicitly want to preserve newlines.",
                        "lineNumber": 211,
                        "lineChange": "none"
                      },
                      {
                        "line": "env = Environment(",
                        "lineNumber": 211,
                        "lineChange": "removed"
                      },
                      {
                        "line": "env = SandboxedEnvironment(",
                        "lineNumber": 212,
                        "lineChange": "added"
                      },
                      {
                        "line": "    keep_trailing_newline=True, undefined=StrictUndefined,",
                        "lineNumber": 213,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # The do extension allows the \"do\" directive",
                        "lineNumber": 214,
                        "lineChange": "none"
                      },
                      {
                        "line": "    autoescape=False, extensions=['jinja2.ext.do']",
                        "lineNumber": 215,
                        "lineChange": "none"
                      },
                      {
                        "line": ")",
                        "lineNumber": 216,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/taoufik07/responder/commit/671499bb43a2ab3fdf780cc5d392c7025bbcfc9f?diff=split#diff-554e129ce3806dd33d00eac71a9a086eL225",
                    "lines": [
                      {
                        "line": "    )",
                        "lineNumber": 236,
                        "lineChange": "none"
                      },
                      {
                        "line": "else:",
                        "lineNumber": 237,
                        "lineChange": "none"
                      },
                      {
                        "line": "    env = jinja2.Environment(loader=jinja2.BaseLoader, autoescape=False)",
                        "lineNumber": 224,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    env = jinja2.Environment(",
                        "lineNumber": 238,
                        "lineChange": "added"
                      },
                      {
                        "line": "        loader=jinja2.BaseLoader, autoescape=jinja2.select_autoescape([])",
                        "lineNumber": 239,
                        "lineChange": "added"
                      },
                      {
                        "line": "    )",
                        "lineNumber": 240,
                        "lineChange": "added"
                      },
                      {
                        "line": "template = env.from_string(s)",
                        "lineNumber": 242,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "rename imports to jinja",
                  "Removed declaration of asbool in favour of pyramid.settings.asbool"
                ],
                "precision": "very-high",
                "repoDatasetSize": 4,
                "cwe": [
                  "CWE-79"
                ]
              }
            },
            {
              "id": "python/InsecureHash/test",
              "name": "InsecureHash/test",
              "shortDescription": {
                "text": "Use of Password Hash With Insufficient Computational Effort"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nSensitive information should never be stored in plain text, since this makes it very easy for unauthorized users, whether malicious insiders or outside attackers, to access. Hashing methods are used to make stored passwords and other sensitive data unreadable to users. For example, when a password is defined for the first time, it is hashed and then stored. The next time that user attempts to log on, the password they enter is hashed following the same procedure and compared with the stored value. In this way, the original password never needs to be stored in the system.\n\nHashing is a one-way scheme, meaning a hashed password cannot be reverse engineered. However, if an outdated or custom programmed hashing scheme is used, it becomes simple for an attacker with powerful modern computing power to gain access to the hashes used. This opens up access to all stored password information, leading to breached security. Therefore, it is essential for developers to understand modern, secure password hashing techniques.\n\n### Best practices for prevention\n* Use strong standard algorithms for hashing rather than simpler but outdated methods or DIY hashing schemes, which may have inherent weaknesses.\n* Use modular design for all code dealing with hashing so it can be swapped out as security standards change over time.\n* Use salting in combination with hashing (While this places more demands on resources, it is an essential step for tighter security.).\n* Implement zero-trust architecture to ensure that access to password data is granted only for legitimate business purposes.\n* Increase developer awareness of current standards in data security and cryptography.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 0,
                "cwe": [
                  "CWE-916"
                ]
              }
            },
            {
              "id": "php/HardcodedPassword",
              "name": "HardcodedPassword",
              "shortDescription": {
                "text": "Use of Hardcoded Credentials"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nDevelopers may use hardcoded credentials for convenience when coding in order to simplify their workflow. While they are responsible for removing these before production, occasionally this task may fall through the cracks. This also becomes a maintenance challenge when credentials are re-used across multiple applications.\n\nOnce attackers gain access, they may take advantage of privilege level to remove or alter data, take down a site or app, or hold any of the above for ransom. The risk across multiple similar projects is even greater. If code containing the credentials is reused across multiple projects, they will all be compromised.\n\n### Best practices for prevention\n* Plan software architecture such that keys and passwords are always stored outside the code, wherever possible.\n* Plan encryption into software architecture for all credential information and ensure proper handling of keys, credentials, and passwords.\n* Prompt for a secure password on first login rather than hard-code a default password.\n* If a hardcoded password or credential must be used, limit its use, for example, to system console users rather than via the network.\n* Use strong hashes for inbound password authentication, ideally with randomly assigned salts to increase the difficulty level in case of brute-force attack.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "php"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 0,
                "cwe": [
                  "CWE-798",
                  "CWE-259"
                ]
              }
            },
            {
              "id": "csharp/NoHardcodedCredentials/test",
              "name": "NoHardcodedCredentials/test",
              "shortDescription": {
                "text": "Use of Hardcoded Credentials"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nDevelopers may use hardcoded credentials for convenience when coding in order to simplify their workflow. While they are responsible for removing these before production, occasionally this task may fall through the cracks. This also becomes a maintenance challenge when credentials are re-used across multiple applications.\n\nOnce attackers gain access, they may take advantage of privilege level to remove or alter data, take down a site or app, or hold any of the above for ransom. The risk across multiple similar projects is even greater. If code containing the credentials is reused across multiple projects, they will all be compromised.\n\n### Best practices for prevention\n* Plan software architecture such that keys and passwords are always stored outside the code, wherever possible.\n* Plan encryption into software architecture for all credential information and ensure proper handling of keys, credentials, and passwords.\n* Prompt for a secure password on first login rather than hard-code a default password.\n* If a hardcoded password or credential must be used, limit its use, for example, to system console users rather than via the network.\n* Use strong hashes for inbound password authentication, ideally with randomly assigned salts to increase the difficulty level in case of brute-force attack.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "csharp"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/JeremyLikness/BlazorWasmEFCoreExample/commit/2c891738e38a92d5d1574eafcb40e5f6e498aa02?diff=split#diff-6f1dbc0a380174c6e9cb1d61b2a053a7L31",
                    "lines": [
                      {
                        "line": "    Func<Task<int>> saveChangesAsync)",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "{",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "    var user = \"Unknown\";",
                        "lineNumber": 30,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    var user = Unknown;",
                        "lineNumber": 31,
                        "lineChange": "added"
                      },
                      {
                        "line": "    // grab user identifier",
                        "lineNumber": 33,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Altinn/altinn-studio/commit/2f20fdac8b40893ff6e3a3141a063057735c05f9?diff=split#diff-2e730baa8831d7e708e7163620a2a05dL191",
                    "lines": [
                      {
                        "line": "public async Task<IActionResult> Login()",
                        "lineNumber": 189,
                        "lineChange": "none"
                      },
                      {
                        "line": "{",
                        "lineNumber": 190,
                        "lineChange": "none"
                      },
                      {
                        "line": "    string userName = \"TestUser\";",
                        "lineNumber": 190,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    string userName = string.Empty;",
                        "lineNumber": 191,
                        "lineChange": "added"
                      },
                      {
                        "line": "    string goToUrl = \"/\";",
                        "lineNumber": 192,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/angelsix/fasetto-word/commit/79f26a6658baa47205c9c4345767cf179f891ebd?diff=split#diff-c602dd61610843bf3e9405215c4b8566L29",
                    "lines": [
                      {
                        "line": "// For now set username",
                        "lineNumber": 27,
                        "lineChange": "removed"
                      },
                      {
                        "line": "var username = \"angelsix\";",
                        "lineNumber": 28,
                        "lineChange": "removed"
                      },
                      {
                        "line": "// Get username",
                        "lineNumber": 110,
                        "lineChange": "added"
                      },
                      {
                        "line": "var username = user.UserName;",
                        "lineNumber": 111,
                        "lineChange": "added"
                      },
                      {
                        "line": "// Set our tokens claims",
                        "lineNumber": 113,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "* Testing upgrade and parity validation",
                  "* Contracts documentation"
                ],
                "precision": "very-high",
                "repoDatasetSize": 46,
                "cwe": [
                  "CWE-798"
                ]
              }
            },
            {
              "id": "java/TooPermissiveTrustManager",
              "name": "TooPermissiveTrustManager",
              "shortDescription": {
                "text": "Improper Certificate Validation"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nCommunication through encrypted TLS/SSL protocols can only take place when the server bears a valid certificate associating that server with a valid public-key identity issued by a third-party authority. If certificate validation is cursory or incomplete, this creates a weakness whereby an attacker can spoof one or more certificate details (e.g., expiration date), gaining unauthorized access to confidential data and privileged actions.\n\n### Best practices for prevention\n* Verify all aspects of any certificate provided, particularly chain of trust (issuing authority), host identity, and expiration.\n* Limit the validity period for certificates.\n* Avoid using self-signed certificates, certificate pinning, and wildcard certificates, as these all add levels of convenience but can also lead to loss of control over site/app security.\n* Disable older and insecure protocols (for example, SSL 2.0/3.0, MD5, and 3DES).\n* Ensure that all team members are familiar with current best practices and approaches, such as current TLS protocols.\n* Implement automated and manual testing using current tools and techniques designed to reveal this and related SSL weaknesses (for example, web application scanners).",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/pentaho/pentaho-kettle/commit/5a4014d3e4e7307198635a1d9d1cbe7e868fb889?diff=split#diff-b711fa3a1339a77fb1b62ea5a608f827L143",
                    "lines": [
                      {
                        "line": "  }",
                        "lineNumber": 143,
                        "lineChange": "none"
                      },
                      {
                        "line": "  @Override",
                        "lineNumber": 145,
                        "lineChange": "none"
                      },
                      {
                        "line": "  public X509Certificate[] getAcceptedIssuers() {",
                        "lineNumber": 146,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return null;",
                        "lineNumber": 144,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    return new X509Certificate[0];",
                        "lineNumber": 147,
                        "lineChange": "added"
                      },
                      {
                        "line": "  }",
                        "lineNumber": 148,
                        "lineChange": "none"
                      },
                      {
                        "line": "};",
                        "lineNumber": 149,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/guardianproject/NetCipher/commit/3b971438ed74870685f404c43feae65fc413d703?diff=split#diff-6f4869070d4eee5c76931a7bf27ed055L179",
                    "lines": [
                      {
                        "line": "}",
                        "lineNumber": 181,
                        "lineChange": "none"
                      },
                      {
                        "line": "public void checkClientTrusted(X509Certificate[] arg0, String arg1) throws CertificateException {",
                        "lineNumber": 183,
                        "lineChange": "none"
                      },
                      {
                        "line": "    //not yet implemented",
                        "lineNumber": 179,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    ",
                        "lineNumber": 184,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tdebug (\"WARNING: Client Cert Trust NOT YET IMPLEMENTED\");",
                        "lineNumber": 185,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 186,
                        "lineChange": "none"
                      },
                      {
                        "line": "{",
                        "lineNumber": 671,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tif (SHOW_DEBUG_OUTPUT)",
                        "lineNumber": 672,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tLog.d(TAG, msg);",
                        "lineNumber": 673,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 674,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/HtmlUnit/htmlunit/commit/2ab74fb459fa25764fa3c6f56d00cf076fadf69d?diff=split#diff-3070dfb96ed2fae966d731bf849982d1L125",
                    "lines": [
                      {
                        "line": " * {@inheritDoc}",
                        "lineNumber": 127,
                        "lineChange": "none"
                      },
                      {
                        "line": " */",
                        "lineNumber": 128,
                        "lineChange": "none"
                      },
                      {
                        "line": "public void checkClientTrusted(final X509Certificate[] chain, final String authType) throws CertificateException {",
                        "lineNumber": 129,
                        "lineChange": "none"
                      },
                      {
                        "line": "    // Everyone is trusted!",
                        "lineNumber": 130,
                        "lineChange": "none"
                      },
                      {
                        "line": "    acceptedIssuers_.addAll(Arrays.asList(chain));",
                        "lineNumber": 131,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 132,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Finalize tests for HTTP libraries",
                  "Relates elastic/elasticsearch",
                  "* Allow possibility for pushing trust issue to user"
                ],
                "precision": "very-high",
                "repoDatasetSize": 54,
                "cwe": [
                  "CWE-295"
                ]
              }
            },
            {
              "id": "javascript/NoHardcodedCredentials",
              "name": "NoHardcodedCredentials",
              "shortDescription": {
                "text": "Use of Hardcoded Credentials"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nDevelopers may use hardcoded credentials for convenience when coding in order to simplify their workflow. While they are responsible for removing these before production, occasionally this task may fall through the cracks. This also becomes a maintenance challenge when credentials are re-used across multiple applications.\n\nOnce attackers gain access, they may take advantage of privilege level to remove or alter data, take down a site or app, or hold any of the above for ransom. The risk across multiple similar projects is even greater. If code containing the credentials is reused across multiple projects, they will all be compromised.\n\n### Best practices for prevention\n* Plan software architecture such that keys and passwords are always stored outside the code, wherever possible.\n* Plan encryption into software architecture for all credential information and ensure proper handling of keys, credentials, and passwords.\n* Prompt for a secure password on first login rather than hard-code a default password.\n* If a hardcoded password or credential must be used, limit its use, for example, to system console users rather than via the network.\n* Use strong hashes for inbound password authentication, ideally with randomly assigned salts to increase the difficulty level in case of brute-force attack.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/IBM/smart-email-support/commit/a21929524dc0906fc32369d65acfa417335822cc?diff=split#diff-0364f57fbff2fabbe941ed20c328ef1aL63",
                    "lines": [
                      {
                        "line": "   }",
                        "lineNumber": 60,
                        "lineChange": "none"
                      },
                      {
                        "line": "   var config = require('./config.json');",
                        "lineNumber": 61,
                        "lineChange": "added"
                      },
                      {
                        "line": "   process.env.support_email_id = 'patternemailautomation@gmail.com';",
                        "lineNumber": 62,
                        "lineChange": "none"
                      },
                      {
                        "line": "   process.env.sendgrid_api_key = '';",
                        "lineNumber": 62,
                        "lineChange": "removed"
                      },
                      {
                        "line": "   me = '';",
                        "lineNumber": 63,
                        "lineChange": "removed"
                      },
                      {
                        "line": "   password = ''",
                        "lineNumber": 64,
                        "lineChange": "removed"
                      },
                      {
                        "line": "   process.env.sendgrid_api_key = config.sendgrid_api_key;",
                        "lineNumber": 63,
                        "lineChange": "added"
                      },
                      {
                        "line": "   me = config.me;",
                        "lineNumber": 64,
                        "lineChange": "added"
                      },
                      {
                        "line": "   password = config.password",
                        "lineNumber": 65,
                        "lineChange": "added"
                      },
                      {
                        "line": "    //process.exit(1);",
                        "lineNumber": 66,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 67,
                        "lineChange": "none"
                      },
                      {
                        "line": "const sgMail = require('@sendgrid/mail');",
                        "lineNumber": 402,
                        "lineChange": "none"
                      },
                      {
                        "line": "sgMail.setApiKey(sendgrid_api_key);",
                        "lineNumber": 403,
                        "lineChange": "none"
                      },
                      {
                        "line": "const msg = {",
                        "lineNumber": 404,
                        "lineChange": "none"
                      },
                      {
                        "line": "  to: emailDetails.emailSection.from,",
                        "lineNumber": 405,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/readium/readium-desktop/commit/2bedb5b474ba0a485a9f981aea8ffa43abad164a?diff=split#diff-78b4461ec5c61ac524f5719113995d00L183",
                    "lines": [
                      {
                        "line": "private downloadCatalog (user?: User) {",
                        "lineNumber": 186,
                        "lineChange": "none"
                      },
                      {
                        "line": "    let username = \"\";",
                        "lineNumber": 182,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    let password = \"\";",
                        "lineNumber": 183,
                        "lineChange": "removed"
                      },
                      {
                        "line": "}",
                        "lineNumber": 188,
                        "lineChange": "removed"
                      },
                      {
                        "line": "request.get(this.props.opds.url, (error: any, response: any, body: any) => {",
                        "lineNumber": 190,
                        "lineChange": "removed"
                      },
                      {
                        "line": "let req = request.get(this.props.opds.url, (error: any, response: any, body: any) => {",
                        "lineNumber": 187,
                        "lineChange": "added"
                      },
                      {
                        "line": "    if (response && response.statusCode === 401) {",
                        "lineNumber": 191,
                        "lineChange": "none"
                      },
                      {
                        "line": "        this.props.openDialog(",
                        "lineNumber": 192,
                        "lineChange": "none"
                      },
                      {
                        "line": "});",
                        "lineNumber": 229,
                        "lineChange": "added"
                      },
                      {
                        "line": "if (user) {",
                        "lineNumber": 230,
                        "lineChange": "added"
                      },
                      {
                        "line": "    req.auth(user.username, user.password);",
                        "lineNumber": 231,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 232,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 233,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/dfoderick/fullcyclereact/commit/a6abd97bd776ce56da8ac321ad0e1b500f67721d?diff=split#diff-ca64812ac15b141271f726a5a95a3402L22",
                    "lines": [
                      {
                        "line": "const redis_port = 6379",
                        "lineNumber": 19,
                        "lineChange": "removed"
                      },
                      {
                        "line": "const redis_host = serverhost",
                        "lineNumber": 20,
                        "lineChange": "removed"
                      },
                      {
                        "line": "const redis_password = ''",
                        "lineNumber": 21,
                        "lineChange": "removed"
                      },
                      {
                        "line": "//Message envelope for putting messages on the bus",
                        "lineNumber": 23,
                        "lineChange": "removed"
                      },
                      {
                        "line": "function redisclient(){",
                        "lineNumber": 98,
                        "lineChange": "none"
                      },
                      {
                        "line": "  var client = redis.createClient(redis_port, redis_host, {no_ready_check: true});",
                        "lineNumber": 99,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  client.auth(redis_password, function (err) {",
                        "lineNumber": 100,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  var client = redis.createClient(services.redis.port, services.redis.host, {no_ready_check: true});",
                        "lineNumber": 54,
                        "lineChange": "added"
                      },
                      {
                        "line": "  client.auth(services.redis.password, function (err) {",
                        "lineNumber": 55,
                        "lineChange": "added"
                      },
                      {
                        "line": "     if (err) throw err;",
                        "lineNumber": 101,
                        "lineChange": "none"
                      },
                      {
                        "line": "  });",
                        "lineNumber": 102,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "* Update test dependencies",
                  "* Migrate user tests to frisby2",
                  "added get user for id test"
                ],
                "precision": "very-high",
                "repoDatasetSize": 210,
                "cwe": [
                  "CWE-798"
                ]
              }
            },
            {
              "id": "java/UsageOfUnencryptedSocket/test",
              "name": "UsageOfUnencryptedSocket/test",
              "shortDescription": {
                "text": "Cleartext Transmission of Sensitive Information"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\nThis weakness occurs when software transmits sensitive information, such as passwords or credit card numbers, in unencrypted form. This information may then be intercepted by threat actors using sniffer tools or interception techniques such as man-in-the-middle (MITM) attacks (often involving social engineering). Attackers can then use information gleaned to perform a variety of actions, depending on the information type. Possible actions include gaining unauthorized access, impersonating a user, moving laterally within the organization's network, or retrieving and potentially modifying files. This weakness is almost completely avoidable through intelligent architecture and design.\n\n### Best practices for prevention\n* Build web applications around a security mindset and the awareness that sniffers may be present at any time.\n* Ensure that all sensitive data transmission uses reliable encryption.\n* Implement security measures so that sensitive results are never returned in plain text.\n* Implement multiple-factor authentication methods to validate remote instances.\n* Use SSL not only at logon but throughout communications.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/ME1312/SubServers-2/commit/9a219a7d0fd259870a94d1f875f3cbb3c942ec1e?diff=split#diff-4a76c605749ad18708be15720e8fac67L57",
                    "lines": [
                      {
                        "line": "public SubDataClient(SubPlugin plugin, InetAddress address, int port, Encryption encryption) throws IOException {",
                        "lineNumber": 58,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (Util.isNull(plugin, address, port)) throw new NullPointerException();",
                        "lineNumber": 59,
                        "lineChange": "none"
                      },
                      {
                        "line": "    socket = new Socket(address, port);",
                        "lineNumber": 56,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    socket = new NamedContainer<>(false, new Socket(address, port));",
                        "lineNumber": 60,
                        "lineChange": "added"
                      },
                      {
                        "line": "    this.plugin = plugin;",
                        "lineNumber": 61,
                        "lineChange": "none"
                      },
                      {
                        "line": "    this.writer = new PrintWriter(socket.getOutputStream(), true);",
                        "lineNumber": 58,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    this.writer = new PrintWriter(socket.get().getOutputStream(), true);",
                        "lineNumber": 62,
                        "lineChange": "added"
                      },
                      {
                        "line": "    this.encryption = encryption;",
                        "lineNumber": 63,
                        "lineChange": "none"
                      },
                      {
                        "line": "    this.queue = new LinkedList<NamedContainer<String, PacketOut>>();",
                        "lineNumber": 64,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/dddpaul/android-SimpleNetCat/commit/3235f85ae26fa31e1e36739c608668e15c53a04c?diff=split#diff-6689eedf89cc41d9c93933ea7ff5ebf4L62",
                    "lines": [
                      {
                        "line": "    int port = Integer.parseInt( params[2] );",
                        "lineNumber": 63,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Log.d( CLASS_NAME, String.format( \"Connecting to %s:%d\", host, port ) );",
                        "lineNumber": 64,
                        "lineChange": "none"
                      },
                      {
                        "line": "    socket = new Socket( host, port );",
                        "lineNumber": 61,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    result.object = new Socket( host, port );",
                        "lineNumber": 65,
                        "lineChange": "added"
                      },
                      {
                        "line": "    break;",
                        "lineNumber": 66,
                        "lineChange": "none"
                      },
                      {
                        "line": "case RECEIVE:",
                        "lineNumber": 67,
                        "lineChange": "none"
                      },
                      {
                        "line": "{",
                        "lineNumber": 110,
                        "lineChange": "none"
                      },
                      {
                        "line": "    BufferedReader reader = new BufferedReader( new InputStreamReader( input ) );",
                        "lineNumber": 111,
                        "lineChange": "none"
                      },
                      {
                        "line": "    PrintWriter writer = new PrintWriter( socket.getOutputStream() );",
                        "lineNumber": 112,
                        "lineChange": "none"
                      },
                      {
                        "line": "    transferStreams( reader, writer );",
                        "lineNumber": 113,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 114,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/rancher/cattle/commit/b06df6f37fdfe906b7804fbba41d2c02d472f8ab?diff=split#diff-125505ce5e24cbf259a0267dd1d3af77L314",
                    "lines": [
                      {
                        "line": "String[] parts = master.getConfig().getAdvertiseAddress().split(\":\");",
                        "lineNumber": 311,
                        "lineChange": "none"
                      },
                      {
                        "line": "try (",
                        "lineNumber": 312,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Socket socket = new Socket(parts[0], Integer.parseInt(parts[1]));",
                        "lineNumber": 313,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    OutputStream os = socket.getOutputStream();",
                        "lineNumber": 314,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    Socket socket = new Socket();",
                        "lineNumber": 313,
                        "lineChange": "added"
                      },
                      {
                        "line": ") {",
                        "lineNumber": 315,
                        "lineChange": "none"
                      },
                      {
                        "line": "    socket.connect(new InetSocketAddress(parts[0], Integer.parseInt(parts[1])), 5000);",
                        "lineNumber": 315,
                        "lineChange": "added"
                      },
                      {
                        "line": "    log.info(\"Connection test to master\");",
                        "lineNumber": 316,
                        "lineChange": "none"
                      },
                      {
                        "line": " } catch (IOException e) {",
                        "lineNumber": 317,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Use thread local sockets for everything except IDLE and STATUS.",
                  "- Adding a test that a locator can shut itself down\nwith SSL.",
                  "Added support for SSL secured Manager connections"
                ],
                "precision": "very-high",
                "repoDatasetSize": 108,
                "cwe": [
                  "CWE-319"
                ]
              }
            },
            {
              "id": "java/InsecureDefaultAesCipher",
              "name": "InsecureDefaultAesCipher",
              "shortDescription": {
                "text": "Use of a Broken or Risky Cryptographic Algorithm"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nWhen sensitive information is transmitted with weak encryption, attackers are potentially able to intercept the information and decrypt it, with a wide range of negative consequences. This includes accessing code or content they are not authorized to view and changing or taking down a site or app, often with a demand for ransom. Every developer is aware of the risks of transmitting sensitive information in plain text. Yet many still use outdated or inferior cryptographic methods to protect information under their control. As cryptographic methods grow stronger with time, code must be updated to incorporate more modern and secure cryptography.\n\n### Best practices for prevention\n* Avoid using DES, and use AES (in a secure mode, such as Galois/Counter Mode) or another strong encryption algorithm instead.\n* Be aware of outdated hashes, such as MD5 and SHA1 (along with many others); recognize and implement current cryptographic standards instead.\n* Never use custom or DIY security and cryptographic methods; instead, use methods that are part of an accepted library or framework.\n* Ensure that code dealing with cryptographic methods is highly modular and can be easily replaced as security standards change.\n* Increase developer awareness of proper encryption key management and protection to ensure best practices throughout the application.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/Esri/mapbook-android/commit/29dbb58917955ca69632a80cc189247f6398fdbb?diff=split#diff-9865f4effc693075a16c0a2b0657d46eL84",
                    "lines": [
                      {
                        "line": "public class CredentialCryptographer {",
                        "lineNumber": 81,
                        "lineChange": "none"
                      },
                      {
                        "line": "  private static final String TAG = CredentialCryptographer.class.getSimpleName();",
                        "lineNumber": 82,
                        "lineChange": "none"
                      },
                      {
                        "line": "  private static final String CIPHER_TYPE = \"AES/GCM/NoPadding\";",
                        "lineNumber": 83,
                        "lineChange": "none"
                      },
                      {
                        "line": "  private static final String RSA_MODE =  \"RSA/ECB/PKCS1Padding\";",
                        "lineNumber": 84,
                        "lineChange": "none"
                      },
                      {
                        "line": "  private static final String AES_MODE = \"AES/ECB/PKCS7Padding\";",
                        "lineNumber": 85,
                        "lineChange": "none"
                      },
                      {
                        "line": "  private static final String AndroidKeyStore = \"AndroidKeyStore\";",
                        "lineNumber": 86,
                        "lineChange": "none"
                      },
                      {
                        "line": "  private static final String ALIAS = \"CRED_KEY\";",
                        "lineNumber": 87,
                        "lineChange": "none"
                      },
                      {
                        "line": "final SecretKey key = (SecretKey) keyStore.getKey(ALIAS, null);",
                        "lineNumber": 236,
                        "lineChange": "none"
                      },
                      {
                        "line": "final Cipher c = Cipher.getInstance(CIPHER_TYPE);",
                        "lineNumber": 238,
                        "lineChange": "none"
                      },
                      {
                        "line": "final File file = new File(getFilePath(encryptedDataFileName));",
                        "lineNumber": 240,
                        "lineChange": "none"
                      },
                      {
                        "line": "byte [] decodedBytes = null;",
                        "lineNumber": 473,
                        "lineChange": "removed"
                      },
                      {
                        "line": "try{",
                        "lineNumber": 474,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  final Cipher c = Cipher.getInstance(AES_MODE, \"BC\");",
                        "lineNumber": 475,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  c.init(Cipher.DECRYPT_MODE, getSecretKey(context));",
                        "lineNumber": 476,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  decodedBytes = c.doFinal(encrypted);",
                        "lineNumber": 477,
                        "lineChange": "removed"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/jenkinsci/jenkins/commit/1ac357c2ea2cac85acc222aa5feb9a25c6b4346e?diff=split#diff-3f1937871076df5e4440785f2ac5ddd6L120",
                    "lines": [
                      {
                        "line": "String base64 = req.getHeader(\"X-ConsoleAnnotator\");",
                        "lineNumber": 117,
                        "lineChange": "none"
                      },
                      {
                        "line": "if (base64!=null) {",
                        "lineNumber": 118,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Cipher sym = Cipher.getInstance(\"AES\");",
                        "lineNumber": 119,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    Cipher sym = Secret.getCipher(\"AES\");",
                        "lineNumber": 117,
                        "lineChange": "added"
                      },
                      {
                        "line": "    sym.init(Cipher.DECRYPT_MODE, Hudson.getInstance().getSecretKeyAsAES128());",
                        "lineNumber": 120,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/tasos-py/AES-Encryption-Classes/commit/b11039b5febf20bbe854fc6bb1d401191a4ee29f?diff=split#diff-bfedf423ceee7772f0ec16aa9392fa8dL310",
                    "lines": [
                      {
                        "line": " */",
                        "lineNumber": 307,
                        "lineChange": "removed"
                      },
                      {
                        "line": "private Cipher cipher(int cipherMode, byte[] key, byte[] iv) {",
                        "lineNumber": 308,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  SecretKeySpec keySpec = new SecretKeySpec(key, \"AES\");",
                        "lineNumber": 309,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  IvParameterSpec ivSpec = new IvParameterSpec(iv);",
                        "lineNumber": 310,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  try {",
                        "lineNumber": 311,
                        "lineChange": "removed"
                      },
                      {
                        "line": "   */ ",
                        "lineNumber": 293,
                        "lineChange": "added"
                      },
                      {
                        "line": "  private Cipher cipher(int cipherMode, byte[] key, byte[] iv) {",
                        "lineNumber": 294,
                        "lineChange": "added"
                      },
                      {
                        "line": "      SecretKeySpec keySpec = new SecretKeySpec(key, \"AES\");",
                        "lineNumber": 295,
                        "lineChange": "added"
                      },
                      {
                        "line": "      IvParameterSpec ivSpec = new IvParameterSpec(iv);",
                        "lineNumber": 296,
                        "lineChange": "added"
                      },
                      {
                        "line": "      try {",
                        "lineNumber": 297,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Made changes to support CBC mode encryption",
                  "added all sha and AES tests"
                ],
                "precision": "very-high",
                "repoDatasetSize": 53,
                "cwe": [
                  "CWE-327"
                ]
              }
            },
            {
              "id": "java/ReturnsPassword/test",
              "name": "ReturnsPassword/test",
              "shortDescription": {
                "text": "Unprotected Storage of Credentials"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "## Details\n\nIf credentials are not protected or not sufficiently protected through strong encryption, attackers can access this information in a number of ways. Developers may rely on plain-text storage of credentials when they believe the system is completely secure from attack or only accessible to insiders. This confidence is misguided and dangerous. If a malicious insider-such as a former employee-or a hostile attacker using SQL injection, XML injection, or a brute-force attack accesses the system, they can access this credential information to gain unauthorized permissions within the system and to export other confidential and secure information.\n\n### Best practices for prevention\n* Ensure that passwords are never stored in plain text, even for \"purely internal\" use.\n* Never rely on password encoding, such as base 64 encoding; choose a complex encryption algorithm that includes salting, then hashing.\n* Implement zero-trust approaches in which users have access only to information needed for legitimate business purposes.\n* To the greatest extent possible, secure the application against injection attacks and other types of weaknesses.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/Raysmond/SpringBlog/commit/3fbcae1e4627151fef017182e2be25404efb6778?diff=split#diff-5db28c34e3a8215d068e1650562a5e85L78",
                    "lines": [
                      {
                        "line": "logger.info(\"\" + passwordEncoder.matches(password, user.getPassword()));",
                        "lineNumber": 76,
                        "lineChange": "none"
                      },
                      {
                        "line": "if (!user.getPassword().equals(passwordEncoder.encode(password)))",
                        "lineNumber": 77,
                        "lineChange": "removed"
                      },
                      {
                        "line": "boolean match = passwordEncoder.matches(password, user.getPassword());",
                        "lineNumber": 77,
                        "lineChange": "added"
                      },
                      {
                        "line": "if (!match)",
                        "lineNumber": 78,
                        "lineChange": "added"
                      },
                      {
                        "line": "    return false;",
                        "lineNumber": 79,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/linlinjava/litemall/commit/62964b8be5856976d673e0942a3457d252147d47?diff=split#diff-350e06b09af70876f8b603fb1d33080fL64",
                    "lines": [
                      {
                        "line": "}",
                        "lineNumber": 62,
                        "lineChange": "none"
                      },
                      {
                        "line": "if(!user.getPassword().equals(password)){",
                        "lineNumber": 63,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    return ResponseUtil.badArgumentValue();",
                        "lineNumber": 64,
                        "lineChange": "removed"
                      },
                      {
                        "line": "BCryptPasswordEncoder encoder = new BCryptPasswordEncoder();",
                        "lineNumber": 64,
                        "lineChange": "added"
                      },
                      {
                        "line": "if(!encoder.matches(password, user.getPassword())){",
                        "lineNumber": 65,
                        "lineChange": "added"
                      },
                      {
                        "line": "    return ResponseUtil.fail(403, \"Þ┤ªÕÅÀÕ»åþáüõ©ìÕ»╣\");",
                        "lineNumber": 66,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 67,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/guchengwuyue/yshopmall/commit/28985ae95e09e9433788475d8bef2a10a197d0ec?diff=split#diff-3eddbc993068925ffebe6bd98b170164L155",
                    "lines": [
                      {
                        "line": "    throw new BadRequestException(\"õ┐«µö╣Õñ▒Þ┤Ñ´╝îµùºÕ»åþáüÚöÖÞ»»\");",
                        "lineNumber": 176,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 177,
                        "lineChange": "none"
                      },
                      {
                        "line": "if(userDetails.getPassword().equals(EncryptUtils.encryptPassword(user.getNewPass()))){",
                        "lineNumber": 154,
                        "lineChange": "removed"
                      },
                      {
                        "line": "if(passwordEncoder.matches(newPass, user.getPassword())){",
                        "lineNumber": 178,
                        "lineChange": "added"
                      },
                      {
                        "line": "    throw new BadRequestException(\"µû░Õ»åþáüõ©ìÞâ¢õ©ÄµùºÕ»åþáüþø©ÕÉî\");",
                        "lineNumber": 179,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 180,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Rollback to Password File instead of password"
                ],
                "precision": "very-high",
                "repoDatasetSize": 147,
                "cwe": [
                  "CWE-256"
                ]
              }
            },
            {
              "id": "java/HardcodedPassword",
              "name": "HardcodedPassword",
              "shortDescription": {
                "text": "Use of Hardcoded Credentials"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nDevelopers may use hardcoded credentials for convenience when coding in order to simplify their workflow. While they are responsible for removing these before production, occasionally this task may fall through the cracks. This also becomes a maintenance challenge when credentials are re-used across multiple applications.\n\nOnce attackers gain access, they may take advantage of privilege level to remove or alter data, take down a site or app, or hold any of the above for ransom. The risk across multiple similar projects is even greater. If code containing the credentials is reused across multiple projects, they will all be compromised.\n\n### Best practices for prevention\n* Plan software architecture such that keys and passwords are always stored outside the code, wherever possible.\n* Plan encryption into software architecture for all credential information and ensure proper handling of keys, credentials, and passwords.\n* Prompt for a secure password on first login rather than hard-code a default password.\n* If a hardcoded password or credential must be used, limit its use, for example, to system console users rather than via the network.\n* Use strong hashes for inbound password authentication, ideally with randomly assigned salts to increase the difficulty level in case of brute-force attack.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/utluiz/spring-examples/commit/56e44932a3a004c3ac96ce1caa3e6d8817230f6e?diff=split#diff-19d771f687bc8ca37d378c39d20ed425L26",
                    "lines": [
                      {
                        "line": "  ds.setUrl(\"jdbc:mysql://localhost:3311/agenda\");",
                        "lineNumber": 23,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  ds.setUrl(\"jdbc:mysql://localhost/agenda\");",
                        "lineNumber": 20,
                        "lineChange": "added"
                      },
                      {
                        "line": "  ds.setUser(\"root\");",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "  ds.setPassword(\"root\");",
                        "lineNumber": 25,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  ds.setPassword(\"\");",
                        "lineNumber": 22,
                        "lineChange": "added"
                      },
                      {
                        "line": "  return ds;",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 27,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Evolveum/midpoint/commit/9ce1d7ff1e78ca65d6b614c52035e1971d1187cd?diff=split#diff-0003b3a408395a5640011d7c8422d19bL43",
                    "lines": [
                      {
                        "line": "      // set the password for our message.",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "      pc.setPassword(\"5ecr3t\");",
                        "lineNumber": 42,
                        "lineChange": "removed"
                      },
                      {
                        "line": "      pc.setPassword(Main.ADM_PASSWORD);",
                        "lineNumber": 42,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 43,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/theonedev/onedev/commit/ee60c786981347fc5ab6685656f3de2ea67045f7?diff=split#diff-7f6f95fdc3f39c216b4bd099d0ca65b6L60",
                    "lines": [
                      {
                        "line": "  System.exit(1);",
                        "lineNumber": 61,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 62,
                        "lineChange": "none"
                      },
                      {
                        "line": "root.setPassword(\"12345\");",
                        "lineNumber": 59,
                        "lineChange": "removed"
                      },
                      {
                        "line": "String password = Bootstrap.command.getArgs()[0];",
                        "lineNumber": 63,
                        "lineChange": "added"
                      },
                      {
                        "line": "root.setPassword(password);",
                        "lineNumber": 64,
                        "lineChange": "added"
                      },
                      {
                        "line": "accountManager.save(root);",
                        "lineNumber": 65,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Added user/password configuration from YML file.",
                  "Added ability to configure databases to run tests against."
                ],
                "precision": "very-high",
                "repoDatasetSize": 383,
                "cwe": [
                  "CWE-798",
                  "CWE-259"
                ]
              }
            },
            {
              "id": "java/IndirectCommandInjection",
              "name": "IndirectCommandInjection",
              "shortDescription": {
                "text": "Command Injection"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "## Details\n\nWith an OS command injection attack a web application user can pass commands directly to the system shell, attached to a legitimate request. These commands can then be executed on the application server, potentially leading to harmful consequences, including data exposure or deletion. Like code injection attacks, command injection attacks are essentially a failure of data validation. Unlike code injection attacks, which introduce new code, command injection attacks use existing system functions, often taking advantage of the application's unnecessarily high privilege level, increasing the risk of serious harm and reputational damage.\n\n### Best practices for prevention\n- Never trust user input. Assume any input may transmit harmful values.\n- Adopt the principle of least privilege: No application should have a greater access level than needed to run its required tasks.\n- Control user access policies on a task-by-task basis.\n- Don't pass user input directly to the system; use libraries or APIs that lack system access.\n- Where shell commands must be passed, escape values using functions like shlex for Python, or escapeshellarg() for PHP.\n- Sanitize user input with regular expressions to define permitted characters along with maximum string length.\n- Convert special characters such as `& |  ; $ > < \\ !` before passing to the server.\n- Whitelist permitted commands and validate user responses against these expectations.\n- Remember that code injection can take place on multiple fronts: GET and POST requests, but also cookies and HTTP headers.\n- Ensure up-to-date patching across all systems to remediate known vulnerabilities.\n- Educate all team members on safer data handling procedures to prevent attacks.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/apache/joshua/commit/92c797ffdee361adfdf10c91afe7af08d29e6e17?diff=split#diff-438e6e2bf8732a786b739705b7382c48L125",
                    "lines": [
                      {
                        "line": "static String decoderConfigFileName, decoderCommandFileName;",
                        "lineNumber": 126,
                        "lineChange": "none"
                      },
                      {
                        "line": "public static void main(String[] args) throws Exception",
                        "lineNumber": 128,
                        "lineChange": "none"
                      },
                      {
                        "line": "{",
                        "lineNumber": 129,
                        "lineChange": "none"
                      },
                      {
                        "line": "  EvaluationMetric.set_knownNames();",
                        "lineNumber": 130,
                        "lineChange": "none"
                      },
                      {
                        "line": "  System.exit(0);",
                        "lineNumber": 134,
                        "lineChange": "none"
                      },
                      {
                        "line": "} else if (args.length == 1) {",
                        "lineNumber": 135,
                        "lineChange": "none"
                      },
                      {
                        "line": "  processArgsArray(cfgFileToArgsArray(args[0]));",
                        "lineNumber": 136,
                        "lineChange": "none"
                      },
                      {
                        "line": "} else {",
                        "lineNumber": 137,
                        "lineChange": "none"
                      },
                      {
                        "line": "  processArgsArray(args);",
                        "lineNumber": 138,
                        "lineChange": "none"
                      },
                      {
                        "line": "for (int r = 0; r < refsPerSen; ++r) {",
                        "lineNumber": 149,
                        "lineChange": "none"
                      },
                      {
                        "line": "  println(\"Testing evaluation metric calculation on reference set \" + r + \":\",2);",
                        "lineNumber": 150,
                        "lineChange": "none"
                      },
                      {
                        "line": "  test_score(refFileName, refsPerSen, r, true,2);",
                        "lineNumber": 151,
                        "lineChange": "none"
                      },
                      {
                        "line": "  println(\"\",2);",
                        "lineNumber": 152,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 153,
                        "lineChange": "none"
                      },
                      {
                        "line": "println(\"\",1);",
                        "lineNumber": 189,
                        "lineChange": "none"
                      },
                      {
                        "line": "numParams = countLines(paramsFileName);",
                        "lineNumber": 191,
                        "lineChange": "none"
                      },
                      {
                        "line": "numSentences = countLines(sourceFileName);",
                        "lineNumber": 192,
                        "lineChange": "none"
                      },
                      {
                        "line": "if (numSentences * refsPerSen != countLines(refFileName)) {",
                        "lineNumber": 194,
                        "lineChange": "none"
                      },
                      {
                        "line": "  println(\"Line count mismatch between \" + sourceFileName + \" and \" + refFileName);",
                        "lineNumber": 195,
                        "lineChange": "none"
                      },
                      {
                        "line": "  System.exit(20);",
                        "lineNumber": 196,
                        "lineChange": "none"
                      },
                      {
                        "line": "// create copy of config file",
                        "lineNumber": 200,
                        "lineChange": "none"
                      },
                      {
                        "line": "copyFile(decoderConfigFileName,decoderConfigFileName+\".orig.MERT\");",
                        "lineNumber": 201,
                        "lineChange": "none"
                      },
                      {
                        "line": "// read paramter names",
                        "lineNumber": 212,
                        "lineChange": "none"
                      },
                      {
                        "line": "BufferedReader inFile_names = new BufferedReader(new FileReader(paramsFileName));",
                        "lineNumber": 213,
                        "lineChange": "none"
                      },
                      {
                        "line": "for (int c = 1; c <= numParams; ++c) {",
                        "lineNumber": 215,
                        "lineChange": "none"
                      },
                      {
                        "line": "// initialize lambda[]",
                        "lineNumber": 223,
                        "lineChange": "none"
                      },
                      {
                        "line": "Scanner inFile_init = new Scanner(new FileReader(paramsFileName));",
                        "lineNumber": 224,
                        "lineChange": "none"
                      },
                      {
                        "line": "String dummy = \"\";",
                        "lineNumber": 226,
                        "lineChange": "none"
                      },
                      {
                        "line": "// read in reference sentences",
                        "lineNumber": 280,
                        "lineChange": "none"
                      },
                      {
                        "line": "BufferedReader inFile_refs = new BufferedReader(new FileReader(refFileName));",
                        "lineNumber": 282,
                        "lineChange": "none"
                      },
                      {
                        "line": "String line;",
                        "lineNumber": 283,
                        "lineChange": "none"
                      },
                      {
                        "line": "// read in decoder command",
                        "lineNumber": 296,
                        "lineChange": "none"
                      },
                      {
                        "line": "BufferedReader inFile_comm = new BufferedReader(new FileReader(decoderCommandFileName));",
                        "lineNumber": 298,
                        "lineChange": "none"
                      },
                      {
                        "line": "decoderCommand = inFile_comm.readLine();",
                        "lineNumber": 299,
                        "lineChange": "none"
                      },
                      {
                        "line": "inFile_comm.close();",
                        "lineNumber": 300,
                        "lineChange": "none"
                      },
                      {
                        "line": "/******************************/",
                        "lineNumber": 415,
                        "lineChange": "none"
                      },
                      {
                        "line": "createConfigFile(lambda,decoderConfigFileName,decoderConfigFileName+\".orig.MERT\");",
                        "lineNumber": 417,
                        "lineChange": "none"
                      },
                      {
                        "line": "/***************/",
                        "lineNumber": 419,
                        "lineChange": "none"
                      },
                      {
                        "line": " ",
                        "lineNumber": 422,
                        "lineChange": "none"
                      },
                      {
                        "line": "      println(\"Running Joshua decoder...\",1);",
                        "lineNumber": 423,
                        "lineChange": "added"
                      },
                      {
                        "line": "      myDecoder.initializeDecoder(decoderConfigFileName);",
                        "lineNumber": 424,
                        "lineChange": "added"
                      },
                      {
                        "line": "      myDecoder.decodingTestSet(sourceFileName, decoderOutFileName);",
                        "lineNumber": 425,
                        "lineChange": "added"
                      },
                      {
                        "line": "/*",
                        "lineNumber": 427,
                        "lineChange": "added"
                      },
                      {
                        "line": "      println(\"Running decoder...\",1);",
                        "lineNumber": 428,
                        "lineChange": "none"
                      },
                      {
                        "line": " ",
                        "lineNumber": 429,
                        "lineChange": "none"
                      },
                      {
                        "line": "      Runtime rt = Runtime.getRuntime();",
                        "lineNumber": 430,
                        "lineChange": "none"
                      },
                      {
                        "line": "      Process p = rt.exec (decoderCommand);",
                        "lineNumber": 431,
                        "lineChange": "none"
                      },
                      {
                        "line": "      InputStream is = p.getErrorStream();",
                        "lineNumber": 432,
                        "lineChange": "none"
                      },
                      {
                        "line": "      InputStreamReader isr = new InputStreamReader(is);",
                        "lineNumber": 433,
                        "lineChange": "none"
                      },
                      {
                        "line": "println(\"Ensuring proper decoder output.\",2);",
                        "lineNumber": 451,
                        "lineChange": "none"
                      },
                      {
                        "line": "checkFile(decoderOutFileName);",
                        "lineNumber": 453,
                        "lineChange": "none"
                      },
                      {
                        "line": "fixDecoderOutput();",
                        "lineNumber": 455,
                        "lineChange": "none"
                      },
                      {
                        "line": "progress = 0;",
                        "lineNumber": 461,
                        "lineChange": "none"
                      },
                      {
                        "line": "BufferedReader inFile = new BufferedReader(new FileReader(decoderOutFileName));",
                        "lineNumber": 463,
                        "lineChange": "none"
                      },
                      {
                        "line": "String line, candidate_str;",
                        "lineNumber": 464,
                        "lineChange": "none"
                      },
                      {
                        "line": "if (saveInterCfg) {",
                        "lineNumber": 635,
                        "lineChange": "none"
                      },
                      {
                        "line": "  // create config file with current values",
                        "lineNumber": 636,
                        "lineChange": "none"
                      },
                      {
                        "line": "  createConfigFile(lambda, decoderConfigFileName+\".\"+iteration,decoderConfigFileName+\".orig.MERT\");",
                        "lineNumber": 637,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 638,
                        "lineChange": "none"
                      },
                      {
                        "line": "private static void fixDecoderOutput() throws Exception",
                        "lineNumber": 983,
                        "lineChange": "none"
                      },
                      {
                        "line": "{",
                        "lineNumber": 984,
                        "lineChange": "none"
                      },
                      {
                        "line": "  copyFile(decoderOutFileName,decoderOutFileName+\".temp.MERT\");",
                        "lineNumber": 985,
                        "lineChange": "none"
                      },
                      {
                        "line": "  BufferedReader inFile = new BufferedReader(new FileReader(decoderOutFileName+\".temp.MERT\"));",
                        "lineNumber": 986,
                        "lineChange": "none"
                      },
                      {
                        "line": "  PrintWriter outFile = new PrintWriter(decoderOutFileName);",
                        "lineNumber": 987,
                        "lineChange": "none"
                      },
                      {
                        "line": "  String line, prevLine;",
                        "lineNumber": 988,
                        "lineChange": "none"
                      },
                      {
                        "line": "  // delete temp copy of old decoder output",
                        "lineNumber": 1033,
                        "lineChange": "none"
                      },
                      {
                        "line": "  File cp = new File(decoderOutFileName+\".temp.MERT\");",
                        "lineNumber": 1034,
                        "lineChange": "none"
                      },
                      {
                        "line": "  cp.delete();",
                        "lineNumber": 1035,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 1037,
                        "lineChange": "none"
                      },
                      {
                        "line": "private static void createConfigFile(double[] params, String cfgFileName, String templateFileName) throws Exception",
                        "lineNumber": 1039,
                        "lineChange": "none"
                      },
                      {
                        "line": "{",
                        "lineNumber": 1040,
                        "lineChange": "none"
                      },
                      {
                        "line": "  // i.e. create cfgFileName, which is similar to templateFileName, but with",
                        "lineNumber": 1041,
                        "lineChange": "none"
                      },
                      {
                        "line": "BufferedReader inFile = new BufferedReader(new FileReader(templateFileName));",
                        "lineNumber": 1044,
                        "lineChange": "none"
                      },
                      {
                        "line": "PrintWriter outFile = new PrintWriter(cfgFileName);",
                        "lineNumber": 1045,
                        "lineChange": "none"
                      },
                      {
                        "line": "String line = inFile.readLine();",
                        "lineNumber": 1047,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 1067,
                        "lineChange": "none"
                      },
                      {
                        "line": "private static void copyFile(String sourceFileName, String targetFileName) throws Exception",
                        "lineNumber": 1069,
                        "lineChange": "none"
                      },
                      {
                        "line": "{",
                        "lineNumber": 1070,
                        "lineChange": "none"
                      },
                      {
                        "line": "  InputStream inStream = new FileInputStream(new File(sourceFileName));",
                        "lineNumber": 1071,
                        "lineChange": "none"
                      },
                      {
                        "line": "  BufferedReader inFile = new BufferedReader(new InputStreamReader(inStream, \"utf8\"));",
                        "lineNumber": 1072,
                        "lineChange": "none"
                      },
                      {
                        "line": "private static void test_score(String inFileName, int candPerSen, int testIndex, boolean isRefFile, int v) throws Exception",
                        "lineNumber": 1097,
                        "lineChange": "none"
                      },
                      {
                        "line": "{",
                        "lineNumber": 1098,
                        "lineChange": "none"
                      },
                      {
                        "line": "    // test that the translations in inFileName get the expected scores",
                        "lineNumber": 1099,
                        "lineChange": "none"
                      },
                      {
                        "line": "SentenceInfo[] candSentenceInfo = new SentenceInfo[numSentences];",
                        "lineNumber": 1118,
                        "lineChange": "none"
                      },
                      {
                        "line": "BufferedReader inFile = new BufferedReader(new FileReader(inFileName));",
                        "lineNumber": 1120,
                        "lineChange": "none"
                      },
                      {
                        "line": "String line, candidate_str;",
                        "lineNumber": 1121,
                        "lineChange": "none"
                      },
                      {
                        "line": "SentenceInfo[] candSentenceInfo = new SentenceInfo[numSentences];",
                        "lineNumber": 1164,
                        "lineChange": "none"
                      },
                      {
                        "line": "BufferedReader inFile = new BufferedReader(new FileReader(decoderOutFileName));",
                        "lineNumber": 1166,
                        "lineChange": "none"
                      },
                      {
                        "line": "String line, candidate_str;",
                        "lineNumber": 1167,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 1252,
                        "lineChange": "none"
                      },
                      {
                        "line": "private static String[] cfgFileToArgsArray(String fileName) throws Exception",
                        "lineNumber": 1254,
                        "lineChange": "none"
                      },
                      {
                        "line": "{",
                        "lineNumber": 1255,
                        "lineChange": "none"
                      },
                      {
                        "line": "  checkFile(fileName);",
                        "lineNumber": 1256,
                        "lineChange": "none"
                      },
                      {
                        "line": "while (i < args.length) {",
                        "lineNumber": 1331,
                        "lineChange": "none"
                      },
                      {
                        "line": "  String option = args[i];",
                        "lineNumber": 1332,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if (option.equals(\"-s\")) { sourceFileName = args[i+1]; }",
                        "lineNumber": 1333,
                        "lineChange": "none"
                      },
                      {
                        "line": "  else if (option.equals(\"-r\")) { refFileName = args[i+1]; }",
                        "lineNumber": 1334,
                        "lineChange": "none"
                      },
                      {
                        "line": "  else if (option.equals(\"-rps\")) {",
                        "lineNumber": 1335,
                        "lineChange": "none"
                      },
                      {
                        "line": "    refsPerSen = Integer.parseInt(args[i+1]);",
                        "lineNumber": 1336,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if (maxGramLength < 1) { println(\"maxGramLength must be positive.\"); System.exit(10); }",
                        "lineNumber": 1341,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 1342,
                        "lineChange": "none"
                      },
                      {
                        "line": "else if (option.equals(\"-decOut\")) { decoderOutFileName = args[i+1]; }",
                        "lineNumber": 1343,
                        "lineChange": "none"
                      },
                      {
                        "line": "else if (option.equals(\"-decExit\")) {",
                        "lineNumber": 1344,
                        "lineChange": "none"
                      },
                      {
                        "line": "  validDecoderExitValue = Integer.parseInt(args[i+1]);",
                        "lineNumber": 1345,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 1346,
                        "lineChange": "none"
                      },
                      {
                        "line": "else if (option.equals(\"-dir\")) { dirPrefix = args[i+1]; }",
                        "lineNumber": 1347,
                        "lineChange": "none"
                      },
                      {
                        "line": "else if (option.equals(\"-p\")) { paramsFileName = args[i+1]; }",
                        "lineNumber": 1348,
                        "lineChange": "none"
                      },
                      {
                        "line": "else if (option.equals(\"-rand\")) {",
                        "lineNumber": 1349,
                        "lineChange": "none"
                      },
                      {
                        "line": "  int rand = Integer.parseInt(args[i+1]);",
                        "lineNumber": 1350,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if (runCount < 1) { println(\"runCount must be positive.\"); System.exit(10); }",
                        "lineNumber": 1357,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 1358,
                        "lineChange": "none"
                      },
                      {
                        "line": "else if (option.equals(\"-fin\")) { finalLambdasFileName = args[i+1]; }",
                        "lineNumber": 1359,
                        "lineChange": "none"
                      },
                      {
                        "line": "else if (option.equals(\"-cmd\")) { decoderCommandFileName = args[i+1]; }",
                        "lineNumber": 1360,
                        "lineChange": "none"
                      },
                      {
                        "line": "else if (option.equals(\"-dcfg\")) { decoderConfigFileName = args[i+1]; }",
                        "lineNumber": 1361,
                        "lineChange": "none"
                      },
                      {
                        "line": "else if (option.equals(\"-save\")) {",
                        "lineNumber": 1362,
                        "lineChange": "none"
                      },
                      {
                        "line": "  int save = Integer.parseInt(args[i+1]);",
                        "lineNumber": 1363,
                        "lineChange": "none"
                      },
                      {
                        "line": "if (runCount > 1 && randInits == false) { println(\"For runCount > 1, randInits must be set to 1.\"); System.exit(10); }",
                        "lineNumber": 1408,
                        "lineChange": "none"
                      },
                      {
                        "line": "if (dirPrefix != null) {",
                        "lineNumber": 1410,
                        "lineChange": "none"
                      },
                      {
                        "line": "  sourceFileName = fullPath(dirPrefix,sourceFileName);",
                        "lineNumber": 1411,
                        "lineChange": "none"
                      },
                      {
                        "line": "  refFileName = fullPath(dirPrefix,refFileName);",
                        "lineNumber": 1412,
                        "lineChange": "none"
                      },
                      {
                        "line": "  decoderOutFileName = fullPath(dirPrefix,decoderOutFileName);",
                        "lineNumber": 1413,
                        "lineChange": "none"
                      },
                      {
                        "line": "  paramsFileName = fullPath(dirPrefix,paramsFileName);",
                        "lineNumber": 1414,
                        "lineChange": "none"
                      },
                      {
                        "line": "  finalLambdasFileName = fullPath(dirPrefix,finalLambdasFileName);",
                        "lineNumber": 1415,
                        "lineChange": "none"
                      },
                      {
                        "line": "  decoderCommandFileName = fullPath(dirPrefix,decoderCommandFileName);",
                        "lineNumber": 1416,
                        "lineChange": "none"
                      },
                      {
                        "line": "  decoderConfigFileName = fullPath(dirPrefix,decoderConfigFileName);",
                        "lineNumber": 1417,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 1418,
                        "lineChange": "none"
                      },
                      {
                        "line": "if (refsPerSen > 1) {",
                        "lineNumber": 1420,
                        "lineChange": "none"
                      },
                      {
                        "line": "  // the provided refFileName might be a prefix",
                        "lineNumber": 1421,
                        "lineChange": "none"
                      },
                      {
                        "line": "  File dummy = new File(refFileName);",
                        "lineNumber": 1422,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if (!dummy.exists()) {",
                        "lineNumber": 1423,
                        "lineChange": "none"
                      },
                      {
                        "line": "    refFileName = createUnifiedRefFile(refFileName,refsPerSen);",
                        "lineNumber": 1424,
                        "lineChange": "none"
                      },
                      {
                        "line": "  }",
                        "lineNumber": 1425,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 1426,
                        "lineChange": "none"
                      },
                      {
                        "line": "checkFile(sourceFileName);",
                        "lineNumber": 1428,
                        "lineChange": "none"
                      },
                      {
                        "line": "checkFile(paramsFileName);",
                        "lineNumber": 1429,
                        "lineChange": "none"
                      },
                      {
                        "line": "checkFile(decoderCommandFileName);",
                        "lineNumber": 1430,
                        "lineChange": "none"
                      },
                      {
                        "line": "checkFile(decoderConfigFileName);",
                        "lineNumber": 1431,
                        "lineChange": "none"
                      },
                      {
                        "line": "} // processArgs(String[] args)",
                        "lineNumber": 1443,
                        "lineChange": "none"
                      },
                      {
                        "line": "private static void checkFile(String fileName)",
                        "lineNumber": 1445,
                        "lineChange": "none"
                      },
                      {
                        "line": "{",
                        "lineNumber": 1446,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if (!fileExists(fileName)) {",
                        "lineNumber": 1447,
                        "lineChange": "none"
                      },
                      {
                        "line": "    println(\"The file \" + fileName + \" was not found!\");",
                        "lineNumber": 1448,
                        "lineChange": "none"
                      },
                      {
                        "line": "    System.exit(40);",
                        "lineNumber": 1449,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 1451,
                        "lineChange": "none"
                      },
                      {
                        "line": "private static boolean fileExists(String fileName)",
                        "lineNumber": 1453,
                        "lineChange": "none"
                      },
                      {
                        "line": "{",
                        "lineNumber": 1454,
                        "lineChange": "none"
                      },
                      {
                        "line": "  File checker = new File(fileName);",
                        "lineNumber": 1455,
                        "lineChange": "none"
                      },
                      {
                        "line": "  return checker.exists();",
                        "lineNumber": 1456,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 1457,
                        "lineChange": "none"
                      },
                      {
                        "line": "private static String createUnifiedRefFile(String prefix, int numFiles) throws Exception",
                        "lineNumber": 1459,
                        "lineChange": "none"
                      },
                      {
                        "line": "{",
                        "lineNumber": 1460,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if (numFiles < 2) {",
                        "lineNumber": 1461,
                        "lineChange": "none"
                      },
                      {
                        "line": "    println(\"Warning: createUnifiedRefFile called with numFiles = \" + numFiles + \"; doing nothing.\");",
                        "lineNumber": 1462,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return prefix;",
                        "lineNumber": 1463,
                        "lineChange": "none"
                      },
                      {
                        "line": "  } else {",
                        "lineNumber": 1464,
                        "lineChange": "none"
                      },
                      {
                        "line": "    File checker;",
                        "lineNumber": 1465,
                        "lineChange": "none"
                      },
                      {
                        "line": "    checker = new File(prefix+\"1\");",
                        "lineNumber": 1466,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (!checker.exists()) {",
                        "lineNumber": 1468,
                        "lineChange": "none"
                      },
                      {
                        "line": "      checker = new File(prefix+\".1\");",
                        "lineNumber": 1469,
                        "lineChange": "none"
                      },
                      {
                        "line": "      if (!checker.exists()) {",
                        "lineNumber": 1470,
                        "lineChange": "none"
                      },
                      {
                        "line": "        println(\"Can't find reference files.\");",
                        "lineNumber": 1471,
                        "lineChange": "none"
                      },
                      {
                        "line": "        System.exit(50);",
                        "lineNumber": 1472,
                        "lineChange": "none"
                      },
                      {
                        "line": "      } else {",
                        "lineNumber": 1473,
                        "lineChange": "none"
                      },
                      {
                        "line": "        prefix = prefix + \".\";",
                        "lineNumber": 1474,
                        "lineChange": "none"
                      },
                      {
                        "line": "      }",
                        "lineNumber": 1475,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }",
                        "lineNumber": 1476,
                        "lineChange": "none"
                      },
                      {
                        "line": "    String outFileName;",
                        "lineNumber": 1478,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (prefix.endsWith(\".\")) { outFileName = prefix+\"all\"; }",
                        "lineNumber": 1479,
                        "lineChange": "none"
                      },
                      {
                        "line": "    else { outFileName = prefix+\".all\"; }",
                        "lineNumber": 1480,
                        "lineChange": "none"
                      },
                      {
                        "line": "    PrintWriter outFile = new PrintWriter(outFileName);",
                        "lineNumber": 1482,
                        "lineChange": "none"
                      },
                      {
                        "line": "    BufferedReader[] inFile = new BufferedReader[numFiles];",
                        "lineNumber": 1484,
                        "lineChange": "none"
                      },
                      {
                        "line": "  for (int r = 0; r < numFiles; ++r) { inFile[r].close(); }",
                        "lineNumber": 1512,
                        "lineChange": "none"
                      },
                      {
                        "line": "  return outFileName;",
                        "lineNumber": 1514,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 1516,
                        "lineChange": "none"
                      },
                      {
                        "line": "} // createUnifiedRefFile(String prefix, int numFiles)",
                        "lineNumber": 1518,
                        "lineChange": "none"
                      },
                      {
                        "line": "private static int countLines(String fileName) throws Exception",
                        "lineNumber": 1520,
                        "lineChange": "none"
                      },
                      {
                        "line": "{",
                        "lineNumber": 1521,
                        "lineChange": "none"
                      },
                      {
                        "line": "  BufferedReader inFile = new BufferedReader(new FileReader(fileName));",
                        "lineNumber": 1522,
                        "lineChange": "none"
                      },
                      {
                        "line": "  String line;",
                        "lineNumber": 1524,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 1589,
                        "lineChange": "none"
                      },
                      {
                        "line": "private static String fullPath(String dir, String fileName)",
                        "lineNumber": 1591,
                        "lineChange": "none"
                      },
                      {
                        "line": "{",
                        "lineNumber": 1592,
                        "lineChange": "none"
                      },
                      {
                        "line": "  File dummyFile = new File(dir,fileName);",
                        "lineNumber": 1593,
                        "lineChange": "none"
                      },
                      {
                        "line": "  return dummyFile.getAbsolutePath();",
                        "lineNumber": 1594,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 1595,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/virtualcell/vcell/commit/7327deda4296af0f802e4b1a21ee47c013a708c6?diff=split#diff-efea0b403bca8feff6ef723e9fd1d2eaL16",
                    "lines": [
                      {
                        "line": " * @param args",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": " */",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "public static void main(String[] args) throws Exception{",
                        "lineNumber": 15,
                        "lineChange": "removed"
                      },
                      {
                        "line": "}",
                        "lineNumber": 55,
                        "lineChange": "added"
                      },
                      {
                        "line": "public static void main(String[] args){",
                        "lineNumber": 57,
                        "lineChange": "added"
                      },
                      {
                        "line": "  String action = args[0];",
                        "lineNumber": 58,
                        "lineChange": "added"
                      },
                      {
                        "line": "  String[] actionArgs = null;",
                        "lineNumber": 59,
                        "lineChange": "added"
                      },
                      {
                        "line": "  if(args.length > 1){",
                        "lineNumber": 60,
                        "lineChange": "added"
                      },
                      {
                        "line": "    actionArgs = new String[args.length-1];",
                        "lineNumber": 61,
                        "lineChange": "added"
                      },
                      {
                        "line": "private static ProcessInfo spawnProcess(String spawnCommand) throws Exception{",
                        "lineNumber": 84,
                        "lineChange": "added"
                      },
                      {
                        "line": "  Process exportProcess = Runtime.getRuntime().exec(spawnCommand);",
                        "lineNumber": 85,
                        "lineChange": "added"
                      },
                      {
                        "line": "  //Listen for output",
                        "lineNumber": 86,
                        "lineChange": "added"
                      },
                      {
                        "line": "  StreamReader normalOutput = new StreamReader(exportProcess.getInputStream());",
                        "lineNumber": 87,
                        "lineChange": "added"
                      },
                      {
                        "line": "  }",
                        "lineNumber": 99,
                        "lineChange": "added"
                      },
                      {
                        "line": "  private static String createExportCommand(String vcellSchema,String password,String dbHostName,String dbSrvcName,File backupFile){",
                        "lineNumber": 100,
                        "lineChange": "added"
                      },
                      {
                        "line": "    return \"exp \"+\"system\"+\"/\"+(password==null?\"xxxxx\":password)+\"@\"+",
                        "lineNumber": 101,
                        "lineChange": "added"
                      },
                      {
                        "line": "    \"(description\\\\=(address\\\\=(protocol\\\\=tcp)(host\\\\=\"+dbHostName+\")(port\\\\=1521))(connect_data\\\\=(service_name\\\\=\"+dbSrvcName+\")))\"+",
                        "lineNumber": 102,
                        "lineChange": "added"
                      },
                      {
                        "line": "//\t\t\" TABLES=(vc_userinfo) \"+",
                        "lineNumber": 103,
                        "lineChange": "added"
                      },
                      {
                        "line": "    \" FILE=\"+backupFile.getAbsolutePath()",
                        "lineNumber": 104,
                        "lineChange": "added"
                      },
                      {
                        "line": "    +\" OWNER=\"+vcellSchema+\" CONSISTENT=Y\";",
                        "lineNumber": 105,
                        "lineChange": "added"
                      },
                      {
                        "line": "  }",
                        "lineNumber": 107,
                        "lineChange": "added"
                      },
                      {
                        "line": "if(args.length != 6){",
                        "lineNumber": 109,
                        "lineChange": "none"
                      },
                      {
                        "line": "  return;",
                        "lineNumber": 111,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 112,
                        "lineChange": "none"
                      },
                      {
                        "line": "String credentials = args[0];",
                        "lineNumber": 21,
                        "lineChange": "removed"
                      },
                      {
                        "line": "String dbName = args[1];",
                        "lineNumber": 22,
                        "lineChange": "removed"
                      },
                      {
                        "line": "File workingDir = new File(args[2]);",
                        "lineNumber": 23,
                        "lineChange": "removed"
                      },
                      {
                        "line": "File exportDir = new File(args[3]);",
                        "lineNumber": 24,
                        "lineChange": "removed"
                      },
                      {
                        "line": "String userSchema = args[4];",
                        "lineNumber": 25,
                        "lineChange": "removed"
                      },
                      {
                        "line": "String dbServerName = args[5];",
                        "lineNumber": 26,
                        "lineChange": "removed"
                      },
                      {
                        "line": "//\t\t\treturn;",
                        "lineNumber": 115,
                        "lineChange": "added"
                      },
                      {
                        "line": "//\t\t}",
                        "lineNumber": 116,
                        "lineChange": "added"
                      },
                      {
                        "line": "    String dbHostName = args[0];",
                        "lineNumber": 117,
                        "lineChange": "added"
                      },
                      {
                        "line": "    String vcellSchema = args[1];",
                        "lineNumber": 118,
                        "lineChange": "added"
                      },
                      {
                        "line": "    String password = args[2];",
                        "lineNumber": 119,
                        "lineChange": "added"
                      },
                      {
                        "line": "    String dbSrvcName = args[3];",
                        "lineNumber": 120,
                        "lineChange": "added"
                      },
                      {
                        "line": "    File workingDir = new File(args[4]);",
                        "lineNumber": 121,
                        "lineChange": "added"
                      },
                      {
                        "line": "    File exportDir = new File(args[5]);",
                        "lineNumber": 122,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 129,
                        "lineChange": "added"
                      },
                      {
                        "line": "String baseFileName = null;",
                        "lineNumber": 130,
                        "lineChange": "none"
                      },
                      {
                        "line": "File backupFile = null;",
                        "lineNumber": 131,
                        "lineChange": "added"
                      },
                      {
                        "line": "    try{",
                        "lineNumber": 132,
                        "lineChange": "none"
                      },
                      {
                        "line": "      String datePart = new SimpleDateFormat(\"yyyy_MM_dd_HH_mm_ss\").format(Calendar.getInstance().getTime());",
                        "lineNumber": 133,
                        "lineChange": "none"
                      },
                      {
                        "line": "      baseFileName = dbServerName+\"_\"+dbName+\"_\"+userSchema+\"_\"+datePart;",
                        "lineNumber": 33,
                        "lineChange": "removed"
                      },
                      {
                        "line": "      File backupFile = new File(workingDir,baseFileName+\".dmp\");",
                        "lineNumber": 34,
                        "lineChange": "removed"
                      },
                      {
                        "line": "      String exportCommand =",
                        "lineNumber": 35,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        \"exp \"+credentials+\"@\"+dbName+\" FILE=\"+backupFile.getAbsolutePath()+\" OWNER=\"+userSchema+\" CONSISTENT=Y\";",
                        "lineNumber": 36,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        ",
                        "lineNumber": 37,
                        "lineChange": "removed"
                      },
                      {
                        "line": "      baseFileName = dbHostName+\"_\"+dbSrvcName+\"_\"+vcellSchema+\"_\"+datePart;",
                        "lineNumber": 134,
                        "lineChange": "added"
                      },
                      {
                        "line": "      backupFile = new File(workingDir,baseFileName+\".dmp\");",
                        "lineNumber": 135,
                        "lineChange": "added"
                      },
                      {
                        "line": "//\t\t\tString exportCommand =",
                        "lineNumber": 136,
                        "lineChange": "added"
                      },
                      {
                        "line": "//\t\t\t\t\"exp \"+credentials+\"@\"+dbName+\" FILE=\"+backupFile.getAbsolutePath()+\" OWNER=\"+userSchema+\" CONSISTENT=Y\";",
                        "lineNumber": 137,
                        "lineChange": "added"
                      },
                      {
                        "line": "      String exportCommand = createExportCommand(vcellSchema, password, dbHostName, dbSrvcName, backupFile);",
                        "lineNumber": 138,
                        "lineChange": "added"
                      },
                      {
                        "line": "//\t\t\tSystem.out.println(exportCommand);",
                        "lineNumber": 139,
                        "lineChange": "added"
                      },
                      {
                        "line": "      //Create export Process",
                        "lineNumber": 140,
                        "lineChange": "none"
                      },
                      {
                        "line": "      final Process exportProcess = Runtime.getRuntime().exec(exportCommand);",
                        "lineNumber": 39,
                        "lineChange": "removed"
                      },
                      {
                        "line": "      //Listen for output",
                        "lineNumber": 40,
                        "lineChange": "removed"
                      },
                      {
                        "line": "      final boolean[] outReadFlag = new boolean[1];",
                        "lineNumber": 41,
                        "lineChange": "removed"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/ammarx/TagAPI_3/commit/cdc43ec0f44be26d080b8106cb8df503bb4e6599?diff=split#diff-7bdd4dadff7e107738652c771a83bb84L19",
                    "lines": [
                      {
                        "line": " */",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "//we will be using this for testing only...",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "public static void main(String[] args) {",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "    // TODO code application logic here",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "    //*** Remove this as this is required for it to work fully...",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": " Local local = new Local();",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "Network network = new Network();",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "String UsernameToUse = args[0];",
                        "lineNumber": 26,
                        "lineChange": "removed"
                      },
                      {
                        "line": "String VersionToUse = args[1];",
                        "lineNumber": 27,
                        "lineChange": "removed"
                      },
                      {
                        "line": "String UsernameToUse = \"Ammar_Ahmad\";",
                        "lineNumber": 26,
                        "lineChange": "added"
                      },
                      {
                        "line": "String VersionToUse = \"1.7.2\";",
                        "lineNumber": 27,
                        "lineChange": "added"
                      },
                      {
                        "line": "String OperatingSystemToUse = utils.getOS();",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "System.out.println(\"OS: \" + OperatingSystemToUse);",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "//get profile",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "System.out.println(\"Getting profile details\");",
                        "lineNumber": 37,
                        "lineChange": "none"
                      },
                      {
                        "line": "network.downloadProfile(OperatingSystemToUse, UsernameToUse);",
                        "lineNumber": 38,
                        "lineChange": "none"
                      },
                      {
                        "line": "network.downloadVersionManifest(utils.getMineCraft_Version_Manifest_json(OperatingSystemToUse));",
                        "lineNumber": 39,
                        "lineChange": "none"
                      },
                      {
                        "line": "String MOD_id = null;",
                        "lineNumber": 52,
                        "lineChange": "none"
                      },
                      {
                        "line": "//check if it is vanilla or not",
                        "lineNumber": 53,
                        "lineChange": "none"
                      },
                      {
                        "line": "if (local.checkIfVanillaMC(VersionToUse).equals(true)) {",
                        "lineNumber": 54,
                        "lineChange": "none"
                      },
                      {
                        "line": "    System.out.println(\"Vanilla Minecraft found!\");",
                        "lineNumber": 55,
                        "lineChange": "none"
                      },
                      {
                        "line": "} else {",
                        "lineNumber": 57,
                        "lineChange": "none"
                      },
                      {
                        "line": "    System.out.println(\"Modded Minecraft found!\");",
                        "lineNumber": 58,
                        "lineChange": "none"
                      },
                      {
                        "line": "    local.MOD_readJson_libraries_name_PLUS_url(utils.getMineCraft_Version_Json(OperatingSystemToUse, VersionToUse));",
                        "lineNumber": 59,
                        "lineChange": "none"
                      },
                      {
                        "line": "    for (int i = 0; i < local.version_name_list.size(); i++) {",
                        "lineNumber": 60,
                        "lineChange": "none"
                      },
                      {
                        "line": "        System.out.println(local.version_name_list.get(i));",
                        "lineNumber": 61,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }",
                        "lineNumber": 78,
                        "lineChange": "none"
                      },
                      {
                        "line": "    ",
                        "lineNumber": 79,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    MOD_inheritsFrom = local.readJson_inheritsFrom(utils.getMineCraft_Version_Json(OperatingSystemToUse, VersionToUse));",
                        "lineNumber": 80,
                        "lineChange": "none"
                      },
                      {
                        "line": "    System.out.println(\"inheritsFrom: \" + MOD_inheritsFrom);",
                        "lineNumber": 81,
                        "lineChange": "none"
                      },
                      {
                        "line": "    MOD_jar = local.readJson_jar(utils.getMineCraft_Version_Json(OperatingSystemToUse, VersionToUse));",
                        "lineNumber": 83,
                        "lineChange": "none"
                      },
                      {
                        "line": "    System.out.println(\"jar: \" + MOD_jar);",
                        "lineNumber": 84,
                        "lineChange": "none"
                      },
                      {
                        "line": "    MOD_assets = local.readJson_assets(utils.getMineCraft_Version_Json(OperatingSystemToUse, VersionToUse));",
                        "lineNumber": 86,
                        "lineChange": "none"
                      },
                      {
                        "line": "    System.out.println(\"assets: \" + MOD_assets);",
                        "lineNumber": 87,
                        "lineChange": "none"
                      },
                      {
                        "line": "    MOD_minecraftArguments = local.readJson_minecraftArguments(utils.getMineCraft_Version_Json(OperatingSystemToUse, VersionToUse));",
                        "lineNumber": 89,
                        "lineChange": "none"
                      },
                      {
                        "line": "    System.out.println(\"minecraftArguments: \" + MOD_minecraftArguments);",
                        "lineNumber": 90,
                        "lineChange": "none"
                      },
                      {
                        "line": "    MOD_mainClass = local.readJson_mainClass(utils.getMineCraft_Version_Json(OperatingSystemToUse, VersionToUse));",
                        "lineNumber": 92,
                        "lineChange": "none"
                      },
                      {
                        "line": "    System.out.println(\"mainClass: \" + MOD_mainClass);",
                        "lineNumber": 93,
                        "lineChange": "none"
                      },
                      {
                        "line": "    MOD_id = local.readJson_id(utils.getMineCraft_Version_Json(OperatingSystemToUse, VersionToUse));",
                        "lineNumber": 95,
                        "lineChange": "none"
                      },
                      {
                        "line": "    System.out.println(\"id: \" + MOD_id);",
                        "lineNumber": 96,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 97,
                        "lineChange": "none"
                      },
                      {
                        "line": "if (MOD_inheritsFrom == null) {",
                        "lineNumber": 99,
                        "lineChange": "none"
                      },
                      {
                        "line": "    System.out.println(\"Using: \" + VersionToUse);",
                        "lineNumber": 100,
                        "lineChange": "none"
                      },
                      {
                        "line": "} else {",
                        "lineNumber": 102,
                        "lineChange": "none"
                      },
                      {
                        "line": "    VersionToUse = MOD_inheritsFrom;",
                        "lineNumber": 103,
                        "lineChange": "none"
                      },
                      {
                        "line": "    System.out.println(\"Using: \" + VersionToUse);",
                        "lineNumber": 104,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 106,
                        "lineChange": "none"
                      },
                      {
                        "line": "//download 1.7.10.json_libs",
                        "lineNumber": 115,
                        "lineChange": "none"
                      },
                      {
                        "line": "for (int i = 0; i < local.version_manifest_versions_id.size(); i++) {",
                        "lineNumber": 116,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (local.version_manifest_versions_id.get(i).equals(VersionToUse)) {",
                        "lineNumber": 117,
                        "lineChange": "none"
                      },
                      {
                        "line": "        network.downloadVersionJson(OperatingSystemToUse, local.version_manifest_versions_url.get(i).toString(), local.version_manifest_versions_id.get(i).toString());",
                        "lineNumber": 118,
                        "lineChange": "none"
                      },
                      {
                        "line": "        break;",
                        "lineNumber": 119,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 136,
                        "lineChange": "none"
                      },
                      {
                        "line": "System.out.print(utils.getMineCraft_Version_Json(OperatingSystemToUse, VersionToUse));",
                        "lineNumber": 138,
                        "lineChange": "none"
                      },
                      {
                        "line": "System.out.print(\"\\n\\n\");",
                        "lineNumber": 139,
                        "lineChange": "none"
                      },
                      {
                        "line": "local.readJson_libraries_downloads_artifact_url(utils.getMineCraft_Version_Json(OperatingSystemToUse, VersionToUse));",
                        "lineNumber": 141,
                        "lineChange": "removed"
                      },
                      {
                        "line": "local.readJson_libraries_downloads_artifact_path(utils.getMineCraft_Version_Json(OperatingSystemToUse, VersionToUse));",
                        "lineNumber": 142,
                        "lineChange": "removed"
                      },
                      {
                        "line": "local.readJson_libraries_name(utils.getMineCraft_Version_Json(OperatingSystemToUse, VersionToUse));",
                        "lineNumber": 143,
                        "lineChange": "removed"
                      },
                      {
                        "line": "try {",
                        "lineNumber": 140,
                        "lineChange": "added"
                      },
                      {
                        "line": "    local.readJson_libraries_downloads_artifact_url(utils.getMineCraft_Version_Json(OperatingSystemToUse, VersionToUse));",
                        "lineNumber": 141,
                        "lineChange": "added"
                      },
                      {
                        "line": "} catch (Exception ex) {",
                        "lineNumber": 143,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 145,
                        "lineChange": "added"
                      },
                      {
                        "line": "try {",
                        "lineNumber": 146,
                        "lineChange": "added"
                      },
                      {
                        "line": "    local.readJson_libraries_downloads_artifact_path(utils.getMineCraft_Version_Json(OperatingSystemToUse, VersionToUse));",
                        "lineNumber": 147,
                        "lineChange": "added"
                      },
                      {
                        "line": "} catch (Exception ex) {",
                        "lineNumber": 149,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 151,
                        "lineChange": "added"
                      },
                      {
                        "line": "try {",
                        "lineNumber": 152,
                        "lineChange": "added"
                      },
                      {
                        "line": "    local.readJson_libraries_name(utils.getMineCraft_Version_Json(OperatingSystemToUse, VersionToUse));",
                        "lineNumber": 153,
                        "lineChange": "added"
                      },
                      {
                        "line": "} catch (Exception ex) {",
                        "lineNumber": 155,
                        "lineChange": "added"
                      },
                      {
                        "line": "///************************************************************",
                        "lineNumber": 158,
                        "lineChange": "none"
                      },
                      {
                        "line": "for (int i = 0; i < local.version_url_list.size(); i++) {",
                        "lineNumber": 159,
                        "lineChange": "none"
                      },
                      {
                        "line": "//this may need to be edited!*************//",
                        "lineNumber": 172,
                        "lineChange": "none"
                      },
                      {
                        "line": "System.out.println(local.readJson_assetIndex_url(utils.getMineCraft_Version_Json(OperatingSystemToUse, VersionToUse)));",
                        "lineNumber": 159,
                        "lineChange": "removed"
                      },
                      {
                        "line": "System.out.println(local.readJson_assetIndex_id(utils.getMineCraft_Version_Json(OperatingSystemToUse, VersionToUse)));",
                        "lineNumber": 160,
                        "lineChange": "removed"
                      },
                      {
                        "line": "try {",
                        "lineNumber": 173,
                        "lineChange": "added"
                      },
                      {
                        "line": "    System.out.println(local.readJson_assetIndex_url(utils.getMineCraft_Version_Json(OperatingSystemToUse, VersionToUse)));",
                        "lineNumber": 174,
                        "lineChange": "added"
                      },
                      {
                        "line": "} catch (Exception ex) {",
                        "lineNumber": 176,
                        "lineChange": "added"
                      },
                      {
                        "line": "try {",
                        "lineNumber": 180,
                        "lineChange": "added"
                      },
                      {
                        "line": "    System.out.println(local.readJson_assetIndex_id(utils.getMineCraft_Version_Json(OperatingSystemToUse, VersionToUse)));",
                        "lineNumber": 181,
                        "lineChange": "added"
                      },
                      {
                        "line": "} catch (Exception ex) {",
                        "lineNumber": 182,
                        "lineChange": "added"
                      },
                      {
                        "line": "    System.err.println(ex);",
                        "lineNumber": 183,
                        "lineChange": "added"
                      },
                      {
                        "line": "//get assets index id!",
                        "lineNumber": 186,
                        "lineChange": "none"
                      },
                      {
                        "line": "network.downloadLaunchermeta(OperatingSystemToUse, local.readJson_assetIndex_url(utils.getMineCraft_Version_Json(OperatingSystemToUse, VersionToUse)), local.readJson_assetIndex_id(utils.getMin",
                        "lineNumber": 187,
                        "lineChange": "none"
                      },
                      {
                        "line": "System.out.println(utils.getMineCraftAssetsIndexes_X_json(OperatingSystemToUse, VersionToUse));",
                        "lineNumber": 189,
                        "lineChange": "none"
                      },
                      {
                        "line": "local.readJson_objects_KEY(utils.getMineCraftAssetsIndexes_X_json(OperatingSystemToUse, local.readJson_assetIndex_id(utils.getMineCraft_Version_Json(OperatingSystemToUse, VersionToUse))));",
                        "lineNumber": 191,
                        "lineChange": "none"
                      },
                      {
                        "line": "local.readJson_objects_KEY_hash(utils.getMineCraftAssetsIndexes_X_json(OperatingSystemToUse, local.readJson_assetIndex_id(utils.getMineCraft_Version_Json(OperatingSystemToUse, VersionToUse))))",
                        "lineNumber": 192,
                        "lineChange": "none"
                      },
                      {
                        "line": "for (int i = 0; i < local.objects_hash.size(); i++) {",
                        "lineNumber": 194,
                        "lineChange": "none"
                      },
                      {
                        "line": "System.out.println(\"DOWNLOADING MINECRAFT JAR\");",
                        "lineNumber": 206,
                        "lineChange": "none"
                      },
                      {
                        "line": "if (MOD_jar == null) {",
                        "lineNumber": 207,
                        "lineChange": "none"
                      },
                      {
                        "line": "    network.downloadMinecraftJar(OperatingSystemToUse, VersionToUse);",
                        "lineNumber": 208,
                        "lineChange": "none"
                      },
                      {
                        "line": "} else {",
                        "lineNumber": 210,
                        "lineChange": "none"
                      },
                      {
                        "line": "    network.downloadMinecraftJar(OperatingSystemToUse, MOD_jar);",
                        "lineNumber": 211,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 213,
                        "lineChange": "none"
                      },
                      {
                        "line": "//would have tp edit this line as we also need natives paths!",
                        "lineNumber": 215,
                        "lineChange": "none"
                      },
                      {
                        "line": "System.out.println(\"Getting NATIVES URL\");",
                        "lineNumber": 216,
                        "lineChange": "none"
                      },
                      {
                        "line": "local.readJson_libraries_downloads_classifiers_natives_X(utils.getMineCraft_Versions_X_X_json(OperatingSystemToUse, VersionToUse), OperatingSystemToUse);",
                        "lineNumber": 217,
                        "lineChange": "none"
                      },
                      {
                        "line": "System.out.println(\"Getting NATIVES PATH\");",
                        "lineNumber": 218,
                        "lineChange": "none"
                      },
                      {
                        "line": "local.readJson_libraries_downloads_classifiers_natives_Y(utils.getMineCraft_Versions_X_X_json(OperatingSystemToUse, VersionToUse), OperatingSystemToUse);",
                        "lineNumber": 219,
                        "lineChange": "none"
                      },
                      {
                        "line": "for (int i = 0; i < local.version_url_list_natives.size(); i++) {",
                        "lineNumber": 221,
                        "lineChange": "none"
                      },
                      {
                        "line": "    System.out.println(\"Extracting...\");",
                        "lineNumber": 225,
                        "lineChange": "none"
                      },
                      {
                        "line": "    System.out.println(local.version_url_list_natives.get(i).toString());",
                        "lineNumber": 226,
                        "lineChange": "none"
                      },
                      {
                        "line": "    System.out.println(utils.getMineCraft_Versions_X_Natives(OperatingSystemToUse, VersionToUse));",
                        "lineNumber": 227,
                        "lineChange": "none"
                      },
                      {
                        "line": "    utils.jarExtract(OperatingSystemToUse, local.version_path_list_natives.get(i).toString(), utils.getMineCraft_Versions_X_Natives(OperatingSystemToUse, VersionToUse));",
                        "lineNumber": 229,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 231,
                        "lineChange": "none"
                      },
                      {
                        "line": "//String HalfArgumentTemplate = local.readJson_minecraftArguments(utils.getMineCraft_Versions_X_X_json(OperatingSystemToUse, VersionToUse));",
                        "lineNumber": 235,
                        "lineChange": "none"
                      },
                      {
                        "line": "String mainClass;",
                        "lineNumber": 244,
                        "lineChange": "none"
                      },
                      {
                        "line": "if (MOD_mainClass == null){",
                        "lineNumber": 212,
                        "lineChange": "removed"
                      },
                      {
                        "line": "if (MOD_mainClass == null) {",
                        "lineNumber": 245,
                        "lineChange": "added"
                      },
                      {
                        "line": "    mainClass = local.readJson_mainClass(utils.getMineCraft_Versions_X_X_json(OperatingSystemToUse, VersionToUse));",
                        "lineNumber": 246,
                        "lineChange": "none"
                      },
                      {
                        "line": "    ",
                        "lineNumber": 214,
                        "lineChange": "removed"
                      },
                      {
                        "line": "} else {",
                        "lineNumber": 248,
                        "lineChange": "none"
                      },
                      {
                        "line": "    mainClass =  MOD_mainClass;",
                        "lineNumber": 216,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    mainClass = MOD_mainClass;",
                        "lineNumber": 249,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 250,
                        "lineChange": "none"
                      },
                      {
                        "line": "String NativesDir = utils.getMineCraft_Versions_X_Natives(OperatingSystemToUse, VersionToUse);",
                        "lineNumber": 252,
                        "lineChange": "none"
                      },
                      {
                        "line": "String assetsIdexId;",
                        "lineNumber": 253,
                        "lineChange": "none"
                      },
                      {
                        "line": "if (MOD_assets == null){",
                        "lineNumber": 221,
                        "lineChange": "removed"
                      },
                      {
                        "line": "if (MOD_assets == null) {",
                        "lineNumber": 254,
                        "lineChange": "added"
                      },
                      {
                        "line": "    assetsIdexId = local.readJson_assets(utils.getMineCraft_Versions_X_X_json(OperatingSystemToUse, VersionToUse));",
                        "lineNumber": 255,
                        "lineChange": "none"
                      },
                      {
                        "line": "} else {",
                        "lineNumber": 257,
                        "lineChange": "none"
                      },
                      {
                        "line": "    assetsIdexId = MOD_assets;",
                        "lineNumber": 258,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 259,
                        "lineChange": "none"
                      },
                      {
                        "line": "String versionName;",
                        "lineNumber": 267,
                        "lineChange": "none"
                      },
                      {
                        "line": "if (MOD_id == null){",
                        "lineNumber": 232,
                        "lineChange": "removed"
                      },
                      {
                        "line": "if (MOD_id == null) {",
                        "lineNumber": 268,
                        "lineChange": "added"
                      },
                      {
                        "line": "    versionName = local.readJson_id(utils.getMineCraft_Versions_X_X_json(OperatingSystemToUse, VersionToUse));",
                        "lineNumber": 269,
                        "lineChange": "none"
                      },
                      {
                        "line": "} else {",
                        "lineNumber": 270,
                        "lineChange": "none"
                      },
                      {
                        "line": "    versionName = MOD_id;",
                        "lineNumber": 271,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 272,
                        "lineChange": "none"
                      },
                      {
                        "line": "String authuuid = local.readJson_id(utils.getMineCraft_X_json(OperatingSystemToUse, UsernameToUse));",
                        "lineNumber": 274,
                        "lineChange": "none"
                      },
                      {
                        "line": "String Username = UsernameToUse;",
                        "lineNumber": 275,
                        "lineChange": "none"
                      },
                      {
                        "line": "String MinecraftJar;",
                        "lineNumber": 276,
                        "lineChange": "none"
                      },
                      {
                        "line": "if (MOD_jar == null){",
                        "lineNumber": 242,
                        "lineChange": "removed"
                      },
                      {
                        "line": "if (MOD_jar == null) {",
                        "lineNumber": 277,
                        "lineChange": "added"
                      },
                      {
                        "line": "    MinecraftJar = utils.getMineCraft_Versions_X_X_jar(OperatingSystemToUse, VersionToUse);",
                        "lineNumber": 278,
                        "lineChange": "none"
                      },
                      {
                        "line": "} else {",
                        "lineNumber": 280,
                        "lineChange": "none"
                      },
                      {
                        "line": "    MinecraftJar = utils.getMineCraft_Versions_X_X_jar(OperatingSystemToUse, MOD_jar);",
                        "lineNumber": 281,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 282,
                        "lineChange": "none"
                      },
                      {
                        "line": "String GameAssets = utils.getMineCraftAssetsVirtualLegacyLocation(OperatingSystemToUse);",
                        "lineNumber": 287,
                        "lineChange": "none"
                      },
                      {
                        "line": "System.out.println(\"NativesPath: \" + NativesDir);",
                        "lineNumber": 288,
                        "lineChange": "none"
                      },
                      {
                        "line": "for (int i = 0; i < local.version_path_list.size(); i++) {",
                        "lineNumber": 290,
                        "lineChange": "none"
                      },
                      {
                        "line": "String HalfLibraryArgument = local.generateLibrariesArguments(OperatingSystemToUse);",
                        "lineNumber": 295,
                        "lineChange": "none"
                      },
                      {
                        "line": "String FullLibraryArgument = local.generateLibrariesArguments(OperatingSystemToUse) + utils.getArgsDiv(OperatingSystemToUse) + MinecraftJar;",
                        "lineNumber": 296,
                        "lineChange": "none"
                      },
                      {
                        "line": "System.out.println(\"HalfLibraryArgument: \" + HalfLibraryArgument);",
                        "lineNumber": 297,
                        "lineChange": "none"
                      },
                      {
                        "line": "System.out.println(\"FullLibraryArgument: \" + FullLibraryArgument);",
                        "lineNumber": 298,
                        "lineChange": "none"
                      },
                      {
                        "line": "String HalfArgument = local.generateMinecraftArguments(OperatingSystemToUse, Username, versionName, gameDirectory, AssetsRoot, assetsIdexId, authuuid, \"aeef7bc935f9420eb6314dea7ad7e1e5\", \"{\\\"t",
                        "lineNumber": 300,
                        "lineChange": "none"
                      },
                      {
                        "line": "System.out.println(\"HalfArgument: \" + HalfArgument);",
                        "lineNumber": 301,
                        "lineChange": "none"
                      },
                      {
                        "line": "System.out.println(\"Minecraft.jar: \" + MinecraftJar);",
                        "lineNumber": 302,
                        "lineChange": "none"
                      },
                      {
                        "line": "System.out.println(\"username: \" + Username);",
                        "lineNumber": 304,
                        "lineChange": "none"
                      },
                      {
                        "line": "System.out.println(\"version number: \" + versionName);",
                        "lineNumber": 305,
                        "lineChange": "none"
                      },
                      {
                        "line": "System.out.println(\"game directory: \" + gameDirectory);",
                        "lineNumber": 306,
                        "lineChange": "none"
                      },
                      {
                        "line": "System.out.println(\"assets root directory: \" + AssetsRoot);",
                        "lineNumber": 307,
                        "lineChange": "none"
                      },
                      {
                        "line": "System.out.println(\"assets Index Id: \" + assetsIdexId);",
                        "lineNumber": 308,
                        "lineChange": "none"
                      },
                      {
                        "line": "System.out.println(\"assets legacy directory: \" + GameAssets);",
                        "lineNumber": 309,
                        "lineChange": "none"
                      },
                      {
                        "line": "System.out.println(local.generateRunnableArguments(Xmx, NativesDir, FullLibraryArgument, mainClass, HalfArgument));",
                        "lineNumber": 310,
                        "lineChange": "none"
                      },
                      {
                        "line": "try {",
                        "lineNumber": 312,
                        "lineChange": "none"
                      },
                      {
                        "line": "    String ArgsX = local.generateRunnableArguments(Xmx, NativesDir, FullLibraryArgument, mainClass, HalfArgument);",
                        "lineNumber": 314,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Runtime.getRuntime().exec(\"java \" + ArgsX);",
                        "lineNumber": 315,
                        "lineChange": "none"
                      },
                      {
                        "line": "} catch (Exception e) {",
                        "lineNumber": 317,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "- generating lineCharts is possible",
                  "Integrated MERT and decoder (though still need to integrate -decV option)."
                ],
                "precision": "very-high",
                "repoDatasetSize": 7,
                "cwe": [
                  "CWE-78"
                ]
              }
            },
            {
              "id": "java/TLS",
              "name": "TLS",
              "shortDescription": {
                "text": "Inadequate Encryption Strength"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "\n## Details\n\nImplementing encryption for the transmission and storage of sensitive information is essential. But encryption standards are constantly changing since attackers have more and more powerful resources at their disposal-along with more sophisticated attack algorithms. This means that encryption is only useful if it meets current standards appropriate for the type of data being transmitted or stored.\nWhen organizations use weakly encoded passwords or weak hashes (especially when they also utilize single-factor authentication, which places too much emphasis on passwords), attackers can potentially gain unauthorized access through a brute-force attack.\n\n### Best practices for prevention\n* Understand best practices of contemporary encryption algorithms and techniques.\n* Avoid encryption algorithms and techniques that are widely known to be outdated (for example, DES).\n* Implement multi-factor authentication to minimize reliance on a single factor, such as a password, that is too susceptible to brute-force attacks.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/apache/cloudstack/commit/91f7012b015249d9d74dace8874ee8f38b54bfc2?diff=split#diff-5604a4e589dc38cc8d80f2f4020c2a23L53",
                    "lines": [
                      {
                        "line": "public static SSLContext getSSLContext() throws NoSuchAlgorithmException {",
                        "lineNumber": 68,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return SSLContext.getInstance(\"TLSv1\");",
                        "lineNumber": 52,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    return SSLContext.getInstance(\"TLSv1.2\");",
                        "lineNumber": 69,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 70,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/MissionCriticalCloud/cosmic/commit/3a4004a34b42e30a49a1c48f1ff57e5f3ca26913?diff=split#diff-49bfef0c8d16a2c34d787d4fca65e2e7L35",
                    "lines": [
                      {
                        "line": "public static SSLContext getSSLContext() throws NoSuchAlgorithmException {",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return SSLContext.getInstance(\"TLSv1\");",
                        "lineNumber": 34,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    return SSLContext.getInstance(\"TLSv1.2\");",
                        "lineNumber": 34,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 35,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/hypercube1024/firefly/commit/e2e4d7810c9bb202bbef3d5022e3b13447f102dd?diff=split#diff-fb5cd0d3953731ed2bdb241178f1ce05L32",
                    "lines": [
                      {
                        "line": "  tmf.init(ks);",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "  sslContext = SSLContext.getInstance(\"TLS\");",
                        "lineNumber": 31,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  sslContext = SSLContext.getInstance(\"TLSv1.2\");",
                        "lineNumber": 31,
                        "lineChange": "added"
                      },
                      {
                        "line": "  sslContext.init(kmf.getKeyManagers(), tmf.getTrustManagers(), null);",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "return sslContext;",
                        "lineNumber": 33,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Configuring TSL/SSL now supports property placeholders.",
                  "support for TLS config tweaks",
                  "Temporarily peg SSL version to TLSv1.2."
                ],
                "precision": "very-high",
                "repoDatasetSize": 78,
                "cwe": [
                  "CWE-326"
                ]
              }
            },
            {
              "id": "java/XXE",
              "name": "XXE",
              "shortDescription": {
                "text": "XML External Entity (XXE) Injection"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "\n## Details\n\nFor convenience, XML documents can use system identifiers to enable access to stored content, whether local or remote. The XML processor then uses the system identifier to access the resource rather than using the URI. When this weakness exists, the application permits user-supplied data, which could include the address of an XML external identity, to be passed directly to the XML parser. The application will then attempt to retrieve documents from outside of secure, controlled areas.\n\nAttackers can exploit this weakness to expose sensitive data, execute port scanning on the server side, or launch a denial-of-service attack (DoS) such as Billion Laughs.\n\n### Best practices for prevention\n\n* When possible, disable loading of data from external entities. The method of doing this will vary based on the language and XML parser being used.\n* Use a local, static document type definitions (DTDs) and ensure that external DTDs are disallowed entirely.\n* If user input cannot be avoided, perform validation against an allowlist of possible data sources. However, as long as external DTDs are allowed, XML code remains inherently vulnerable to attacks exploiting this weakness.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/Unidata/netcdf-java/commit/475707c10fd20b92a48187aad1ac6379fe126e32?diff=split#diff-2ab50dd3fd1834707ceae5e424963a52L98",
                    "lines": [
                      {
                        "line": "static private org.jdom.Document getCapabilities(String endpoint) throws IOException {",
                        "lineNumber": 95,
                        "lineChange": "none"
                      },
                      {
                        "line": "  org.jdom.Document doc;",
                        "lineNumber": 96,
                        "lineChange": "none"
                      },
                      {
                        "line": "  HttpMethod method = null;",
                        "lineNumber": 97,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  HTTPMethod method = null;",
                        "lineNumber": 97,
                        "lineChange": "added"
                      },
                      {
                        "line": "  try {",
                        "lineNumber": 98,
                        "lineChange": "none"
                      },
                      {
                        "line": "    method = CdmRemote.sendQuery(endpoint, \"req=capabilities\");",
                        "lineNumber": 99,
                        "lineChange": "none"
                      },
                      {
                        "line": "    InputStream in = method.getResponseBodyAsStream();",
                        "lineNumber": 100,
                        "lineChange": "none"
                      },
                      {
                        "line": "    SAXBuilder builder = new SAXBuilder(false);",
                        "lineNumber": 101,
                        "lineChange": "none"
                      },
                      {
                        "line": "    doc = builder.build(in);",
                        "lineNumber": 102,
                        "lineChange": "none"
                      },
                      {
                        "line": "  } catch (Throwable t) {",
                        "lineNumber": 104,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/wirecardBrasil/mockkid/commit/002008cf918a84f962f2fe27cbdb4ba2685c6ae0?diff=split#diff-b441fb2c8c0aa00121642142978b8a0bL18",
                    "lines": [
                      {
                        "line": "private static final Logger logger = LoggerFactory.getLogger(XMLBodyVariableResolver.class);",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "public static String extractValueFromXml(String name, HttpServletRequest request) {",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "    try {",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "        DocumentBuilderFactory builderFactory =",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "                DocumentBuilderFactory.newInstance();",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "        DocumentBuilder builder = builderFactory.newDocumentBuilder();",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "        Document document = builder.parse(request.getInputStream());",
                        "lineNumber": 22,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        Document document = builder.parse(((MockkidRequest) request).getSafeInputStream());",
                        "lineNumber": 23,
                        "lineChange": "added"
                      },
                      {
                        "line": "        XPath xPath =  XPathFactory.newInstance().newXPath();",
                        "lineNumber": 25,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/IanDarwin/javasrc/commit/8251ef48893e6333dee02e29925c16ba933d7d14?diff=split#diff-f4d7011ca260d567d50d5aa022009b3dL17",
                    "lines": [
                      {
                        "line": " */",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "public class SAXLister {",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "  public static void main(String[] args) throws Exception {",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "    new SAXLister(args);",
                        "lineNumber": 19,
                        "lineChange": "added"
                      },
                      {
                        "line": "  }",
                        "lineNumber": 20,
                        "lineChange": "added"
                      },
                      {
                        "line": "  ",
                        "lineNumber": 21,
                        "lineChange": "added"
                      },
                      {
                        "line": "  public SAXLister(String[] args) throws SAXException, IOException {",
                        "lineNumber": 22,
                        "lineChange": "added"
                      },
                      {
                        "line": "    XMLReader parser = XMLReaderFactory",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "        .createXMLReader(\"org.apache.xerces.parsers.SAXParser\");",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "    // should load properties rather than hardcoding class name",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "    parser.setContentHandler(new PeopleHandler());",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "    parser.parse(args.length == 1 ? args[0] : \"parents.xml\");",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "  }",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "  ",
                        "lineNumber": 29,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Move loadind XML documents from streams to XML utils class.",
                  "Added support for File comparator",
                  "Adding unit tests"
                ],
                "precision": "very-high",
                "repoDatasetSize": 110,
                "cwe": [
                  "CWE-611"
                ]
              }
            },
            {
              "id": "javascript/NoRateLimitingForExpensiveWebOperation",
              "name": "NoRateLimitingForExpensiveWebOperation",
              "shortDescription": {
                "text": "Allocation of Resources Without Limits or Throttling"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nWithout unlimited resources, software operating in the real world is inherently limited in the resources it may consume; similarly, servers are limited by the number of simultaneous sessions they can handle. Therefore, it is important for developers to design software that considers these real-world physical (or virtual) limitations and limits user sessions accordingly, both in terms of the number of user sessions and in the quantity of resources each user may demand. Software with this weakness does not include such limitations and as a result, individual user sessions may consume too many resources, leading to unintended software behavior including, potentially, denial of service. This can be compared to a single restaurant customer emptying out the entire buffet, leaving no food for other customers--or an entire busload mobbing the buffet all at once, with a similar effect. This may happen inadvertently or as a result of an attack by a malicious user.\n\n### Best practices for prevention\n* Test extensively to obtain baseline values indicating how the software performs in the real world under various conditions (normal and peak); use these values to determine reasonable software limits.\n* Set clear limits for all flexible parameters such as maximum allocable memory, number of processes within a given timeframe, file descriptors, requests per client, number of records per request, etc. This is particularly true for any parameters within user control.\n* Release all resources when no longer in use, including incorporating timeouts for inactive users, processes, and resources.\n* Familiarize Dev, Ops, and IT teams with best practices for recognizing and preventing DoS attacks and out-of-control resource allocation to prevent catastrophic failures.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/comatory/fb2iCal/commit/6a1ef614ade7ba821009dbce4a615d448751a449?diff=split#diff-92bbac9a308cd5fcf9db165841f2d90ce981baddcb2b1e26cfff170929af3bd1R5",
                    "lines": [
                      {
                        "line": "const rateLimit = require('express-rate-limit')",
                        "lineNumber": 4,
                        "lineChange": "added"
                      },
                      {
                        "line": "const crawl = require('./crawler')",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "const parseHTML = require('./parser')",
                        "lineNumber": 7,
                        "lineChange": "none"
                      },
                      {
                        "line": "const generateICS = require('./ics')",
                        "lineNumber": 8,
                        "lineChange": "none"
                      },
                      {
                        "line": "const { genericErrorHandler, checkFBURL } = require('./middlewares')",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "const port = process.env.PORT",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "const app = express()",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.set('view engine', 'ejs')",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.set('views', path.join(__dirname, 'views'))",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(express.static(path.join(__dirname, 'public')))",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')))",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(bodyParser())",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.get('/', (req, res) => {",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "  res.render('index')",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "})",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.get('/error', (req, res) => {",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "  const error = req.error || req.query.error || ''",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "  res",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "    .status(500)",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "    .render('error', { error })",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "})",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "// NOTE: Capture all unkown URLs",
                        "lineNumber": 38,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.get('*', (req, res) => {",
                        "lineNumber": 39,
                        "lineChange": "none"
                      },
                      {
                        "line": "  res.status(400).render('404')",
                        "lineNumber": 40,
                        "lineChange": "none"
                      },
                      {
                        "line": "})",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use('/download', checkFBURL)",
                        "lineNumber": 43,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use('/download', rateLimit())",
                        "lineNumber": 39,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "WIP Fix server tests.",
                  "* Fixed tests failing due to a renamed file.",
                  "first tests with isomorphic rendering"
                ],
                "precision": "very-high",
                "repoDatasetSize": 1164,
                "cwe": [
                  "CWE-770"
                ]
              }
            },
            {
              "id": "java/ServerInformationExposure/test",
              "name": "ServerInformationExposure/test",
              "shortDescription": {
                "text": "Server Information Exposure"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "## Details\n\nWhen a command to your site or application fails, it should do so gracefully, meaning that the user is informed that there has been a problem, rather than experiencing erratic behavior, such as crashing, hanging, or returning a 404 or similar generic error page.\n\nIn some cases, developers include information in an error message to help pinpoint the source of an error; these may include username, password, application path, stack values, and other internal details. When this weakness is present, if these logs are accessible to an attacker, it may give them clues as to the inner workings of the app, helping them plan a focused attack. For example, clues revealing SQL database details may help plan an SQL injection attack.\n\n### Best practices for prevention\n* Keep error messages to the barest minimum of helpful information that users absolutely need to know.\n* Use consistent error messages that do not give attackers clues that they might be on the right track to a successful attack, such as \"File not found\" or \"User name does not exist\".\n* Ensure that debugging information is removed from code prior to release.\n* Create clear policy for the types of errors that must be logged, which messages will be displayed to users, and which details will be logged for later alerting and debugging.\n* When logging error details, never include sensitive information such as passwords.\n* Implement naming conventions that will help you flag and defend sensitive information.\n* Use dynamic (white box) test techniques to identify conditions that could cause errors and failures and test thoroughly to ensure that the code performs gracefully without revealing sensitive data under these stress conditions.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/Nastel/tnt4j-stream-jmx/commit/624c5a0fb347a42756d8585cc79af68fa337e9f0?diff=split#diff-35c1f73e10eae0fa3bae03b3fac7f022L139",
                    "lines": [
                      {
                        "line": "@Override",
                        "lineNumber": 153,
                        "lineChange": "none"
                      },
                      {
                        "line": "protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {",
                        "lineNumber": 154,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if (req.getRequestURI().endsWith(\"/js/tntJmx.js\")) {",
                        "lineNumber": 155,
                        "lineChange": "added"
                      },
                      {
                        "line": "    resp.setContentType(\"application/javascript\");",
                        "lineNumber": 156,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 165,
                        "lineChange": "added"
                      },
                      {
                        "line": "PrintWriter out = resp.getWriter();",
                        "lineNumber": 167,
                        "lineChange": "none"
                      },
                      {
                        "line": "out.println(\"<html>\");",
                        "lineNumber": 168,
                        "lineChange": "none"
                      },
                      {
                        "line": "out.println(\"<body>\");",
                        "lineNumber": 173,
                        "lineChange": "none"
                      },
                      {
                        "line": "} catch (Exception e) {",
                        "lineNumber": 361,
                        "lineChange": "none"
                      },
                      {
                        "line": "  out.println(\"!!! NO captured output available !!!\");",
                        "lineNumber": 362,
                        "lineChange": "none"
                      },
                      {
                        "line": "  e.printStackTrace(out);",
                        "lineNumber": 363,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 364,
                        "lineChange": "none"
                      },
                      {
                        "line": "out.println(\"</textarea>\");",
                        "lineNumber": 365,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/nidi3/raml-tester-proxy/commit/32b2457bebfeeb1f72610b98a2ff31ac2361f092?diff=split#diff-3414551db540ee26f840d182e6e6c029L77",
                    "lines": [
                      {
                        "line": "}",
                        "lineNumber": 78,
                        "lineChange": "none"
                      },
                      {
                        "line": "public boolean handleCommands(HttpServletRequest request, HttpServletResponse response) throws IOException {",
                        "lineNumber": 80,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (!request.getPathInfo().startsWith(\"/@@@proxy\")) {",
                        "lineNumber": 77,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    if (!request.getPathInfo().startsWith(COMMAND_PATH) || \"true\".equals(request.getHeader(IGNORE_COMMANDS_HEADER))) {",
                        "lineNumber": 81,
                        "lineChange": "added"
                      },
                      {
                        "line": "        return false;",
                        "lineNumber": 82,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }",
                        "lineNumber": 83,
                        "lineChange": "none"
                      },
                      {
                        "line": "    final String command = request.getPathInfo().substring(10);",
                        "lineNumber": 84,
                        "lineChange": "none"
                      },
                      {
                        "line": "    final PrintWriter writer = response.getWriter();",
                        "lineNumber": 85,
                        "lineChange": "none"
                      },
                      {
                        "line": "    switch (command) {",
                        "lineNumber": 86,
                        "lineChange": "none"
                      },
                      {
                        "line": "        case \"stop\":",
                        "lineNumber": 87,
                        "lineChange": "none"
                      },
                      {
                        "line": "    } catch (Exception e) {",
                        "lineNumber": 160,
                        "lineChange": "none"
                      },
                      {
                        "line": "        writer.println(\"illegal options: '\" + raw + \"'\");",
                        "lineNumber": 161,
                        "lineChange": "none"
                      },
                      {
                        "line": "        e.printStackTrace(writer);",
                        "lineNumber": 162,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }",
                        "lineNumber": 163,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 164,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/dropwizard/dropwizard/commit/0d143d7bc35351a135f8dc82c5e6f78d1eb39268?diff=split#diff-2339a287a25047fea1fc16e74728a1c1L116",
                    "lines": [
                      {
                        "line": "@Override",
                        "lineNumber": 116,
                        "lineChange": "none"
                      },
                      {
                        "line": "protected void doPost(HttpServletRequest req,",
                        "lineNumber": 117,
                        "lineChange": "none"
                      },
                      {
                        "line": "                      HttpServletResponse resp) throws ServletException, IOException {",
                        "lineNumber": 118,
                        "lineChange": "none"
                      },
                      {
                        "line": "    final Task task = tasks.get(req.getPathInfo());",
                        "lineNumber": 119,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (task != null) {",
                        "lineNumber": 120,
                        "lineChange": "none"
                      },
                      {
                        "line": "        resp.setContentType(MediaType.PLAIN_TEXT_UTF_8.toString());",
                        "lineNumber": 118,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        resp.setContentType(CONTENT_TYPE);",
                        "lineNumber": 121,
                        "lineChange": "added"
                      },
                      {
                        "line": "        final PrintWriter output = resp.getWriter();",
                        "lineNumber": 122,
                        "lineChange": "none"
                      },
                      {
                        "line": "        try {",
                        "lineNumber": 123,
                        "lineChange": "none"
                      },
                      {
                        "line": "            final TaskExecutor taskExecutor = taskExecutors.get(task);",
                        "lineNumber": 124,
                        "lineChange": "none"
                      },
                      {
                        "line": "    output.println();",
                        "lineNumber": 129,
                        "lineChange": "none"
                      },
                      {
                        "line": "    output.println(e.getMessage());",
                        "lineNumber": 130,
                        "lineChange": "none"
                      },
                      {
                        "line": "    e.printStackTrace(output);",
                        "lineNumber": 131,
                        "lineChange": "none"
                      },
                      {
                        "line": "} finally {",
                        "lineNumber": 132,
                        "lineChange": "none"
                      },
                      {
                        "line": "    output.close();",
                        "lineNumber": 133,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Create a base class for API controller servlets.",
                  "Unit tests for import and export APIs",
                  "SDB/MySQL connection pooling"
                ],
                "precision": "very-high",
                "repoDatasetSize": 27,
                "cwe": [
                  "CWE-209"
                ]
              }
            },
            {
              "id": "python/NoHardcodedPasswords",
              "name": "NoHardcodedPasswords",
              "shortDescription": {
                "text": "Use of Hardcoded Credentials"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nDevelopers may use hardcoded credentials for convenience when coding in order to simplify their workflow. While they are responsible for removing these before production, occasionally this task may fall through the cracks. This also becomes a maintenance challenge when credentials are re-used across multiple applications.\n\nOnce attackers gain access, they may take advantage of privilege level to remove or alter data, take down a site or app, or hold any of the above for ransom. The risk across multiple similar projects is even greater. If code containing the credentials is reused across multiple projects, they will all be compromised.\n\n### Best practices for prevention\n* Plan software architecture such that keys and passwords are always stored outside the code, wherever possible.\n* Plan encryption into software architecture for all credential information and ensure proper handling of keys, credentials, and passwords.\n* Prompt for a secure password on first login rather than hard-code a default password.\n* If a hardcoded password or credential must be used, limit its use, for example, to system console users rather than via the network.\n* Use strong hashes for inbound password authentication, ideally with randomly assigned salts to increase the difficulty level in case of brute-force attack.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/timgrossmann/TwitPy/commit/a4ef575a6b4bc46cde5c6f4b044cf8402a2391c4?diff=split#diff-958d99effc816f39c7c564e49561306fL4",
                    "lines": [
                      {
                        "line": "from twitpy import TwitPy",
                        "lineNumber": 1,
                        "lineChange": "none"
                      },
                      {
                        "line": "  raise ImportError(\"Missing config.py. Did you copy it from config.py.dist?\")",
                        "lineNumber": 5,
                        "lineChange": "added"
                      },
                      {
                        "line": "TwitPy(username=\"t_tomgrossmann\", password=\"****\") \\",
                        "lineNumber": 3,
                        "lineChange": "removed"
                      },
                      {
                        "line": "TwitPy(username=config.USERNAME, password=config.PASSWORD,",
                        "lineNumber": 7,
                        "lineChange": "added"
                      },
                      {
                        "line": "  chrome_path=config.CHROME_PATH) \\",
                        "lineNumber": 8,
                        "lineChange": "added"
                      },
                      {
                        "line": "  .login() \\",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "  .follow_from_recom(amount=250) \\",
                        "lineNumber": 5,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  .follow_from_recom(amount=5) \\",
                        "lineNumber": 10,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/openstack/sahara/commit/444cd0e2f4e252bb9e7f699cb7e1c45f315e54c7?diff=split#diff-ef5fd68b9b268896bb327a593971c9d0L51",
                    "lines": [
                      {
                        "line": "try:",
                        "lineNumber": 57,
                        "lineChange": "none"
                      },
                      {
                        "line": "    ssh.set_missing_host_key_policy(AutoAddPolicy())",
                        "lineNumber": 58,
                        "lineChange": "none"
                      },
                      {
                        "line": "    ssh.connect(host, username='root', password='swordfish')",
                        "lineNumber": 50,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    ssh.connect(host, username=NODE_USER, password=NODE_PASSWORD)",
                        "lineNumber": 59,
                        "lineChange": "added"
                      },
                      {
                        "line": "    chan = ssh.get_transport().open_session()",
                        "lineNumber": 60,
                        "lineChange": "none"
                      },
                      {
                        "line": "    chan.exec_command(cmd)",
                        "lineNumber": 61,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/wf1314/zhihu-terminal/commit/8042f1263a6aad419ea6410fa8014f8c706c5022?diff=split#diff-b1a925f111fb1ff1bc708bbb589a0950L116",
                    "lines": [
                      {
                        "line": "from setting import USER, PASSWORD",
                        "lineNumber": 113,
                        "lineChange": "added"
                      },
                      {
                        "line": "async def test():",
                        "lineNumber": 114,
                        "lineChange": "none"
                      },
                      {
                        "line": "    client = ZhihuClient(user='', password='')",
                        "lineNumber": 115,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    client = ZhihuClient(user=USER, password=PASSWORD)",
                        "lineNumber": 115,
                        "lineChange": "added"
                      },
                      {
                        "line": "    await client.login(load_cookies=True)",
                        "lineNumber": 116,
                        "lineChange": "none"
                      },
                      {
                        "line": "    spider = ZhihuSpider(client)",
                        "lineNumber": 117,
                        "lineChange": "none"
                      },
                      {
                        "line": "    await spider.get_recommend_article()",
                        "lineNumber": 118,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Tests for retrieving user auth tokens",
                  "Allow to setup password on test run",
                  "Updates tests and docs."
                ],
                "precision": "very-high",
                "repoDatasetSize": 179,
                "cwe": [
                  "CWE-798",
                  "CWE-259"
                ]
              }
            },
            {
              "id": "javascript/WebCookieSecureDisabledByDefault",
              "name": "WebCookieSecureDisabledByDefault",
              "shortDescription": {
                "text": "Sensitive Cookie in HTTPS Session Without 'Secure' Attribute"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nIn a session hijacking attack, if a cookie containing sensitive data is set without the `secure` attribute, an attacker might be able to intercept that cookie. Once the attacker has this information, they can potentially impersonate a user, accessing confidential data and performing actions that they would not normally be authorized to do. Attackers often gain access to this sensitive cookie data when it is transmitted insecurely in plain text over a standard HTTP session, rather than being encrypted and sent over an HTTPS session. This type of attack is highly preventable by following best practices when setting sensitive session cookies.\n\n### Best practices for prevention\n* Set the `secure` attribute in the response header when setting cookies on the client side, and use a test tool to verify that secure cookie transmission is in place.\n* Always use HTTPS for all login pages and never redirect from HTTP to HTTPS, which leaves secure session data open to interception.\n* Follow other best practices when it comes to session cookies, such as setting the HttpOnly flag and maintaining highly time-limited sessions.\n* Consider implementing browser checks and providing secure data only within a browser that supports tight cookie security.\n* Generate session IDs in a way that is not easily predictable, invalidate sessions upon logout, and never reuse session IDs.\n* Educate developers to use built-in secure session-management functionality within the development environment instead of taking a DIY approach.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/SLaks/csrf-crypto/commit/c01f29046c1b6e263198bedfdc65eca70d3de8da?diff=split#diff-3dd5c8a7bb0c10a5d2fcb6d46f1f38dbL53",
                    "lines": [
                      {
                        "line": "// Private function that adds a new cookie token to the response and returns its salt value",
                        "lineNumber": 51,
                        "lineChange": "none"
                      },
                      {
                        "line": "function createCookie(res) {",
                        "lineNumber": 52,
                        "lineChange": "none"
                      },
                      {
                        "line": "  var salt = base64Random(saltSize);",
                        "lineNumber": 53,
                        "lineChange": "none"
                      },
                      {
                        "line": "  var cookie = salt + \"|\" + userData + \"|\" + hash;",
                        "lineNumber": 64,
                        "lineChange": "none"
                      },
                      {
                        "line": "  res.cookie(options.cookieName, cookie, {});",
                        "lineNumber": 65,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  res.cookie(options.cookieName, cookie, { httpOnly: true, secure: options.secure });",
                        "lineNumber": 65,
                        "lineChange": "added"
                      },
                      {
                        "line": "  return salt;",
                        "lineNumber": 66,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 67,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/xCss/bing/commit/49599704a5418f4c94ec046fdea597b2e86abad7?diff=split#diff-0364f57fbff2fabbe941ed20c328ef1aL45",
                    "lines": [
                      {
                        "line": "}));",
                        "lineNumber": 42,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(cookieParser('bing.ioliu.cn'));",
                        "lineNumber": 43,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(session({",
                        "lineNumber": 44,
                        "lineChange": "none"
                      },
                      {
                        "line": "    secret: 'bing app', //secretþÜäÕÇ╝Õ╗║Þ««õ¢┐þö¿ÚÜÅµ£║Õ¡ùþ¼ªõ©▓",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "    cookie: {",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "        secure: true,",
                        "lineNumber": 47,
                        "lineChange": "added"
                      },
                      {
                        "line": "        maxAge: 60 * 30 * 1000 // Þ┐çµ£ƒµùÂÚù┤´╝êµ»½þºÆ´╝ë",
                        "lineNumber": 48,
                        "lineChange": "none"
                      },
                      {
                        "line": "    },",
                        "lineNumber": 49,
                        "lineChange": "added"
                      },
                      {
                        "line": "    resave: false,",
                        "lineNumber": 50,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/rafaelalmeidatk/i-need-ideas/commit/996fd36706b1d3c046994bf878e94beb23de8fb6?diff=split#diff-5b799c64ad01cad68d3e23d0b1d04a9bL33",
                    "lines": [
                      {
                        "line": "app.use(",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "  session({",
                        "lineNumber": 37,
                        "lineChange": "none"
                      },
                      {
                        "line": "    secret: 'hey, shhh!',",
                        "lineNumber": 38,
                        "lineChange": "none"
                      },
                      {
                        "line": "    resave: false,",
                        "lineNumber": 39,
                        "lineChange": "none"
                      },
                      {
                        "line": "    saveUninitialized: true,",
                        "lineNumber": 40,
                        "lineChange": "none"
                      },
                      {
                        "line": "    cookie: {",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "      httpOnly: true,",
                        "lineNumber": 42,
                        "lineChange": "none"
                      },
                      {
                        "line": "      secure: IS_PRODUCTION,",
                        "lineNumber": 43,
                        "lineChange": "added"
                      },
                      {
                        "line": "    },",
                        "lineNumber": 44,
                        "lineChange": "none"
                      },
                      {
                        "line": "  })",
                        "lineNumber": 45,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Use new (tested) accessToken utils to set and remove cookies",
                  "Some security options",
                  "clean console.log + update test for express session"
                ],
                "precision": "very-high",
                "repoDatasetSize": 96,
                "cwe": [
                  "CWE-614"
                ]
              }
            },
            {
              "id": "javascript/UseCsurfForExpress",
              "name": "UseCsurfForExpress",
              "shortDescription": {
                "text": "Cross-Site Request Forgery (CSRF)"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\nCross-site request forgery is an attack in which a malicious third party takes advantage of a user's authenticated credentials (such as a browser cookie) to impersonate that trusted user and perform unauthorized actions. The web application server cannot tell the difference between legitimate and malicious requests. This type of attack generally begins by tricking the user with a social engineering attack, such as a link or popup that the user inadvertently clicks, causing an unauthorized request to be sent to the web server. Consequences vary: At a standard user level, attackers can change passwords, transfer funds, make purchases, or connect with contacts; from an administrator account, attackers can then make changes to or even take down the app itself.\n\n### Best practices for prevention\n* Use development frameworks that defend against CSRF, using a nonce, hash, or some other security device to the URL and/or to forms.\n* Implement secure, unique, hidden tokens that are checked by the server each time to validate state-change requests.\n* Never assume that authentication tokens and session identifiers mean a request is legitimate.\n* Understand and implement other safe-cookie techniques, such as double submit cookies.\n* Terminate user sessions when not in use, including automatic timeout.\n* Ensure rigorous coding practices and defenses against other commonly exploited CWEs, since cross-site scripting (XSS), for example, can be used to bypass defenses against CSRF.\n\n## References\n\n* [Express Documentation - Implement CSRF Protection](https://expressjs.com/en/resources/middleware/csurf.html)\n* [Node Security Checklist - CSRF](https://blog.risingstack.com/node-js-security-checklist/#csrf)",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/LukeLin/react-ocean/commit/9a13d57dedf6742ed06321a80ca2a5842fb8a72a?diff=split#diff-65890f102baa526da3cc5d65e0528ea728fa9fa63659a7f2e1d523686240359cR7",
                    "lines": [
                      {
                        "line": "import session from 'express-session';",
                        "lineNumber": 6,
                        "lineChange": "added"
                      },
                      {
                        "line": "import csurf from 'csurf';",
                        "lineNumber": 7,
                        "lineChange": "added"
                      },
                      {
                        "line": "import config from './config/config.json';",
                        "lineNumber": 8,
                        "lineChange": "none"
                      },
                      {
                        "line": "import routes from './routes';",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "import allowCrossDomain from './config/allowCrossDomain'",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": "import { renderFile } from 'ejs';",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "let app = express();",
                        "lineNumber": 13,
                        "lineChange": "none"
                      },
                      {
                        "line": "if(process.env.NODE_ENV !== 'production'){",
                        "lineNumber": 13,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    let webpack = require('webpack');",
                        "lineNumber": 14,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    let config = require('../create-webpack.config')(true);",
                        "lineNumber": 15,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    let webpackDevMiddleware = require('webpack-dev-middleware');",
                        "lineNumber": 16,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    let webpackHotMiddleware = require('webpack-hot-middleware');",
                        "lineNumber": 17,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    let compiler = webpack(config);",
                        "lineNumber": 18,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    app.use(webpackDevMiddleware(compiler, { noInfo: true, publicPath: config.output.publicPath }));",
                        "lineNumber": 19,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    app.use(webpackHotMiddleware(compiler));",
                        "lineNumber": 20,
                        "lineChange": "removed"
                      },
                      {
                        "line": "}",
                        "lineNumber": 21,
                        "lineChange": "removed"
                      },
                      {
                        "line": "app.set('host', process.env.IP || '127.0.0.1');",
                        "lineNumber": 15,
                        "lineChange": "added"
                      },
                      {
                        "line": "app.set('port', process.env.PORT || 36000);",
                        "lineNumber": 16,
                        "lineChange": "added"
                      },
                      {
                        "line": "app.disable('x-powered-by');",
                        "lineNumber": 17,
                        "lineChange": "added"
                      },
                      {
                        "line": "app.set('view engine', 'ejs');",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.set('views', __dirname + '/views');",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.engine('html', renderFile);",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(compress());",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(logger('dev'));",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(bodyParser.json());",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(bodyParser.urlencoded({ extended: true }));",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(cookieParser());",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(session({",
                        "lineNumber": 27,
                        "lineChange": "added"
                      },
                      {
                        "line": "    resave: true,",
                        "lineNumber": 28,
                        "lineChange": "added"
                      },
                      {
                        "line": "    saveUninitialized: true,",
                        "lineNumber": 29,
                        "lineChange": "added"
                      },
                      {
                        "line": "    secret: \"notagoodsecret\",",
                        "lineNumber": 30,
                        "lineChange": "added"
                      },
                      {
                        "line": "    cookie: {httpOnly: true}",
                        "lineNumber": 31,
                        "lineChange": "added"
                      },
                      {
                        "line": "}));",
                        "lineNumber": 32,
                        "lineChange": "added"
                      },
                      {
                        "line": "// app.use(favicon(__dirname + '/../public/favicon.ico'));",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use('/static', express.static(__dirname + '/../public', {",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "    maxAge: 86400000",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "}));",
                        "lineNumber": 37,
                        "lineChange": "none"
                      },
                      {
                        "line": "process.on('uncaughtException', err => {",
                        "lineNumber": 38,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    console.error(err.message + '\\n' + err.stack);",
                        "lineNumber": 39,
                        "lineChange": "removed"
                      },
                      {
                        "line": "});",
                        "lineNumber": 40,
                        "lineChange": "removed"
                      },
                      {
                        "line": "process.on('unhandledRejection', (reason, p) => {",
                        "lineNumber": 41,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    console.error(\"Unhandled Rejection at: Promise \", p, \" reason: \", reason);",
                        "lineNumber": 42,
                        "lineChange": "removed"
                      },
                      {
                        "line": "});",
                        "lineNumber": 43,
                        "lineChange": "removed"
                      },
                      {
                        "line": "process.on('rejectionHandled', (reason, p) => {",
                        "lineNumber": 44,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    console.warn(\"rejectionHandled at: Promise \", p, \" reason: \", reason);",
                        "lineNumber": 45,
                        "lineChange": "removed"
                      },
                      {
                        "line": "});",
                        "lineNumber": 46,
                        "lineChange": "removed"
                      },
                      {
                        "line": "if(process.env.NODE_ENV !== 'production'){",
                        "lineNumber": 39,
                        "lineChange": "added"
                      },
                      {
                        "line": "    let webpack = require('webpack');",
                        "lineNumber": 40,
                        "lineChange": "added"
                      },
                      {
                        "line": "    let config = require('../create-webpack.config')(true);",
                        "lineNumber": 41,
                        "lineChange": "added"
                      },
                      {
                        "line": "    let webpackDevMiddleware = require('webpack-dev-middleware');",
                        "lineNumber": 42,
                        "lineChange": "added"
                      },
                      {
                        "line": "    let webpackHotMiddleware = require('webpack-hot-middleware');",
                        "lineNumber": 43,
                        "lineChange": "added"
                      },
                      {
                        "line": "    let compiler = webpack(config);",
                        "lineNumber": 44,
                        "lineChange": "added"
                      },
                      {
                        "line": "    app.use(webpackDevMiddleware(compiler, { noInfo: true, publicPath: config.output.publicPath }));",
                        "lineNumber": 45,
                        "lineChange": "added"
                      },
                      {
                        "line": "    app.use(webpackHotMiddleware(compiler));",
                        "lineNumber": 46,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 47,
                        "lineChange": "added"
                      },
                      {
                        "line": "app.use('/', allowCrossDomain);",
                        "lineNumber": 49,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(csurf());",
                        "lineNumber": 51,
                        "lineChange": "added"
                      },
                      {
                        "line": "app.use(function (req, res, next) {",
                        "lineNumber": 52,
                        "lineChange": "added"
                      },
                      {
                        "line": "    res.locals.csrftoken = req.session._csrf;",
                        "lineNumber": 53,
                        "lineChange": "added"
                      },
                      {
                        "line": "    next();",
                        "lineNumber": 54,
                        "lineChange": "added"
                      },
                      {
                        "line": "});",
                        "lineNumber": 55,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/OpenSprites/OpenSprites-next/commit/0ff4f1bc633496f7d5abc5f9bdf2a5cce43b080e?diff=split#diff-d3f9f1ac91aa1bf0f85894eb43eb424f26c61fd0e44eeb8c0787f48a0ba511ecR36",
                    "lines": [
                      {
                        "line": "const csrf = require('csurf')",
                        "lineNumber": 35,
                        "lineChange": "added"
                      },
                      {
                        "line": "const session = require('express-session')",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "const sessionStore = require('session-file-store')(session)",
                        "lineNumber": 37,
                        "lineChange": "none"
                      },
                      {
                        "line": "const exprhbs = require('express-handlebars')",
                        "lineNumber": 38,
                        "lineChange": "none"
                      },
                      {
                        "line": "const cheerio = require('cheerio')",
                        "lineNumber": 40,
                        "lineChange": "none"
                      },
                      {
                        "line": "const request = require('request-promise')",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "const marked = require('marked')",
                        "lineNumber": 43,
                        "lineChange": "none"
                      },
                      {
                        "line": "const base32 = require('base32')",
                        "lineNumber": 44,
                        "lineChange": "none"
                      },
                      {
                        "line": "const uniqid = require('uniqid').process",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "const shortid = require('shortid').generate",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "const rot = require('rot')",
                        "lineNumber": 47,
                        "lineChange": "none"
                      },
                      {
                        "line": "const bcrypt = require('bcrypt-as-promised')",
                        "lineNumber": 48,
                        "lineChange": "added"
                      },
                      {
                        "line": "const tada = '­ƒÄë'",
                        "lineNumber": 50,
                        "lineChange": "added"
                      },
                      {
                        "line": "const db = require('../db')",
                        "lineNumber": 51,
                        "lineChange": "none"
                      },
                      {
                        "line": "/////////////////////////////////////////////////////",
                        "lineNumber": 53,
                        "lineChange": "none"
                      },
                      {
                        "line": "const badWords = '\\\\o(shtyl|(\\\\j*?)shpx(\\\\j*?)|s(h|i|\\\\*)?p?x(vat?)?|(\\\\j*?)fu(v|1|y)g(\\\\j*?)|pe(n|@|\\\\*)c(cre|crq|l)?|(onq|qhzo|wnpx)?(n|@)ff(u(b|0)yr|jvcr)?|(onq|qhzo|wnpx)?(n|@)efr(u(b|0)yr|jvcr)?|onfgneq|o(v|1|y|\\\\*)?g?pu(r?f)?|phag|phz|(tbq?)?qnz(a|z)(vg)?|qbhpur(\\\\j*?)|(arj)?snt(tbg|tng)?|sevt(tra|tva|tvat)?|bzst|cvff(\\\\j*?)|cbea|encr|ergneq|frk|f r k|fung|fyhg|gvg|ju(b|0)er(\\\\j*?)|jg(s|su|u))(f|rq)?\\\\o' // rot13",
                        "lineNumber": 55,
                        "lineChange": "none"
                      },
                      {
                        "line": "const signupProjectId = 115307769 // null to disable check",
                        "lineNumber": 56,
                        "lineChange": "none"
                      },
                      {
                        "line": "const requireEmailConfirmedToShare = false",
                        "lineNumber": 57,
                        "lineChange": "none"
                      },
                      {
                        "line": "/////////////////////////////////////////////////////////",
                        "lineNumber": 59,
                        "lineChange": "none"
                      },
                      {
                        "line": "const badWordsRegex = new RegExp(rot(badWords, -13), 'gi')",
                        "lineNumber": 61,
                        "lineChange": "none"
                      },
                      {
                        "line": "const hasBadWords = text => text.match(badWordsRegex)",
                        "lineNumber": 62,
                        "lineChange": "none"
                      },
                      {
                        "line": "const replaceBadWords = (text, w='ÔïåÔïåÔïåÔïå') => text.replace(badWordsRegex, w)",
                        "lineNumber": 63,
                        "lineChange": "none"
                      },
                      {
                        "line": "/////////////////////////////////////////////////////////",
                        "lineNumber": 65,
                        "lineChange": "none"
                      },
                      {
                        "line": "let app = express()",
                        "lineNumber": 67,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.engine('hbs', exprhbs.create({",
                        "lineNumber": 69,
                        "lineChange": "none"
                      },
                      {
                        "line": "  defaultLayout: 'main',",
                        "lineNumber": 70,
                        "lineChange": "none"
                      },
                      {
                        "line": "  extname: '.hbs',",
                        "lineNumber": 71,
                        "lineChange": "none"
                      },
                      {
                        "line": "  layoutsDir: 'public/views/layouts/',",
                        "lineNumber": 72,
                        "lineChange": "none"
                      },
                      {
                        "line": "  partialsDir: 'public/views/partials/',",
                        "lineNumber": 73,
                        "lineChange": "none"
                      },
                      {
                        "line": "  helpers: {",
                        "lineNumber": 75,
                        "lineChange": "none"
                      },
                      {
                        "line": "    md: raw => marked(raw, { sanitize: true }),",
                        "lineNumber": 76,
                        "lineChange": "none"
                      },
                      {
                        "line": "    json: raw => JSON.stringify(raw),",
                        "lineNumber": 77,
                        "lineChange": "none"
                      },
                      {
                        "line": "    timeago: raw => `<span class='timeago'>${raw}</span>`",
                        "lineNumber": 78,
                        "lineChange": "none"
                      },
                      {
                        "line": "  }",
                        "lineNumber": 79,
                        "lineChange": "none"
                      },
                      {
                        "line": "}).engine)",
                        "lineNumber": 80,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.set('views', 'public/views')",
                        "lineNumber": 82,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.set('view engine', 'hbs')",
                        "lineNumber": 83,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.set('trust proxy', 1)",
                        "lineNumber": 85,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.set('json spaces', 2)",
                        "lineNumber": 86,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(session({",
                        "lineNumber": 88,
                        "lineChange": "none"
                      },
                      {
                        "line": "  secret: 'thisandagainplsexplain',",
                        "lineNumber": 86,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  secret: process.env.session_secret,",
                        "lineNumber": 89,
                        "lineChange": "added"
                      },
                      {
                        "line": "  cookie: { secure: false }, // enable if running on HTTPS",
                        "lineNumber": 90,
                        "lineChange": "none"
                      },
                      {
                        "line": "  resave: true,",
                        "lineNumber": 91,
                        "lineChange": "none"
                      },
                      {
                        "line": "  saveUninitialized: true,",
                        "lineNumber": 92,
                        "lineChange": "none"
                      },
                      {
                        "line": "  store: new sessionStore({",
                        "lineNumber": 93,
                        "lineChange": "none"
                      },
                      {
                        "line": "    path: 'db/session',",
                        "lineNumber": 94,
                        "lineChange": "none"
                      },
                      {
                        "line": "    logFn: ()=>{}",
                        "lineNumber": 95,
                        "lineChange": "none"
                      },
                      {
                        "line": "  })",
                        "lineNumber": 96,
                        "lineChange": "none"
                      },
                      {
                        "line": "}))",
                        "lineNumber": 97,
                        "lineChange": "none"
                      },
                      {
                        "line": "const upload = multer({",
                        "lineNumber": 99,
                        "lineChange": "none"
                      },
                      {
                        "line": "  storage: multer.diskStorage({",
                        "lineNumber": 100,
                        "lineChange": "none"
                      },
                      {
                        "line": "    destination: (req, file, cb) => cb(null, path.join(__dirname, '../../', 'db/resource')),",
                        "lineNumber": 101,
                        "lineChange": "none"
                      },
                      {
                        "line": "    filename: (req, file, cb) => {",
                        "lineNumber": 102,
                        "lineChange": "none"
                      },
                      {
                        "line": "      if(!req.session.user) cb(null, false)",
                        "lineNumber": 103,
                        "lineChange": "none"
                      },
                      {
                        "line": "      let filename = base32.encode(",
                        "lineNumber": 105,
                        "lineChange": "none"
                      },
                      {
                        "line": "        shortid()",
                        "lineNumber": 106,
                        "lineChange": "none"
                      },
                      {
                        "line": "      )",
                        "lineNumber": 107,
                        "lineChange": "none"
                      },
                      {
                        "line": "      cb(null, filename)",
                        "lineNumber": 109,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }",
                        "lineNumber": 110,
                        "lineChange": "none"
                      },
                      {
                        "line": "  })",
                        "lineNumber": 111,
                        "lineChange": "none"
                      },
                      {
                        "line": "})",
                        "lineNumber": 112,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(bodyParser.json())",
                        "lineNumber": 114,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(bodyParser.urlencoded({ extended: true }))",
                        "lineNumber": 112,
                        "lineChange": "removed"
                      },
                      {
                        "line": "app.use(function(req, res, next) {",
                        "lineNumber": 114,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  req.session.udata = db.user.get(req.session.user || '')",
                        "lineNumber": 115,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  if(req.session.user && !db.user.exists(req.session.user)) {",
                        "lineNumber": 117,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    delete req.session.user",
                        "lineNumber": 118,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  }",
                        "lineNumber": 119,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  next()",
                        "lineNumber": 121,
                        "lineChange": "removed"
                      },
                      {
                        "line": "})",
                        "lineNumber": 122,
                        "lineChange": "removed"
                      },
                      {
                        "line": "app.use(bodyParser.urlencoded({ extended: false }))",
                        "lineNumber": 115,
                        "lineChange": "added"
                      },
                      {
                        "line": "function mustSignIn(req, res, next) {",
                        "lineNumber": 124,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if(req.session.user) {",
                        "lineNumber": 125,
                        "lineChange": "none"
                      },
                      {
                        "line": "    next()",
                        "lineNumber": 126,
                        "lineChange": "none"
                      },
                      {
                        "line": "  } else {",
                        "lineNumber": 127,
                        "lineChange": "none"
                      },
                      {
                        "line": "    req.session.r = req.originalUrl",
                        "lineNumber": 128,
                        "lineChange": "none"
                      },
                      {
                        "line": "    res.redirect('/signin')",
                        "lineNumber": 129,
                        "lineChange": "none"
                      },
                      {
                        "line": "  }",
                        "lineNumber": 130,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 131,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(csrf({",
                        "lineNumber": 126,
                        "lineChange": "added"
                      },
                      {
                        "line": "  value: req => req.body.csrf",
                        "lineNumber": 127,
                        "lineChange": "added"
                      },
                      {
                        "line": "}))",
                        "lineNumber": 128,
                        "lineChange": "added"
                      },
                      {
                        "line": "app.use(function(err, req, res, next) {",
                        "lineNumber": 130,
                        "lineChange": "added"
                      },
                      {
                        "line": "  if(err.code !== 'EBADCSRFTOKEN') return next(err)",
                        "lineNumber": 131,
                        "lineChange": "added"
                      },
                      {
                        "line": "  res.status(403).render('403', {",
                        "lineNumber": 133,
                        "lineChange": "added"
                      },
                      {
                        "line": "    user: req.session.user",
                        "lineNumber": 134,
                        "lineChange": "added"
                      },
                      {
                        "line": "  })",
                        "lineNumber": 135,
                        "lineChange": "added"
                      },
                      {
                        "line": "})",
                        "lineNumber": 136,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/pietrzakadrian/bank/commit/c37779b4b85c031001c5d84aa259adface1d6602?diff=split#diff-bcb729747c92e72c12e4590f736a334041a572c429756da8af60b6ab89c6be79L18",
                    "lines": [
                      {
                        "line": "const app = express();",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "const server = require('http').Server(app, {",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "  transports: ['websocket', 'polling'],",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "});",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "const io = require('socket.io')(server, { pingTimeout: 60000 });",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "const cron = require('node-cron');",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "const swaggerUi = require('swagger-ui-express');",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "const swaggerDocument = require('./utils/swagger.json');",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "const db = require('./config/db.config');",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "const env = require('./config/env.config');",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "const Op = db.Sequelize.Op;",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "const cookieParser = require('cookie-parser');",
                        "lineNumber": 28,
                        "lineChange": "added"
                      },
                      {
                        "line": "const csrf = require('csurf');",
                        "lineNumber": 29,
                        "lineChange": "added"
                      },
                      {
                        "line": "app.use(bodyParser.urlencoded({ extended: true }));",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(bodyParser.json());",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "  bodyParser.json({",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "    limit: '2000kb',",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "  }),",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": ");",
                        "lineNumber": 37,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.disable('x-powered-by');",
                        "lineNumber": 38,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(cors());",
                        "lineNumber": 39,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(cookieParser());",
                        "lineNumber": 40,
                        "lineChange": "added"
                      },
                      {
                        "line": "app.use((req, res, next) => {",
                        "lineNumber": 42,
                        "lineChange": "none"
                      },
                      {
                        "line": "  res.header('Access-Control-Allow-Origin', '*');",
                        "lineNumber": 43,
                        "lineChange": "none"
                      },
                      {
                        "line": "  res.header(",
                        "lineNumber": 44,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'Access-Control-Allow-Headers',",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'Origin, X-Requested-With, Content-Type, Accept, Authorization',",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "  );",
                        "lineNumber": 47,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if (req.method === 'OPTIONS') {",
                        "lineNumber": 49,
                        "lineChange": "none"
                      },
                      {
                        "line": "    res.header('Access-Control-Allow-Methods', 'PUT, POST, PATCH, DELETE, GET');",
                        "lineNumber": 50,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return res.status(200).json({});",
                        "lineNumber": 51,
                        "lineChange": "none"
                      },
                      {
                        "line": "  }",
                        "lineNumber": 52,
                        "lineChange": "none"
                      },
                      {
                        "line": "  next();",
                        "lineNumber": 53,
                        "lineChange": "none"
                      },
                      {
                        "line": "});",
                        "lineNumber": 54,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use('/api-docs', swaggerUi.serve, swaggerUi.setup(swaggerDocument));",
                        "lineNumber": 56,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(morgan('dev'));",
                        "lineNumber": 57,
                        "lineChange": "added"
                      },
                      {
                        "line": "require('./routes/currency.route.js')(app);",
                        "lineNumber": 59,
                        "lineChange": "added"
                      },
                      {
                        "line": "app.use(csrf({ cookie: true }));",
                        "lineNumber": 60,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Test without express",
                  "/server tests ()",
                  "Refactor error middleware for testing and extension"
                ],
                "precision": "very-high",
                "repoDatasetSize": 701,
                "cwe": [
                  "CWE-352"
                ]
              }
            },
            {
              "id": "java/TooPermissiveHostnameVerifier/test",
              "name": "TooPermissiveHostnameVerifier/test",
              "shortDescription": {
                "text": "Improper Certificate Validation"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nCommunication through encrypted TLS/SSL protocols can only take place when the server bears a valid certificate associating that server with a valid public-key identity issued by a third-party authority. If certificate validation is cursory or incomplete, this creates a weakness whereby an attacker can spoof one or more certificate details (e.g., expiration date), gaining unauthorized access to confidential data and privileged actions.\n\n### Best practices for prevention\n* Verify all aspects of any certificate provided, particularly chain of trust (issuing authority), host identity, and expiration.\n* Limit the validity period for certificates.\n* Avoid using self-signed certificates, certificate pinning, and wildcard certificates, as these all add levels of convenience but can also lead to loss of control over site/app security.\n* Disable older and insecure protocols (for example, SSL 2.0/3.0, MD5, and 3DES).\n* Ensure that all team members are familiar with current best practices and approaches, such as current TLS protocols.\n* Implement automated and manual testing using current tools and techniques designed to reveal this and related SSL weaknesses (for example, web application scanners).",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/bonigarcia/webdrivermanager/commit/90dedd67b71d59a9a15a9b11892be3cd0a1c2e4e?diff=split#diff-5fd27e182b6d09ea7f5901daab03449dL114",
                    "lines": [
                      {
                        "line": "HostnameVerifier allHostsValid = new HostnameVerifier() {",
                        "lineNumber": 112,
                        "lineChange": "none"
                      },
                      {
                        "line": "    public boolean verify(String hostname, SSLSession session) {",
                        "lineNumber": 113,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return true;",
                        "lineNumber": 114,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        return hostname.equalsIgnoreCase(session.getPeerHost());",
                        "lineNumber": 114,
                        "lineChange": "added"
                      },
                      {
                        "line": "    }",
                        "lineNumber": 115,
                        "lineChange": "none"
                      },
                      {
                        "line": "};",
                        "lineNumber": 116,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/wso2-attic/product-private-paas/commit/a42df7abce437ad996fad1097a74ca7bf83da0c0?diff=split#diff-7568b7c1be7d23d9a86361e05ff18598L47",
                    "lines": [
                      {
                        "line": "if (Constants.ENABLE_SELF_CERTIFIED) {",
                        "lineNumber": 44,
                        "lineChange": "none"
                      },
                      {
                        "line": "    HttpsURLConnection.setDefaultHostnameVerifier(new HostnameVerifier() {",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "        @Override public boolean verify(String s, SSLSession sslSession) {",
                        "lineNumber": 46,
                        "lineChange": "removed"
                      },
                      {
                        "line": "            return true;",
                        "lineNumber": 47,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        public boolean verify(String hostname, SSLSession session) {",
                        "lineNumber": 40,
                        "lineChange": "added"
                      },
                      {
                        "line": "            return hostname.equals(System.getProperty(Constants.HOSTNAME));",
                        "lineNumber": 41,
                        "lineChange": "added"
                      },
                      {
                        "line": "        }",
                        "lineNumber": 48,
                        "lineChange": "none"
                      },
                      {
                        "line": "    });",
                        "lineNumber": 49,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Liberuman/SimpleProject/commit/f7afc6477bcfb9b2f78f742df913aa9a86d251d1?diff=split#diff-68c680467370001ab531d6c88431244dL95",
                    "lines": [
                      {
                        "line": ".sslSocketFactory(sslContext.getSocketFactory(), trustManager)",
                        "lineNumber": 94,
                        "lineChange": "none"
                      },
                      {
                        "line": ".hostnameVerifier(new HostnameVerifier() {",
                        "lineNumber": 95,
                        "lineChange": "none"
                      },
                      {
                        "line": "  @Override",
                        "lineNumber": 96,
                        "lineChange": "none"
                      },
                      {
                        "line": "  public boolean verify(String hostname, SSLSession session) {",
                        "lineNumber": 97,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return true;",
                        "lineNumber": 96,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    if (!TextUtils.isEmpty(baseUrl) && baseUrl.contains(hostname)) {",
                        "lineNumber": 98,
                        "lineChange": "added"
                      },
                      {
                        "line": "      return true;",
                        "lineNumber": 99,
                        "lineChange": "added"
                      },
                      {
                        "line": "    } else {",
                        "lineNumber": 100,
                        "lineChange": "added"
                      },
                      {
                        "line": "  }",
                        "lineNumber": 104,
                        "lineChange": "none"
                      },
                      {
                        "line": "})",
                        "lineNumber": 105,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "merged the rest client and test cases according to the new folder structure",
                  "workaround for SSL verify",
                  "Smarter hostname verifier"
                ],
                "precision": "very-high",
                "repoDatasetSize": 53,
                "cwe": [
                  "CWE-295"
                ]
              }
            },
            {
              "id": "java/InsecureAesWithBadPaddingCipher",
              "name": "InsecureAesWithBadPaddingCipher",
              "shortDescription": {
                "text": "Inadequate Padding for AES encryption"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nImplementing encryption for the transmission and storage of sensitive information is essential. But encryption standards are constantly changing since attackers have more and more powerful resources at their disposal-along with more sophisticated attack algorithms. This means that encryption is only useful if it meets current standards appropriate for the type of data being transmitted or stored.\nWhen organizations use weakly encoded passwords or weak hashes (especially when they also utilize single-factor authentication, which places too much emphasis on passwords), attackers can potentially gain unauthorized access through a brute-force attack.\n\n### Best practices for prevention\n* Understand best practices of contemporary encryption algorithms and techniques.\n* Avoid encryption algorithms and techniques that are widely known to be outdated (for example, DES).\n* Implement multi-factor authentication to minimize reliance on a single factor, such as a password, that is too susceptible to brute-force attacks.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/terracotta-bank/terracotta-bank/commit/a27453b52859d32ef25694869c1662a9493c621c?diff=split#diff-49444057459eecb4ff09662c3beab114L95",
                    "lines": [
                      {
                        "line": "String ivHeader = request.getHeader(\"X-Encryption-Iv\");",
                        "lineNumber": 93,
                        "lineChange": "none"
                      },
                      {
                        "line": "byte[] iv = Base64.getDecoder().decode(ivHeader);",
                        "lineNumber": 94,
                        "lineChange": "none"
                      },
                      {
                        "line": "Cipher cipher = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");",
                        "lineNumber": 94,
                        "lineChange": "removed"
                      },
                      {
                        "line": "cipher.init(Cipher.DECRYPT_MODE, secretKey(), new IvParameterSpec(iv));",
                        "lineNumber": 95,
                        "lineChange": "removed"
                      },
                      {
                        "line": "Cipher cipher = Cipher.getInstance(\"AES/GCM/NoPadding\");",
                        "lineNumber": 95,
                        "lineChange": "added"
                      },
                      {
                        "line": "cipher.init(Cipher.DECRYPT_MODE, secretKey(), new GCMParameterSpec(128, iv));",
                        "lineNumber": 96,
                        "lineChange": "added"
                      },
                      {
                        "line": "cipher.updateAAD(version.getBytes(UTF_8));",
                        "lineNumber": 97,
                        "lineChange": "added"
                      },
                      {
                        "line": "InputStream plain = new CipherInputStream(new Base64InputStream(request.getInputStream()), cipher);",
                        "lineNumber": 98,
                        "lineChange": "none"
                      },
                      {
                        "line": "\treturn new DecryptedWrapper(request, plain);",
                        "lineNumber": 99,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/oracle/helidon/commit/bd7b527d900fc3c7c5204459f9bf6dabb5de9f3f?diff=split#diff-c80e0c0f8ccdd12b672e5ad32aeee36dL151",
                    "lines": [
                      {
                        "line": "SecretKeySpec spec = new SecretKeySpec(secretKeyFactory.generateSecret(keySpec).getEncoded(), \"AES\");",
                        "lineNumber": 151,
                        "lineChange": "none"
                      },
                      {
                        "line": "Cipher cipher = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");",
                        "lineNumber": 152,
                        "lineChange": "none"
                      },
                      {
                        "line": "cipher.init(cipherMode, spec, new IvParameterSpec(salt));",
                        "lineNumber": 153,
                        "lineChange": "none"
                      },
                      {
                        "line": "KeySpec keySpec = new PBEKeySpec(masterPassword, salt, HASH_ITERATIONS, KEY_LENGTH);",
                        "lineNumber": 165,
                        "lineChange": "added"
                      },
                      {
                        "line": "SecretKeySpec spec = new SecretKeySpec(secretKeyFactory.generateSecret(keySpec).getEncoded(), \"AES\");",
                        "lineNumber": 166,
                        "lineChange": "added"
                      },
                      {
                        "line": "Cipher cipher = Cipher.getInstance(\"AES/GCM/NoPadding\");",
                        "lineNumber": 167,
                        "lineChange": "added"
                      },
                      {
                        "line": "cipher.init(cipherMode, spec, new GCMParameterSpec(AUTHENTICATION_TAG_LENGTH, nonce));",
                        "lineNumber": 168,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/vauvenal5/pieShare/commit/18468bf783a7ee736a4b05d6c66e363cb041ea72?diff=split#diff-164a90f5642f53516d8333a485e295a6L27",
                    "lines": [
                      {
                        "line": "private String provName;",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "private final String passwordEncryptionAlgo = \"PBEWithSHAAndTwofish-CBC\";",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "private final String encryptionAlgo = \"AES/CBC/PKCS5Padding\";",
                        "lineNumber": 26,
                        "lineChange": "removed"
                      },
                      {
                        "line": "private final String encryptionAlgo = \"AES/CFB8/NoPadding\";//AES/CFB/PKCS7Padding\";",
                        "lineNumber": 26,
                        "lineChange": "added"
                      },
                      {
                        "line": "private final String fileHashAlgo = \"MD5\";",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "public Cipher getEnDeCryptCipher() {",
                        "lineNumber": 65,
                        "lineChange": "none"
                      },
                      {
                        "line": "  try {",
                        "lineNumber": 66,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return Cipher.getInstance(this.encryptionAlgo, this.provName);//return \"PBEWithSHAAndTwofish-CBC\";",
                        "lineNumber": 67,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    return Cipher.getInstance(this.encryptionAlgo, this.provName);",
                        "lineNumber": 67,
                        "lineChange": "added"
                      },
                      {
                        "line": "  }",
                        "lineNumber": 68,
                        "lineChange": "none"
                      },
                      {
                        "line": "  catch (NoSuchAlgorithmException | NoSuchProviderException | NoSuchPaddingException ex) {",
                        "lineNumber": 69,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "added versioning and included salt in encrypted byte stream.",
                  "Switch from CBC to GCM",
                  "Add support for other AES transformation"
                ],
                "precision": "very-high",
                "repoDatasetSize": 52,
                "cwe": [
                  "CWE-326"
                ]
              }
            },
            {
              "id": "java/HardcodedSecret/test",
              "name": "HardcodedSecret/test",
              "shortDescription": {
                "text": "Hardcoded Secret"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "## Details\n\nWhen constants are hardcoded into applications, this information could easily be reverse-engineered and become known to attackers. For example, if a breached authentication token is hardcoded in multiple places in the application, it may lead to components of the application remaining vulnerable if not all instances are changed.\nAnother negative effect of hard-coding constants is potential unpredictability in the application's performance if the development team fails to update every single instance of the hardcoded constant throughout the code. For these reasons, hard-coding security-relevant constants is considered bad coding practice and should be remedied if present and avoided in future.\n\n### Best practices for prevention\n- Never hard code security-related constants; use symbolic names or configuration lookup files.\n- As hard coding is often done by coders working alone on a small scale, examine all legacy code components and test carefully when scaling.\n- Adopt a \"future-proof code\" mindset: While use of constants may save a little time now and make development simpler in the short term, it could cost time and money adapting to scale or other unforeseen circumstances (such as new hardware) in the future.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/aberic/fabric-net-server/commit/963bb9fe026b454672fb83fd739f3d754b6844e1?diff=split#diff-759baf3d057123b5320b6a399e775967L67",
                    "lines": [
                      {
                        "line": "app.setKey(MathUtil.getRandom8());",
                        "lineNumber": 77,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.setPublicKey(\"pub1\");",
                        "lineNumber": 65,
                        "lineChange": "removed"
                      },
                      {
                        "line": "app.setPrivateKey(\"pri1\");",
                        "lineNumber": 66,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    }",
                        "lineNumber": 81,
                        "lineChange": "added"
                      },
                      {
                        "line": "    app.setPublicKey(key.getPublicKey());",
                        "lineNumber": 82,
                        "lineChange": "added"
                      },
                      {
                        "line": "    app.setPrivateKey(key.getPrivateKey());",
                        "lineNumber": 83,
                        "lineChange": "added"
                      },
                      {
                        "line": "    return appMapper.updateKey(app);",
                        "lineNumber": 84,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 85,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/karutaproject/karuta-backend/commit/a05377ace2292896e3768e70aa2fde992ddaae62?diff=split#diff-a46279e5e2a97eaacfba9b55e2e3b9b0L104",
                    "lines": [
                      {
                        "line": "{",
                        "lineNumber": 108,
                        "lineChange": "none"
                      },
                      {
                        "line": "  rc4 = Cipher.getInstance(\"RC4\");",
                        "lineNumber": 109,
                        "lineChange": "none"
                      },
                      {
                        "line": "  SecretKeySpec key = new SecretKeySpec(\"testkey\".getBytes(), \"RC4\");",
                        "lineNumber": 103,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  String secretkey = ConfigUtils.get(\"directkey\");",
                        "lineNumber": 110,
                        "lineChange": "added"
                      },
                      {
                        "line": "  SecretKeySpec key = new SecretKeySpec(secretkey.getBytes(), \"RC4\");",
                        "lineNumber": 111,
                        "lineChange": "added"
                      },
                      {
                        "line": "  rc4.init(Cipher.DECRYPT_MODE, key);",
                        "lineNumber": 112,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/apache/cloudstack/commit/0653d6d7f6283752984ea181ef27559bed4b05af?diff=split#diff-af0be1b2a17efe3a3d4ae1941c2e946fL309",
                    "lines": [
                      {
                        "line": "long ts = (new Date()).getTime();",
                        "lineNumber": 306,
                        "lineChange": "removed"
                      },
                      {
                        "line": "long ts = normalizedHashTime.getTime();",
                        "lineNumber": 310,
                        "lineChange": "added"
                      },
                      {
                        "line": "ts = ts/60000;\t\t// round up to 1 minute",
                        "lineNumber": 311,
                        "lineChange": "none"
                      },
                      {
                        "line": "String secretKey = \"cloud.com\";",
                        "lineNumber": 308,
                        "lineChange": "removed"
                      },
                      {
                        "line": "String secretKey = _ms.getHashKey();",
                        "lineNumber": 312,
                        "lineChange": "added"
                      },
                      {
                        "line": "SecretKeySpec keySpec = new SecretKeySpec(secretKey.getBytes(), \"HmacSHA1\");",
                        "lineNumber": 314,
                        "lineChange": "none"
                      },
                      {
                        "line": "mac.init(keySpec);",
                        "lineNumber": 315,
                        "lineChange": "none"
                      },
                      {
                        "line": "mac.update(params.getBytes());",
                        "lineNumber": 316,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Api keys from json file",
                  "Made security file and session key configurable"
                ],
                "precision": "very-high",
                "repoDatasetSize": 62,
                "cwe": [
                  "CWE-547"
                ]
              }
            },
            {
              "id": "java/InsecureHash/test",
              "name": "InsecureHash/test",
              "shortDescription": {
                "text": "Use of Password Hash With Insufficient Computational Effort"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nSensitive information should never be stored in plain text, since this makes it very easy for unauthorized users, whether malicious insiders or outside attackers, to access. Hashing methods are used to make stored passwords and other sensitive data unreadable to users. For example, when a password is defined for the first time, it is hashed and then stored. The next time that user attempts to log on, the password they enter is hashed following the same procedure and compared with the stored value. In this way, the original password never needs to be stored in the system.\n\nHashing is a one-way scheme, meaning a hashed password cannot be reverse engineered. However, if an outdated or custom programmed hashing scheme is used, it becomes simple for an attacker with powerful modern computing power to gain access to the hashes used. This opens up access to all stored password information, leading to breached security. Therefore, it is essential for developers to understand modern, secure password hashing techniques.\n\n### Best practices for prevention\n* Use strong standard algorithms for hashing rather than simpler but outdated methods or DIY hashing schemes, which may have inherent weaknesses.\n* Use modular design for all code dealing with hashing so it can be swapped out as security standards change over time.\n* Use salting in combination with hashing (While this places more demands on resources, it is an essential step for tighter security.).\n* Implement zero-trust architecture to ensure that access to password data is granted only for legitimate business purposes.\n* Increase developer awareness of current standards in data security and cryptography.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/tita/tita/commit/398f6b776a2aea7f20bf604768b8721beff8d93a?diff=split#diff-dd34c5e6a15ca48bff6f9ca749e68243L164",
                    "lines": [
                      {
                        "line": " */",
                        "lineNumber": 161,
                        "lineChange": "none"
                      },
                      {
                        "line": "private String getHashedPassword(String pwd) throws NoSuchAlgorithmException {",
                        "lineNumber": 162,
                        "lineChange": "none"
                      },
                      {
                        "line": "    MessageDigest md = MessageDigest.getInstance(\"SHA-1\");",
                        "lineNumber": 163,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    MessageDigest md = MessageDigest.getInstance(\"SHA-256\");",
                        "lineNumber": 103,
                        "lineChange": "added"
                      },
                      {
                        "line": "    byte[] encryptMsg = md.digest(pwd.getBytes());",
                        "lineNumber": 164,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return new String(encryptMsg);",
                        "lineNumber": 165,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    return bytes2String(encryptMsg);",
                        "lineNumber": 105,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/devonfw/my-thai-star/commit/095a3fb6bb860a2411cb51e812121ec2a6b99894?diff=split#diff-4f73d1042058dd462057744068125d4eL242",
                    "lines": [
                      {
                        "line": "    + String.format(\"%02d\", ldt1.getSecond());",
                        "lineNumber": 240,
                        "lineChange": "none"
                      },
                      {
                        "line": "MessageDigest md = MessageDigest.getInstance(\"MD5\");",
                        "lineNumber": 241,
                        "lineChange": "removed"
                      },
                      {
                        "line": "MessageDigest md = MessageDigest.getInstance(\"SHA-256\");",
                        "lineNumber": 242,
                        "lineChange": "added"
                      },
                      {
                        "line": "md.update((email + date + time).getBytes());",
                        "lineNumber": 243,
                        "lineChange": "none"
                      },
                      {
                        "line": "byte[] digest = md.digest();",
                        "lineNumber": 244,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/SecurityCompass/AndroidLabs/commit/5608f75dd665beac85dbad08f80b91d73b27904a?diff=split#diff-ffc047d4a5f84de13e373f2392bfb11bL148",
                    "lines": [
                      {
                        "line": "byte[] passwordBytes = (password).getBytes(\"UTF-8\");",
                        "lineNumber": 145,
                        "lineChange": "none"
                      },
                      {
                        "line": "MessageDigest md = MessageDigest.getInstance(\"SHA-1\");",
                        "lineNumber": 147,
                        "lineChange": "removed"
                      },
                      {
                        "line": "MessageDigest md = MessageDigest.getInstance(\"SHA-256\");",
                        "lineNumber": 147,
                        "lineChange": "added"
                      },
                      {
                        "line": "md.reset();",
                        "lineNumber": 148,
                        "lineChange": "none"
                      },
                      {
                        "line": "md.update(salt);",
                        "lineNumber": 149,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Added an enum for the supported encryption algorithms",
                  "Added #hash(byte[], String)",
                  "Added support for\nsha256 and nonce token."
                ],
                "precision": "very-high",
                "repoDatasetSize": 122,
                "cwe": [
                  "CWE-916"
                ]
              }
            },
            {
              "id": "javascript/HttpToHttps",
              "name": "HttpToHttps",
              "shortDescription": {
                "text": "Cleartext Transmission of Sensitive Information"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\nThis weakness occurs when software transmits sensitive information, such as passwords or credit card numbers, in unencrypted form. This information may then be intercepted by threat actors using sniffer tools or interception techniques such as man-in-the-middle (MITM) attacks (often involving social engineering). Attackers can then use information gleaned to perform a variety of actions, depending on the information type. Possible actions include gaining unauthorized access, impersonating a user, moving laterally within the organization's network, or retrieving and potentially modifying files. This weakness is almost completely avoidable through intelligent architecture and design.\n\n### Best practices for prevention\n* Build web applications around a security mindset and the awareness that sniffers may be present at any time.\n* Ensure that all sensitive data transmission uses reliable encryption.\n* Implement security measures so that sensitive results are never returned in plain text.\n* Implement multiple-factor authentication methods to validate remote instances.\n* Use SSL not only at logon but throughout communications.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/Rocket1184/qq-bot-rebown/commit/5255a8398cf1d80f60e182c53e8532c7562e76c2?diff=split#diff-62a4be7247c4abe75f2cc11746422b86L12",
                    "lines": [
                      {
                        "line": "'use strict';",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "const http = require('http');",
                        "lineNumber": 11,
                        "lineChange": "removed"
                      },
                      {
                        "line": "const https = require('https');",
                        "lineNumber": 11,
                        "lineChange": "added"
                      },
                      {
                        "line": "function http2https(link) {",
                        "lineNumber": 13,
                        "lineChange": "added"
                      },
                      {
                        "line": " ",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "function shortenUrl(url) {",
                        "lineNumber": 21,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/qmachine/qmachine/commit/1f9f08b5b1f9be78dd6625d93ec934befb255df7?diff=split#diff-54387be96a26d96583a0c7585e8607c5L56",
                    "lines": [
                      {
                        "line": "};",
                        "lineNumber": 57,
                        "lineChange": "none"
                      },
                      {
                        "line": "http = require('http');",
                        "lineNumber": 55,
                        "lineChange": "removed"
                      },
                      {
                        "line": "https = require('https');",
                        "lineNumber": 59,
                        "lineChange": "added"
                      },
                      {
                        "line": "http_GET = function (x) {",
                        "lineNumber": 57,
                        "lineChange": "removed"
                      },
                      {
                        "line": "https_GET = function (x) {",
                        "lineNumber": 61,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/vmware-samples/vmware-blockchain-samples/commit/0e45b89996cc8ae87d4f6bd2240720fa70daccd1?diff=split#diff-21a000feb5ae912714215842b628c63cL3",
                    "lines": [
                      {
                        "line": "const fs = require(\"fs\");",
                        "lineNumber": 7,
                        "lineChange": "none"
                      },
                      {
                        "line": "const http = require(\"http\");",
                        "lineNumber": 2,
                        "lineChange": "removed"
                      },
                      {
                        "line": "const https = require(\"https\");",
                        "lineNumber": 8,
                        "lineChange": "added"
                      },
                      {
                        "line": "verifyMigrations();",
                        "lineNumber": 10,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Added https imposter tests;"
                ],
                "precision": "very-high",
                "repoDatasetSize": 631,
                "cwe": [
                  "CWE-319"
                ]
              }
            },
            {
              "id": "python/NoHardcodedCredentials",
              "name": "NoHardcodedCredentials",
              "shortDescription": {
                "text": "Use of Hardcoded Credentials"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nDevelopers may use hardcoded credentials for convenience when coding in order to simplify their workflow. While they are responsible for removing these before production, occasionally this task may fall through the cracks. This also becomes a maintenance challenge when credentials are re-used across multiple applications.\n\nOnce attackers gain access, they may take advantage of privilege level to remove or alter data, take down a site or app, or hold any of the above for ransom. The risk across multiple similar projects is even greater. If code containing the credentials is reused across multiple projects, they will all be compromised.\n\n### Best practices for prevention\n* Plan software architecture such that keys and passwords are always stored outside the code, wherever possible.\n* Plan encryption into software architecture for all credential information and ensure proper handling of keys, credentials, and passwords.\n* Prompt for a secure password on first login rather than hard-code a default password.\n* If a hardcoded password or credential must be used, limit its use, for example, to system console users rather than via the network.\n* Use strong hashes for inbound password authentication, ideally with randomly assigned salts to increase the difficulty level in case of brute-force attack.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/fizyk/pyramid_fullauth/commit/1ce35049319e3e054db1ff2e3a38ae7960ec724e?diff=split#diff-327b130c82fa4e83e97f6c1a50a0da1cL123",
                    "lines": [
                      {
                        "line": ")",
                        "lineNumber": 121,
                        "lineChange": "none"
                      },
                      {
                        "line": "self.create_user(username=u'u1')",
                        "lineNumber": 122,
                        "lineChange": "removed"
                      },
                      {
                        "line": "self.create_user(username=text_type('u1'))",
                        "lineNumber": 123,
                        "lineChange": "added"
                      },
                      {
                        "line": "user = self.session.query(User).filter(User.username == u'u1').one()",
                        "lineNumber": 124,
                        "lineChange": "removed"
                      },
                      {
                        "line": "user = self.session.query(User).filter(User.username == text_type('u1')).one()",
                        "lineNumber": 125,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/pytest-dev/pytest-django/commit/0afc1866ba52db6d1ddd120c1536b121441317de?diff=split#diff-b8d58f3cc3175f8ec7bc9441f7d0bd32L205",
                    "lines": [
                      {
                        "line": "client = Client()",
                        "lineNumber": 232,
                        "lineChange": "none"
                      },
                      {
                        "line": "client.login(username='admin', password='password')",
                        "lineNumber": 204,
                        "lineChange": "removed"
                      },
                      {
                        "line": "client.login(username=admin_user.username, password='password')",
                        "lineNumber": 233,
                        "lineChange": "added"
                      },
                      {
                        "line": "return client",
                        "lineNumber": 234,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/sehmaschine/django-filebrowser/commit/51d5af672eee311233309f107ad2c169a97f6291?diff=split#diff-789dacd8699dcbbc99f131ae8fa04326L45",
                    "lines": [
                      {
                        "line": "super(BrowseViewTests, self).setUp()",
                        "lineNumber": 38,
                        "lineChange": "none"
                      },
                      {
                        "line": "    self.url = reverse('filebrowser:fb_browse')",
                        "lineNumber": 43,
                        "lineChange": "none"
                      },
                      {
                        "line": "    self.client.login(username='testuser', password='password')",
                        "lineNumber": 44,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    self.client.login(username=self.user.username, password='password')",
                        "lineNumber": 39,
                        "lineChange": "added"
                      },
                      {
                        "line": "def test_get(self):",
                        "lineNumber": 46,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Tests for retrieving user auth tokens",
                  "Updates tests and docs.",
                  "Use a test backend for client login (supports) ()"
                ],
                "precision": "very-high",
                "repoDatasetSize": 172,
                "cwe": [
                  "CWE-798"
                ]
              }
            },
            {
              "id": "java/SetWorldWritable",
              "name": "SetWorldWritable",
              "shortDescription": {
                "text": "Android World Writeable/Readable File Permission Found"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nEnsuring correct file and directory permissions is one of the most critical security tasks for any organization. It takes careful planning and ongoing tracking for every single user (or group of users) within the application. When this weakness is present, it means that due to a misconfiguration, the wrong permission level is applied for a particular resource. This could give a user with a relatively low access level (such as any authenticated user or even an anonymous user) access to sensitive information. Once an attacker gains access, they can delete or modify it, sell it, or hold it for ransom. They can even potentially run executable files on the server.\n\nIn certain regulated industries such as healthcare and finance, unpatched vulnerabilities stemming from this weakness can lead to fines for non-compliance. And in all cases, breaches due to this weakness can quickly lead to a loss of reputation and low user confidence in the security of the application. Therefore, careful design and planning are essential for validating security policies and ensuring their implementation and maintenance.\n\n### Best practices for prevention\n* Classify application functionality according to privilege level: anonymous, normal, privileged, and administrative; then define user groups and roles and the access required by each to create a comprehensive security policy that is simpler to implement.\n* Make no assumptions about the environment in which the application will run (for example, single user, on-premises, user types, UI, etc.).\n* Never create applications with loose default security settings. Often, businesses rely on administrators to tighten security following installation; this is a weak security tactic. Implement restrictive security settings by default and open access to securely authenticated users as needed.\n* Ensure secure-channel communication for all API-based interactions.\n* Implement multifactor authentication and familiarize all developers with safe cookie-handling practices to ensure session-level security.\n* Encrypt all stored sensitive data such as credentials or configuration information to minimize the potential for harm if this data is breached.\n* Run code in a sandbox or jail, if possible; however, this approach does not prevent all problems and should be used in combination with some or all of the above.\n* Verify that all configuration files, executables, and libraries are readable and writable only by the software administrator.\n* Implement thorough static and dynamic test strategies (both manual and automatic) to flag permission problems wherever possible (bearing in mind that few tests offer complete coverage).\n\n## References\n* [Android Permissions Overview](https://developer.android.com/guide/topics/permissions/overview)",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/square/spoon/commit/5929d564c6c4c9360b5d9197bde545ccca971372?diff=split#diff-e1917c1dd583e4e1bb4008ca794d55abL112",
                    "lines": [
                      {
                        "line": "  String className = testClass.getClassName().replaceAll(\"[^A-Za-z0-9._-]\", \"_\");",
                        "lineNumber": 110,
                        "lineChange": "none"
                      },
                      {
                        "line": "  File dirClass = new File(screenshotsDir, className);",
                        "lineNumber": 111,
                        "lineChange": "none"
                      },
                      {
                        "line": "  File dirMethod = new File(dirClass, testClass.getMethodName());",
                        "lineNumber": 112,
                        "lineChange": "none"
                      },
                      {
                        "line": "  createDir(dirMethod);",
                        "lineNumber": 113,
                        "lineChange": "none"
                      },
                      {
                        "line": "  return dirMethod;",
                        "lineNumber": 114,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 115,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 128,
                        "lineChange": "none"
                      },
                      {
                        "line": "private static void createDir(File dir) throws IllegalAccessException {",
                        "lineNumber": 130,
                        "lineChange": "none"
                      },
                      {
                        "line": "  File parent = dir.getParentFile();",
                        "lineNumber": 131,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if (!parent.exists()) {",
                        "lineNumber": 132,
                        "lineChange": "none"
                      },
                      {
                        "line": "    createDir(parent);",
                        "lineNumber": 133,
                        "lineChange": "none"
                      },
                      {
                        "line": "  }",
                        "lineNumber": 134,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if (!dir.exists() && !dir.mkdirs()) {",
                        "lineNumber": 135,
                        "lineChange": "none"
                      },
                      {
                        "line": "    throw new IllegalAccessException(\"Unable to create output dir: \" + dir.getAbsolutePath());",
                        "lineNumber": 136,
                        "lineChange": "none"
                      },
                      {
                        "line": "  }",
                        "lineNumber": 137,
                        "lineChange": "none"
                      },
                      {
                        "line": "  }",
                        "lineNumber": 141,
                        "lineChange": "removed"
                      },
                      {
                        "line": "} else {",
                        "lineNumber": 142,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  dir.setReadable(true, false);",
                        "lineNumber": 143,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  dir.setWritable(true, false);",
                        "lineNumber": 144,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  dir.setExecutable(true, false);",
                        "lineNumber": 145,
                        "lineChange": "removed"
                      },
                      {
                        "line": "}",
                        "lineNumber": 146,
                        "lineChange": "removed"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/react-native-community/react-native-camera/commit/06dc7ac5a71e3d997632ab3493e03c74defd176e?diff=split#diff-c0b5ae039b51e601ab6eba76124ab4c2L424",
                    "lines": [
                      {
                        "line": "}",
                        "lineNumber": 421,
                        "lineChange": "none"
                      },
                      {
                        "line": "File f = new File(mVideoFile.getPath());",
                        "lineNumber": 423,
                        "lineChange": "none"
                      },
                      {
                        "line": "if (!f.exists()) {",
                        "lineNumber": 424,
                        "lineChange": "none"
                      },
                      {
                        "line": "    mRecordingPromise.reject(new RuntimeException(\"There is nothing recorded.\"));",
                        "lineNumber": 425,
                        "lineChange": "none"
                      },
                      {
                        "line": "    mRecordingPromise = null;",
                        "lineNumber": 426,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 428,
                        "lineChange": "none"
                      },
                      {
                        "line": "f.setReadable(true, false); // so mediaplayer can play it",
                        "lineNumber": 430,
                        "lineChange": "none"
                      },
                      {
                        "line": "f.setWritable(true, false); // so can clean it up",
                        "lineNumber": 431,
                        "lineChange": "none"
                      },
                      {
                        "line": "WritableMap response = new WritableNativeMap();",
                        "lineNumber": 433,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/klarna/HiveRunner/commit/14d86a93acf791f248056d93641ededc853e513e?diff=split#diff-069a086584d17ae78ec27d6aba680a2cL219",
                    "lines": [
                      {
                        "line": "File newFolder(TemporaryFolder basedir, String folder) {",
                        "lineNumber": 216,
                        "lineChange": "none"
                      },
                      {
                        "line": "    try {",
                        "lineNumber": 217,
                        "lineChange": "none"
                      },
                      {
                        "line": "        File newFolder = basedir.newFolder(folder);",
                        "lineNumber": 218,
                        "lineChange": "none"
                      },
                      {
                        "line": "        Assert.assertTrue(newFolder.setWritable(true, false));",
                        "lineNumber": 219,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        Assert.assertTrue(new HiveFolder(newFolder).markAsWritable());",
                        "lineNumber": 219,
                        "lineChange": "added"
                      },
                      {
                        "line": "        return newFolder;",
                        "lineNumber": 220,
                        "lineChange": "none"
                      },
                      {
                        "line": "    } catch (IOException e) {",
                        "lineNumber": 221,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Added caching to the retrieve implementation.",
                  "Setting of folder permissions through Hadoop FileUtil class",
                  "Use a temporary directory in the app path"
                ],
                "precision": "very-high",
                "repoDatasetSize": 9,
                "cwe": [
                  "CWE-732"
                ]
              }
            },
            {
              "id": "java/HardcodedPassword/test",
              "name": "HardcodedPassword/test",
              "shortDescription": {
                "text": "Use of Hardcoded Credentials"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nDevelopers may use hardcoded credentials for convenience when coding in order to simplify their workflow. While they are responsible for removing these before production, occasionally this task may fall through the cracks. This also becomes a maintenance challenge when credentials are re-used across multiple applications.\n\nOnce attackers gain access, they may take advantage of privilege level to remove or alter data, take down a site or app, or hold any of the above for ransom. The risk across multiple similar projects is even greater. If code containing the credentials is reused across multiple projects, they will all be compromised.\n\n### Best practices for prevention\n* Plan software architecture such that keys and passwords are always stored outside the code, wherever possible.\n* Plan encryption into software architecture for all credential information and ensure proper handling of keys, credentials, and passwords.\n* Prompt for a secure password on first login rather than hard-code a default password.\n* If a hardcoded password or credential must be used, limit its use, for example, to system console users rather than via the network.\n* Use strong hashes for inbound password authentication, ideally with randomly assigned salts to increase the difficulty level in case of brute-force attack.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/utluiz/spring-examples/commit/56e44932a3a004c3ac96ce1caa3e6d8817230f6e?diff=split#diff-19d771f687bc8ca37d378c39d20ed425L26",
                    "lines": [
                      {
                        "line": "  ds.setUrl(\"jdbc:mysql://localhost:3311/agenda\");",
                        "lineNumber": 23,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  ds.setUrl(\"jdbc:mysql://localhost/agenda\");",
                        "lineNumber": 20,
                        "lineChange": "added"
                      },
                      {
                        "line": "  ds.setUser(\"root\");",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "  ds.setPassword(\"root\");",
                        "lineNumber": 25,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  ds.setPassword(\"\");",
                        "lineNumber": 22,
                        "lineChange": "added"
                      },
                      {
                        "line": "  return ds;",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 27,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Evolveum/midpoint/commit/9ce1d7ff1e78ca65d6b614c52035e1971d1187cd?diff=split#diff-0003b3a408395a5640011d7c8422d19bL43",
                    "lines": [
                      {
                        "line": "      // set the password for our message.",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "      pc.setPassword(\"5ecr3t\");",
                        "lineNumber": 42,
                        "lineChange": "removed"
                      },
                      {
                        "line": "      pc.setPassword(Main.ADM_PASSWORD);",
                        "lineNumber": 42,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 43,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/theonedev/onedev/commit/ee60c786981347fc5ab6685656f3de2ea67045f7?diff=split#diff-7f6f95fdc3f39c216b4bd099d0ca65b6L60",
                    "lines": [
                      {
                        "line": "  System.exit(1);",
                        "lineNumber": 61,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 62,
                        "lineChange": "none"
                      },
                      {
                        "line": "root.setPassword(\"12345\");",
                        "lineNumber": 59,
                        "lineChange": "removed"
                      },
                      {
                        "line": "String password = Bootstrap.command.getArgs()[0];",
                        "lineNumber": 63,
                        "lineChange": "added"
                      },
                      {
                        "line": "root.setPassword(password);",
                        "lineNumber": 64,
                        "lineChange": "added"
                      },
                      {
                        "line": "accountManager.save(root);",
                        "lineNumber": 65,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Added user/password configuration from YML file.",
                  "Added ability to configure databases to run tests against."
                ],
                "precision": "very-high",
                "repoDatasetSize": 383,
                "cwe": [
                  "CWE-798",
                  "CWE-259"
                ]
              }
            },
            {
              "id": "java/UsageOfUnencryptedSocket",
              "name": "UsageOfUnencryptedSocket",
              "shortDescription": {
                "text": "Cleartext Transmission of Sensitive Information"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\nThis weakness occurs when software transmits sensitive information, such as passwords or credit card numbers, in unencrypted form. This information may then be intercepted by threat actors using sniffer tools or interception techniques such as man-in-the-middle (MITM) attacks (often involving social engineering). Attackers can then use information gleaned to perform a variety of actions, depending on the information type. Possible actions include gaining unauthorized access, impersonating a user, moving laterally within the organization's network, or retrieving and potentially modifying files. This weakness is almost completely avoidable through intelligent architecture and design.\n\n### Best practices for prevention\n* Build web applications around a security mindset and the awareness that sniffers may be present at any time.\n* Ensure that all sensitive data transmission uses reliable encryption.\n* Implement security measures so that sensitive results are never returned in plain text.\n* Implement multiple-factor authentication methods to validate remote instances.\n* Use SSL not only at logon but throughout communications.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/ME1312/SubServers-2/commit/9a219a7d0fd259870a94d1f875f3cbb3c942ec1e?diff=split#diff-4a76c605749ad18708be15720e8fac67L57",
                    "lines": [
                      {
                        "line": "public SubDataClient(SubPlugin plugin, InetAddress address, int port, Encryption encryption) throws IOException {",
                        "lineNumber": 58,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (Util.isNull(plugin, address, port)) throw new NullPointerException();",
                        "lineNumber": 59,
                        "lineChange": "none"
                      },
                      {
                        "line": "    socket = new Socket(address, port);",
                        "lineNumber": 56,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    socket = new NamedContainer<>(false, new Socket(address, port));",
                        "lineNumber": 60,
                        "lineChange": "added"
                      },
                      {
                        "line": "    this.plugin = plugin;",
                        "lineNumber": 61,
                        "lineChange": "none"
                      },
                      {
                        "line": "    this.writer = new PrintWriter(socket.getOutputStream(), true);",
                        "lineNumber": 58,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    this.writer = new PrintWriter(socket.get().getOutputStream(), true);",
                        "lineNumber": 62,
                        "lineChange": "added"
                      },
                      {
                        "line": "    this.encryption = encryption;",
                        "lineNumber": 63,
                        "lineChange": "none"
                      },
                      {
                        "line": "    this.queue = new LinkedList<NamedContainer<String, PacketOut>>();",
                        "lineNumber": 64,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/dddpaul/android-SimpleNetCat/commit/3235f85ae26fa31e1e36739c608668e15c53a04c?diff=split#diff-6689eedf89cc41d9c93933ea7ff5ebf4L62",
                    "lines": [
                      {
                        "line": "    int port = Integer.parseInt( params[2] );",
                        "lineNumber": 63,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Log.d( CLASS_NAME, String.format( \"Connecting to %s:%d\", host, port ) );",
                        "lineNumber": 64,
                        "lineChange": "none"
                      },
                      {
                        "line": "    socket = new Socket( host, port );",
                        "lineNumber": 61,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    result.object = new Socket( host, port );",
                        "lineNumber": 65,
                        "lineChange": "added"
                      },
                      {
                        "line": "    break;",
                        "lineNumber": 66,
                        "lineChange": "none"
                      },
                      {
                        "line": "case RECEIVE:",
                        "lineNumber": 67,
                        "lineChange": "none"
                      },
                      {
                        "line": "{",
                        "lineNumber": 110,
                        "lineChange": "none"
                      },
                      {
                        "line": "    BufferedReader reader = new BufferedReader( new InputStreamReader( input ) );",
                        "lineNumber": 111,
                        "lineChange": "none"
                      },
                      {
                        "line": "    PrintWriter writer = new PrintWriter( socket.getOutputStream() );",
                        "lineNumber": 112,
                        "lineChange": "none"
                      },
                      {
                        "line": "    transferStreams( reader, writer );",
                        "lineNumber": 113,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 114,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/rancher/cattle/commit/b06df6f37fdfe906b7804fbba41d2c02d472f8ab?diff=split#diff-125505ce5e24cbf259a0267dd1d3af77L314",
                    "lines": [
                      {
                        "line": "String[] parts = master.getConfig().getAdvertiseAddress().split(\":\");",
                        "lineNumber": 311,
                        "lineChange": "none"
                      },
                      {
                        "line": "try (",
                        "lineNumber": 312,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Socket socket = new Socket(parts[0], Integer.parseInt(parts[1]));",
                        "lineNumber": 313,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    OutputStream os = socket.getOutputStream();",
                        "lineNumber": 314,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    Socket socket = new Socket();",
                        "lineNumber": 313,
                        "lineChange": "added"
                      },
                      {
                        "line": ") {",
                        "lineNumber": 315,
                        "lineChange": "none"
                      },
                      {
                        "line": "    socket.connect(new InetSocketAddress(parts[0], Integer.parseInt(parts[1])), 5000);",
                        "lineNumber": 315,
                        "lineChange": "added"
                      },
                      {
                        "line": "    log.info(\"Connection test to master\");",
                        "lineNumber": 316,
                        "lineChange": "none"
                      },
                      {
                        "line": " } catch (IOException e) {",
                        "lineNumber": 317,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Use thread local sockets for everything except IDLE and STATUS.",
                  "- Adding a test that a locator can shut itself down\nwith SSL.",
                  "Added support for SSL secured Manager connections"
                ],
                "precision": "very-high",
                "repoDatasetSize": 108,
                "cwe": [
                  "CWE-319"
                ]
              }
            },
            {
              "id": "java/Ssrf",
              "name": "Ssrf",
              "shortDescription": {
                "text": "Server-Side Request Forgery (SSRF)"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "\n## Details\nIn a server-side request forgery attack, a malicious user supplies a URL (an external URL or a network IP address such as 127.0.0.1) to the application's back end. The server then accesses the URL and shares its results, which may include sensitive information such as AWS metadata, internal configuration information, or database contents with the attacker. Because the request comes from the back end, it bypasses access controls, potentially exposing information the user does not have sufficient privileges to receive. The attacker can then exploit this information to gain access, modify the web application, or demand a ransom payment.\n\n### Best practices for prevention\n* Blacklists are problematic and attackers have numerous ways to bypass them; ideally, use a whitelist of all permitted domains and IP addresses.\n* Use authentication even within your own network to prevent exploitation of server-side requests.\n* Implement zero trust and sanitize and validate all URL and header data returning to the server from the user. Strip invalid or suspect characters, then inspect to be certain it contains a valid and expected value.\n* Ideally, avoid sending server requests based on user-provided data altogether.\n* Ensure that you are not sending raw response bodies from the server directly to the client. Only deliver expected responses.\n* Disable suspect and exploitable URL schemas. Common culprits include obscure and little-used schemas such as `file://`, `dict://`, `ftp://`, and `gopher://`.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/httpcache4j/httpcache4j/commit/81f9db7ad6e7e18227b8b5de717c580da15ed7ae?diff=split#diff-99799647d646d0fff0a1b4b465dd5de0L49",
                    "lines": [
                      {
                        "line": "public HTTPResponse resolve(HTTPRequest request) throws IOException {",
                        "lineNumber": 47,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    req = getAuthenticator().preparePreemptiveAuthentication(req);",
                        "lineNumber": 50,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 51,
                        "lineChange": "added"
                      },
                      {
                        "line": "URL url = request.getRequestURI().toURL();",
                        "lineNumber": 52,
                        "lineChange": "none"
                      },
                      {
                        "line": "URLConnection openConnection = url.openConnection();",
                        "lineNumber": 53,
                        "lineChange": "none"
                      },
                      {
                        "line": "if (openConnection instanceof HttpURLConnection) {",
                        "lineNumber": 54,
                        "lineChange": "none"
                      },
                      {
                        "line": "    HttpURLConnection connection = (HttpURLConnection) openConnection;",
                        "lineNumber": 55,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/LearnLib/alex/commit/cb22c1446dfa65bb405f50baa79ba77866c4c706?diff=split#diff-1723d8f955b61289dccacfea34e7737dL58",
                    "lines": [
                      {
                        "line": "@GET",
                        "lineNumber": 55,
                        "lineChange": "none"
                      },
                      {
                        "line": "@Produces(MediaType.TEXT_HTML)",
                        "lineNumber": 56,
                        "lineChange": "none"
                      },
                      {
                        "line": "public Response doGetProxy(@QueryParam(\"url\") String url, @HeaderParam(\"Cookie\") String cookies) {",
                        "lineNumber": 57,
                        "lineChange": "none"
                      },
                      {
                        "line": "    LOGGER.trace(\"IFrameProxyResource.doGetProxy(\" + url + \", \" + cookies + \").\");",
                        "lineNumber": 58,
                        "lineChange": "added"
                      },
                      {
                        "line": "    try {",
                        "lineNumber": 60,
                        "lineChange": "none"
                      },
                      {
                        "line": "        Connection connection = Jsoup.connect(url);",
                        "lineNumber": 61,
                        "lineChange": "none"
                      },
                      {
                        "line": "        connection = parseAndProcessCookies(connection, cookies);",
                        "lineNumber": 62,
                        "lineChange": "none"
                      },
                      {
                        "line": "        connection = connection.method(Connection.Method.GET);",
                        "lineNumber": 63,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/dotnet/aspnetcore/commit/e089cfc11cb86d6da786d82ee92aeef1c903f0f5?diff=split#diff-f69c44e82917810b055809e4c47c7e7dL84",
                    "lines": [
                      {
                        "line": "@Override",
                        "lineNumber": 94,
                        "lineChange": "none"
                      },
                      {
                        "line": "public Single<HttpResponse> send(HttpRequest httpRequest) {",
                        "lineNumber": 95,
                        "lineChange": "none"
                      },
                      {
                        "line": "@Override",
                        "lineNumber": 99,
                        "lineChange": "added"
                      },
                      {
                        "line": "public Single<HttpResponse> send(HttpRequest httpRequest, String bodyContent) {",
                        "lineNumber": 100,
                        "lineChange": "added"
                      },
                      {
                        "line": "    Request.Builder requestBuilder = new Request.Builder().url(httpRequest.getUrl());",
                        "lineNumber": 101,
                        "lineChange": "none"
                      },
                      {
                        "line": "    switch (httpRequest.getMethod()) {",
                        "lineNumber": 103,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Support Java 8 class files",
                  "- app requests work in tests",
                  "* Add logic to catch unranked hiscores and display them properly."
                ],
                "precision": "very-high",
                "repoDatasetSize": 233,
                "cwe": [
                  "CWE-918"
                ]
              }
            },
            {
              "id": "java/Deserialization",
              "name": "Deserialization",
              "shortDescription": {
                "text": "Deserialization of Untrusted Data"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating object from sequence of bytes is called deserialization. Serialization is commonly used for communication (sharing objects between multiple hosts) and persistence (store the object state in a file or a database). It is an integral part of popular protocols like _Remote Method Invocation (RMI)_, _Java Management Extension (JMX)_, _Java Messaging System (JMS)_, _Action Message Format (AMF)_, _Java Server Faces (JSF) ViewState_, etc.\n\n_Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)), is when the application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, letting the attacker to control the state or the flow of the execution.\n\nJava deserialization issues have been known for years. However, interest in the issue intensified greatly in 2015, when classes that could be abused to achieve remote code execution were found in a [popular library (Apache Commons Collection)](https://snyk.io/vuln/SNYK-JAVA-COMMONSCOLLECTIONS-30078). These classes were used in zero-days affecting IBM WebSphere, Oracle WebLogic and many other products.\n\n\nAn attacker just needs to identify a piece of software that has both a vulnerable class on its path, and performs deserialization on untrusted data. Then all they need to do is send the payload into the deserializer, getting the command executed.\n\n\n> Developers put too much trust in Java Object Serialization. Some even de-serialize objects pre-authentication. When deserializing an Object in Java you typically cast it to an expected type, and therefore Java's strict type system will ensure you only get valid object trees. Unfortunately, by the time the type checking happens, platform code has already created and executed significant logic. So, before the final type is checked a lot of code is executed from the readObject() methods of various objects, all of which is out of the developer's control. By combining the readObject() methods of various classes which are available on the classpath of the vulnerable application an attacker can execute functions (including calling Runtime.exec() to execute local OS commands).",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/apache/commons-jcs/commit/3d7a7f8fdd526d01c1b4240b6da9abf5701acfe5?diff=split#diff-256cbcc3690cc484ff94133b10b72f16L197",
                    "lines": [
                      {
                        "line": "/** Description of the Method */",
                        "lineNumber": 195,
                        "lineChange": "none"
                      },
                      {
                        "line": "public String read( URLConnection connection )",
                        "lineNumber": 196,
                        "lineChange": "none"
                      },
                      {
                        "line": "{",
                        "lineNumber": 197,
                        "lineChange": "none"
                      },
                      {
                        "line": "    String result = \"\";",
                        "lineNumber": 198,
                        "lineChange": "none"
                      },
                      {
                        "line": "    try",
                        "lineNumber": 199,
                        "lineChange": "none"
                      },
                      {
                        "line": "    {",
                        "lineNumber": 200,
                        "lineChange": "none"
                      },
                      {
                        "line": "        ObjectInputStream is = new ObjectInputStream( connection.getInputStream() );",
                        "lineNumber": 201,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        ObjectInputStream is = new ObjectInputStreamClassLoaderAware( connection.getInputStream(), null );",
                        "lineNumber": 201,
                        "lineChange": "added"
                      },
                      {
                        "line": "        result = ( String ) is.readObject();",
                        "lineNumber": 202,
                        "lineChange": "none"
                      },
                      {
                        "line": "        is.close();",
                        "lineNumber": 203,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/tony19/logback-android/commit/665f0d0747260ddff683569f334db4757ad2ac94?diff=split#diff-3812d3ae08ad7172a48335985b14bdd8L47",
                    "lines": [
                      {
                        "line": " * @param inputStream input stream from which events will be read",
                        "lineNumber": 44,
                        "lineChange": "none"
                      },
                      {
                        "line": " */",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "public RemoteAppenderStreamClient(String id, Socket socket) {",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "  this.id = id;",
                        "lineNumber": 47,
                        "lineChange": "none"
                      },
                      {
                        "line": "  this.socket = socket;",
                        "lineNumber": 48,
                        "lineChange": "none"
                      },
                      {
                        "line": "while (true) {",
                        "lineNumber": 91,
                        "lineChange": "none"
                      },
                      {
                        "line": "  // read an event from the wire",
                        "lineNumber": 92,
                        "lineChange": "none"
                      },
                      {
                        "line": "  ILoggingEvent event = (ILoggingEvent) ois.readObject();",
                        "lineNumber": 93,
                        "lineChange": "none"
                      },
                      {
                        "line": "  // get a logger from the hierarchy. The name of the logger is taken to",
                        "lineNumber": 94,
                        "lineChange": "none"
                      },
                      {
                        "line": "  // be the name contained in the event.",
                        "lineNumber": 95,
                        "lineChange": "none"
                      },
                      {
                        "line": "return new ObjectInputStream(inputStream);",
                        "lineNumber": 128,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    return new HardenedLoggingEventInputStream(inputStream);",
                        "lineNumber": 128,
                        "lineChange": "added"
                      },
                      {
                        "line": "  }",
                        "lineNumber": 129,
                        "lineChange": "none"
                      },
                      {
                        "line": "  return new ObjectInputStream(socket.getInputStream());",
                        "lineNumber": 130,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  return new HardenedLoggingEventInputStream(socket.getInputStream());",
                        "lineNumber": 130,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 131,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Alluxio/alluxio/commit/1a0d75ddbb0d6e1857067789a5ba232887dbf90c?diff=split#diff-110c505811cbbd4fcc108c98190afcbdL51",
                    "lines": [
                      {
                        "line": " *                     stream header in the constructor of {@link ObjectInputStream}",
                        "lineNumber": 48,
                        "lineChange": "none"
                      },
                      {
                        "line": " */",
                        "lineNumber": 49,
                        "lineChange": "none"
                      },
                      {
                        "line": "public AlluxioLog4jSocketNode(AlluxioLogServerProcess process, Socket socket)",
                        "lineNumber": 50,
                        "lineChange": "none"
                      },
                      {
                        "line": "    throws IOException {",
                        "lineNumber": 51,
                        "lineChange": "none"
                      },
                      {
                        "line": "LoggingEvent event;",
                        "lineNumber": 58,
                        "lineChange": "none"
                      },
                      {
                        "line": "Logger remoteLogger;",
                        "lineNumber": 59,
                        "lineChange": "none"
                      },
                      {
                        "line": "try (ObjectInputStream objectInputStream = new ObjectInputStream(",
                        "lineNumber": 60,
                        "lineChange": "none"
                      },
                      {
                        "line": "    new BufferedInputStream(mSocket.getInputStream()))) {",
                        "lineNumber": 61,
                        "lineChange": "none"
                      },
                      {
                        "line": "  while (true) {",
                        "lineNumber": 62,
                        "lineChange": "none"
                      },
                      {
                        "line": "    event = (LoggingEvent) objectInputStream.readObject();",
                        "lineNumber": 63,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (mHierarchy == null) {",
                        "lineNumber": 64,
                        "lineChange": "removed"
                      },
                      {
                        "line": "      mHierarchy = mLogServerProcess.configureHierarchy(",
                        "lineNumber": 65,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    if (hierarchy == null) {",
                        "lineNumber": 63,
                        "lineChange": "added"
                      },
                      {
                        "line": "      hierarchy = mLogServerProcess.configureHierarchy(",
                        "lineNumber": 64,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Save highlights as a json file, not an object dump.",
                  "Serialized reporter - Allow specifying multiple result dir source paths"
                ],
                "precision": "very-high",
                "repoDatasetSize": 68,
                "cwe": [
                  "CWE-502"
                ]
              }
            },
            {
              "id": "java/InsecureSecret",
              "name": "InsecureSecret",
              "shortDescription": {
                "text": "Use of Insufficiently Random Values"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "\n## Details\n\nComputer security relies on random numbers for many things: generating secure, confidential session keys; hashing password data; encryption for transmitting sensitive data, and more. It's easy to understand why. If session keys, for example, were generated sequentially, attackers would be able to guess these easily and then hijack legitimate user sessions. Similarly, if encryption techniques used easy-to-guess numbers, attackers could use brute-force attacks to gain unauthorized access.\n\nIn reality, since computers cannot generate truly random numbers, they use \"pseudorandom\" numbers instead, generated using an algorithm that is \"seeded\" in a variety of ways to produce highly variable values in a random-seeming order, making them very hard-in theory-for attackers to guess. However, if developers inadvertently make use of a weak random algorithm, attackers may be able to discover the algorithm, seed, or pattern, ultimately unlocking access to commands or sensitive data, which can then be held for ransom or sold.\n\n### Best practices for prevention\n* Avoid using weak pseudorandom number generators (PRNGs), such as statistical PRNGs. Instead, choose a cryptographically secure PRNG.\n* Avoid using predictable seed values, such as user ID or server start time. Instead, use a seed that is itself pseudorandom, such as one taken from an external hardware source.\n* Use standard, accepted security algorithms and libraries rather than taking a DIY approach and creating custom code that may contain inherent weaknesses or overlook critical flaws.\n* Use static analysis tools to identify potential instances of this weakness in code and then ensure good test coverage with appropriate white-box testing.\n* Educate developers about the importance of entropy in security systems development, and consider adopting tools that are FIPS 140-2 compliant.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/iamMehedi/Secured-Preference-Store/commit/7a497d4dfff92ecab67c5a2f9bb16360da08d913?diff=split#diff-91bd8c6e8f1edb78f742519c90d26d7dL93",
                    "lines": [
                      {
                        "line": "}",
                        "lineNumber": 90,
                        "lineChange": "none"
                      },
                      {
                        "line": "public byte[] encrypt(byte[] bytes, byte[] IV) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException, IOException, BadPaddingException, NoSuchProviderException, IllegalBlock",
                        "lineNumber": 92,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (bytes != null && bytes.length > 0) {",
                        "lineNumber": 93,
                        "lineChange": "none"
                      },
                      {
                        "line": "        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.M || isCompatMode)",
                        "lineNumber": 94,
                        "lineChange": "none"
                      },
                      {
                        "line": "            return encryptAESCompat(bytes, IV);",
                        "lineNumber": 95,
                        "lineChange": "none"
                      },
                      {
                        "line": "        else return encryptAES(bytes, IV);",
                        "lineNumber": 96,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }",
                        "lineNumber": 97,
                        "lineChange": "none"
                      },
                      {
                        "line": "public String encrypt(String text) throws InvalidKeyException, NoSuchAlgorithmException, NoSuchPaddingException, IOException, IllegalBlockSizeException, InvalidAlgorithmParameterException, NoSuchProviderException, BadPaddingException {",
                        "lineNumber": 112,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (text != null && text.length() > 0) {",
                        "lineNumber": 113,
                        "lineChange": "none"
                      },
                      {
                        "line": "        byte[] IV = getIV();",
                        "lineNumber": 114,
                        "lineChange": "none"
                      },
                      {
                        "line": "       byte[] encrypted = encrypt(text.getBytes(DEFAULT_CHARSET), IV);",
                        "lineNumber": 115,
                        "lineChange": "added"
                      },
                      {
                        "line": "       return base64Encode(IV) + DELIMITER + base64Encode(encrypted);",
                        "lineNumber": 116,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 117,
                        "lineChange": "none"
                      },
                      {
                        "line": "byte[] getIV() throws UnsupportedEncodingException {",
                        "lineNumber": 165,
                        "lineChange": "none"
                      },
                      {
                        "line": "    byte[] iv = new byte[16];",
                        "lineNumber": 166,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Random rng = new Random();",
                        "lineNumber": 159,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    SecureRandom rng = new SecureRandom();",
                        "lineNumber": 167,
                        "lineChange": "added"
                      },
                      {
                        "line": "    rng.nextBytes(iv);",
                        "lineNumber": 168,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return iv;",
                        "lineNumber": 169,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 170,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 184,
                        "lineChange": "none"
                      },
                      {
                        "line": "byte[] encryptAESCompat(byte[] bytes, byte[] IV) throws NoSuchPaddingException, NoSuchAlgorithmException, NoSuchProviderException, InvalidKeyException, BadPaddingException, IllegalBlockSizeExcepti",
                        "lineNumber": 186,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Cipher c = Cipher.getInstance(AES_CIPHER_COMPAT, BOUNCY_CASTLE_PROVIDER);",
                        "lineNumber": 187,
                        "lineChange": "none"
                      },
                      {
                        "line": "    c.init(Cipher.ENCRYPT_MODE, aesKey, new IvParameterSpec(IV));",
                        "lineNumber": 188,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return c.doFinal(bytes);",
                        "lineNumber": 189,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 190,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/aionnetwork/aion/commit/8ac04002e9bfc2ba8b92d54c84de0e5a0d9e350e?diff=split#diff-8154a85bffdd93bc7de0a1a97da8a873L70",
                    "lines": [
                      {
                        "line": "// 128-bit initialisation vector for the cipher (16 bytes)",
                        "lineNumber": 68,
                        "lineChange": "none"
                      },
                      {
                        "line": "final byte[] iv = generateRandomBytes(16);",
                        "lineNumber": 69,
                        "lineChange": "none"
                      },
                      {
                        "line": "final byte[] privateKey = key.getPrivKeyBytes();",
                        "lineNumber": 70,
                        "lineChange": "none"
                      },
                      {
                        "line": "final byte[] encryptKey = Arrays.copyOfRange(derivedKey, 0, 16);",
                        "lineNumber": 71,
                        "lineChange": "none"
                      },
                      {
                        "line": "final byte[] cipherText = encryptAes(iv, encryptKey, privateKey);",
                        "lineNumber": 72,
                        "lineChange": "none"
                      },
                      {
                        "line": "final byte[] mac = HashUtil.h256(concat(Arrays.copyOfRange(derivedKey, 16, 32), cipherText));",
                        "lineNumber": 73,
                        "lineChange": "none"
                      },
                      {
                        "line": "private byte[] generateRandomBytes(int size) {",
                        "lineNumber": 101,
                        "lineChange": "none"
                      },
                      {
                        "line": "    final byte[] bytes = new byte[size];",
                        "lineNumber": 102,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Random random = new Random();",
                        "lineNumber": 103,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    Random random = new SecureRandom();",
                        "lineNumber": 100,
                        "lineChange": "added"
                      },
                      {
                        "line": "    random.nextBytes(bytes);",
                        "lineNumber": 104,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return bytes;",
                        "lineNumber": 105,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 106,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 141,
                        "lineChange": "none"
                      },
                      {
                        "line": "private byte[] encryptAes(byte[] iv, byte[] keyBytes, byte[] cipherText)",
                        "lineNumber": 143,
                        "lineChange": "none"
                      },
                      {
                        "line": "        throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidAlgorithmParameterException,",
                        "lineNumber": 144,
                        "lineChange": "none"
                      },
                      {
                        "line": "        InvalidKeyException, BadPaddingException, IllegalBlockSizeException {",
                        "lineNumber": 145,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return processAes(iv, keyBytes, cipherText, Cipher.ENCRYPT_MODE);",
                        "lineNumber": 146,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 147,
                        "lineChange": "none"
                      },
                      {
                        "line": "private static byte[] processAes(byte[] iv, byte[] keyBytes, byte[] cipherText, int encryptMode)",
                        "lineNumber": 149,
                        "lineChange": "none"
                      },
                      {
                        "line": "        throws NoSuchAlgorithmException, NoSuchPaddingException, InvalidKeyException,",
                        "lineNumber": 150,
                        "lineChange": "none"
                      },
                      {
                        "line": "        InvalidAlgorithmParameterException, IllegalBlockSizeException, BadPaddingException {",
                        "lineNumber": 151,
                        "lineChange": "none"
                      },
                      {
                        "line": "    SecretKeySpec key = new SecretKeySpec(keyBytes, \"AES\");",
                        "lineNumber": 152,
                        "lineChange": "none"
                      },
                      {
                        "line": "    IvParameterSpec ivSpec = new IvParameterSpec(iv);",
                        "lineNumber": 153,
                        "lineChange": "none"
                      },
                      {
                        "line": "    // Mode",
                        "lineNumber": 155,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/aionnetwork/aion_api/commit/6e5dae82db3a09ec6f0d793db4786a2d1bc82378?diff=split#diff-c1d459d663c64f4742ed5553a8f32a0bL63",
                    "lines": [
                      {
                        "line": "// 128-bit initialisation vector for the cipher (16 bytes)",
                        "lineNumber": 66,
                        "lineChange": "none"
                      },
                      {
                        "line": "final byte[] iv = generateRandomBytes(16);",
                        "lineNumber": 67,
                        "lineChange": "none"
                      },
                      {
                        "line": "final byte[] privateKey = key.getPrivKeyBytes();",
                        "lineNumber": 68,
                        "lineChange": "none"
                      },
                      {
                        "line": "final byte[] encryptKey = Arrays.copyOfRange(derivedKey, 0, 16);",
                        "lineNumber": 69,
                        "lineChange": "none"
                      },
                      {
                        "line": "final byte[] cipherText = encryptAes(iv, encryptKey, privateKey);",
                        "lineNumber": 70,
                        "lineChange": "none"
                      },
                      {
                        "line": "final byte[] mac = HashUtil.h256(concat(Arrays.copyOfRange(derivedKey, 16, 32), cipherText));",
                        "lineNumber": 66,
                        "lineChange": "removed"
                      },
                      {
                        "line": "final byte[] mac = HashUtil",
                        "lineNumber": 71,
                        "lineChange": "added"
                      },
                      {
                        "line": "    .h256(concat(Arrays.copyOfRange(derivedKey, 16, 32), cipherText));",
                        "lineNumber": 72,
                        "lineChange": "added"
                      },
                      {
                        "line": "private byte[] generateRandomBytes(int size) {",
                        "lineNumber": 99,
                        "lineChange": "none"
                      },
                      {
                        "line": "    final byte[] bytes = new byte[size];",
                        "lineNumber": 100,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Random random = new Random();",
                        "lineNumber": 95,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    Random random = new SecureRandom();",
                        "lineNumber": 101,
                        "lineChange": "added"
                      },
                      {
                        "line": "    random.nextBytes(bytes);",
                        "lineNumber": 102,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return bytes;",
                        "lineNumber": 103,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 104,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 141,
                        "lineChange": "none"
                      },
                      {
                        "line": "private byte[] encryptAes(byte[] iv, byte[] keyBytes, byte[] cipherText)",
                        "lineNumber": 143,
                        "lineChange": "none"
                      },
                      {
                        "line": "        throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidAlgorithmParameterException,",
                        "lineNumber": 136,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        InvalidKeyException, BadPaddingException, IllegalBlockSizeException {",
                        "lineNumber": 137,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidAlgorithmParameterException,",
                        "lineNumber": 144,
                        "lineChange": "added"
                      },
                      {
                        "line": "    InvalidKeyException, BadPaddingException, IllegalBlockSizeException {",
                        "lineNumber": 145,
                        "lineChange": "added"
                      },
                      {
                        "line": "    return processAes(iv, keyBytes, cipherText, Cipher.ENCRYPT_MODE);",
                        "lineNumber": 146,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 147,
                        "lineChange": "none"
                      },
                      {
                        "line": "private static byte[] processAes(byte[] iv, byte[] keyBytes, byte[] cipherText, int encryptMode)",
                        "lineNumber": 149,
                        "lineChange": "none"
                      },
                      {
                        "line": "        throws NoSuchAlgorithmException, NoSuchPaddingException, InvalidKeyException,",
                        "lineNumber": 142,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        InvalidAlgorithmParameterException, IllegalBlockSizeException, BadPaddingException {",
                        "lineNumber": 143,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    throws NoSuchAlgorithmException, NoSuchPaddingException, InvalidKeyException,",
                        "lineNumber": 150,
                        "lineChange": "added"
                      },
                      {
                        "line": "    InvalidAlgorithmParameterException, IllegalBlockSizeException, BadPaddingException {",
                        "lineNumber": 151,
                        "lineChange": "added"
                      },
                      {
                        "line": "    SecretKeySpec key = new SecretKeySpec(keyBytes, \"AES\");",
                        "lineNumber": 152,
                        "lineChange": "none"
                      },
                      {
                        "line": "    IvParameterSpec ivSpec = new IvParameterSpec(iv);",
                        "lineNumber": 153,
                        "lineChange": "none"
                      },
                      {
                        "line": "    // Mode",
                        "lineNumber": 155,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Random string generation should use SecureRandom w/ Base64 encoding ()",
                  "* fix random strings"
                ],
                "precision": "very-high",
                "repoDatasetSize": 52,
                "cwe": [
                  "CWE-330"
                ]
              }
            },
            {
              "id": "csharp/PT",
              "name": "PT",
              "shortDescription": {
                "text": "Path Traversal"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nBeing able to access and manipulate an arbitrary path leads to vulnerabilities when a program is being run with privileges that the user providing the path should not have. A website with a path traversal vulnerability would allow users access to sensitive files on the server hosting it. CLI programs may also be vulnerable to path traversal if they are being ran with elevated privileges (such as with the setuid or setgid flags in Unix systems).\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`.\n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```",
                "text": ""
              },
              "properties": {
                "tags": [
                  "csharp"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/YAFNET/YAFNET/commit/b8a18a4582fcabf1b2dd013a44ef4fb4ead256d5?diff=split#diff-6ee036460a7dbccfbc29d6f4ac73c16bL526",
                    "lines": [
                      {
                        "line": "}",
                        "lineNumber": 523,
                        "lineChange": "none"
                      },
                      {
                        "line": "file.PostedFile.SaveAs(",
                        "lineNumber": 525,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"{0}/{1}.{2}.{3}.yafalbum\".FormatWith(",
                        "lineNumber": 526,
                        "lineChange": "none"
                      },
                      {
                        "line": "        sUpDir, this.PageContext.PageUserID, this.Request.QueryString.GetFirstOrDefault(\"a\"), filename));",
                        "lineNumber": 527,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        sUpDir, this.PageContext.PageUserID, this.Get<HttpRequestBase>().QueryString.GetFirstOrDefault(\"a\"), filename));",
                        "lineNumber": 527,
                        "lineChange": "added"
                      },
                      {
                        "line": "DB.album_image_save(",
                        "lineNumber": 528,
                        "lineChange": "none"
                      },
                      {
                        "line": "    null, ",
                        "lineNumber": 529,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/manier13579/GDMS-DeviceManagementSystem/commit/fb24616dd761e9175a3b7d2192f7269ddd0862d1?diff=split#diff-606730060fd8663c604a27ca69579050L2",
                    "lines": [
                      {
                        "line": "using System;",
                        "lineNumber": 1,
                        "lineChange": "none"
                      },
                      {
                        "line": "using System.Collections;",
                        "lineNumber": 2,
                        "lineChange": "none"
                      },
                      {
                        "line": "using System.Collections.Generic;",
                        "lineNumber": 3,
                        "lineChange": "none"
                      },
                      {
                        "line": "using System.Text;",
                        "lineNumber": 8,
                        "lineChange": "none"
                      },
                      {
                        "line": "using System.Web;",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "using System.Web.Http;",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": "using GDMS.Models;",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "using Newtonsoft.Json;",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "using Newtonsoft.Json.Linq;",
                        "lineNumber": 13,
                        "lineChange": "none"
                      },
                      {
                        "line": "namespace GDMS.Controllers",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "{",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "    [RequestAuthorize]",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "    public class StyleController : ApiController",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "    {",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "//õ©èõ╝áÕ╝ÅµáÀµûçõ╗Â",
                        "lineNumber": 281,
                        "lineChange": "none"
                      },
                      {
                        "line": "[ActionName(\"uploadFile\")]",
                        "lineNumber": 282,
                        "lineChange": "none"
                      },
                      {
                        "line": "public HttpResponseMessage StyleUploadFile(HttpContext Request)",
                        "lineNumber": 283,
                        "lineChange": "removed"
                      },
                      {
                        "line": "public HttpResponseMessage StyleUploadFile()",
                        "lineNumber": 283,
                        "lineChange": "added"
                      },
                      {
                        "line": "{",
                        "lineNumber": 284,
                        "lineChange": "none"
                      },
                      {
                        "line": "    HttpPostedFile filedata = Request.Request.Files[0];",
                        "lineNumber": 285,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    var file = HttpContext.Current.Request.Files.Count > 0 ?",
                        "lineNumber": 285,
                        "lineChange": "added"
                      },
                      {
                        "line": "        HttpContext.Current.Request.Files[0] : null;",
                        "lineNumber": 286,
                        "lineChange": "added"
                      },
                      {
                        "line": "    Response res = new Response();",
                        "lineNumber": 288,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (filedata == null || String.IsNullOrEmpty(filedata.FileName) || filedata.ContentLength == 0)",
                        "lineNumber": 287,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    if (file != null && file.ContentLength > 0)",
                        "lineNumber": 290,
                        "lineChange": "added"
                      },
                      {
                        "line": "    {",
                        "lineNumber": 291,
                        "lineChange": "none"
                      },
                      {
                        "line": "        res.code = 1;",
                        "lineNumber": 289,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        string fileName = System.IO.Path.GetFileName(file.FileName);",
                        "lineNumber": 292,
                        "lineChange": "added"
                      },
                      {
                        "line": "        string virtualPath = String.Format(\"~/upload/files/{0}\", fileName);",
                        "lineNumber": 293,
                        "lineChange": "added"
                      },
                      {
                        "line": "        string path = HttpContext.Current.Server.MapPath(virtualPath);",
                        "lineNumber": 294,
                        "lineChange": "added"
                      },
                      {
                        "line": "        file.SaveAs(path);",
                        "lineNumber": 296,
                        "lineChange": "added"
                      },
                      {
                        "line": "    res.code = 0;",
                        "lineNumber": 297,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 298,
                        "lineChange": "none"
                      },
                      {
                        "line": "string filename = System.IO.Path.GetFileName(filedata.FileName);",
                        "lineNumber": 294,
                        "lineChange": "removed"
                      },
                      {
                        "line": "string virtualPath = String.Format(\"~/File/{0}\", filename);",
                        "lineNumber": 295,
                        "lineChange": "removed"
                      },
                      {
                        "line": "string path = HttpContext.Current.Server.MapPath(virtualPath);",
                        "lineNumber": 296,
                        "lineChange": "removed"
                      },
                      {
                        "line": "filedata.SaveAs(path);",
                        "lineNumber": 297,
                        "lineChange": "removed"
                      },
                      {
                        "line": "/*",
                        "lineNumber": 304,
                        "lineChange": "none"
                      },
                      {
                        "line": "Db db = new Db();",
                        "lineNumber": 305,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/TossShinHwa/CMS/commit/7b23876cf3a67e81f68449e7db73033a0046db87?diff=split#diff-df8288c20bc587f16c954999096f1572L2",
                    "lines": [
                      {
                        "line": "using System;",
                        "lineNumber": 1,
                        "lineChange": "none"
                      },
                      {
                        "line": "using System.Collections.Generic;",
                        "lineNumber": 2,
                        "lineChange": "none"
                      },
                      {
                        "line": "using System.IO;",
                        "lineNumber": 3,
                        "lineChange": "none"
                      },
                      {
                        "line": "using System.Threading.Tasks;",
                        "lineNumber": 7,
                        "lineChange": "none"
                      },
                      {
                        "line": "using System.Web;",
                        "lineNumber": 8,
                        "lineChange": "none"
                      },
                      {
                        "line": "using System.Web.Http;",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "using System.Web.Mvc;",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": "using AtomLab.Utility;",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "using YangKai.BlogEngine.Domain;",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "using YangKai.BlogEngine.Web.Mvc.BootStrapper;",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "namespace YangKai.BlogEngine.Web.Mvc.Controllers",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "{",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "    public class FileManageController : ApiController",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "    {",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "        public HttpResponseMessage Upload()",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 44,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  ",
                        "lineNumber": 39,
                        "lineChange": "added"
                      },
                      {
                        "line": "    var resp = Request.CreateResponse(HttpStatusCode.OK, new {result=id + Path.GetExtension(filename)});",
                        "lineNumber": 46,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    var resp = Request.CreateResponse(HttpStatusCode.OK, new {result = id + Path.GetExtension(filename)});",
                        "lineNumber": 41,
                        "lineChange": "added"
                      },
                      {
                        "line": "    resp.Content.Headers.ContentType = new MediaTypeHeaderValue(\"text/plain\");",
                        "lineNumber": 47,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return resp;",
                        "lineNumber": 48,
                        "lineChange": "none"
                      },
                      {
                        "line": " }",
                        "lineNumber": 49,
                        "lineChange": "none"
                      },
                      {
                        "line": "public HttpResponseMessage Photo(Guid id)",
                        "lineNumber": 46,
                        "lineChange": "added"
                      },
                      {
                        "line": "{",
                        "lineNumber": 52,
                        "lineChange": "none"
                      },
                      {
                        "line": "{",
                        "lineNumber": 54,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    var filename = id;",
                        "lineNumber": 55,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    var filePath = Path.Combine(HttpContext.Current.Server.MapPath(\"~/upload\"), filename);",
                        "lineNumber": 56,
                        "lineChange": "removed"
                      },
                      {
                        "line": "var sp = new MultipartMemoryStreamProvider();",
                        "lineNumber": 48,
                        "lineChange": "added"
                      },
                      {
                        "line": "if (System.IO.File.Exists(filePath))",
                        "lineNumber": 58,
                        "lineChange": "removed"
                      },
                      {
                        "line": "}",
                        "lineNumber": 72,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    var item = sp.Contents[0];",
                        "lineNumber": 51,
                        "lineChange": "added"
                      },
                      {
                        "line": "public object Photo(Guid id, HttpPostedFileBase file)",
                        "lineNumber": 74,
                        "lineChange": "removed"
                      },
                      {
                        "line": "{",
                        "lineNumber": 75,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    var fileNo = Guid.NewGuid();",
                        "lineNumber": 76,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    var oName = Path.GetFileName(file.FileName);",
                        "lineNumber": 77,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    var name = fileNo + Path.GetExtension(oName);",
                        "lineNumber": 78,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    var filename = item.Headers.ContentDisposition.FileName.Replace(\"\\\"\", \"\");",
                        "lineNumber": 53,
                        "lineChange": "added"
                      },
                      {
                        "line": "    var oName = Path.GetFileName(filename);",
                        "lineNumber": 55,
                        "lineChange": "added"
                      },
                      {
                        "line": "    var fileId = Guid.NewGuid();",
                        "lineNumber": 56,
                        "lineChange": "added"
                      },
                      {
                        "line": "    var name = fileId + Path.GetExtension(oName);",
                        "lineNumber": 57,
                        "lineChange": "added"
                      },
                      {
                        "line": "    var dir = HttpContext.Current.Server.MapPath(\"~/upload/gallery/\" + id);",
                        "lineNumber": 79,
                        "lineChange": "none"
                      },
                      {
                        "line": "    var path = string.Format(\"{0}/photo/{1}\", dir, name);",
                        "lineNumber": 80,
                        "lineChange": "none"
                      },
                      {
                        "line": "    file.SaveAs(path);",
                        "lineNumber": 81,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    var ms = item.ReadAsStreamAsync().Result;",
                        "lineNumber": 61,
                        "lineChange": "added"
                      },
                      {
                        "line": "{",
                        "lineNumber": 63,
                        "lineChange": "added"
                      },
                      {
                        "line": "    var data = br.ReadBytes((int) ms.Length);",
                        "lineNumber": 64,
                        "lineChange": "added"
                      },
                      {
                        "line": "    File.WriteAllBytes(path, data);",
                        "lineNumber": 65,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 66,
                        "lineChange": "added"
                      },
                      {
                        "line": "var thumbnail = string.Format(\"{0}/thumbnail/{1}\", dir, name);",
                        "lineNumber": 82,
                        "lineChange": "none"
                      },
                      {
                        "line": "System.IO.File.Copy(path, thumbnail);",
                        "lineNumber": 83,
                        "lineChange": "none"
                      },
                      {
                        "line": "ImageProcessing.CutForCustom(thumbnail, 100, 100, 100);",
                        "lineNumber": 84,
                        "lineChange": "none"
                      },
                      {
                        "line": "var gallery = Proxy.Repository<Gallery>().Get(id);",
                        "lineNumber": 86,
                        "lineChange": "none"
                      },
                      {
                        "line": "gallery.Photos.Add(new Photo()",
                        "lineNumber": 87,
                        "lineChange": "none"
                      },
                      {
                        "line": "{",
                        "lineNumber": 88,
                        "lineChange": "none"
                      },
                      {
                        "line": "    PhotoId = fileNo,",
                        "lineNumber": 89,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    PhotoId = fileId,",
                        "lineNumber": 75,
                        "lineChange": "added"
                      },
                      {
                        "line": "    Name = Path.GetFileNameWithoutExtension(oName),",
                        "lineNumber": 90,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Path = string.Format(\"/upload/gallery/{0}/photo/{1}\", id,name),",
                        "lineNumber": 91,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    Path = string.Format(\"/upload/gallery/{0}/photo/{1}\", id, name),",
                        "lineNumber": 77,
                        "lineChange": "added"
                      },
                      {
                        "line": "    Thumbnail = string.Format(\"/upload/gallery/{0}/thumbnail/{1}\", id, name),",
                        "lineNumber": 92,
                        "lineChange": "none"
                      },
                      {
                        "line": "});",
                        "lineNumber": 93,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Abstracted Logging Interface."
                ],
                "precision": "very-high",
                "repoDatasetSize": 5,
                "cwe": [
                  "CWE-23"
                ]
              }
            },
            {
              "id": "javascript/DisablePoweredBy",
              "name": "DisablePoweredBy",
              "shortDescription": {
                "text": "Information Exposure"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nSensitive data includes: personally identifiable information (PII) of employees, customers, users, or other third parties; financial information; code; intellectual property; or protected network information such as passwords. Exposure of sensitive information to an unauthorized actor occurs when any party who does not require this information for business purposes can remove this information from the secure network.\nConsequences of exposure can include holding it for ransom payment, identity theft, or access to other internal network resources-along with financial loss due to regulatory fines, court settlements, or cost to restore compromised systems. As most attackers aim to extract sensitive information, this CWE only describes exploits that take advantage of vulnerabilities related to how data is handled: the management, storage, transfer, or removal of sensitive information.\n\n### Best practices for prevention\n- Encrypt data at all times, whether in transit or at rest.\n- When transporting data, always use a secure protocol such as TLS.\n- Before collecting PII or financial information, consider whether there is a true business need for this information; similarly, before storing the data, ensure that there is an ongoing business need.\n- Classify all incoming data according to privacy and security guidelines to improve awareness of sensitive data.\n- Ensure that caching is disabled for all transactions involving sensitive information.\n- Store passwords with secure, salted hashing functions.\n- Apply a network-wide least-privilege policy so sensitive data is provided only to users with business need to know.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/opencollective/opencollective-frontend/commit/17c5c31da6975fd0c3e032d19f6d733af4c66036?diff=split#diff-bcb729747c92e72c12e4590f736a334041a572c429756da8af60b6ab89c6be79R8",
                    "lines": [
                      {
                        "line": "const helmet = require('helmet');",
                        "lineNumber": 7,
                        "lineChange": "added"
                      },
                      {
                        "line": "const cookieParser = require('cookie-parser');",
                        "lineNumber": 8,
                        "lineChange": "none"
                      },
                      {
                        "line": "const cloudflareIps = require('cloudflare-ip/ips.json');",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "const intl = require('./intl');",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "const logger = require('./logger');",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "const loggerMiddleware = require('./logger-middleware');",
                        "lineNumber": 13,
                        "lineChange": "none"
                      },
                      {
                        "line": "const routes = require('./routes');",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "const server = express();",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "server.set('trust proxy', ['loopback', 'linklocal', 'uniquelocal'].concat(cloudflareIps));",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "const env = process.env.NODE_ENV;",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "const dev = env === 'development';",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "const app = next({ dev, dir: path.dirname(__dirname) });",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "const port = process.env.PORT;",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.prepare().then(() => {",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "  server.use(loggerMiddleware.logger);",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "  server.use(helmet());",
                        "lineNumber": 30,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/jkettmann/universal-react-relay-starter-kit/commit/dfab2940d6a0678ede545c341af3cb9c51d6b687?diff=split#diff-da96dcbe471b47bbc5ec4aee2520997e363c827e6249d1834d4fff6f8d0df6c8R3",
                    "lines": [
                      {
                        "line": "import helmet from 'helmet'",
                        "lineNumber": 2,
                        "lineChange": "added"
                      },
                      {
                        "line": "import cookieParser from 'cookie-parser'",
                        "lineNumber": 3,
                        "lineChange": "none"
                      },
                      {
                        "line": "import Aws from 'aws-sdk'",
                        "lineNumber": 4,
                        "lineChange": "none"
                      },
                      {
                        "line": "import S3Router from 'react-s3-uploader/s3router'",
                        "lineNumber": 5,
                        "lineChange": "none"
                      },
                      {
                        "line": "import debug from 'debug'",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "import dotenv from 'dotenv'",
                        "lineNumber": 7,
                        "lineChange": "none"
                      },
                      {
                        "line": "dotenv.config()",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "const log = debug('server')",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": "const PORT = process.env.PORT_APP",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "const DEV = process.env.NODE_ENV === 'development'",
                        "lineNumber": 13,
                        "lineChange": "none"
                      },
                      {
                        "line": "let isBuilt = false",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "Aws.config.update({",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "  accessKeyId: process.env.AWS_ACCESS_KEY_ID,",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "  secretAccessKey: process.env.AWS_SECRET_ACCESS_KEY,",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "})",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "const app = express()",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(helmet())",
                        "lineNumber": 24,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/mozilla/send/commit/4e4dc5e168074f150399dbceff7ea2c617800ca9?diff=split#diff-2142bb87b5c843eadf1da04062c8832170784a072d7e940262166bc0e66d1f07R6",
                    "lines": [
                      {
                        "line": "const helmet = require('helmet');",
                        "lineNumber": 5,
                        "lineChange": "added"
                      },
                      {
                        "line": "const bytes = require('bytes');",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "const conf = require('./config.js');",
                        "lineNumber": 7,
                        "lineChange": "none"
                      },
                      {
                        "line": "const storage = require('./storage.js');",
                        "lineNumber": 8,
                        "lineChange": "none"
                      },
                      {
                        "line": "const notLocalHost = conf.notLocalHost;",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": "const mozlog = require('./log.js');",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "const log = mozlog('portal.server');",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "const app = express();",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.engine('handlebars', exphbs({ defaultLayout: 'main' }));",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.set('view engine', 'handlebars');",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(helmet());",
                        "lineNumber": 21,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Test without express",
                  "secure the api with helmet",
                  "Fix some security vulnerabilities, refactor the error constants a little"
                ],
                "precision": "very-high",
                "repoDatasetSize": 991,
                "cwe": [
                  "CWE-200"
                ]
              }
            },
            {
              "id": "java/NonCryptoHardcodedSecret/test",
              "name": "NonCryptoHardcodedSecret/test",
              "shortDescription": {
                "text": "Use of Hardcoded, Security-relevant Constants"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "## Details\n\nWhen constants are hardcoded into applications, this information could easily be reverse-engineered and become known to attackers. For example, if a breached authentication token is hardcoded in multiple places in the application, it may lead to components of the application remaining vulnerable if not all instances are changed.\nAnother negative effect of hard-coding constants is potential unpredictability in the application's performance if the development team fails to update every single instance of the hardcoded constant throughout the code. For these reasons, hard-coding security-relevant constants is considered bad coding practice and should be remedied if present and avoided in future.\n\n### Best practices for prevention\n* Never hard code security-related constants; use symbolic names or configuration lookup files.\n* As hard coding is often done by coders working alone on a small scale, examine all legacy code components and test carefully when scaling.\n* Adopt a \"future-proof code\" mindset: While use of constants may save a little time now and make development simpler in the short term, it could cost time and money adapting to scale or other unforeseen circumstances (such as new hardware) in the future.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/RocketChat/Rocket.Chat.Java.SDK/commit/6f17474770cd120650daa9945ed65273aaa5ec5c?diff=split#diff-fc51f9a049d8a8cd9df2a4226b87c214L19",
                    "lines": [
                      {
                        "line": "String username = \"sachin.shinde\";",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "String password = \"sachin9924\";",
                        "lineNumber": 18,
                        "lineChange": "removed"
                      },
                      {
                        "line": "String password = \"sachin123\";",
                        "lineNumber": 23,
                        "lineChange": "added"
                      },
                      {
                        "line": "private static String serverurl = \"wss://demo.rocket.chat\";",
                        "lineNumber": 25,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/wso2-attic/ballerina-message-broker/commit/8d606a4838b057411b7226e4651f7ca59d9746ce?diff=split#diff-2d8482e5c13da266ce6e6196d45bdf1eL66",
                    "lines": [
                      {
                        "line": "private String user = \"wso2carbon\";",
                        "lineNumber": 63,
                        "lineChange": "removed"
                      },
                      {
                        "line": "private String user = \"ballerina\";",
                        "lineNumber": 63,
                        "lineChange": "added"
                      },
                      {
                        "line": "private String password = \"wso2carbon\";",
                        "lineNumber": 65,
                        "lineChange": "removed"
                      },
                      {
                        "line": "private String password = \"ballerina\";",
                        "lineNumber": 65,
                        "lineChange": "added"
                      },
                      {
                        "line": "public String getUrl() {",
                        "lineNumber": 67,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/games647/FlexibleLogin/commit/9ea9726f145063f4436ca47ef864735e247c34c1?diff=split#diff-02a91e75dcc99d9c759ee4d9e0c88734L26",
                    "lines": [
                      {
                        "line": "@Setting(comment = \"Password in order to login\")",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "private String password = \"password123456789\";",
                        "lineNumber": 25,
                        "lineChange": "removed"
                      },
                      {
                        "line": "private String password = \"\";",
                        "lineNumber": 25,
                        "lineChange": "added"
                      },
                      {
                        "line": "public SQLType getType() {",
                        "lineNumber": 27,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Removed test keys",
                  "Remove API keys",
                  "Remove DropBox sync API libraries and dependencies"
                ],
                "precision": "very-high",
                "repoDatasetSize": 158,
                "cwe": [
                  "CWE-547"
                ]
              }
            },
            {
              "id": "java/PT/test",
              "name": "PT/test",
              "shortDescription": {
                "text": "Path Traversal"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nBeing able to access and manipulate an arbitrary path leads to vulnerabilities when a program is being run with privileges that the user providing the path should not have. A website with a path traversal vulnerability would allow users access to sensitive files on the server hosting it. CLI programs may also be vulnerable to path traversal if they are being ran with elevated privileges (such as with the setuid or setgid flags in Unix systems).\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`.\n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/google/j2objc/commit/1b271d8b25c99a91547a19f16f71c048c3164156?diff=split#diff-33b6b27033cb88022415e8cd32b1807cL244",
                    "lines": [
                      {
                        "line": " * Extract a ZipEntry to the specified directory.",
                        "lineNumber": 241,
                        "lineChange": "none"
                      },
                      {
                        "line": " */",
                        "lineNumber": 242,
                        "lineChange": "none"
                      },
                      {
                        "line": "public File extractZipEntry(File dir, ZipFile zipFile, ZipEntry entry) throws IOException {",
                        "lineNumber": 243,
                        "lineChange": "none"
                      },
                      {
                        "line": "  File outputFile = new File(dir, entry.getName());",
                        "lineNumber": 244,
                        "lineChange": "none"
                      },
                      {
                        "line": "  File parentFile = outputFile.getParentFile();",
                        "lineNumber": 245,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if (!parentFile.isDirectory() && !parentFile.mkdirs()) {",
                        "lineNumber": 246,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    throw new IOException(\"Could not extract file to \" + dir.getPath());",
                        "lineNumber": 247,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  if (!outputFile.getCanonicalPath().startsWith(dir.getCanonicalPath() + File.separator)",
                        "lineNumber": 246,
                        "lineChange": "added"
                      },
                      {
                        "line": "      || (!parentFile.isDirectory() && !parentFile.mkdirs())) {",
                        "lineNumber": 247,
                        "lineChange": "added"
                      },
                      {
                        "line": "    throw new IOException(\"Could not extract \" + entry.getName() + \" to \" + dir.getPath());",
                        "lineNumber": 248,
                        "lineChange": "added"
                      },
                      {
                        "line": "  }",
                        "lineNumber": 249,
                        "lineChange": "none"
                      },
                      {
                        "line": "  try (InputStream inputStream = zipFile.getInputStream(entry);",
                        "lineNumber": 250,
                        "lineChange": "none"
                      },
                      {
                        "line": "      FileOutputStream outputStream = new FileOutputStream(outputFile)) {",
                        "lineNumber": 251,
                        "lineChange": "none"
                      },
                      {
                        "line": "    byte[] buf = new byte[1024];",
                        "lineNumber": 252,
                        "lineChange": "none"
                      },
                      {
                        "line": "    int n;",
                        "lineNumber": 253,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/blackducksoftware/synopsys-detect/commit/36555b9322986e9560f241d05f2262c29a17663b?diff=split#diff-bc0b5be9b9918488d8fe1dc64584df62L48",
                    "lines": [
                      {
                        "line": "Enumeration<? extends ZipEntry> entries = zipFile.entries();",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "while (entries.hasMoreElements()) {",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "    ZipEntry entry = entries.nextElement();",
                        "lineNumber": 47,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Path entryPath = destPath.resolve(entry.getName());",
                        "lineNumber": 48,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (!entryPath.normalize().startsWith(dest.toPath()))",
                        "lineNumber": 49,
                        "lineChange": "added"
                      },
                      {
                        "line": "        throw new IOException(\"Zip entry contained path traversal\");",
                        "lineNumber": 50,
                        "lineChange": "added"
                      },
                      {
                        "line": "    if (entry.isDirectory()) {",
                        "lineNumber": 51,
                        "lineChange": "none"
                      },
                      {
                        "line": "        Files.createDirectories(entryPath);",
                        "lineNumber": 52,
                        "lineChange": "none"
                      },
                      {
                        "line": "    } else {",
                        "lineNumber": 53,
                        "lineChange": "none"
                      },
                      {
                        "line": "        Files.createDirectories(entryPath.getParent());",
                        "lineNumber": 54,
                        "lineChange": "none"
                      },
                      {
                        "line": "        try (InputStream in = zipFile.getInputStream(entry)) {",
                        "lineNumber": 55,
                        "lineChange": "none"
                      },
                      {
                        "line": "            try (OutputStream out = new FileOutputStream(entryPath.toFile())) {",
                        "lineNumber": 56,
                        "lineChange": "none"
                      },
                      {
                        "line": "                IOUtils.copy(in, out);",
                        "lineNumber": 57,
                        "lineChange": "none"
                      },
                      {
                        "line": "            }",
                        "lineNumber": 58,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/azkaban/azkaban/commit/3b74a4127c9086cd525252edabc3621febab0428?diff=split#diff-c892cca6401b1e0be4cbca3261b47098L201",
                    "lines": [
                      {
                        "line": "final Enumeration<?> entries = source.entries();",
                        "lineNumber": 198,
                        "lineChange": "none"
                      },
                      {
                        "line": "while (entries.hasMoreElements()) {",
                        "lineNumber": 199,
                        "lineChange": "none"
                      },
                      {
                        "line": "  final ZipEntry entry = (ZipEntry) entries.nextElement();",
                        "lineNumber": 200,
                        "lineChange": "none"
                      },
                      {
                        "line": "  final File newFile = new File(dest, entry.getName());",
                        "lineNumber": 201,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if (!newFile.getCanonicalPath().startsWith(dest.getCanonicalPath())) {",
                        "lineNumber": 202,
                        "lineChange": "added"
                      },
                      {
                        "line": "    throw new IOException(",
                        "lineNumber": 203,
                        "lineChange": "added"
                      },
                      {
                        "line": "        \"Extracting zip entry would have resulted in a file outside the specified destination\"",
                        "lineNumber": 204,
                        "lineChange": "added"
                      },
                      {
                        "line": "if (entry.isDirectory()) {",
                        "lineNumber": 208,
                        "lineChange": "none"
                      },
                      {
                        "line": "  newFile.mkdirs();",
                        "lineNumber": 209,
                        "lineChange": "none"
                      },
                      {
                        "line": "} else {",
                        "lineNumber": 210,
                        "lineChange": "none"
                      },
                      {
                        "line": "  newFile.getParentFile().mkdirs();",
                        "lineNumber": 211,
                        "lineChange": "none"
                      },
                      {
                        "line": "  final InputStream src = source.getInputStream(entry);",
                        "lineNumber": 212,
                        "lineChange": "none"
                      },
                      {
                        "line": "  try {",
                        "lineNumber": 213,
                        "lineChange": "none"
                      },
                      {
                        "line": "    final OutputStream output =",
                        "lineNumber": 214,
                        "lineChange": "none"
                      },
                      {
                        "line": "        new BufferedOutputStream(new FileOutputStream(newFile));",
                        "lineNumber": 215,
                        "lineChange": "none"
                      },
                      {
                        "line": "    try {",
                        "lineNumber": 216,
                        "lineChange": "none"
                      },
                      {
                        "line": "      IOUtils.copy(src, output);",
                        "lineNumber": 217,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Test changed key to file.",
                  "* more code cleanup, some tests",
                  "Add option --xcode for Xcode translation testing"
                ],
                "precision": "very-high",
                "repoDatasetSize": 948,
                "cwe": [
                  "CWE-23"
                ]
              }
            },
            {
              "id": "java/TLS/test",
              "name": "TLS/test",
              "shortDescription": {
                "text": "Inadequate Encryption Strength"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nImplementing encryption for the transmission and storage of sensitive information is essential. But encryption standards are constantly changing since attackers have more and more powerful resources at their disposal-along with more sophisticated attack algorithms. This means that encryption is only useful if it meets current standards appropriate for the type of data being transmitted or stored.\nWhen organizations use weakly encoded passwords or weak hashes (especially when they also utilize single-factor authentication, which places too much emphasis on passwords), attackers can potentially gain unauthorized access through a brute-force attack.\n\n### Best practices for prevention\n* Understand best practices of contemporary encryption algorithms and techniques.\n* Avoid encryption algorithms and techniques that are widely known to be outdated (for example, DES).\n* Implement multi-factor authentication to minimize reliance on a single factor, such as a password, that is too susceptible to brute-force attacks.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/apache/cloudstack/commit/91f7012b015249d9d74dace8874ee8f38b54bfc2?diff=split#diff-5604a4e589dc38cc8d80f2f4020c2a23L53",
                    "lines": [
                      {
                        "line": "public static SSLContext getSSLContext() throws NoSuchAlgorithmException {",
                        "lineNumber": 68,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return SSLContext.getInstance(\"TLSv1\");",
                        "lineNumber": 52,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    return SSLContext.getInstance(\"TLSv1.2\");",
                        "lineNumber": 69,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 70,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/MissionCriticalCloud/cosmic/commit/3a4004a34b42e30a49a1c48f1ff57e5f3ca26913?diff=split#diff-49bfef0c8d16a2c34d787d4fca65e2e7L35",
                    "lines": [
                      {
                        "line": "public static SSLContext getSSLContext() throws NoSuchAlgorithmException {",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return SSLContext.getInstance(\"TLSv1\");",
                        "lineNumber": 34,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    return SSLContext.getInstance(\"TLSv1.2\");",
                        "lineNumber": 34,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 35,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/hypercube1024/firefly/commit/e2e4d7810c9bb202bbef3d5022e3b13447f102dd?diff=split#diff-fb5cd0d3953731ed2bdb241178f1ce05L32",
                    "lines": [
                      {
                        "line": "  tmf.init(ks);",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "  sslContext = SSLContext.getInstance(\"TLS\");",
                        "lineNumber": 31,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  sslContext = SSLContext.getInstance(\"TLSv1.2\");",
                        "lineNumber": 31,
                        "lineChange": "added"
                      },
                      {
                        "line": "  sslContext.init(kmf.getKeyManagers(), tmf.getTrustManagers(), null);",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "return sslContext;",
                        "lineNumber": 33,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Configuring TSL/SSL now supports property placeholders.",
                  "support for TLS config tweaks",
                  "Temporarily peg SSL version to TLSv1.2."
                ],
                "precision": "very-high",
                "repoDatasetSize": 78,
                "cwe": [
                  "CWE-326"
                ]
              }
            },
            {
              "id": "php/XSS",
              "name": "XSS",
              "shortDescription": {
                "text": "Cross-site Scripting (XSS)"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\n\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser's Same Origin Policy.\n\nInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\n\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they've been correctly escaped in the application code and in this way the attempted attack is diverted.\n\nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware.\n\n### Types of attacks\nThere are a few methods by which XSS can be manipulated:\n\n|Type|Origin|Description|\n|--|--|--|\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user's browser.|\n|**DOM-based**|Client|The attacker forces the user's browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\n\n### Affected environments\nThe following environments are susceptible to an XSS attack:\n\n* Web servers\n* Application servers\n* Web application environments\n\n### How to prevent\nThis section describes the top best practices designed to specifically protect your code:\n\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches.\n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents.\n* Give users the option to disable client-side scripts.\n* Redirect invalid requests.\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "php"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/minkphp/Mink/commit/232919c0c44a2b35d410373c12db404b709ec25c?diff=split#diff-b51e2215d4bd4e189c9360d91a412970L6",
                    "lines": [
                      {
                        "line": "    setcookie(\"tc\", $_POST['cookie_value'], null, '/');",
                        "lineNumber": 3,
                        "lineChange": "none"
                      },
                      {
                        "line": "} elseif (isset($_GET[\"show_value\"])) {",
                        "lineNumber": 4,
                        "lineChange": "none"
                      },
                      {
                        "line": "    echo $_COOKIE[\"tc\"];",
                        "lineNumber": 5,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    echo htmlspecialchars($_COOKIE[\"tc\"],  ENT_QUOTES, 'UTF-8');",
                        "lineNumber": 5,
                        "lineChange": "added"
                      },
                      {
                        "line": "    die();",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 7,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/yunluo/Git/commit/1cb7eddf43f770c055cd685c7f73bb3dac713789?diff=split#diff-34390932035b5d4fd059e5e9a4c629b6L69",
                    "lines": [
                      {
                        "line": "    the_content(); ?>",
                        "lineNumber": 66,
                        "lineChange": "none"
                      },
                      {
                        "line": "<form class=\"googlo-tougao\" method=\"post\" action=\"<?php",
                        "lineNumber": 67,
                        "lineChange": "none"
                      },
                      {
                        "line": "    echo $_SERVER[\"REQUEST_URI\"];",
                        "lineNumber": 68,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    echo htmlspecialchars($_SERVER[\"REQUEST_URI\"]);",
                        "lineNumber": 68,
                        "lineChange": "added"
                      },
                      {
                        "line": "    $current_user = wp_get_current_user(); ?>\">",
                        "lineNumber": 69,
                        "lineChange": "none"
                      },
                      {
                        "line": "<div style=\"text-align: left; padding-top: 10px;\">",
                        "lineNumber": 70,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/railt/railt/commit/856e3456f6b87c94c1262a842c6df29a76cf9be1?diff=split#diff-eaa75d4030b62891c20b9f9d83a58fd2L59",
                    "lines": [
                      {
                        "line": "        echo $request->get('schema');",
                        "lineNumber": 56,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        echo htmlspecialchars($request->get('schema'));",
                        "lineNumber": 73,
                        "lineChange": "added"
                      },
                      {
                        "line": "    } else {",
                        "lineNumber": 74,
                        "lineChange": "none"
                      },
                      {
                        "line": "        echo file_get_contents(__DIR__ . '/gql/schema.graphqls');",
                        "lineNumber": 58,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        echo htmlspecialchars(file_get_contents(__DIR__ . '/gql/schema.graphqls'));",
                        "lineNumber": 75,
                        "lineChange": "added"
                      },
                      {
                        "line": "    }",
                        "lineNumber": 76,
                        "lineChange": "none"
                      },
                      {
                        "line": "?></div>",
                        "lineNumber": 77,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Uploaded files now appear on profile pages",
                  "Add files via upload",
                  "remove file name from output to avoid XSS"
                ],
                "precision": "very-high",
                "repoDatasetSize": 526,
                "cwe": [
                  "CWE-79"
                ]
              }
            },
            {
              "id": "javascript/NoHardcodedPasswords/test",
              "name": "NoHardcodedPasswords/test",
              "shortDescription": {
                "text": "Use of Hardcoded Credentials"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nDevelopers may use hardcoded credentials for convenience when coding in order to simplify their workflow. While they are responsible for removing these before production, occasionally this task may fall through the cracks. This also becomes a maintenance challenge when credentials are re-used across multiple applications.\n\nOnce attackers gain access, they may take advantage of privilege level to remove or alter data, take down a site or app, or hold any of the above for ransom. The risk across multiple similar projects is even greater. If code containing the credentials is reused across multiple projects, they will all be compromised.\n\n### Best practices for prevention\n* Plan software architecture such that keys and passwords are always stored outside the code, wherever possible.\n* Plan encryption into software architecture for all credential information and ensure proper handling of keys, credentials, and passwords.\n* Prompt for a secure password on first login rather than hard-code a default password.\n* If a hardcoded password or credential must be used, limit its use, for example, to system console users rather than via the network.\n* Use strong hashes for inbound password authentication, ideally with randomly assigned salts to increase the difficulty level in case of brute-force attack.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/csprance/MisRCON/commit/72964f54abde81f9f40d88ebe16b583ebfec8904?diff=split#diff-3733a6fa6d50cc4d78c76e60f128404eL11",
                    "lines": [
                      {
                        "line": "ip: 'loading',",
                        "lineNumber": 8,
                        "lineChange": "removed"
                      },
                      {
                        "line": "ip: '',",
                        "lineNumber": 8,
                        "lineChange": "added"
                      },
                      {
                        "line": "port: 0,",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "password: 'THisIsCool324HashMan',",
                        "lineNumber": 10,
                        "lineChange": "removed"
                      },
                      {
                        "line": "password: '',",
                        "lineNumber": 10,
                        "lineChange": "added"
                      },
                      {
                        "line": "active: true,",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "selfHosted: false,",
                        "lineNumber": 12,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/bradwestfall/house-rules/commit/f96c3465d59030b2d853574e01f58d2d8fef4556?diff=split#diff-c90d23fc26d6eeec89e1d77807b6bbbbL21",
                    "lines": [
                      {
                        "line": " ",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "let errors = loginFormSchema.validate({",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "  email: 'test@test.com',",
                        "lineNumber": 19,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  password: 'somepassword'",
                        "lineNumber": 20,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  password: undefined",
                        "lineNumber": 19,
                        "lineChange": "added"
                      },
                      {
                        "line": "})",
                        "lineNumber": 21,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Madmous/madClones/commit/31843ab238a5d3d988c360bc3b01b719cc588c9f?diff=split#diff-374c156c3cd1b9952bee7d8064382f69L26",
                    "lines": [
                      {
                        "line": "  email: 'testEmail@email.com',",
                        "lineNumber": 23,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  email: 'test@email.com',",
                        "lineNumber": 23,
                        "lineChange": "added"
                      },
                      {
                        "line": "  application: 'test application',",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "  password: 'testPassword'",
                        "lineNumber": 25,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  password: 'test'",
                        "lineNumber": 25,
                        "lineChange": "added"
                      },
                      {
                        "line": "});",
                        "lineNumber": 26,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Fixing type errors in tests",
                  "This commit disables the password change tests.",
                  "Mock api() tests"
                ],
                "precision": "very-high",
                "repoDatasetSize": 522,
                "cwe": [
                  "CWE-798",
                  "CWE-259"
                ]
              }
            },
            {
              "id": "java/TrojanSourceConfusingUnicode",
              "name": "TrojanSourceConfusingUnicode",
              "shortDescription": {
                "text": "TrojanSourceConfusingUnicode"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 0
              }
            },
            {
              "id": "java/PT",
              "name": "PT",
              "shortDescription": {
                "text": "Path Traversal"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nBeing able to access and manipulate an arbitrary path leads to vulnerabilities when a program is being run with privileges that the user providing the path should not have. A website with a path traversal vulnerability would allow users access to sensitive files on the server hosting it. CLI programs may also be vulnerable to path traversal if they are being ran with elevated privileges (such as with the setuid or setgid flags in Unix systems).\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`.\n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/google/j2objc/commit/1b271d8b25c99a91547a19f16f71c048c3164156?diff=split#diff-33b6b27033cb88022415e8cd32b1807cL244",
                    "lines": [
                      {
                        "line": " * Extract a ZipEntry to the specified directory.",
                        "lineNumber": 241,
                        "lineChange": "none"
                      },
                      {
                        "line": " */",
                        "lineNumber": 242,
                        "lineChange": "none"
                      },
                      {
                        "line": "public File extractZipEntry(File dir, ZipFile zipFile, ZipEntry entry) throws IOException {",
                        "lineNumber": 243,
                        "lineChange": "none"
                      },
                      {
                        "line": "  File outputFile = new File(dir, entry.getName());",
                        "lineNumber": 244,
                        "lineChange": "none"
                      },
                      {
                        "line": "  File parentFile = outputFile.getParentFile();",
                        "lineNumber": 245,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if (!parentFile.isDirectory() && !parentFile.mkdirs()) {",
                        "lineNumber": 246,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    throw new IOException(\"Could not extract file to \" + dir.getPath());",
                        "lineNumber": 247,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  if (!outputFile.getCanonicalPath().startsWith(dir.getCanonicalPath() + File.separator)",
                        "lineNumber": 246,
                        "lineChange": "added"
                      },
                      {
                        "line": "      || (!parentFile.isDirectory() && !parentFile.mkdirs())) {",
                        "lineNumber": 247,
                        "lineChange": "added"
                      },
                      {
                        "line": "    throw new IOException(\"Could not extract \" + entry.getName() + \" to \" + dir.getPath());",
                        "lineNumber": 248,
                        "lineChange": "added"
                      },
                      {
                        "line": "  }",
                        "lineNumber": 249,
                        "lineChange": "none"
                      },
                      {
                        "line": "  try (InputStream inputStream = zipFile.getInputStream(entry);",
                        "lineNumber": 250,
                        "lineChange": "none"
                      },
                      {
                        "line": "      FileOutputStream outputStream = new FileOutputStream(outputFile)) {",
                        "lineNumber": 251,
                        "lineChange": "none"
                      },
                      {
                        "line": "    byte[] buf = new byte[1024];",
                        "lineNumber": 252,
                        "lineChange": "none"
                      },
                      {
                        "line": "    int n;",
                        "lineNumber": 253,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/blackducksoftware/synopsys-detect/commit/36555b9322986e9560f241d05f2262c29a17663b?diff=split#diff-bc0b5be9b9918488d8fe1dc64584df62L48",
                    "lines": [
                      {
                        "line": "Enumeration<? extends ZipEntry> entries = zipFile.entries();",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "while (entries.hasMoreElements()) {",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "    ZipEntry entry = entries.nextElement();",
                        "lineNumber": 47,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Path entryPath = destPath.resolve(entry.getName());",
                        "lineNumber": 48,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (!entryPath.normalize().startsWith(dest.toPath()))",
                        "lineNumber": 49,
                        "lineChange": "added"
                      },
                      {
                        "line": "        throw new IOException(\"Zip entry contained path traversal\");",
                        "lineNumber": 50,
                        "lineChange": "added"
                      },
                      {
                        "line": "    if (entry.isDirectory()) {",
                        "lineNumber": 51,
                        "lineChange": "none"
                      },
                      {
                        "line": "        Files.createDirectories(entryPath);",
                        "lineNumber": 52,
                        "lineChange": "none"
                      },
                      {
                        "line": "    } else {",
                        "lineNumber": 53,
                        "lineChange": "none"
                      },
                      {
                        "line": "        Files.createDirectories(entryPath.getParent());",
                        "lineNumber": 54,
                        "lineChange": "none"
                      },
                      {
                        "line": "        try (InputStream in = zipFile.getInputStream(entry)) {",
                        "lineNumber": 55,
                        "lineChange": "none"
                      },
                      {
                        "line": "            try (OutputStream out = new FileOutputStream(entryPath.toFile())) {",
                        "lineNumber": 56,
                        "lineChange": "none"
                      },
                      {
                        "line": "                IOUtils.copy(in, out);",
                        "lineNumber": 57,
                        "lineChange": "none"
                      },
                      {
                        "line": "            }",
                        "lineNumber": 58,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/azkaban/azkaban/commit/3b74a4127c9086cd525252edabc3621febab0428?diff=split#diff-c892cca6401b1e0be4cbca3261b47098L201",
                    "lines": [
                      {
                        "line": "final Enumeration<?> entries = source.entries();",
                        "lineNumber": 198,
                        "lineChange": "none"
                      },
                      {
                        "line": "while (entries.hasMoreElements()) {",
                        "lineNumber": 199,
                        "lineChange": "none"
                      },
                      {
                        "line": "  final ZipEntry entry = (ZipEntry) entries.nextElement();",
                        "lineNumber": 200,
                        "lineChange": "none"
                      },
                      {
                        "line": "  final File newFile = new File(dest, entry.getName());",
                        "lineNumber": 201,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if (!newFile.getCanonicalPath().startsWith(dest.getCanonicalPath())) {",
                        "lineNumber": 202,
                        "lineChange": "added"
                      },
                      {
                        "line": "    throw new IOException(",
                        "lineNumber": 203,
                        "lineChange": "added"
                      },
                      {
                        "line": "        \"Extracting zip entry would have resulted in a file outside the specified destination\"",
                        "lineNumber": 204,
                        "lineChange": "added"
                      },
                      {
                        "line": "if (entry.isDirectory()) {",
                        "lineNumber": 208,
                        "lineChange": "none"
                      },
                      {
                        "line": "  newFile.mkdirs();",
                        "lineNumber": 209,
                        "lineChange": "none"
                      },
                      {
                        "line": "} else {",
                        "lineNumber": 210,
                        "lineChange": "none"
                      },
                      {
                        "line": "  newFile.getParentFile().mkdirs();",
                        "lineNumber": 211,
                        "lineChange": "none"
                      },
                      {
                        "line": "  final InputStream src = source.getInputStream(entry);",
                        "lineNumber": 212,
                        "lineChange": "none"
                      },
                      {
                        "line": "  try {",
                        "lineNumber": 213,
                        "lineChange": "none"
                      },
                      {
                        "line": "    final OutputStream output =",
                        "lineNumber": 214,
                        "lineChange": "none"
                      },
                      {
                        "line": "        new BufferedOutputStream(new FileOutputStream(newFile));",
                        "lineNumber": 215,
                        "lineChange": "none"
                      },
                      {
                        "line": "    try {",
                        "lineNumber": 216,
                        "lineChange": "none"
                      },
                      {
                        "line": "      IOUtils.copy(src, output);",
                        "lineNumber": 217,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Test changed key to file.",
                  "* more code cleanup, some tests",
                  "Add option --xcode for Xcode translation testing"
                ],
                "precision": "very-high",
                "repoDatasetSize": 948,
                "cwe": [
                  "CWE-23"
                ]
              }
            },
            {
              "id": "java/TimingAttack",
              "name": "TimingAttack",
              "shortDescription": {
                "text": "Observable Timing Discrepancy (Timing Attack)"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\nA timing attack is a form of side-channel attack, meaning it does not take advantage of the way the code is structured, but rather exploits external clues that let an attacker infer the program's state. In a timing attack, program state is inferred from the time it takes to execute a particular operation. For example, an app might use a lookup table of valid session IDs to speed up access.\nWhile this is convenient for validated users, an invalid session ID will take far longer to be rejected (since it's not in the lookup table), giving the attackers a valuable way to engineer a brute-force attack. All they need to do is test a large number of randomly generated session IDs in the hope of discovering a valid one. Once access is granted, through the session ID, the malicious actor may impersonate a legitimate user, executing actions or freely accessing secure data. Through brute force, such as a massive bot attack, this weakness can be successfully exploited to bypass even very strong encryption algorithms.\n\n### Best practices for prevention\n* Implement a constant-time algorithm to ensure that timing is identical regardless of input validity and returned outcome.\n* If a constant-time algorithm is impractical due to a desire to optimize performance, choose another technique such as blinding.\n* Promote an awareness among developers that encryption is not enough if your app is giving off clues to help attackers.\n* Timing attacks often depend on the production environment and are thus difficult to test during development; be sure to use a staging environment as close as possible to production.\n* Choose hardened, reliable libraries for encryption and authentication with side-channel attack protection strategies rather than implementing your own methods.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 0,
                "cwe": [
                  "CWE-208"
                ]
              }
            },
            {
              "id": "java/Deserialization/test",
              "name": "Deserialization/test",
              "shortDescription": {
                "text": "Deserialization of Untrusted Data"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating object from sequence of bytes is called deserialization. Serialization is commonly used for communication (sharing objects between multiple hosts) and persistence (store the object state in a file or a database). It is an integral part of popular protocols like _Remote Method Invocation (RMI)_, _Java Management Extension (JMX)_, _Java Messaging System (JMS)_, _Action Message Format (AMF)_, _Java Server Faces (JSF) ViewState_, etc.\n\n_Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)), is when the application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, letting the attacker to control the state or the flow of the execution.\n\nJava deserialization issues have been known for years. However, interest in the issue intensified greatly in 2015, when classes that could be abused to achieve remote code execution were found in a [popular library (Apache Commons Collection)](https://snyk.io/vuln/SNYK-JAVA-COMMONSCOLLECTIONS-30078). These classes were used in zero-days affecting IBM WebSphere, Oracle WebLogic and many other products.\n\n\nAn attacker just needs to identify a piece of software that has both a vulnerable class on its path, and performs deserialization on untrusted data. Then all they need to do is send the payload into the deserializer, getting the command executed.\n\n\n> Developers put too much trust in Java Object Serialization. Some even de-serialize objects pre-authentication. When deserializing an Object in Java you typically cast it to an expected type, and therefore Java's strict type system will ensure you only get valid object trees. Unfortunately, by the time the type checking happens, platform code has already created and executed significant logic. So, before the final type is checked a lot of code is executed from the readObject() methods of various objects, all of which is out of the developer's control. By combining the readObject() methods of various classes which are available on the classpath of the vulnerable application an attacker can execute functions (including calling Runtime.exec() to execute local OS commands).",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/apache/commons-jcs/commit/3d7a7f8fdd526d01c1b4240b6da9abf5701acfe5?diff=split#diff-256cbcc3690cc484ff94133b10b72f16L197",
                    "lines": [
                      {
                        "line": "/** Description of the Method */",
                        "lineNumber": 195,
                        "lineChange": "none"
                      },
                      {
                        "line": "public String read( URLConnection connection )",
                        "lineNumber": 196,
                        "lineChange": "none"
                      },
                      {
                        "line": "{",
                        "lineNumber": 197,
                        "lineChange": "none"
                      },
                      {
                        "line": "    String result = \"\";",
                        "lineNumber": 198,
                        "lineChange": "none"
                      },
                      {
                        "line": "    try",
                        "lineNumber": 199,
                        "lineChange": "none"
                      },
                      {
                        "line": "    {",
                        "lineNumber": 200,
                        "lineChange": "none"
                      },
                      {
                        "line": "        ObjectInputStream is = new ObjectInputStream( connection.getInputStream() );",
                        "lineNumber": 201,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        ObjectInputStream is = new ObjectInputStreamClassLoaderAware( connection.getInputStream(), null );",
                        "lineNumber": 201,
                        "lineChange": "added"
                      },
                      {
                        "line": "        result = ( String ) is.readObject();",
                        "lineNumber": 202,
                        "lineChange": "none"
                      },
                      {
                        "line": "        is.close();",
                        "lineNumber": 203,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/tony19/logback-android/commit/665f0d0747260ddff683569f334db4757ad2ac94?diff=split#diff-3812d3ae08ad7172a48335985b14bdd8L47",
                    "lines": [
                      {
                        "line": " * @param inputStream input stream from which events will be read",
                        "lineNumber": 44,
                        "lineChange": "none"
                      },
                      {
                        "line": " */",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "public RemoteAppenderStreamClient(String id, Socket socket) {",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "  this.id = id;",
                        "lineNumber": 47,
                        "lineChange": "none"
                      },
                      {
                        "line": "  this.socket = socket;",
                        "lineNumber": 48,
                        "lineChange": "none"
                      },
                      {
                        "line": "while (true) {",
                        "lineNumber": 91,
                        "lineChange": "none"
                      },
                      {
                        "line": "  // read an event from the wire",
                        "lineNumber": 92,
                        "lineChange": "none"
                      },
                      {
                        "line": "  ILoggingEvent event = (ILoggingEvent) ois.readObject();",
                        "lineNumber": 93,
                        "lineChange": "none"
                      },
                      {
                        "line": "  // get a logger from the hierarchy. The name of the logger is taken to",
                        "lineNumber": 94,
                        "lineChange": "none"
                      },
                      {
                        "line": "  // be the name contained in the event.",
                        "lineNumber": 95,
                        "lineChange": "none"
                      },
                      {
                        "line": "return new ObjectInputStream(inputStream);",
                        "lineNumber": 128,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    return new HardenedLoggingEventInputStream(inputStream);",
                        "lineNumber": 128,
                        "lineChange": "added"
                      },
                      {
                        "line": "  }",
                        "lineNumber": 129,
                        "lineChange": "none"
                      },
                      {
                        "line": "  return new ObjectInputStream(socket.getInputStream());",
                        "lineNumber": 130,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  return new HardenedLoggingEventInputStream(socket.getInputStream());",
                        "lineNumber": 130,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 131,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Alluxio/alluxio/commit/1a0d75ddbb0d6e1857067789a5ba232887dbf90c?diff=split#diff-110c505811cbbd4fcc108c98190afcbdL51",
                    "lines": [
                      {
                        "line": " *                     stream header in the constructor of {@link ObjectInputStream}",
                        "lineNumber": 48,
                        "lineChange": "none"
                      },
                      {
                        "line": " */",
                        "lineNumber": 49,
                        "lineChange": "none"
                      },
                      {
                        "line": "public AlluxioLog4jSocketNode(AlluxioLogServerProcess process, Socket socket)",
                        "lineNumber": 50,
                        "lineChange": "none"
                      },
                      {
                        "line": "    throws IOException {",
                        "lineNumber": 51,
                        "lineChange": "none"
                      },
                      {
                        "line": "LoggingEvent event;",
                        "lineNumber": 58,
                        "lineChange": "none"
                      },
                      {
                        "line": "Logger remoteLogger;",
                        "lineNumber": 59,
                        "lineChange": "none"
                      },
                      {
                        "line": "try (ObjectInputStream objectInputStream = new ObjectInputStream(",
                        "lineNumber": 60,
                        "lineChange": "none"
                      },
                      {
                        "line": "    new BufferedInputStream(mSocket.getInputStream()))) {",
                        "lineNumber": 61,
                        "lineChange": "none"
                      },
                      {
                        "line": "  while (true) {",
                        "lineNumber": 62,
                        "lineChange": "none"
                      },
                      {
                        "line": "    event = (LoggingEvent) objectInputStream.readObject();",
                        "lineNumber": 63,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (mHierarchy == null) {",
                        "lineNumber": 64,
                        "lineChange": "removed"
                      },
                      {
                        "line": "      mHierarchy = mLogServerProcess.configureHierarchy(",
                        "lineNumber": 65,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    if (hierarchy == null) {",
                        "lineNumber": 63,
                        "lineChange": "added"
                      },
                      {
                        "line": "      hierarchy = mLogServerProcess.configureHierarchy(",
                        "lineNumber": 64,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Save highlights as a json file, not an object dump.",
                  "Serialized reporter - Allow specifying multiple result dir source paths"
                ],
                "precision": "very-high",
                "repoDatasetSize": 68,
                "cwe": [
                  "CWE-502"
                ]
              }
            },
            {
              "id": "javascript/NoRateLimitingForLogin",
              "name": "NoRateLimitingForLogin",
              "shortDescription": {
                "text": "Allocation of Resources Without Limits or Throttling"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nWithout unlimited resources, software operating in the real world is inherently limited in the resources it may consume; similarly, servers are limited by the number of simultaneous sessions they can handle. Therefore, it is important for developers to design software that considers these real-world physical (or virtual) limitations and limits user sessions accordingly, both in terms of the number of user sessions and in the quantity of resources each user may demand. Software with this weakness does not include such limitations and as a result, individual user sessions may consume too many resources, leading to unintended software behavior including, potentially, denial of service. This can be compared to a single restaurant customer emptying out the entire buffet, leaving no food for other customers--or an entire busload mobbing the buffet all at once, with a similar effect. This may happen inadvertently or as a result of an attack by a malicious user.\n\n### Best practices for prevention\n* Test extensively to obtain baseline values indicating how the software performs in the real world under various conditions (normal and peak); use these values to determine reasonable software limits.\n* Set clear limits for all flexible parameters such as maximum allocable memory, number of processes within a given timeframe, file descriptors, requests per client, number of records per request, etc. This is particularly true for any parameters within user control.\n* Release all resources when no longer in use, including incorporating timeouts for inactive users, processes, and resources.\n* Familiarize Dev, Ops, and IT teams with best practices for recognizing and preventing DoS attacks and out-of-control resource allocation to prevent catastrophic failures.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/vck3000/ProAvalon/commit/3b51fd081d0e2fc6bf4c1f425000cef61f0dcc35?diff=split#diff-103b73514ced7155e7e33849be2ab49fcbf55e6ff018e0e5356a82d74e6c7e09R24",
                    "lines": [
                      {
                        "line": "// Prevent too many requests",
                        "lineNumber": 23,
                        "lineChange": "added"
                      },
                      {
                        "line": "const rateLimit = require(\"express-rate-limit\");",
                        "lineNumber": 24,
                        "lineChange": "added"
                      },
                      {
                        "line": "// app.enable(\"trust proxy\"); // only if you're behind a reverse proxy (Heroku, Bluemix, AWS ELB, Nginx, etc)",
                        "lineNumber": 25,
                        "lineChange": "added"
                      },
                      {
                        "line": "//Index route",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "router.get(\"/\", function (req, res) {",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tres.render(\"index\");",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "});",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "//register route",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "router.get(\"/register\", function (req, res) {",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tres.render(\"register\", { platform: process.env.MY_PLATFORM });",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "});",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "const registerLimiter = rateLimit({",
                        "lineNumber": 37,
                        "lineChange": "added"
                      },
                      {
                        "line": "    windowMs: 60 * 60 * 1000, // 60 minutes",
                        "lineNumber": 38,
                        "lineChange": "added"
                      },
                      {
                        "line": "    max: 3",
                        "lineNumber": 39,
                        "lineChange": "added"
                      },
                      {
                        "line": "});",
                        "lineNumber": 40,
                        "lineChange": "added"
                      },
                      {
                        "line": "//Post of the register route",
                        "lineNumber": 42,
                        "lineChange": "none"
                      },
                      {
                        "line": "router.post(\"/\", checkIpBan, sanitiseUsername,/* usernameToLowerCase, */function (req, res) {",
                        "lineNumber": 35,
                        "lineChange": "removed"
                      },
                      {
                        "line": "router.post(\"/\", registerLimiter, checkIpBan, sanitiseUsername,/* usernameToLowerCase, */function (req, res) {",
                        "lineNumber": 43,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t// console.log(\"escaped: \" + escapeText(req.body.username));",
                        "lineNumber": 44,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t// var escapedUsername = escapeText(req.body.username);",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t//if we are local, we can skip the captcha",
                        "lineNumber": 48,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tif (process.env.MY_PLATFORM === \"local\" || process.env.MY_PLATFORM === \"staging\") {",
                        "lineNumber": 49,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t//duplicate code as below",
                        "lineNumber": 50,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tvar newUser = new User({",
                        "lineNumber": 51,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\tusername: req.body.username,",
                        "lineNumber": 52,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\tusernameLower: req.body.username.toLowerCase(),",
                        "lineNumber": 53,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\tdateJoined: new Date()",
                        "lineNumber": 54,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t});",
                        "lineNumber": 55,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t//set default values",
                        "lineNumber": 57,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tfor (var key in defaultValuesForUser) {",
                        "lineNumber": 58,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\tif (defaultValuesForUser.hasOwnProperty(key)) {",
                        "lineNumber": 59,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\tnewUser[key] = defaultValuesForUser[key];",
                        "lineNumber": 60,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t}",
                        "lineNumber": 61,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t}",
                        "lineNumber": 62,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tif (req.body.username.indexOf(\" \") !== -1) {",
                        "lineNumber": 64,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\treq.flash(\"error\", \"Sign up failed. Please do not use spaces in your username.\");",
                        "lineNumber": 65,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\tres.redirect(\"register\");",
                        "lineNumber": 66,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\treturn;",
                        "lineNumber": 67,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t}",
                        "lineNumber": 68,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\telse if (req.body.username.length > 25) {",
                        "lineNumber": 69,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\treq.flash(\"error\", \"Sign up failed. Please do not use more than 25 characters in your username.\");",
                        "lineNumber": 70,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\tres.redirect(\"register\");",
                        "lineNumber": 71,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\treturn;",
                        "lineNumber": 72,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t}",
                        "lineNumber": 73,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\telse if (usernameContainsBadCharacter(req.body.username) == true) {",
                        "lineNumber": 75,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\treq.flash(\"error\", \"Please do not use an illegal character\");",
                        "lineNumber": 76,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\tres.redirect(\"register\");",
                        "lineNumber": 77,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\treturn;",
                        "lineNumber": 78,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t}",
                        "lineNumber": 79,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\telse {",
                        "lineNumber": 81,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\tUser.register(newUser, req.body.password, function (err, user) {",
                        "lineNumber": 82,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\tif (err) {",
                        "lineNumber": 83,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\t\tconsole.log(\"ERROR: \" + err);",
                        "lineNumber": 84,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\t\treq.flash(\"error\", \"Sign up failed. Most likely that username is taken.\");",
                        "lineNumber": 85,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\t\tres.redirect(\"register\");",
                        "lineNumber": 86,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\t} else {",
                        "lineNumber": 87,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\t\t//successful, get them to log in again",
                        "lineNumber": 88,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\t\t// req.flash(\"success\", \"Sign up successful. Please log in.\");",
                        "lineNumber": 89,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\t\t// res.redirect(\"/\");",
                        "lineNumber": 90,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\t\tpassport.authenticate(\"local\")(req, res, function () {",
                        "lineNumber": 91,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/jimschubert/yfa-nodejs-code/commit/64da66c4b10f4e63add66da9b940b378b40b6db7?diff=split#diff-5890fb698ea46d5ddde8c2d05f59b3efR28",
                    "lines": [
                      {
                        "line": " app.engine('html', require('ejs').renderFile);",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": " app.use(express.favicon());",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(express.limit('2mb'));",
                        "lineNumber": 27,
                        "lineChange": "added"
                      },
                      {
                        "line": "app.use(express.bodyParser({",
                        "lineNumber": 28,
                        "lineChange": "added"
                      },
                      {
                        "line": "    uploadDir: path.join(__dirname, 'tmp'),",
                        "lineNumber": 29,
                        "lineChange": "added"
                      },
                      {
                        "line": "app.get('/auth/facebook',",
                        "lineNumber": 66,
                        "lineChange": "none"
                      },
                      {
                        "line": "    passport.authenticate('facebook', {",
                        "lineNumber": 67,
                        "lineChange": "none"
                      },
                      {
                        "line": "        scope: 'email'",
                        "lineNumber": 68,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }",
                        "lineNumber": 69,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/vck3000/ProAvalon/commit/3b51fd081d0e2fc6bf4c1f425000cef61f0dcc35?diff=split#diff-bb503f3d9047bcd4a5730559f1e16560R26",
                    "lines": [
                      {
                        "line": " var adminsArray = require(\"../modsadmins/admins\");",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": " ",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "// Prevent too many requests",
                        "lineNumber": 24,
                        "lineChange": "added"
                      },
                      {
                        "line": "const rateLimit = require(\"express-rate-limit\");",
                        "lineNumber": 25,
                        "lineChange": "added"
                      },
                      {
                        "line": "// app.enable(\"trust proxy\"); // only if you're behind a reverse proxy (Heroku, Bluemix, AWS ELB, Nginx, etc)",
                        "lineNumber": 26,
                        "lineChange": "added"
                      },
                      {
                        "line": " ",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": " //Index route",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "// req.flash(\"success\", \"Sign up successful. Please log in.\");",
                        "lineNumber": 90,
                        "lineChange": "none"
                      },
                      {
                        "line": "// res.redirect(\"/\");",
                        "lineNumber": 91,
                        "lineChange": "none"
                      },
                      {
                        "line": "passport.authenticate(\"local\")(req, res, function () {",
                        "lineNumber": 92,
                        "lineChange": "none"
                      },
                      {
                        "line": "  res.redirect(\"/lobby\");",
                        "lineNumber": 93,
                        "lineChange": "none"
                      },
                      {
                        "line": "});",
                        "lineNumber": 94,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "- Added tests for new auth that returns the current user",
                  "Use js-only bcryptjs instead of bcrypt with native"
                ],
                "precision": "very-high",
                "repoDatasetSize": 20,
                "cwe": [
                  "CWE-770"
                ]
              }
            },
            {
              "id": "csharp/LogForging",
              "name": "LogForging",
              "shortDescription": {
                "text": "Log Forging"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nLog files are essential for properly functioning security. They are often processed automatically to generate alerts or scanned manually to determine the context of any failure or reported incident. When this weakness is present, an attacker is able to pass data to the server, which can falsify the security logs. The attacker could potentially write extra lines into the log-adding misleading data to cover their tracks, generating false positives or negatives or corrupting the log, and creating confusing results or flooding the log files to skew statistics-fooling security software and deflecting attention so their intrusion will go undetected. In an even more severe scenario, an attacker could insert code or other commands directly into the log file, which could be processed by the server should a vulnerability exist in the log processing application.\n\n### Best practices for prevention\n\n* Assume all user input, or all kinds, is malicious. Always sanitize user input, scanning in specific for special characters such as CRLF (`\\r` and `\\n`) along with other denylist characters that could introduce new lines to log files.\n* Create strict definitions for log file entry structure wherever possible to avoid gibberish or maliciously created log files.\n* Consider implementing output encoding such as ISO-8859-1, UTF-7, or UTF-8 immediately before log files are passed to the application.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "csharp"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/LazZiya/TagHelpers/commit/d84daa223afbe8e88ff79a7f7fbf0a0cd0cdbc85?diff=split#diff-9ea5040e506f5508530065b2cd1e15b8L672",
                    "lines": [
                      {
                        "line": "private string CreateUrlTemplate(int pageNo, int pageSize)",
                        "lineNumber": 799,
                        "lineChange": "none"
                      },
                      {
                        "line": "{",
                        "lineNumber": 800,
                        "lineChange": "none"
                      },
                      {
                        "line": "    var urlPath = ViewContext.HttpContext.Request.QueryString.Value;",
                        "lineNumber": 671,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    var urlPath = ViewContext.HttpContext.Request.QueryString.Value.Replace($\"{AjaxUrl}&\", \"\");",
                        "lineNumber": 801,
                        "lineChange": "added"
                      },
                      {
                        "line": "    _logger.LogDebug($\"----> Page No '{pageNo}', Page Size '{pageSize}', URL Path '{urlPath}'\");",
                        "lineNumber": 803,
                        "lineChange": "none"
                      },
                      {
                        "line": "    string p = $\"{QueryStringKeyPageNo}={pageNo}\"; // CurrentPageNo query string parameter, default: p",
                        "lineNumber": 805,
                        "lineChange": "none"
                      },
                      {
                        "line": "    string s = $\"{QueryStringKeyPageSize}={pageSize}\"; // PageSize query string parameter, default: s",
                        "lineNumber": 806,
                        "lineChange": "none"
                      },
                      {
                        "line": "     var urlTemplate = urlPath.TrimStart('?').Split('&').ToList();",
                        "lineNumber": 808,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/JosefNemec/Playnite/commit/f687836c74d44ac0a2470bc7acbb6e985ff13d74?diff=split#diff-2e4c4083a9ea680dd0df48f8aac9f94fL2",
                    "lines": [
                      {
                        "line": "using Microsoft.AspNetCore.Mvc;",
                        "lineNumber": 1,
                        "lineChange": "none"
                      },
                      {
                        "line": "using Newtonsoft.Json;",
                        "lineNumber": 2,
                        "lineChange": "none"
                      },
                      {
                        "line": "using PlayniteServices.Models.IGDB;",
                        "lineNumber": 3,
                        "lineChange": "none"
                      },
                      {
                        "line": "using PlayniteServices.Filters;",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "namespace PlayniteServices.Controllers.IGDB",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "{",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "    [ServiceFilter(typeof(PlayniteVersionFilter))]",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "    [Route(\"igdb/games\")]",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "    public class GamesController : Controller",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "    {",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "        private static readonly object CacheLock = new object();",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "        private const string cacheDir = \"game_search\";",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "        private static ILogger logger = LogManager.GetLogger();",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "        private IOptions<AppSettings> appSettings;",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "[HttpGet(\"{gameName}\")]",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "public async Task<ServicesResponse<List<ExpandedGame>>> Get(string gameName)",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "{",
                        "lineNumber": 37,
                        "lineChange": "none"
                      },
                      {
                        "line": "    List<Game> searchResult = null;",
                        "lineNumber": 38,
                        "lineChange": "none"
                      },
                      {
                        "line": "    gameName = gameName.ToLower();",
                        "lineNumber": 38,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    gameName = gameName.ToLower().Trim();",
                        "lineNumber": 39,
                        "lineChange": "added"
                      },
                      {
                        "line": "    gameName = Regex.Replace(gameName, @\"\\s+\", \" \");",
                        "lineNumber": 40,
                        "lineChange": "added"
                      },
                      {
                        "line": "    var cachePath = Path.Combine(IGDB.CacheDirectory, cacheDir, Playnite.Common.Paths.GetSafeFilename(gameName) + \".json\");",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "    lock (CacheLock)",
                        "lineNumber": 42,
                        "lineChange": "none"
                      },
                      {
                        "line": "    {",
                        "lineNumber": 43,
                        "lineChange": "none"
                      },
                      {
                        "line": "        if (System.IO.File.Exists(cachePath))",
                        "lineNumber": 44,
                        "lineChange": "none"
                      },
                      {
                        "line": "        {",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "            var fileInfo = new FileInfo(cachePath);",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "            if ((fileInfo.LastWriteTime - DateTime.Now).TotalHours <= IGDB.SearchCacheTimeout)",
                        "lineNumber": 47,
                        "lineChange": "none"
                      },
                      {
                        "line": "            {",
                        "lineNumber": 48,
                        "lineChange": "none"
                      },
                      {
                        "line": "                searchResult = JsonConvert.DeserializeObject<List<Game>>(System.IO.File.ReadAllText(cachePath));                        ",
                        "lineNumber": 49,
                        "lineChange": "none"
                      },
                      {
                        "line": "            }",
                        "lineNumber": 50,
                        "lineChange": "none"
                      },
                      {
                        "line": "        }",
                        "lineNumber": 51,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }",
                        "lineNumber": 52,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (searchResult == null)",
                        "lineNumber": 54,
                        "lineChange": "none"
                      },
                      {
                        "line": "    {",
                        "lineNumber": 55,
                        "lineChange": "none"
                      },
                      {
                        "line": "        var libraryStringResult = await IGDB.SendStringRequest(\"games\", $\"search \\\"{HttpUtility.UrlDecode(gameName)}\\\"; fields id; limit 40;\");",
                        "lineNumber": 56,
                        "lineChange": "none"
                      },
                      {
                        "line": "        searchResult = JsonConvert.DeserializeObject<List<Game>>(libraryStringResult);",
                        "lineNumber": 57,
                        "lineChange": "none"
                      },
                      {
                        "line": "        lock (CacheLock)",
                        "lineNumber": 58,
                        "lineChange": "none"
                      },
                      {
                        "line": "        {",
                        "lineNumber": 59,
                        "lineChange": "none"
                      },
                      {
                        "line": "using (var gameController = new GameController(appSettings))",
                        "lineNumber": 66,
                        "lineChange": "none"
                      },
                      {
                        "line": "{",
                        "lineNumber": 67,
                        "lineChange": "none"
                      },
                      {
                        "line": "    for (int i = 0; i < searchResult.Count; i++)",
                        "lineNumber": 68,
                        "lineChange": "none"
                      },
                      {
                        "line": "    {",
                        "lineNumber": 69,
                        "lineChange": "none"
                      },
                      {
                        "line": "        Game result = null;",
                        "lineNumber": 70,
                        "lineChange": "none"
                      },
                      {
                        "line": "        try",
                        "lineNumber": 71,
                        "lineChange": "none"
                      },
                      {
                        "line": "        {",
                        "lineNumber": 72,
                        "lineChange": "none"
                      },
                      {
                        "line": "            result = (await gameController.Get(searchResult[i].id)).Data;",
                        "lineNumber": 73,
                        "lineChange": "none"
                      },
                      {
                        "line": "        }",
                        "lineNumber": 74,
                        "lineChange": "none"
                      },
                      {
                        "line": "        catch (Exception e)",
                        "lineNumber": 75,
                        "lineChange": "none"
                      },
                      {
                        "line": "        {",
                        "lineNumber": 76,
                        "lineChange": "none"
                      },
                      {
                        "line": "            logger.Error(e, $\"Failed to get game {searchResult[i].id}\");",
                        "lineNumber": 77,
                        "lineChange": "none"
                      },
                      {
                        "line": "            continue;",
                        "lineNumber": 78,
                        "lineChange": "none"
                      },
                      {
                        "line": "        }",
                        "lineNumber": 79,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/pmcilreavy/AzureEventGridSimulator/commit/c9c5af2df4deff52629fa2a80c4c6f691a8b7e3c?diff=split#diff-f6bec35100b8ce857f8f087c268cdb46L2",
                    "lines": [
                      {
                        "line": "using System;",
                        "lineNumber": 1,
                        "lineChange": "none"
                      },
                      {
                        "line": "using System.Net.Http;",
                        "lineNumber": 2,
                        "lineChange": "none"
                      },
                      {
                        "line": "using System.Text;",
                        "lineNumber": 3,
                        "lineChange": "none"
                      },
                      {
                        "line": "using AzureEventGridSimulator.Settings;",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "using Microsoft.AspNetCore.Http.Extensions;",
                        "lineNumber": 7,
                        "lineChange": "none"
                      },
                      {
                        "line": "using Microsoft.AspNetCore.Mvc;",
                        "lineNumber": 8,
                        "lineChange": "none"
                      },
                      {
                        "line": "using Microsoft.Extensions.Logging;",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "using Newtonsoft.Json;",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": "namespace AzureEventGridSimulator.Controllers",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "{",
                        "lineNumber": 13,
                        "lineChange": "none"
                      },
                      {
                        "line": "    [Route(\"/api/events\")]",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "    [ApiController]",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "    public class ApiController : ControllerBase",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "    {",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "        private readonly ILogger _logger;",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "public TopicSettings TopicSettings => HttpContext.RetrieveTopicSettings();",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "[HttpPost]",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "public IActionResult Post([FromBody] EventGridEvent[] events)",
                        "lineNumber": 28,
                        "lineChange": "removed"
                      },
                      {
                        "line": "public IActionResult Post([FromBody] EventGridEvent[] _)",
                        "lineNumber": 28,
                        "lineChange": "added"
                      },
                      {
                        "line": "{",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "    var events = HttpContext.RetrieveEvents();",
                        "lineNumber": 30,
                        "lineChange": "added"
                      },
                      {
                        "line": "    _logger.LogInformation(\"New request ({EventCount} event(s)) for '{TopicName}' @ {RequestUrl}\", events.Length, TopicSettings.Name, Request.GetDisplayUrl());",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "    foreach (var subscription in TopicSettings.Subscribers)",
                        "lineNumber": 34,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "add parse API to resource validator",
                  "scope validation refactor ()"
                ],
                "precision": "very-high",
                "repoDatasetSize": 40,
                "cwe": [
                  "CWE-117"
                ]
              }
            },
            {
              "id": "java/InsecureCipherNoIntegrity",
              "name": "InsecureCipherNoIntegrity",
              "shortDescription": {
                "text": "Use of a Broken or Risky Cryptographic Algorithm"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nWhen sensitive information is transmitted with weak encryption, attackers are potentially able to intercept the information and decrypt it, with a wide range of negative consequences. This includes accessing code or content they are not authorized to view and changing or taking down a site or app, often with a demand for ransom. Every developer is aware of the risks of transmitting sensitive information in plain text. Yet many still use outdated or inferior cryptographic methods to protect information under their control. As cryptographic methods grow stronger with time, code must be updated to incorporate more modern and secure cryptography.\n\n### Best practices for prevention\n* Avoid using DES, and use AES (in a secure mode, such as Galois/Counter Mode) or another strong encryption algorithm instead.\n* Be aware of outdated hashes, such as MD5 and SHA1 (along with many others); recognize and implement current cryptographic standards instead.\n* Never use custom or DIY security and cryptographic methods; instead, use methods that are part of an accepted library or framework.\n* Ensure that code dealing with cryptographic methods is highly modular and can be easily replaced as security standards change.\n* Increase developer awareness of proper encryption key management and protection to ensure best practices throughout the application.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/terracotta-bank/terracotta-bank/commit/a27453b52859d32ef25694869c1662a9493c621c?diff=split#diff-49444057459eecb4ff09662c3beab114L95",
                    "lines": [
                      {
                        "line": "String ivHeader = request.getHeader(\"X-Encryption-Iv\");",
                        "lineNumber": 93,
                        "lineChange": "none"
                      },
                      {
                        "line": "byte[] iv = Base64.getDecoder().decode(ivHeader);",
                        "lineNumber": 94,
                        "lineChange": "none"
                      },
                      {
                        "line": "Cipher cipher = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");",
                        "lineNumber": 94,
                        "lineChange": "removed"
                      },
                      {
                        "line": "cipher.init(Cipher.DECRYPT_MODE, secretKey(), new IvParameterSpec(iv));",
                        "lineNumber": 95,
                        "lineChange": "removed"
                      },
                      {
                        "line": "Cipher cipher = Cipher.getInstance(\"AES/GCM/NoPadding\");",
                        "lineNumber": 95,
                        "lineChange": "added"
                      },
                      {
                        "line": "cipher.init(Cipher.DECRYPT_MODE, secretKey(), new GCMParameterSpec(128, iv));",
                        "lineNumber": 96,
                        "lineChange": "added"
                      },
                      {
                        "line": "cipher.updateAAD(version.getBytes(UTF_8));",
                        "lineNumber": 97,
                        "lineChange": "added"
                      },
                      {
                        "line": "InputStream plain = new CipherInputStream(new Base64InputStream(request.getInputStream()), cipher);",
                        "lineNumber": 98,
                        "lineChange": "none"
                      },
                      {
                        "line": "\treturn new DecryptedWrapper(request, plain);",
                        "lineNumber": 99,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/oracle/helidon/commit/bd7b527d900fc3c7c5204459f9bf6dabb5de9f3f?diff=split#diff-5ab21f1b0b5ca2653372fd39b4aa40b0L64",
                    "lines": [
                      {
                        "line": "KeySpec keySpec = new PBEKeySpec(masterPassword, salt, 10000, 128);",
                        "lineNumber": 61,
                        "lineChange": "removed"
                      },
                      {
                        "line": "KeySpec keySpec = new PBEKeySpec(masterPassword, salt, 10000, 256);",
                        "lineNumber": 61,
                        "lineChange": "added"
                      },
                      {
                        "line": "SecretKeySpec spec = new SecretKeySpec(secretKeyFactory.generateSecret(keySpec).getEncoded(), \"AES\");",
                        "lineNumber": 62,
                        "lineChange": "none"
                      },
                      {
                        "line": "Cipher cipher = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");",
                        "lineNumber": 63,
                        "lineChange": "removed"
                      },
                      {
                        "line": "cipher.init(cipherMode, spec, new IvParameterSpec(salt));",
                        "lineNumber": 64,
                        "lineChange": "removed"
                      },
                      {
                        "line": "Cipher cipher = Cipher.getInstance(\"AES/GCM/NoPadding\");",
                        "lineNumber": 63,
                        "lineChange": "added"
                      },
                      {
                        "line": "cipher.init(cipherMode, spec, new GCMParameterSpec(128, nonce));",
                        "lineNumber": 64,
                        "lineChange": "added"
                      },
                      {
                        "line": " return cipher;",
                        "lineNumber": 66,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Esri/mapbook-android/commit/29dbb58917955ca69632a80cc189247f6398fdbb?diff=split#diff-9865f4effc693075a16c0a2b0657d46eL84",
                    "lines": [
                      {
                        "line": "public class CredentialCryptographer {",
                        "lineNumber": 81,
                        "lineChange": "none"
                      },
                      {
                        "line": "  private static final String TAG = CredentialCryptographer.class.getSimpleName();",
                        "lineNumber": 82,
                        "lineChange": "none"
                      },
                      {
                        "line": "  private static final String CIPHER_TYPE = \"AES/GCM/NoPadding\";",
                        "lineNumber": 83,
                        "lineChange": "none"
                      },
                      {
                        "line": "  private static final String RSA_MODE =  \"RSA/ECB/PKCS1Padding\";",
                        "lineNumber": 84,
                        "lineChange": "none"
                      },
                      {
                        "line": "  private static final String AES_MODE = \"AES/ECB/PKCS7Padding\";",
                        "lineNumber": 85,
                        "lineChange": "none"
                      },
                      {
                        "line": "  private static final String AndroidKeyStore = \"AndroidKeyStore\";",
                        "lineNumber": 86,
                        "lineChange": "none"
                      },
                      {
                        "line": "  private static final String ALIAS = \"CRED_KEY\";",
                        "lineNumber": 87,
                        "lineChange": "none"
                      },
                      {
                        "line": "final SecretKey key = (SecretKey) keyStore.getKey(ALIAS, null);",
                        "lineNumber": 236,
                        "lineChange": "none"
                      },
                      {
                        "line": "final Cipher c = Cipher.getInstance(CIPHER_TYPE);",
                        "lineNumber": 238,
                        "lineChange": "none"
                      },
                      {
                        "line": "final File file = new File(getFilePath(encryptedDataFileName));",
                        "lineNumber": 240,
                        "lineChange": "none"
                      },
                      {
                        "line": "byte [] decodedBytes = null;",
                        "lineNumber": 473,
                        "lineChange": "removed"
                      },
                      {
                        "line": "try{",
                        "lineNumber": 474,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  final Cipher c = Cipher.getInstance(AES_MODE, \"BC\");",
                        "lineNumber": 475,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  c.init(Cipher.DECRYPT_MODE, getSecretKey(context));",
                        "lineNumber": 476,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  decodedBytes = c.doFinal(encrypted);",
                        "lineNumber": 477,
                        "lineChange": "removed"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "added versioning and included salt in encrypted byte stream.",
                  "Switch from CBC to GCM"
                ],
                "precision": "very-high",
                "repoDatasetSize": 54,
                "cwe": [
                  "CWE-327"
                ]
              }
            },
            {
              "id": "csharp/Deserialization",
              "name": "Deserialization",
              "shortDescription": {
                "text": "Deserialization of Untrusted Data"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating object from sequence of bytes is called deserialization. Serialization is commonly used for communication (sharing objects between multiple hosts) and persistence (store the object state in a file or a database). It is an integral part of popular protocols like _Remote Method Invocation (RMI)_, _Java Management Extension (JMX)_, _Java Messaging System (JMS)_, _Action Message Format (AMF)_, _Java Server Faces (JSF) ViewState_, etc.\n\n_Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)), is when the application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, letting the attacker to control the state or the flow of the execution.\n\nJava deserialization issues have been known for years. However, interest in the issue intensified greatly in 2015, when classes that could be abused to achieve remote code execution were found in a [popular library (Apache Commons Collection)](https://snyk.io/vuln/SNYK-JAVA-COMMONSCOLLECTIONS-30078). These classes were used in zero-days affecting IBM WebSphere, Oracle WebLogic and many other products.\n\n\nAn attacker just needs to identify a piece of software that has both a vulnerable class on its path, and performs deserialization on untrusted data. Then all they need to do is send the payload into the deserializer, getting the command executed.\n\n\n> Developers put too much trust in Java Object Serialization. Some even de-serialize objects pre-authentication. When deserializing an Object in Java you typically cast it to an expected type, and therefore Java's strict type system will ensure you only get valid object trees. Unfortunately, by the time the type checking happens, platform code has already created and executed significant logic. So, before the final type is checked a lot of code is executed from the readObject() methods of various objects, all of which is out of the developer's control. By combining the readObject() methods of various classes which are available on the classpath of the vulnerable application an attacker can execute functions (including calling Runtime.exec() to execute local OS commands).",
                "text": ""
              },
              "properties": {
                "tags": [
                  "csharp"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 0,
                "cwe": [
                  "CWE-502"
                ]
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "java/TooPermissiveHostnameVerifier",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "The verify method always returns true, which means that any hostname is accepted. Such behaviour is insecure.",
            "markdown": "The {0} method always returns {1}, which means that any hostname is accepted. Such behaviour is insecure.",
            "arguments": [
              "[verify](0)",
              "[true](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/IgniteUtils.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 721,
                  "endLine": 721,
                  "startColumn": 42,
                  "endColumn": 48
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6edb1c287142c09d0bcfed7e768485a5fdcae01fe40cfafd46ab477f664d3389",
            "1": "3577ba7a.528e35bc.df604cdb.e22980a8.0681ed2b.eacd09e2.5b1ccecb.9c4228d3.3577ba7a.528e35bc.df604cdb.e22980a8.0681ed2b.eacd09e2.5b1ccecb.9c4228d3"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/IgniteUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 721,
                            "endLine": 721,
                            "startColumn": 42,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/IgniteUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 722,
                            "endLine": 722,
                            "startColumn": 28,
                            "endColumn": 32
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/TooPermissiveHostnameVerifier",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "The verify method always returns true, which means that any hostname is accepted. Such behaviour is insecure.",
            "markdown": "The {0} method always returns {1}, which means that any hostname is accepted. Such behaviour is insecure.",
            "arguments": [
              "[verify](0)",
              "[true](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/IgniteUtils.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 3116,
                  "endLine": 3116,
                  "startColumn": 34,
                  "endColumn": 40
                }
              }
            }
          ],
          "fingerprints": {
            "0": "133537e84bd45a91d1a79a1064145b04a91e34a120010b1d85a767a465d69e99",
            "1": "18b85eb4.7f413d6f.df604cdb.e22980a8.0681ed2b.58c3080a.5b1ccecb.1df6f34b.18b85eb4.7f413d6f.df604cdb.e22980a8.0681ed2b.58c3080a.5b1ccecb.1df6f34b"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/IgniteUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3116,
                            "endLine": 3116,
                            "startColumn": 34,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/IgniteUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3118,
                            "endLine": 3118,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/TooPermissiveHostnameVerifier",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "The verify method always returns true, which means that any hostname is accepted. Such behaviour is insecure.",
            "markdown": "The {0} method always returns {1}, which means that any hostname is accepted. Such behaviour is insecure.",
            "arguments": [
              "[verify](0)",
              "[true](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/kubernetes/src/main/java/org/apache/ignite/internal/kubernetes/connection/KubernetesServiceAddressResolver.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 82,
                  "endLine": 82,
                  "startColumn": 34,
                  "endColumn": 40
                }
              }
            }
          ],
          "fingerprints": {
            "0": "efe057f443c7b1ae2f7a34ad5ac63f46508388d289264ae42d3f263134bb6539",
            "1": "e656db8d.528e35bc.df604cdb.e22980a8.0681ed2b.eacd09e2.5b1ccecb.1df6f34b.e656db8d.528e35bc.df604cdb.e22980a8.0681ed2b.eacd09e2.5b1ccecb.1df6f34b"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/kubernetes/src/main/java/org/apache/ignite/internal/kubernetes/connection/KubernetesServiceAddressResolver.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 82,
                            "startColumn": 34,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/kubernetes/src/main/java/org/apache/ignite/internal/kubernetes/connection/KubernetesServiceAddressResolver.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 83,
                            "endLine": 83,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/TooPermissiveHostnameVerifier",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "The verify method always returns true, which means that any hostname is accepted. Such behaviour is insecure.",
            "markdown": "The {0} method always returns {1}, which means that any hostname is accepted. Such behaviour is insecure.",
            "arguments": [
              "[verify](0)",
              "[true](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/urideploy/src/main/java/org/apache/ignite/spi/deployment/uri/scanners/http/UriDeploymentHttpScanner.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 502,
                  "endLine": 502,
                  "startColumn": 34,
                  "endColumn": 40
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a107c48be9dc7ba215fb08b839c57e8c4b007f8479b665001fcf89cb24df9877",
            "1": "e656db8d.7f413d6f.df604cdb.e22980a8.0681ed2b.58c3080a.5b1ccecb.1df6f34b.e656db8d.7f413d6f.df604cdb.e22980a8.0681ed2b.58c3080a.5b1ccecb.1df6f34b"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/urideploy/src/main/java/org/apache/ignite/spi/deployment/uri/scanners/http/UriDeploymentHttpScanner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 502,
                            "endLine": 502,
                            "startColumn": 34,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/urideploy/src/main/java/org/apache/ignite/spi/deployment/uri/scanners/http/UriDeploymentHttpScanner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 504,
                            "endLine": 504,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/TooPermissiveHostnameVerifier",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "The verify method always returns true, which means that any hostname is accepted. Such behaviour is insecure.",
            "markdown": "The {0} method always returns {1}, which means that any hostname is accepted. Such behaviour is insecure.",
            "arguments": [
              "[verify](0)",
              "[true](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/kubernetes/src/main/java/org/apache/ignite/spi/discovery/tcp/ipfinder/kubernetes/TcpDiscoveryKubernetesIpFinder.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 103,
                  "endLine": 103,
                  "startColumn": 24,
                  "endColumn": 30
                }
              }
            }
          ],
          "fingerprints": {
            "0": "dc02b3909995b43f82a4e71095d259b13b7c7c0411b41441d6ed0140fd625854",
            "1": "3577ba7a.528e35bc.df604cdb.e22980a8.0681ed2b.eacd09e2.f323b56d.9c4228d3.3577ba7a.528e35bc.df604cdb.e22980a8.0681ed2b.eacd09e2.f323b56d.9c4228d3"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/kubernetes/src/main/java/org/apache/ignite/spi/discovery/tcp/ipfinder/kubernetes/TcpDiscoveryKubernetesIpFinder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 103,
                            "endLine": 103,
                            "startColumn": 24,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/kubernetes/src/main/java/org/apache/ignite/spi/discovery/tcp/ipfinder/kubernetes/TcpDiscoveryKubernetesIpFinder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 104,
                            "endLine": 104,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/InsecureHash",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "The MD5 hash (used in java.security.MessageDigest.getInstance) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The {0} hash (used in {1}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[MD5](0)",
              "[java.security.MessageDigest.getInstance](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/IgniteUtils.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 9695,
                  "endLine": 9695,
                  "startColumn": 28,
                  "endColumn": 53
                }
              }
            }
          ],
          "fingerprints": {
            "0": "1396ae77c363765f9220abaa283d4b5d720bbdafcf0fb700c77df8d99ef2c02f",
            "1": "19689298.da263459.09fc77c2.5e6ab657.98fa8f9f.c80ba7fb.0a026dee.54d46e25.19689298.da263459.09fc77c2.5e6ab657.98fa8f9f.c80ba7fb.0a026dee.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/IgniteUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 9695,
                            "endLine": 9695,
                            "startColumn": 54,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/IgniteUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 9695,
                            "endLine": 9695,
                            "startColumn": 28,
                            "endColumn": 53
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/InsecureHash",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "The MD5 hash (used in java.security.MessageDigest.getInstance) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The {0} hash (used in {1}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[MD5](0)",
              "[java.security.MessageDigest.getInstance](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/dev-utils/src/main/java/org/apache/ignite/development/utils/ProcessSensitiveDataUtils.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 38,
                  "endLine": 38,
                  "startColumn": 32,
                  "endColumn": 57
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c8f679777599bb3fde7bb928feabaf91f39cae6a793601d77de151c2514e5de1",
            "1": "19689298.da263459.e99130b3.5e6ab657.98fa8f9f.f53a5558.0a026dee.54d46e25.19689298.da263459.e99130b3.5e6ab657.98fa8f9f.f53a5558.0a026dee.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/dev-utils/src/main/java/org/apache/ignite/development/utils/ProcessSensitiveDataUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 38,
                            "startColumn": 58,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/dev-utils/src/main/java/org/apache/ignite/development/utils/ProcessSensitiveDataUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 38,
                            "startColumn": 32,
                            "endColumn": 57
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 501,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/InsecureHash",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "The MD5 hash (used in java.security.MessageDigest.getInstance) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The {0} hash (used in {1}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[MD5](0)",
              "[java.security.MessageDigest.getInstance](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/urideploy/src/main/java/org/apache/ignite/spi/deployment/uri/GridUriDeploymentFileProcessor.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 203,
                  "endLine": 203,
                  "startColumn": 40,
                  "endColumn": 65
                }
              }
            }
          ],
          "fingerprints": {
            "0": "dd31099e1019442448c73839b812aebc4c42212cb8326d3102cc4c1acb6eccc0",
            "1": "19689298.da263459.e99130b3.5e6ab657.3d2bca12.b70401ce.6dbe2d3b.c4e81b6c.19689298.da263459.e99130b3.5e6ab657.3d2bca12.b70401ce.6dbe2d3b.c4e81b6c"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/urideploy/src/main/java/org/apache/ignite/spi/deployment/uri/GridUriDeploymentFileProcessor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 203,
                            "endLine": 203,
                            "startColumn": 66,
                            "endColumn": 71
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/urideploy/src/main/java/org/apache/ignite/spi/deployment/uri/GridUriDeploymentFileProcessor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 203,
                            "endLine": 203,
                            "startColumn": 40,
                            "endColumn": 65
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/InsecureHash",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "The SHA-1 hash (used in java.security.MessageDigest.getInstance) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The {0} hash (used in {1}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[SHA-1](0)",
              "[java.security.MessageDigest.getInstance](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/main/java/org/apache/ignite/internal/processors/rest/protocols/GridRestProtocolAdapter.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 107,
                  "endLine": 107,
                  "startColumn": 32,
                  "endColumn": 57
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b30cceff578d2535f0d858c3b1338accae54201ec326d1fcc11a4960204f9c83",
            "1": "19689298.1cbd3ff4.e99130b3.5e6ab657.98fa8f9f.f53a5558.0a026dee.54d46e25.19689298.1cbd3ff4.e99130b3.5e6ab657.98fa8f9f.f53a5558.0a026dee.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/processors/rest/protocols/GridRestProtocolAdapter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 107,
                            "endLine": 107,
                            "startColumn": 58,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/processors/rest/protocols/GridRestProtocolAdapter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 107,
                            "endLine": 107,
                            "startColumn": 32,
                            "endColumn": 57
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/InsecureHash",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "The MD5 hash (used in org.apache.commons.codec.digest.DigestUtils.md5Hex) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The MD5 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[org.apache.commons.codec.digest.DigestUtils.md5Hex](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/urideploy/src/main/java/org/apache/ignite/spi/deployment/uri/GridUriDeploymentFileProcessor.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 174,
                  "endLine": 174,
                  "startColumn": 23,
                  "endColumn": 41
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f75b3d0baf30d3ae933cfe4ef9fe2f43ac24bb5b2e831c8c1787009810ae002d",
            "1": "2708beb0.92e378d2.06373764.c48320d7.e19c7d09.7fda7c5e.1bb2bc95.54d46e25.2708beb0.92e378d2.06373764.c48320d7.e19c7d09.7fda7c5e.1bb2bc95.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/urideploy/src/main/java/org/apache/ignite/spi/deployment/uri/GridUriDeploymentFileProcessor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 174,
                            "endLine": 174,
                            "startColumn": 23,
                            "endColumn": 41
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/Sqli/test",
          "ruleIndex": 2,
          "level": "note",
          "message": {
            "text": "Unsanitized input from the database flows into executeUpdate, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
            "arguments": [
              "[the database](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[executeUpdate](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/clients/src/test/java/org/apache/ignite/internal/jdbc2/JdbcAbstractSchemaCaseTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 98,
                  "endLine": 98,
                  "startColumn": 17,
                  "endColumn": 35
                }
              }
            }
          ],
          "fingerprints": {
            "0": "fa75ef78b5aa81ffa29007291944aacf23d8ce9e7ffb0559d10472bd21b7b826",
            "1": "e6fcc0e0.3de1d238.ff9734f8.aa6e03a2.93284137.d42fc800.df7e59ba.54d46e25.e1d7cd7c.6f391d93.14535f1c.e22980a8.bab812df.cc716412.b98ca29a.36a1eca6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/clients/src/test/java/org/apache/ignite/internal/jdbc2/JdbcAbstractSchemaCaseTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 208,
                            "endLine": 208,
                            "startColumn": 40,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/clients/src/test/java/org/apache/ignite/internal/jdbc2/JdbcAbstractSchemaCaseTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 208,
                            "endLine": 208,
                            "startColumn": 40,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/clients/src/test/java/org/apache/ignite/internal/jdbc2/JdbcAbstractSchemaCaseTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 208,
                            "endLine": 208,
                            "startColumn": 21,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/clients/src/test/java/org/apache/ignite/internal/jdbc2/JdbcAbstractSchemaCaseTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 211,
                            "endLine": 211,
                            "startColumn": 20,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/clients/src/test/java/org/apache/ignite/internal/jdbc2/JdbcAbstractSchemaCaseTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 92,
                            "endLine": 92,
                            "startColumn": 22,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/clients/src/test/java/org/apache/ignite/internal/jdbc2/JdbcAbstractSchemaCaseTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 97,
                            "endLine": 97,
                            "startColumn": 34,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/clients/src/test/java/org/apache/ignite/internal/jdbc2/JdbcAbstractSchemaCaseTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 97,
                            "endLine": 97,
                            "startColumn": 25,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/clients/src/test/java/org/apache/ignite/internal/jdbc2/JdbcAbstractSchemaCaseTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 98,
                            "endLine": 98,
                            "startColumn": 36,
                            "endColumn": 70
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/clients/src/test/java/org/apache/ignite/internal/jdbc2/JdbcAbstractSchemaCaseTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 98,
                            "endLine": 98,
                            "startColumn": 36,
                            "endColumn": 81
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/clients/src/test/java/org/apache/ignite/internal/jdbc2/JdbcAbstractSchemaCaseTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 98,
                            "endLine": 98,
                            "startColumn": 17,
                            "endColumn": 35
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords",
          "ruleIndex": 3,
          "level": "warning",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in create.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[create](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/web-console/backend/app/mongo.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 132,
                  "endLine": 132,
                  "startColumn": 45,
                  "endColumn": 63
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5649d328d982df4a337f2a7e4885705f129be3cd270e4e1f0ede17f4ed4d84ce",
            "1": "8c3ac93e.4773f344.607187b5.bf197c49.79a7d027.fcf3002d.ce4a9d89.d63f6c3e.46b7c801.9fa1ba9a.b7ecf34b.c8688b2b.79a7d027.0ef37289.7b5cf91f.7fb70d54"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/web-console/backend/app/mongo.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 120,
                            "endLine": 120,
                            "startColumn": 55,
                            "endColumn": 61
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords",
          "ruleIndex": 3,
          "level": "warning",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in PASSWORD.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[PASSWORD](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docs/_docs/code-snippets/nodejs/authentication.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 27,
                  "endLine": 27,
                  "startColumn": 15,
                  "endColumn": 23
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f5e29ca88e67247e4f30e7a3e0c08bca04896210641e3ddc94f1a6d4a5e56776",
            "1": "e0fda459.4773f344.fd9a3f7c.d7919eeb.265d709a.93897907.cd61fc56.73f262b1.e0fda459.4773f344.fd9a3f7c.d7919eeb.265d709a.93897907.cd61fc56.73f262b1"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "docs/_docs/code-snippets/nodejs/authentication.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 27,
                            "startColumn": 15,
                            "endColumn": 23
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 501,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords",
          "ruleIndex": 3,
          "level": "warning",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in PASSWORD.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[PASSWORD](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docs/_docs/code-snippets/nodejs/tls.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 27,
                  "endLine": 27,
                  "startColumn": 7,
                  "endColumn": 15
                }
              }
            }
          ],
          "fingerprints": {
            "0": "feb0be58f5136bb564179bd49d47b2f4622d21f31246ebb4553f25506cffdb30",
            "1": "ae77ea27.4773f344.fd9a3f7c.d7919eeb.ef9f7d82.5fce695c.35983a68.89d75565.ae77ea27.4773f344.fd9a3f7c.d7919eeb.ef9f7d82.5fce695c.35983a68.89d75565"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "docs/_docs/code-snippets/nodejs/tls.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 27,
                            "startColumn": 7,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords",
          "ruleIndex": 3,
          "level": "warning",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in resetPasswordToken.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[resetPasswordToken](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/web-console/e2e/testcafe/envtools.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "startColumn": 21,
                  "endColumn": 39
                }
              }
            }
          ],
          "fingerprints": {
            "0": "97caabc781ae39f9407cf2ba261deab0bfc62c98a3a2e74771edba54dd2fa2a8",
            "1": "839b1d0f.e7d69cc8.d92e04ab.bf197c49.79a7d027.f7edcf51.57d6d25f.570a4975.839b1d0f.e7d69cc8.d92e04ab.bf197c49.79a7d027.f7edcf51.57d6d25f.570a4975"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/web-console/e2e/testcafe/envtools.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 21,
                            "endColumn": 39
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 501,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "python/Jinja2AutoEscapeFalse/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "jinja2.Template is called with no autoescape argument (autoescaping is disabled by default). This increases the risk of Cross-Site Scripting (XSS) attacks.",
            "markdown": "{0} is called with no autoescape argument (autoescaping is disabled by default). This increases the risk of Cross-Site Scripting (XSS) attacks.",
            "arguments": [
              "[jinja2.Template](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/ducktests/tests/ignitetest/tests/cellular_affinity_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 109,
                  "endLine": 109,
                  "startColumn": 16,
                  "endColumn": 24
                }
              }
            }
          ],
          "fingerprints": {
            "0": "43b49fc16b16b22c47154a0b5d0fbce636d865c807f54553fec9bee9cd4bc570",
            "1": "8a30cfc6.b681ace8.864df688.139c59a8.cc857d4e.52a1db94.9b87d056.4e479d06.8a30cfc6.b681ace8.864df688.139c59a8.cc857d4e.52a1db94.9b87d056.4e479d06"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/ducktests/tests/ignitetest/tests/cellular_affinity_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 109,
                            "endLine": 109,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 351,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "python/Jinja2AutoEscapeFalse/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "jinja2.Environment is called with no autoescape argument (autoescaping is disabled by default). This increases the risk of Cross-Site Scripting (XSS) attacks.",
            "markdown": "{0} is called with no autoescape argument (autoescaping is disabled by default). This increases the risk of Cross-Site Scripting (XSS) attacks.",
            "arguments": [
              "[jinja2.Environment](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/ducktests/tests/ignitetest/services/utils/config_template.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 37,
                  "endLine": 37,
                  "startColumn": 15,
                  "endColumn": 26
                }
              }
            }
          ],
          "fingerprints": {
            "0": "9152bf10d01982109a3fbf86be8eac79bc4b6091257c7f98e7cbf740566c98d2",
            "1": "1ba848e8.99c0327a.79e62dc9.4c71cda2.8e08d857.98983cf0.081ac3f4.d6fdd897.1ba848e8.99c0327a.79e62dc9.4c71cda2.8e08d857.98983cf0.081ac3f4.d6fdd897"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/ducktests/tests/ignitetest/services/utils/config_template.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 37,
                            "endLine": 37,
                            "startColumn": 15,
                            "endColumn": 26
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "python/InsecureHash/test",
          "ruleIndex": 5,
          "level": "note",
          "message": {
            "text": "hashlib.sha1 is insecure. Consider changing it to a secure hashing algorithm (e.g. SHA256).",
            "markdown": "{0} is insecure. Consider changing it to a secure hashing algorithm (e.g. SHA256).",
            "arguments": [
              "[hashlib.sha1](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/ducktests/tests/ignitetest/tests/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 32,
                  "endLine": 32,
                  "startColumn": 18,
                  "endColumn": 33
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e597f3e9f92bb49ee5bf02a8a83930bce4e5b8e322d17466c252032a09d99373",
            "1": "a6b41d6e.2dd6d7a6.79e62dc9.139c59a8.bab9de6f.ba14daf2.a2237efa.f46ed94e.a6b41d6e.59b34bce.79e62dc9.139c59a8.1d07cee4.ba14daf2.a2237efa.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/ducktests/tests/ignitetest/tests/__init__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 29,
                            "endLine": 29,
                            "startColumn": 17,
                            "endColumn": 29
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 201,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              }
            ]
          }
        },
        {
          "ruleId": "php/HardcodedPassword",
          "ruleIndex": 6,
          "level": "warning",
          "message": {
            "text": "Do not hardcode passwords in code. Found a hardcoded password used in setPassword.",
            "markdown": "Do not hardcode passwords in code. Found {0} used in {1}.",
            "arguments": [
              "[a hardcoded password](0)",
              "[setPassword](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docs/_docs/code-snippets/php/Security.php",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 40,
                  "endLine": 40,
                  "startColumn": 1,
                  "endColumn": 21
                }
              }
            }
          ],
          "fingerprints": {
            "0": "1767591d24a1bbf2ca3583649e747054f4aae88eba8b3440ee7c93bc44911c75",
            "1": "2c80a54c.464a7316.f99c07c2.160df4df.39fe3355.e9e350cf.42ed9a30.be170d97.2c80a54c.464a7316.f99c07c2.160df4df.39fe3355.e9e350cf.42ed9a30.be170d97"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "docs/_docs/code-snippets/php/Security.php",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 40,
                            "endLine": 40,
                            "startColumn": 22,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "docs/_docs/code-snippets/php/Security.php",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 40,
                            "endLine": 40,
                            "startColumn": 1,
                            "endColumn": 21
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 301,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileCodeFlow"
              }
            ]
          }
        },
        {
          "ruleId": "csharp/NoHardcodedCredentials/test",
          "ruleIndex": 7,
          "level": "note",
          "message": {
            "text": "(BETA Suggestion) Do not hardcode credentials in code. Found hardcoded credential used in X509Certificate2.",
            "markdown": "(BETA Suggestion) Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[X509Certificate2](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/platforms/dotnet/Apache.Ignite.Core.Tests/Client/RawSecureSocketTest.cs",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 93,
                  "endLine": 93,
                  "startColumn": 99,
                  "endColumn": 107
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6ec9331d63632107f9d1fe709d389132a0f67a69256826c978de6ae8f101b2b7",
            "1": "9dcbd817.551e9d3b.4d16229b.a090ec1d.35d88dbb.ca6cae3b.99cba6b7.8e772e22.9dcbd817.551e9d3b.4d16229b.a090ec1d.35d88dbb.ca6cae3b.99cba6b7.8e772e22"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite.Core.Tests/Client/RawSecureSocketTest.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 93,
                            "endLine": 93,
                            "startColumn": 99,
                            "endColumn": 107
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite.Core.Tests/Client/RawSecureSocketTest.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 93,
                            "endLine": 93,
                            "startColumn": 24,
                            "endColumn": 40
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 351,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/TooPermissiveTrustManager",
          "ruleIndex": 8,
          "level": "warning",
          "message": {
            "text": "TrustManager might be too permissive: all servers are trusted.",
            "markdown": "TrustManager might be too permissive: {0}.",
            "arguments": [
              "[all servers are trusted](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/IgniteUtils.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 2339,
                  "endLine": 2339,
                  "startColumn": 39,
                  "endColumn": 57
                }
              }
            }
          ],
          "fingerprints": {
            "0": "38ff6dd0f9de82e510909c2db2bb71a065cc4d1ee6b790e25c60b1df4fbd110d",
            "1": "8df8fa68.528e35bc.bf05a696.e22980a8.f0e1baa5.eacd09e2.7011a60a.d9e01f64.8df8fa68.528e35bc.bf05a696.e22980a8.f0e1baa5.eacd09e2.7011a60a.d9e01f64"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/IgniteUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2339,
                            "endLine": 2339,
                            "startColumn": 39,
                            "endColumn": 57
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/TooPermissiveTrustManager",
          "ruleIndex": 8,
          "level": "warning",
          "message": {
            "text": "TrustManager might be too permissive: all servers are trusted.",
            "markdown": "TrustManager might be too permissive: {0}.",
            "arguments": [
              "[all servers are trusted](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/kubernetes/src/main/java/org/apache/ignite/internal/kubernetes/connection/KubernetesServiceAddressResolver.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 70,
                  "endLine": 70,
                  "startColumn": 35,
                  "endColumn": 53
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c409386b383496f347bc5f3e3047b7b94eddaa924cce3743ab8068697cf95926",
            "1": "8df8fa68.528e35bc.bf05a696.e22980a8.f0e1baa5.eacd09e2.7011a60a.d9e01f64.8df8fa68.528e35bc.bf05a696.e22980a8.f0e1baa5.eacd09e2.7011a60a.d9e01f64"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/kubernetes/src/main/java/org/apache/ignite/internal/kubernetes/connection/KubernetesServiceAddressResolver.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 35,
                            "endColumn": 53
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/TooPermissiveTrustManager",
          "ruleIndex": 8,
          "level": "warning",
          "message": {
            "text": "TrustManager might be too permissive: all servers are trusted.",
            "markdown": "TrustManager might be too permissive: {0}.",
            "arguments": [
              "[all servers are trusted](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/kubernetes/src/main/java/org/apache/ignite/spi/discovery/tcp/ipfinder/kubernetes/TcpDiscoveryKubernetesIpFinder.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 95,
                  "endLine": 95,
                  "startColumn": 25,
                  "endColumn": 43
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a41eef0db31d8328dfb62725a0c773e961946615db2b20af22fa0777c1ce0031",
            "1": "8df8fa68.528e35bc.bf05a696.e22980a8.f0e1baa5.eacd09e2.7011a60a.d9e01f64.8df8fa68.528e35bc.bf05a696.e22980a8.f0e1baa5.eacd09e2.7011a60a.d9e01f64"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/kubernetes/src/main/java/org/apache/ignite/spi/discovery/tcp/ipfinder/kubernetes/TcpDiscoveryKubernetesIpFinder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 95,
                            "endLine": 95,
                            "startColumn": 25,
                            "endColumn": 43
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/TooPermissiveTrustManager",
          "ruleIndex": 8,
          "level": "warning",
          "message": {
            "text": "TrustManager might be too permissive: all servers are trusted.",
            "markdown": "TrustManager might be too permissive: {0}.",
            "arguments": [
              "[all servers are trusted](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/main/java/org/apache/ignite/ssl/SslContextFactory.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 447,
                  "endLine": 447,
                  "startColumn": 31,
                  "endColumn": 49
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3e1cc9e7424974066477179910ca0ab522d3f9a421f1aa526efd16f4c02140f4",
            "1": "8df8fa68.dd05ec30.b1ce14cf.de031890.f0e1baa5.ce109560.7011a60a.eca72a61.8df8fa68.dd05ec30.b1ce14cf.de031890.f0e1baa5.ce109560.7011a60a.eca72a61"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/ssl/SslContextFactory.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 447,
                            "endLine": 447,
                            "startColumn": 31,
                            "endColumn": 49
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/TooPermissiveTrustManager",
          "ruleIndex": 8,
          "level": "warning",
          "message": {
            "text": "TrustManager might be too permissive: all servers are trusted.",
            "markdown": "TrustManager might be too permissive: {0}.",
            "arguments": [
              "[all servers are trusted](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/web-console/web-agent/src/main/java/org/apache/ignite/console/agent/AgentLauncher.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 135,
                  "endLine": 135,
                  "startColumn": 39,
                  "endColumn": 57
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f01eb52defa59d6b1b30de9c39932de295a56dbf7dbcc1bf616783d4ea046795",
            "1": "8df8fa68.528e35bc.bf05a696.e22980a8.f0e1baa5.eacd09e2.7011a60a.d9e01f64.8df8fa68.528e35bc.bf05a696.e22980a8.f0e1baa5.eacd09e2.7011a60a.d9e01f64"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/web-console/web-agent/src/main/java/org/apache/ignite/console/agent/AgentLauncher.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 135,
                            "endLine": 135,
                            "startColumn": 39,
                            "endColumn": 57
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/TooPermissiveTrustManager",
          "ruleIndex": 8,
          "level": "warning",
          "message": {
            "text": "TrustManager might be too permissive: all servers are trusted.",
            "markdown": "TrustManager might be too permissive: {0}.",
            "arguments": [
              "[all servers are trusted](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/main/java/org/apache/ignite/internal/jdbc/thin/JdbcThinSSLUtil.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 59,
                  "endLine": 59,
                  "startColumn": 31,
                  "endColumn": 49
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ce38bd1dd03a8d7f9b174c5c1c27c272ef8179dca2f1f268f37b6aa9625674ef",
            "1": "8df8fa68.efa2975f.b1ce14cf.e22980a8.f0e1baa5.eacd09e2.7011a60a.1d874c72.8df8fa68.efa2975f.b1ce14cf.e22980a8.f0e1baa5.eacd09e2.7011a60a.1d874c72"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/jdbc/thin/JdbcThinSSLUtil.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 59,
                            "endLine": 59,
                            "startColumn": 31,
                            "endColumn": 49
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/TooPermissiveTrustManager",
          "ruleIndex": 8,
          "level": "warning",
          "message": {
            "text": "TrustManager might be too permissive: all servers are trusted.",
            "markdown": "TrustManager might be too permissive: {0}.",
            "arguments": [
              "[all servers are trusted](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/main/java/org/apache/ignite/internal/client/thin/ClientSslUtils.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 63,
                  "endLine": 63,
                  "startColumn": 31,
                  "endColumn": 49
                }
              }
            }
          ],
          "fingerprints": {
            "0": "996242b2229e387fd3415e7e0382e975aa16f1b8ed3a8e0b08b128d91488f7d1",
            "1": "8df8fa68.528e35bc.b1ce14cf.e22980a8.f0e1baa5.eacd09e2.7011a60a.1d874c72.8df8fa68.528e35bc.b1ce14cf.e22980a8.f0e1baa5.eacd09e2.7011a60a.1d874c72"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/client/thin/ClientSslUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 63,
                            "endLine": 63,
                            "startColumn": 31,
                            "endColumn": 49
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/TooPermissiveTrustManager",
          "ruleIndex": 8,
          "level": "warning",
          "message": {
            "text": "TrustManager might be too permissive: all servers are trusted.",
            "markdown": "TrustManager might be too permissive: {0}.",
            "arguments": [
              "[all servers are trusted](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/main/java/org/apache/ignite/internal/client/ssl/GridSslBasicContextFactory.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 440,
                  "endLine": 440,
                  "startColumn": 31,
                  "endColumn": 49
                }
              }
            }
          ],
          "fingerprints": {
            "0": "37692d6981e0a222bdf65e1d90e9beb8ab2f637c6b64e35f13c5370fa08aceab",
            "1": "8df8fa68.dd05ec30.b1ce14cf.de031890.f0e1baa5.ce109560.7011a60a.1d874c72.8df8fa68.dd05ec30.b1ce14cf.de031890.f0e1baa5.ce109560.7011a60a.1d874c72"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/client/ssl/GridSslBasicContextFactory.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 440,
                            "endLine": 440,
                            "startColumn": 31,
                            "endColumn": 49
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/TooPermissiveTrustManager",
          "ruleIndex": 8,
          "level": "warning",
          "message": {
            "text": "TrustManager might be too permissive: all servers are trusted.",
            "markdown": "TrustManager might be too permissive: {0}.",
            "arguments": [
              "[all servers are trusted](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/main/java/org/apache/ignite/internal/client/thin/TcpClientChannel.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 348,
                  "endLine": 348,
                  "startColumn": 35,
                  "endColumn": 53
                }
              }
            }
          ],
          "fingerprints": {
            "0": "10ead15f22beb8de035ac2345dc32b54c75263e7371a750cfebdeb70cc5a9044",
            "1": "8df8fa68.528e35bc.b1ce14cf.e22980a8.f0e1baa5.eacd09e2.7011a60a.1d874c72.8df8fa68.528e35bc.b1ce14cf.e22980a8.f0e1baa5.eacd09e2.7011a60a.1d874c72"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/client/thin/TcpClientChannel.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 348,
                            "endLine": 348,
                            "startColumn": 35,
                            "endColumn": 53
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/TooPermissiveTrustManager",
          "ruleIndex": 8,
          "level": "warning",
          "message": {
            "text": "TrustManager might be too permissive: all clients are trusted.",
            "markdown": "TrustManager might be too permissive: {0}.",
            "arguments": [
              "[all clients are trusted](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/IgniteUtils.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 2335,
                  "endLine": 2335,
                  "startColumn": 39,
                  "endColumn": 57
                }
              }
            }
          ],
          "fingerprints": {
            "0": "638f434c0a93c6012217e6d29cc52f6749f4f739e0f4ce13db66ca7f73621aed",
            "1": "8df8fa68.528e35bc.bf05a696.e22980a8.f0e1baa5.eacd09e2.7011a60a.d9e01f64.8df8fa68.528e35bc.bf05a696.e22980a8.f0e1baa5.eacd09e2.7011a60a.d9e01f64"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/IgniteUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2335,
                            "endLine": 2335,
                            "startColumn": 39,
                            "endColumn": 57
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/TooPermissiveTrustManager",
          "ruleIndex": 8,
          "level": "warning",
          "message": {
            "text": "TrustManager might be too permissive: all clients are trusted.",
            "markdown": "TrustManager might be too permissive: {0}.",
            "arguments": [
              "[all clients are trusted](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/kubernetes/src/main/java/org/apache/ignite/internal/kubernetes/connection/KubernetesServiceAddressResolver.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 72,
                  "endLine": 72,
                  "startColumn": 35,
                  "endColumn": 53
                }
              }
            }
          ],
          "fingerprints": {
            "0": "66862a59367bdc67a57424c5af1a59d4b770929c6e270a9a3cbaa5cd34df702a",
            "1": "8df8fa68.528e35bc.bf05a696.e22980a8.f0e1baa5.eacd09e2.7011a60a.d9e01f64.8df8fa68.528e35bc.bf05a696.e22980a8.f0e1baa5.eacd09e2.7011a60a.d9e01f64"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/kubernetes/src/main/java/org/apache/ignite/internal/kubernetes/connection/KubernetesServiceAddressResolver.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 72,
                            "endLine": 72,
                            "startColumn": 35,
                            "endColumn": 53
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/TooPermissiveTrustManager",
          "ruleIndex": 8,
          "level": "warning",
          "message": {
            "text": "TrustManager might be too permissive: all clients are trusted.",
            "markdown": "TrustManager might be too permissive: {0}.",
            "arguments": [
              "[all clients are trusted](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/kubernetes/src/main/java/org/apache/ignite/spi/discovery/tcp/ipfinder/kubernetes/TcpDiscoveryKubernetesIpFinder.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 96,
                  "endLine": 96,
                  "startColumn": 25,
                  "endColumn": 43
                }
              }
            }
          ],
          "fingerprints": {
            "0": "2516c1c39f54b899660c5b77d6f7088094f590c592e6789d0c7a039882985956",
            "1": "8df8fa68.528e35bc.bf05a696.e22980a8.f0e1baa5.eacd09e2.7011a60a.d9e01f64.8df8fa68.528e35bc.bf05a696.e22980a8.f0e1baa5.eacd09e2.7011a60a.d9e01f64"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/kubernetes/src/main/java/org/apache/ignite/spi/discovery/tcp/ipfinder/kubernetes/TcpDiscoveryKubernetesIpFinder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 96,
                            "endLine": 96,
                            "startColumn": 25,
                            "endColumn": 43
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/TooPermissiveTrustManager",
          "ruleIndex": 8,
          "level": "warning",
          "message": {
            "text": "TrustManager might be too permissive: all clients are trusted.",
            "markdown": "TrustManager might be too permissive: {0}.",
            "arguments": [
              "[all clients are trusted](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/main/java/org/apache/ignite/ssl/SslContextFactory.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 441,
                  "endLine": 441,
                  "startColumn": 31,
                  "endColumn": 49
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b78b4661e5bdb0d1f1d6e9b733f8f9b1d4f06487b0fa0172c288e00425dab5cc",
            "1": "8df8fa68.dd05ec30.b1ce14cf.de031890.f0e1baa5.ce109560.7011a60a.eca72a61.8df8fa68.dd05ec30.b1ce14cf.de031890.f0e1baa5.ce109560.7011a60a.eca72a61"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/ssl/SslContextFactory.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 441,
                            "endLine": 441,
                            "startColumn": 31,
                            "endColumn": 49
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/TooPermissiveTrustManager",
          "ruleIndex": 8,
          "level": "warning",
          "message": {
            "text": "TrustManager might be too permissive: all clients are trusted.",
            "markdown": "TrustManager might be too permissive: {0}.",
            "arguments": [
              "[all clients are trusted](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/web-console/web-agent/src/main/java/org/apache/ignite/console/agent/AgentLauncher.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 131,
                  "endLine": 131,
                  "startColumn": 39,
                  "endColumn": 57
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d2f1565080a3f84b91dc292d776dfd1f42515973bc5421a9962a3099973e9410",
            "1": "8df8fa68.528e35bc.bf05a696.e22980a8.f0e1baa5.eacd09e2.7011a60a.d9e01f64.8df8fa68.528e35bc.bf05a696.e22980a8.f0e1baa5.eacd09e2.7011a60a.d9e01f64"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/web-console/web-agent/src/main/java/org/apache/ignite/console/agent/AgentLauncher.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 131,
                            "endLine": 131,
                            "startColumn": 39,
                            "endColumn": 57
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/TooPermissiveTrustManager",
          "ruleIndex": 8,
          "level": "warning",
          "message": {
            "text": "TrustManager might be too permissive: all clients are trusted.",
            "markdown": "TrustManager might be too permissive: {0}.",
            "arguments": [
              "[all clients are trusted](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/main/java/org/apache/ignite/internal/jdbc/thin/JdbcThinSSLUtil.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 62,
                  "endLine": 62,
                  "startColumn": 31,
                  "endColumn": 49
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e71bf5b89331c9b97370e1919642b8c594c089f9819539cf74e49748241a5225",
            "1": "8df8fa68.efa2975f.b1ce14cf.e22980a8.f0e1baa5.eacd09e2.7011a60a.1d874c72.8df8fa68.efa2975f.b1ce14cf.e22980a8.f0e1baa5.eacd09e2.7011a60a.1d874c72"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/jdbc/thin/JdbcThinSSLUtil.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 62,
                            "endLine": 62,
                            "startColumn": 31,
                            "endColumn": 49
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/TooPermissiveTrustManager",
          "ruleIndex": 8,
          "level": "warning",
          "message": {
            "text": "TrustManager might be too permissive: all clients are trusted.",
            "markdown": "TrustManager might be too permissive: {0}.",
            "arguments": [
              "[all clients are trusted](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/main/java/org/apache/ignite/internal/client/thin/ClientSslUtils.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 68,
                  "endLine": 68,
                  "startColumn": 31,
                  "endColumn": 49
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8183d6a63799ffb38cbb3135ec29aa061ef73e4b3a1196b491413b8dcf04890a",
            "1": "8df8fa68.528e35bc.b1ce14cf.e22980a8.f0e1baa5.eacd09e2.7011a60a.1d874c72.8df8fa68.528e35bc.b1ce14cf.e22980a8.f0e1baa5.eacd09e2.7011a60a.1d874c72"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/client/thin/ClientSslUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 68,
                            "endLine": 68,
                            "startColumn": 31,
                            "endColumn": 49
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/TooPermissiveTrustManager",
          "ruleIndex": 8,
          "level": "warning",
          "message": {
            "text": "TrustManager might be too permissive: all clients are trusted.",
            "markdown": "TrustManager might be too permissive: {0}.",
            "arguments": [
              "[all clients are trusted](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/main/java/org/apache/ignite/internal/client/ssl/GridSslBasicContextFactory.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 434,
                  "endLine": 434,
                  "startColumn": 31,
                  "endColumn": 49
                }
              }
            }
          ],
          "fingerprints": {
            "0": "36e7eedbc1b688821eb9e86a7f2e11010d101b36d82075027c6907a7d4c93e38",
            "1": "8df8fa68.dd05ec30.b1ce14cf.de031890.f0e1baa5.ce109560.7011a60a.1d874c72.8df8fa68.dd05ec30.b1ce14cf.de031890.f0e1baa5.ce109560.7011a60a.1d874c72"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/client/ssl/GridSslBasicContextFactory.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 434,
                            "endLine": 434,
                            "startColumn": 31,
                            "endColumn": 49
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/TooPermissiveTrustManager",
          "ruleIndex": 8,
          "level": "warning",
          "message": {
            "text": "TrustManager might be too permissive: all clients are trusted.",
            "markdown": "TrustManager might be too permissive: {0}.",
            "arguments": [
              "[all clients are trusted](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/main/java/org/apache/ignite/internal/client/thin/TcpClientChannel.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 351,
                  "endLine": 351,
                  "startColumn": 35,
                  "endColumn": 53
                }
              }
            }
          ],
          "fingerprints": {
            "0": "cca0354d2f4967473252e97a270bb38ab80a3f817572aded3543790127c0ab13",
            "1": "8df8fa68.528e35bc.b1ce14cf.e22980a8.f0e1baa5.eacd09e2.7011a60a.1d874c72.8df8fa68.528e35bc.b1ce14cf.e22980a8.f0e1baa5.eacd09e2.7011a60a.1d874c72"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/client/thin/TcpClientChannel.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 351,
                            "endLine": 351,
                            "startColumn": 35,
                            "endColumn": 53
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/TooPermissiveTrustManager",
          "ruleIndex": 8,
          "level": "warning",
          "message": {
            "text": "TrustManager might be too permissive: all Certificate Authorities are trusted.",
            "markdown": "TrustManager might be too permissive: {0}.",
            "arguments": [
              "[all Certificate Authorities are trusted](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/IgniteUtils.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 2331,
                  "endLine": 2331,
                  "startColumn": 62,
                  "endColumn": 80
                }
              }
            }
          ],
          "fingerprints": {
            "0": "12b79f5b69dce8a49b2e96d00385a739227354e3bfe5151a55119e0581273e94",
            "1": "8df8fa68.528e35bc.bf05a696.e22980a8.f0e1baa5.eacd09e2.f1ccdb3e.d9e01f64.8df8fa68.528e35bc.bf05a696.e22980a8.f0e1baa5.eacd09e2.f1ccdb3e.d9e01f64"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/IgniteUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2332,
                            "endLine": 2332,
                            "startColumn": 28,
                            "endColumn": 32
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/TooPermissiveTrustManager",
          "ruleIndex": 8,
          "level": "warning",
          "message": {
            "text": "TrustManager might be too permissive: all Certificate Authorities are trusted.",
            "markdown": "TrustManager might be too permissive: {0}.",
            "arguments": [
              "[all Certificate Authorities are trusted](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/kubernetes/src/main/java/org/apache/ignite/internal/kubernetes/connection/KubernetesServiceAddressResolver.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 74,
                  "startColumn": 48,
                  "endColumn": 66
                }
              }
            }
          ],
          "fingerprints": {
            "0": "9d335ba260884fb028d423ef16d9c7cfd1f4d7a779b240a7d9dd168e2f0a863b",
            "1": "8df8fa68.528e35bc.bf05a696.e22980a8.f0e1baa5.eacd09e2.f1ccdb3e.d9e01f64.8df8fa68.528e35bc.bf05a696.e22980a8.f0e1baa5.eacd09e2.f1ccdb3e.d9e01f64"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/kubernetes/src/main/java/org/apache/ignite/internal/kubernetes/connection/KubernetesServiceAddressResolver.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 75,
                            "endLine": 75,
                            "startColumn": 24,
                            "endColumn": 28
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/TooPermissiveTrustManager",
          "ruleIndex": 8,
          "level": "warning",
          "message": {
            "text": "TrustManager might be too permissive: all Certificate Authorities are trusted.",
            "markdown": "TrustManager might be too permissive: {0}.",
            "arguments": [
              "[all Certificate Authorities are trusted](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/urideploy/src/main/java/org/apache/ignite/spi/deployment/uri/scanners/http/UriDeploymentHttpScanner.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 160,
                  "endLine": 160,
                  "startColumn": 62,
                  "endColumn": 80
                }
              }
            }
          ],
          "fingerprints": {
            "0": "828dc5cf1c1db40559de957a49e1cac08608cf17c1180fd97956bb137b74c985",
            "1": "8df8fa68.528e35bc.bf05a696.e22980a8.f0e1baa5.eacd09e2.f1ccdb3e.d9e01f64.8df8fa68.528e35bc.bf05a696.e22980a8.f0e1baa5.eacd09e2.f1ccdb3e.d9e01f64"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/urideploy/src/main/java/org/apache/ignite/spi/deployment/uri/scanners/http/UriDeploymentHttpScanner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 160,
                            "endLine": 160,
                            "startColumn": 92,
                            "endColumn": 96
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/TooPermissiveTrustManager",
          "ruleIndex": 8,
          "level": "warning",
          "message": {
            "text": "TrustManager might be too permissive: all Certificate Authorities are trusted.",
            "markdown": "TrustManager might be too permissive: {0}.",
            "arguments": [
              "[all Certificate Authorities are trusted](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/kubernetes/src/main/java/org/apache/ignite/spi/discovery/tcp/ipfinder/kubernetes/TcpDiscoveryKubernetesIpFinder.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 97,
                  "endLine": 97,
                  "startColumn": 38,
                  "endColumn": 56
                }
              }
            }
          ],
          "fingerprints": {
            "0": "971b1468930aa2d6166f6cfb6fa509c82fbc9afe83ba556ac80098cc42b27746",
            "1": "8df8fa68.528e35bc.bf05a696.e22980a8.f0e1baa5.eacd09e2.f1ccdb3e.d9e01f64.8df8fa68.528e35bc.bf05a696.e22980a8.f0e1baa5.eacd09e2.f1ccdb3e.d9e01f64"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/kubernetes/src/main/java/org/apache/ignite/spi/discovery/tcp/ipfinder/kubernetes/TcpDiscoveryKubernetesIpFinder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 97,
                            "endLine": 97,
                            "startColumn": 68,
                            "endColumn": 72
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/TooPermissiveTrustManager",
          "ruleIndex": 8,
          "level": "warning",
          "message": {
            "text": "TrustManager might be too permissive: all Certificate Authorities are trusted.",
            "markdown": "TrustManager might be too permissive: {0}.",
            "arguments": [
              "[all Certificate Authorities are trusted](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/main/java/org/apache/ignite/internal/jdbc/thin/JdbcThinSSLUtil.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 55,
                  "endLine": 55,
                  "startColumn": 44,
                  "endColumn": 62
                }
              }
            }
          ],
          "fingerprints": {
            "0": "fe91eec64931c7479525d6074cc4f896c029b04421fe7db8b7afe7056d0ab9da",
            "1": "8df8fa68.efa2975f.b1ce14cf.e22980a8.f0e1baa5.eacd09e2.5b1ccecb.1d874c72.8df8fa68.efa2975f.b1ce14cf.e22980a8.f0e1baa5.eacd09e2.5b1ccecb.1d874c72"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/jdbc/thin/JdbcThinSSLUtil.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 56,
                            "endLine": 56,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/TooPermissiveTrustManager",
          "ruleIndex": 8,
          "level": "warning",
          "message": {
            "text": "TrustManager might be too permissive: all Certificate Authorities are trusted.",
            "markdown": "TrustManager might be too permissive: {0}.",
            "arguments": [
              "[all Certificate Authorities are trusted](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/main/java/org/apache/ignite/internal/client/thin/ClientSslUtils.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 58,
                  "endLine": 58,
                  "startColumn": 44,
                  "endColumn": 62
                }
              }
            }
          ],
          "fingerprints": {
            "0": "4b528a89b9741da88f7b275c7b55146d72fe5f61d812f2d729200ae4db075c85",
            "1": "8df8fa68.528e35bc.b1ce14cf.e22980a8.f0e1baa5.eacd09e2.5b1ccecb.1d874c72.8df8fa68.528e35bc.b1ce14cf.e22980a8.f0e1baa5.eacd09e2.5b1ccecb.1d874c72"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/client/thin/ClientSslUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 59,
                            "endLine": 59,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/TooPermissiveTrustManager",
          "ruleIndex": 8,
          "level": "warning",
          "message": {
            "text": "TrustManager might be too permissive: all Certificate Authorities are trusted.",
            "markdown": "TrustManager might be too permissive: {0}.",
            "arguments": [
              "[all Certificate Authorities are trusted](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/main/java/org/apache/ignite/internal/client/thin/TcpClientChannel.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 344,
                  "endLine": 344,
                  "startColumn": 48,
                  "endColumn": 66
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c7af98817b3b3357cbe87b54250ad9071ec07c52fc9b7c53421991280a526d2f",
            "1": "8df8fa68.528e35bc.b1ce14cf.e22980a8.f0e1baa5.eacd09e2.5b1ccecb.1d874c72.8df8fa68.528e35bc.b1ce14cf.e22980a8.f0e1baa5.eacd09e2.5b1ccecb.1d874c72"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/client/thin/TcpClientChannel.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 345,
                            "endLine": 345,
                            "startColumn": 24,
                            "endColumn": 28
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedCredentials",
          "ruleIndex": 9,
          "level": "warning",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in create.",
            "markdown": "Do not hardcode credentials in code. Found hardcoded credential used in {0}.",
            "arguments": [
              "[create](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/web-console/backend/app/mongo.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 124,
                  "endLine": 124,
                  "startColumn": 45,
                  "endColumn": 50
                }
              }
            }
          ],
          "fingerprints": {
            "0": "92ca7d5374e8300da7782f9f15953986c3f517409882590d1ddf4b0fdc8113ab",
            "1": "d557d5dd.4773f344.607187b5.e052b9a9.79a7d027.fcf3002d.6c0e7048.382555c6.46b7c801.9fa1ba9a.b7ecf34b.c8688b2b.79a7d027.0ef37289.7b5cf91f.7fb70d54"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/web-console/backend/app/mongo.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 120,
                            "endLine": 120,
                            "startColumn": 55,
                            "endColumn": 61
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Writing to an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Writing to](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/test/java/org/apache/ignite/internal/util/nio/GridNioSelfTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 187,
                  "endLine": 187,
                  "startColumn": 13,
                  "endColumn": 30
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7dfe63b132037071b2fae0827c667e656857651fc3fc325a0f44e670bfdd9f76",
            "1": "ac4e7c8b.49766a9f.bb993ef0.e22980a8.e27b77c0.48eeb24b.ec290f27.54d46e25.19689298.49766a9f.bb993ef0.e22980a8.e27b77c0.85d83993.ec290f27.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/internal/util/nio/GridNioSelfTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 187,
                            "endLine": 187,
                            "startColumn": 13,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/internal/util/nio/GridNioSelfTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 187,
                            "endLine": 187,
                            "startColumn": 13,
                            "endColumn": 30
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Writing to an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Writing to](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/test/java/org/apache/ignite/internal/util/nio/GridNioSelfTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 296,
                  "endLine": 296,
                  "startColumn": 48,
                  "endColumn": 65
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0ff3b75c8a22aafb2a1bd5b5f4410ddb58b0118c3b0c19d93517d377b84ee53d",
            "1": "f9545bfc.28b4013f.bb993ef0.e1c7b7e6.e27b77c0.48eeb24b.36de4586.54d46e25.f9545bfc.28b4013f.bb993ef0.e22980a8.e27b77c0.85d83993.36de4586.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/internal/util/nio/GridNioSelfTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 296,
                            "endLine": 296,
                            "startColumn": 48,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/internal/util/nio/GridNioSelfTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 296,
                            "endLine": 296,
                            "startColumn": 48,
                            "endColumn": 65
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Writing to an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Writing to](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/test/java/org/apache/ignite/internal/util/nio/GridNioSelfTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 377,
                  "endLine": 377,
                  "startColumn": 13,
                  "endColumn": 30
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f433d38aefed6663a3efe0200de3349f4f209d77892a6d175c913e5345744388",
            "1": "3cbfac07.49766a9f.8f415be7.e22980a8.c41fd899.48eeb24b.ec290f27.54d46e25.19689298.49766a9f.8f415be7.e22980a8.c41fd899.85d83993.ec290f27.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/internal/util/nio/GridNioSelfTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 377,
                            "endLine": 377,
                            "startColumn": 13,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/internal/util/nio/GridNioSelfTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 377,
                            "endLine": 377,
                            "startColumn": 13,
                            "endColumn": 30
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Writing to an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Writing to](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/test/java/org/apache/ignite/internal/util/nio/GridNioSelfTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 446,
                  "endLine": 446,
                  "startColumn": 13,
                  "endColumn": 30
                }
              }
            }
          ],
          "fingerprints": {
            "0": "385c8d7a4afce6b33807c2908c5c2987db932189d4394163afe31a678081b810",
            "1": "3cbfac07.49766a9f.8f415be7.e22980a8.e27b77c0.48eeb24b.ec290f27.54d46e25.19689298.49766a9f.8f415be7.e22980a8.e27b77c0.85d83993.ec290f27.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/internal/util/nio/GridNioSelfTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 446,
                            "endLine": 446,
                            "startColumn": 13,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/internal/util/nio/GridNioSelfTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 446,
                            "endLine": 446,
                            "startColumn": 13,
                            "endColumn": 30
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Writing to an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Writing to](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/test/java/org/apache/ignite/internal/util/nio/GridNioSelfTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 479,
                  "endLine": 479,
                  "startColumn": 17,
                  "endColumn": 34
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d5c46d6ce77c2cef54b3d610721025e46829cfd2df85afacebada1787167388b",
            "1": "ac4e7c8b.49766a9f.bb993ef0.e22980a8.e27b77c0.48eeb24b.ec290f27.54d46e25.19689298.49766a9f.bb993ef0.e22980a8.e27b77c0.85d83993.ec290f27.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/internal/util/nio/GridNioSelfTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 479,
                            "endLine": 479,
                            "startColumn": 17,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/internal/util/nio/GridNioSelfTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 479,
                            "endLine": 479,
                            "startColumn": 17,
                            "endColumn": 34
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Writing to an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Writing to](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/test/java/org/apache/ignite/client/ConnectionTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 105,
                  "endLine": 105,
                  "startColumn": 35,
                  "endColumn": 63
                }
              }
            }
          ],
          "fingerprints": {
            "0": "fcf0c32a531e2bda5219e9c4aa85b684517fdf3aa597b6c6881cb08e9648359f",
            "1": "19689298.0e2c706d.bb993ef0.6c52ae28.390f960b.85d83993.ec290f27.fdedd133.19689298.0e2c706d.bb993ef0.51f01288.390f960b.85d83993.daeeb2e4.fdedd133"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/client/ConnectionTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 105,
                            "endLine": 105,
                            "startColumn": 35,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/client/ConnectionTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 105,
                            "endLine": 105,
                            "startColumn": 35,
                            "endColumn": 63
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Writing to an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Writing to](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/test/java/org/apache/ignite/client/ConnectionTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 120,
                  "endLine": 120,
                  "startColumn": 35,
                  "endColumn": 63
                }
              }
            }
          ],
          "fingerprints": {
            "0": "428d655d147e9cfd892e69b3cf643874bdf97ccae93aec28e7b3bddbb29055d1",
            "1": "19689298.0e2c706d.bb993ef0.6c52ae28.390f960b.85d83993.ec290f27.fdedd133.19689298.0e2c706d.bb993ef0.51f01288.390f960b.85d83993.daeeb2e4.fdedd133"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/client/ConnectionTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 120,
                            "endLine": 120,
                            "startColumn": 35,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/client/ConnectionTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 120,
                            "endLine": 120,
                            "startColumn": 35,
                            "endColumn": 63
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Writing to an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Writing to](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/test/java/org/apache/ignite/client/ConnectionTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 136,
                  "endLine": 136,
                  "startColumn": 35,
                  "endColumn": 63
                }
              }
            }
          ],
          "fingerprints": {
            "0": "197a9b99544b945a32bbe37679a260f9b9f94fc386a769d36977c1c8e5c4170b",
            "1": "19689298.0e2c706d.bb993ef0.6c52ae28.390f960b.85d83993.ec290f27.fdedd133.19689298.0e2c706d.bb993ef0.51f01288.390f960b.85d83993.daeeb2e4.fdedd133"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/client/ConnectionTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 136,
                            "endLine": 136,
                            "startColumn": 35,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/client/ConnectionTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 136,
                            "endLine": 136,
                            "startColumn": 35,
                            "endColumn": 63
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Writing to an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Writing to](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/test/java/org/apache/ignite/loadtests/nio/GridNioBenchmarkClient.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 125,
                  "endLine": 125,
                  "startColumn": 36,
                  "endColumn": 53
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3d3700df4e42e806feb55dda934aab698ae4e2a634a9f5d7b1ad24a50cfaa3dd",
            "1": "f9545bfc.49766a9f.bb993ef0.e1c7b7e6.e27b77c0.1ca6e5b4.36de4586.54d46e25.f9545bfc.49766a9f.bb993ef0.6c52ae28.e27b77c0.85d83993.36de4586.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/loadtests/nio/GridNioBenchmarkClient.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 125,
                            "endLine": 125,
                            "startColumn": 36,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/loadtests/nio/GridNioBenchmarkClient.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 125,
                            "endLine": 125,
                            "startColumn": 36,
                            "endColumn": 53
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Writing to an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Writing to](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/test/java/org/apache/ignite/internal/client/thin/TimeoutTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 88,
                  "endLine": 88,
                  "startColumn": 31,
                  "endColumn": 48
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ace63f9e8a61460bb3ecb457eca0150d538fb8b9718c00d0a71d453befe05358",
            "1": "19689298.49766a9f.bb993ef0.8bdc56f8.e27b77c0.cfb72e04.ec290f27.54d46e25.19689298.49766a9f.bb993ef0.6c52ae28.e27b77c0.85d83993.ec290f27.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/internal/client/thin/TimeoutTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 31,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/internal/client/thin/TimeoutTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 31,
                            "endColumn": 48
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Writing to an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Writing to](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/test/java/org/apache/ignite/internal/util/nio/GridRoundTripTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 88,
                  "endLine": 88,
                  "startColumn": 19,
                  "endColumn": 39
                }
              }
            }
          ],
          "fingerprints": {
            "0": "9f9a757f78d805f64691946d070b763973774f9339d77a93dae983f129187ad0",
            "1": "f9545bfc.28b4013f.bb993ef0.e22980a8.56683ff4.7fda7c5e.36de4586.54d46e25.f9545bfc.28b4013f.bb993ef0.e22980a8.56683ff4.85d83993.36de4586.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/internal/util/nio/GridRoundTripTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 19,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/internal/util/nio/GridRoundTripTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 19,
                            "endColumn": 39
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Writing to an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Writing to](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/clients/src/test/java/org/apache/ignite/internal/processors/rest/TcpRestUnmarshalVulnerabilityTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 192,
                  "endLine": 192,
                  "startColumn": 56,
                  "endColumn": 76
                }
              }
            }
          ],
          "fingerprints": {
            "0": "dc1bf119a0004c1c3e7f60003a6aad044bafde698d37494932efd094c5f3ef4f",
            "1": "19689298.83dbfe52.bb993ef0.6c52ae28.56683ff4.85d83993.b8a46f6f.0f01a149.3d15ba81.83dbfe52.bb993ef0.6c52ae28.50314e63.85d83993.b8a46f6f.0f01a149"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/clients/src/test/java/org/apache/ignite/internal/processors/rest/TcpRestUnmarshalVulnerabilityTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 192,
                            "endLine": 192,
                            "startColumn": 56,
                            "endColumn": 76
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/clients/src/test/java/org/apache/ignite/internal/processors/rest/TcpRestUnmarshalVulnerabilityTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 192,
                            "endLine": 192,
                            "startColumn": 56,
                            "endColumn": 76
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Writing to an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Writing to](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/clients/src/test/java/org/apache/ignite/internal/processors/rest/TestMemcacheClient.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 292,
                  "endLine": 292,
                  "startColumn": 13,
                  "endColumn": 33
                }
              }
            }
          ],
          "fingerprints": {
            "0": "da2fae05cb03276572e15ab6ba42f3791ca1e99802894b73948edee4133636c2",
            "1": "391b1afb.49766a9f.33fa5dbe.de031890.390f960b.85d83993.59c32511.54d46e25.391b1afb.49766a9f.33fa5dbe.de031890.390f960b.85d83993.9589bd2d.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/clients/src/test/java/org/apache/ignite/internal/processors/rest/TestMemcacheClient.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 292,
                            "endLine": 292,
                            "startColumn": 13,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/clients/src/test/java/org/apache/ignite/internal/processors/rest/TestMemcacheClient.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 292,
                            "endLine": 292,
                            "startColumn": 13,
                            "endColumn": 33
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Writing to an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Writing to](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/clients/src/test/java/org/apache/ignite/internal/processors/rest/TestMemcacheClient.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 350,
                  "endLine": 350,
                  "startColumn": 13,
                  "endColumn": 33
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0bf89ee545a07a41b6783bd89a10961a0f37eb06fc003f9200c569beaee16fb4",
            "1": "391b1afb.49766a9f.33fa5dbe.de031890.390f960b.85d83993.ec290f27.54d46e25.391b1afb.49766a9f.33fa5dbe.de031890.390f960b.85d83993.9589bd2d.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/clients/src/test/java/org/apache/ignite/internal/processors/rest/TestMemcacheClient.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 350,
                            "endLine": 350,
                            "startColumn": 13,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/clients/src/test/java/org/apache/ignite/internal/processors/rest/TestMemcacheClient.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 350,
                            "endLine": 350,
                            "startColumn": 13,
                            "endColumn": 33
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Writing to an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Writing to](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/clients/src/test/java/org/apache/ignite/internal/processors/rest/TestBinaryClient.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 117,
                  "endLine": 117,
                  "startColumn": 13,
                  "endColumn": 33
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b64a87a498f609da141c3ae8f382889a0d8bc16694de8f52679eb32057111da6",
            "1": "ac4e7c8b.49766a9f.bb993ef0.e22980a8.390f960b.7fda7c5e.ec290f27.54d46e25.ac4e7c8b.49766a9f.bb993ef0.e22980a8.390f960b.7fda7c5e.9589bd2d.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/clients/src/test/java/org/apache/ignite/internal/processors/rest/TestBinaryClient.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 117,
                            "endLine": 117,
                            "startColumn": 13,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/clients/src/test/java/org/apache/ignite/internal/processors/rest/TestBinaryClient.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 117,
                            "endLine": 117,
                            "startColumn": 13,
                            "endColumn": 33
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Writing to an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Writing to](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/clients/src/test/java/org/apache/ignite/internal/processors/rest/TestBinaryClient.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 118,
                  "endLine": 118,
                  "startColumn": 13,
                  "endColumn": 33
                }
              }
            }
          ],
          "fingerprints": {
            "0": "74c891e20c46d9af677ae100054a15196604eb14545eaac7f859ec9eea5361f4",
            "1": "ac4e7c8b.49766a9f.5c8b6ef6.e22980a8.390f960b.b70f177b.ec290f27.54d46e25.ac4e7c8b.49766a9f.33fa5dbe.e22980a8.390f960b.7fda7c5e.9589bd2d.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/clients/src/test/java/org/apache/ignite/internal/processors/rest/TestBinaryClient.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 118,
                            "endLine": 118,
                            "startColumn": 13,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/clients/src/test/java/org/apache/ignite/internal/processors/rest/TestBinaryClient.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 118,
                            "endLine": 118,
                            "startColumn": 13,
                            "endColumn": 33
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Writing to an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Writing to](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/clients/src/test/java/org/apache/ignite/internal/processors/rest/TestBinaryClient.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 257,
                  "endLine": 257,
                  "startColumn": 13,
                  "endColumn": 33
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ecec09f9073254f7fa35625a32d8f167ca55f35ea1fbcbc8c3a4f1fa90411c79",
            "1": "391b1afb.49766a9f.5c8b6ef6.de031890.390f960b.85d83993.ec290f27.54d46e25.391b1afb.49766a9f.33fa5dbe.de031890.390f960b.85d83993.9589bd2d.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/clients/src/test/java/org/apache/ignite/internal/processors/rest/TestBinaryClient.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 257,
                            "endLine": 257,
                            "startColumn": 13,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/clients/src/test/java/org/apache/ignite/internal/processors/rest/TestBinaryClient.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 257,
                            "endLine": 257,
                            "startColumn": 13,
                            "endColumn": 33
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Writing to an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Writing to](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/test/java/org/apache/ignite/jvmtest/NetworkFailureTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 109,
                  "endLine": 109,
                  "startColumn": 29,
                  "endColumn": 49
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c8562ef8f93adb8e5cd9b929474050c58d93213292bd7d407a1f032c3a053bc0",
            "1": "ac4e7c8b.49766a9f.21d46b69.0849334a.390f960b.ba2b7f9a.ec290f27.54d46e25.3d15ba81.49766a9f.33fa5dbe.0849334a.390f960b.7fda7c5e.ec290f27.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/jvmtest/NetworkFailureTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 109,
                            "endLine": 109,
                            "startColumn": 29,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/jvmtest/NetworkFailureTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 109,
                            "endLine": 109,
                            "startColumn": 29,
                            "endColumn": 49
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Writing to an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Writing to](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/test/java/org/apache/ignite/jvmtest/NetworkFailureTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 111,
                  "endLine": 111,
                  "startColumn": 29,
                  "endColumn": 49
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7c774daf10c560696b004af1c1730684f13fcb4b444a43a8074606b9a40ff8b9",
            "1": "ac4e7c8b.c6f63401.fc7d5400.e22980a8.56683ff4.ba2b7f9a.b8a46f6f.54d46e25.3d15ba81.c6f63401.33fa5dbe.e22980a8.39104d1e.7fda7c5e.b8a46f6f.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/jvmtest/NetworkFailureTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 111,
                            "endLine": 111,
                            "startColumn": 29,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/jvmtest/NetworkFailureTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 111,
                            "endLine": 111,
                            "startColumn": 29,
                            "endColumn": 49
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Writing to an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Writing to](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/test/java/org/apache/ignite/jvmtest/NetworkFailureTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 272,
                  "endLine": 272,
                  "startColumn": 25,
                  "endColumn": 45
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8231743d081d31de537c7323b8372747ae212a3759ebce9f2d4991f0b4a7a3b4",
            "1": "3cbfac07.49766a9f.8f415be7.0849334a.390f960b.10c2e262.ec290f27.54d46e25.3d15ba81.49766a9f.8f415be7.0849334a.390f960b.7fda7c5e.ec290f27.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/jvmtest/NetworkFailureTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 272,
                            "endLine": 272,
                            "startColumn": 25,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/jvmtest/NetworkFailureTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 272,
                            "endLine": 272,
                            "startColumn": 25,
                            "endColumn": 45
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Writing to an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Writing to](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/test/java/org/apache/ignite/spi/discovery/tcp/DiscoveryUnmarshalVulnerabilityTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 164,
                  "endLine": 164,
                  "startColumn": 57,
                  "endColumn": 77
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5ee8f389033d6b3e515f0dbf1b79705d03399b862b9aea0bbea3820143ad0914",
            "1": "19689298.83dbfe52.5c8b6ef6.6c52ae28.56683ff4.85d83993.577874a8.0f01a149.3d15ba81.83dbfe52.5c8b6ef6.6c52ae28.39104d1e.85d83993.577874a8.0f01a149"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/spi/discovery/tcp/DiscoveryUnmarshalVulnerabilityTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 164,
                            "endLine": 164,
                            "startColumn": 57,
                            "endColumn": 77
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/spi/discovery/tcp/DiscoveryUnmarshalVulnerabilityTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 164,
                            "endLine": 164,
                            "startColumn": 57,
                            "endColumn": 77
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 351,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Writing to an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Writing to](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/test/java/org/apache/ignite/stream/socket/SocketStreamerUnmarshalVulnerabilityTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 176,
                  "endLine": 176,
                  "startColumn": 65,
                  "endColumn": 85
                }
              }
            }
          ],
          "fingerprints": {
            "0": "832db4b399f8cf2a68aac73458cd42cb222683b8f6b8dd90ff1d0f4236eb88e4",
            "1": "19689298.83dbfe52.5c8b6ef6.6c52ae28.56683ff4.85d83993.b8a46f6f.0f01a149.19689298.83dbfe52.5c8b6ef6.6c52ae28.50314e63.85d83993.39270c99.0f01a149"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/stream/socket/SocketStreamerUnmarshalVulnerabilityTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 176,
                            "endLine": 176,
                            "startColumn": 65,
                            "endColumn": 85
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/stream/socket/SocketStreamerUnmarshalVulnerabilityTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 176,
                            "endLine": 176,
                            "startColumn": 65,
                            "endColumn": 85
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 351,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Writing to an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Writing to](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/test/java/org/apache/ignite/spi/GridTcpForwarder.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 81,
                  "endLine": 81,
                  "startColumn": 60,
                  "endColumn": 85
                }
              }
            }
          ],
          "fingerprints": {
            "0": "63d55fd47ba36d9334f809590baeee954ff08a1b6babe229d2f546735540591a",
            "1": "e6fcc0e0.c6f63401.bb993ef0.6c52ae28.d0ae74d5.7fda7c5e.f0e0ed1a.54d46e25.e6fcc0e0.c6f63401.bb993ef0.6c52ae28.d0ae74d5.7fda7c5e.9b3aedec.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/spi/GridTcpForwarder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 81,
                            "endLine": 81,
                            "startColumn": 60,
                            "endColumn": 85
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/spi/GridTcpForwarder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 81,
                            "endLine": 81,
                            "startColumn": 60,
                            "endColumn": 85
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Writing to an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Writing to](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/test/java/org/apache/ignite/stream/socket/SocketStreamerSelfTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 115,
                  "endLine": 115,
                  "startColumn": 65,
                  "endColumn": 85
                }
              }
            }
          ],
          "fingerprints": {
            "0": "993db144460415f9ab647a916944556e91418e78b12d0aee15fefbed830bdd5d",
            "1": "19689298.83dbfe52.5c8b6ef6.6c52ae28.56683ff4.85d83993.b8a46f6f.0f01a149.19689298.83dbfe52.5c8b6ef6.6c52ae28.50314e63.85d83993.39270c99.0f01a149"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/stream/socket/SocketStreamerSelfTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 115,
                            "endLine": 115,
                            "startColumn": 65,
                            "endColumn": 85
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/stream/socket/SocketStreamerSelfTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 115,
                            "endLine": 115,
                            "startColumn": 65,
                            "endColumn": 85
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Writing to an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Writing to](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/test/java/org/apache/ignite/stream/socket/SocketStreamerSelfTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 143,
                  "endLine": 143,
                  "startColumn": 65,
                  "endColumn": 85
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3a139177ba15181d1ce59bae102e853328dbb1aec83848312f56b9fde09c2842",
            "1": "19689298.83dbfe52.5c8b6ef6.6c52ae28.56683ff4.85d83993.b8a46f6f.0f01a149.19689298.83dbfe52.5c8b6ef6.6c52ae28.50314e63.85d83993.39270c99.0f01a149"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/stream/socket/SocketStreamerSelfTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 143,
                            "endLine": 143,
                            "startColumn": 65,
                            "endColumn": 85
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/stream/socket/SocketStreamerSelfTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 143,
                            "endLine": 143,
                            "startColumn": 65,
                            "endColumn": 85
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Writing to an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Writing to](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/test/java/org/apache/ignite/stream/socket/SocketStreamerSelfTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 185,
                  "endLine": 185,
                  "startColumn": 64,
                  "endColumn": 84
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f533b948177c05a795e6c4244d7cffd1a4d72c0d820f9d65cf746a1ae4114e5f",
            "1": "19689298.83dbfe52.5c8b6ef6.6c52ae28.56683ff4.85d83993.b8a46f6f.0f01a149.19689298.83dbfe52.5c8b6ef6.6c52ae28.50314e63.85d83993.39270c99.0f01a149"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/stream/socket/SocketStreamerSelfTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 185,
                            "endLine": 185,
                            "startColumn": 64,
                            "endColumn": 84
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/stream/socket/SocketStreamerSelfTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 185,
                            "endLine": 185,
                            "startColumn": 64,
                            "endColumn": 84
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Writing to an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Writing to](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/test/java/org/apache/ignite/stream/socket/SocketStreamerSelfTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 213,
                  "endLine": 213,
                  "startColumn": 64,
                  "endColumn": 84
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ccc4cb49fb9cb06ed1bd2b8fdac781a90d3750039c9dca194ccd0d7d974ff491",
            "1": "19689298.83dbfe52.5c8b6ef6.6c52ae28.56683ff4.85d83993.b8a46f6f.0f01a149.19689298.83dbfe52.5c8b6ef6.6c52ae28.50314e63.85d83993.39270c99.0f01a149"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/stream/socket/SocketStreamerSelfTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 213,
                            "endLine": 213,
                            "startColumn": 64,
                            "endColumn": 84
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/stream/socket/SocketStreamerSelfTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 213,
                            "endLine": 213,
                            "startColumn": 64,
                            "endColumn": 84
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Writing to an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Writing to](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/test/java/org/apache/ignite/stream/socket/SocketStreamerSelfTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 249,
                  "endLine": 249,
                  "startColumn": 64,
                  "endColumn": 84
                }
              }
            }
          ],
          "fingerprints": {
            "0": "23d0ccc5ea434d66a35bb6b7661fe9f68def77cc4ea06ca22eb55e62e0350a16",
            "1": "19689298.83dbfe52.5c8b6ef6.6c52ae28.56683ff4.85d83993.b8a46f6f.0f01a149.19689298.83dbfe52.5c8b6ef6.6c52ae28.50314e63.85d83993.39270c99.0f01a149"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/stream/socket/SocketStreamerSelfTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 249,
                            "endLine": 249,
                            "startColumn": 64,
                            "endColumn": 84
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/stream/socket/SocketStreamerSelfTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 249,
                            "endLine": 249,
                            "startColumn": 64,
                            "endColumn": 84
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Reading from an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Reading from](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/test/java/org/apache/ignite/internal/util/nio/GridNioSelfTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 191,
                  "endLine": 191,
                  "startColumn": 39,
                  "endColumn": 55
                }
              }
            }
          ],
          "fingerprints": {
            "0": "14589fbe1feb6990e251976c5e631b776308a25c5f0d90fb28c875f1545fe8c8",
            "1": "19689298.95d88bc4.bb993ef0.4bd89559.c41fd899.8f875032.78adfa9a.54d46e25.19689298.c6436c56.bb993ef0.e22980a8.c41fd899.85d83993.78adfa9a.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/internal/util/nio/GridNioSelfTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 191,
                            "endLine": 191,
                            "startColumn": 39,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/internal/util/nio/GridNioSelfTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 191,
                            "endLine": 191,
                            "startColumn": 39,
                            "endColumn": 55
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Reading from an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Reading from](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/test/java/org/apache/ignite/internal/util/nio/GridNioSelfTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 298,
                  "endLine": 298,
                  "startColumn": 70,
                  "endColumn": 86
                }
              }
            }
          ],
          "fingerprints": {
            "0": "cd175b673106868f0c72460345be314bcd9d04c0151689f73493c8024118107d",
            "1": "aea7741a.1831e1cc.bb993ef0.6c52ae28.e27b77c0.9dc17228.732df176.0f01a149.19689298.1831e1cc.bb993ef0.e22980a8.e27b77c0.85d83993.732df176.0f01a149"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/internal/util/nio/GridNioSelfTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 298,
                            "endLine": 298,
                            "startColumn": 70,
                            "endColumn": 86
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/internal/util/nio/GridNioSelfTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 298,
                            "endLine": 298,
                            "startColumn": 70,
                            "endColumn": 86
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Reading from an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Reading from](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/test/java/org/apache/ignite/internal/util/nio/GridNioSelfTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 485,
                  "endLine": 485,
                  "startColumn": 43,
                  "endColumn": 59
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ca46bc129a9009c0f496dfd8af65d981bdf42d3bdb058e488233bc717e863a47",
            "1": "19689298.95d88bc4.bb993ef0.4bd89559.e27b77c0.8f875032.78adfa9a.54d46e25.19689298.c6436c56.bb993ef0.e22980a8.e27b77c0.85d83993.78adfa9a.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/internal/util/nio/GridNioSelfTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 485,
                            "endLine": 485,
                            "startColumn": 43,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/internal/util/nio/GridNioSelfTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 485,
                            "endLine": 485,
                            "startColumn": 43,
                            "endColumn": 59
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Reading from an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Reading from](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/test/java/org/apache/ignite/client/ConnectionTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 111,
                  "endLine": 111,
                  "startColumn": 30,
                  "endColumn": 57
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a40f49ebc421f71a045803a5110b7b17b0e0fc9ea5cae8b2a7f9a643f44328f6",
            "1": "5ea1a60e.0e2c706d.bb993ef0.d357242f.02ce6f0b.51c5d720.ee9f547b.0f01a149.5ea1a60e.0e2c706d.bb993ef0.51f01288.02ce6f0b.85d83993.daeeb2e4.0f01a149"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/client/ConnectionTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 111,
                            "endLine": 111,
                            "startColumn": 30,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/client/ConnectionTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 111,
                            "endLine": 111,
                            "startColumn": 30,
                            "endColumn": 57
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Reading from an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Reading from](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/test/java/org/apache/ignite/client/ConnectionTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 127,
                  "endLine": 127,
                  "startColumn": 30,
                  "endColumn": 57
                }
              }
            }
          ],
          "fingerprints": {
            "0": "bb33be98d8bd84c0d4fc16ae910782491aafbdd8a5c32e693bbc30fde6561a2b",
            "1": "5ea1a60e.0e2c706d.bb993ef0.d357242f.02ce6f0b.51c5d720.ee9f547b.0f01a149.5ea1a60e.0e2c706d.bb993ef0.51f01288.02ce6f0b.85d83993.daeeb2e4.0f01a149"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/client/ConnectionTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 127,
                            "endLine": 127,
                            "startColumn": 30,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/client/ConnectionTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 127,
                            "endLine": 127,
                            "startColumn": 30,
                            "endColumn": 57
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Reading from an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Reading from](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/test/java/org/apache/ignite/client/ConnectionTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 141,
                  "endLine": 141,
                  "startColumn": 30,
                  "endColumn": 57
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5016a58af333a2ddaad68708c58697cf0b5696662ca4bd506c7b581ad2ea67e5",
            "1": "5ea1a60e.0e2c706d.bb993ef0.d357242f.02ce6f0b.51c5d720.ee9f547b.0f01a149.5ea1a60e.0e2c706d.bb993ef0.51f01288.02ce6f0b.85d83993.daeeb2e4.0f01a149"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/client/ConnectionTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 141,
                            "endLine": 141,
                            "startColumn": 30,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/client/ConnectionTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 141,
                            "endLine": 141,
                            "startColumn": 30,
                            "endColumn": 57
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Reading from an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Reading from](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/test/java/org/apache/ignite/loadtests/nio/GridNioBenchmarkClient.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 124,
                  "endLine": 124,
                  "startColumn": 34,
                  "endColumn": 50
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8cad1b45d0b8c028968a9bb5076515d277eaeda2afa2dc7c66f6b652b0de94b2",
            "1": "19689298.c6436c56.bb993ef0.c48320d7.e27b77c0.48eeb24b.94a33612.54d46e25.19689298.c6436c56.bb993ef0.c48320d7.e27b77c0.85d83993.94a33612.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/loadtests/nio/GridNioBenchmarkClient.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 124,
                            "endLine": 124,
                            "startColumn": 34,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/loadtests/nio/GridNioBenchmarkClient.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 124,
                            "endLine": 124,
                            "startColumn": 34,
                            "endColumn": 50
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Reading from an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Reading from](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/test/java/org/apache/ignite/internal/client/thin/TimeoutTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 96,
                  "endLine": 96,
                  "startColumn": 34,
                  "endColumn": 50
                }
              }
            }
          ],
          "fingerprints": {
            "0": "018245c8788f26fc8c6c530c30e5381c985e088170410f0623458895a77c65c9",
            "1": "19689298.1f519e92.bb993ef0.857e8281.c41fd899.37228ca2.6d74a0f2.54d46e25.19689298.c6436c56.bb993ef0.6c52ae28.c41fd899.85d83993.6d74a0f2.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/internal/client/thin/TimeoutTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 96,
                            "endLine": 96,
                            "startColumn": 34,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/internal/client/thin/TimeoutTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 96,
                            "endLine": 96,
                            "startColumn": 34,
                            "endColumn": 50
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Reading from an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Reading from](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/test/java/org/apache/ignite/internal/util/nio/GridRoundTripTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 89,
                  "endLine": 89,
                  "startColumn": 42,
                  "endColumn": 61
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5fb15c6efc737f721c4facf605adf979a6ac1cd25ef69891fb6e545076625f01",
            "1": "ac4e7c8b.1831e1cc.bb993ef0.c48320d7.56683ff4.7fda7c5e.b8a46f6f.0f01a149.19689298.1831e1cc.bb993ef0.c48320d7.56683ff4.85d83993.b8a46f6f.0f01a149"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/internal/util/nio/GridRoundTripTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 89,
                            "endLine": 89,
                            "startColumn": 42,
                            "endColumn": 61
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/internal/util/nio/GridRoundTripTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 89,
                            "endLine": 89,
                            "startColumn": 42,
                            "endColumn": 61
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Reading from an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Reading from](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/clients/src/test/java/org/apache/ignite/internal/processors/rest/TcpRestUnmarshalVulnerabilityTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 203,
                  "endLine": 203,
                  "startColumn": 54,
                  "endColumn": 73
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7d40d7f2b9b65aef19a1f8a0933799e82ce65ed11a6a25a0433147862a3bf9ff",
            "1": "ac4e7c8b.1831e1cc.bb993ef0.6c52ae28.56683ff4.9dc17228.6d74a0f2.0f01a149.3d15ba81.1831e1cc.bb993ef0.6c52ae28.50314e63.85d83993.6d74a0f2.0f01a149"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/clients/src/test/java/org/apache/ignite/internal/processors/rest/TcpRestUnmarshalVulnerabilityTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 203,
                            "endLine": 203,
                            "startColumn": 54,
                            "endColumn": 73
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/clients/src/test/java/org/apache/ignite/internal/processors/rest/TcpRestUnmarshalVulnerabilityTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 203,
                            "endLine": 203,
                            "startColumn": 54,
                            "endColumn": 73
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Reading from an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Reading from](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/clients/src/test/java/org/apache/ignite/internal/processors/rest/TestMemcacheClient.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 119,
                  "endLine": 119,
                  "startColumn": 38,
                  "endColumn": 57
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e66d0f9c8a15e37643f6fb681ca925cd1119eab37305f461656d989d3cd19ebc",
            "1": "19689298.83dbfe52.bb993ef0.c48320d7.6dbefcdf.7fda7c5e.b8a46f6f.54d46e25.19689298.cd590ade.bb993ef0.c48320d7.6dbefcdf.7fda7c5e.9589bd2d.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/clients/src/test/java/org/apache/ignite/internal/processors/rest/TestMemcacheClient.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 119,
                            "endLine": 119,
                            "startColumn": 38,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/clients/src/test/java/org/apache/ignite/internal/processors/rest/TestMemcacheClient.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 119,
                            "endLine": 119,
                            "startColumn": 38,
                            "endColumn": 57
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Reading from an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Reading from](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/clients/src/test/java/org/apache/ignite/internal/processors/rest/TestBinaryClient.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 110,
                  "endLine": 110,
                  "startColumn": 21,
                  "endColumn": 40
                }
              }
            }
          ],
          "fingerprints": {
            "0": "cb803db11477e6ebf60ef3f370d36d9d67e86d2bff915c03200d24b461de21a7",
            "1": "c725d9b2.c6f63401.bb993ef0.e22980a8.56683ff4.7fda7c5e.b8a46f6f.54d46e25.c725d9b2.cd590ade.bb993ef0.e22980a8.50314e63.7fda7c5e.9589bd2d.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/clients/src/test/java/org/apache/ignite/internal/processors/rest/TestBinaryClient.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 110,
                            "endLine": 110,
                            "startColumn": 21,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/clients/src/test/java/org/apache/ignite/internal/processors/rest/TestBinaryClient.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 110,
                            "endLine": 110,
                            "startColumn": 21,
                            "endColumn": 40
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Reading from an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Reading from](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/test/java/org/apache/ignite/spi/communication/tcp/GridTcpCommunicationSpiSkipWaitHandshakeOnClientTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 78,
                  "endLine": 78,
                  "startColumn": 35,
                  "endColumn": 54
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8c1811c1f7d22a7161808d17bd526d9bec1cb9a7911aa2b718b32bf398c1d35f",
            "1": "19689298.83dbfe52.bb993ef0.c48320d7.d31a8364.85d83993.bae646e8.bbbf61bc.c1a9232f.c1f2a7fb.bb993ef0.c48320d7.d31a8364.85d83993.0b93a254.16b74700"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/spi/communication/tcp/GridTcpCommunicationSpiSkipWaitHandshakeOnClientTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 35,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/spi/communication/tcp/GridTcpCommunicationSpiSkipWaitHandshakeOnClientTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 35,
                            "endColumn": 54
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 351,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "Reading from an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Reading from](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/test/java/org/apache/ignite/spi/GridTcpForwarder.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 86,
                  "endLine": 86,
                  "startColumn": 33,
                  "endColumn": 57
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f25d7a3c6bdcc6395be8ba1db1248f9591b44d95c872f230391517e7e33f9577",
            "1": "e6fcc0e0.c6f63401.bb993ef0.6c52ae28.ae63d11c.7fda7c5e.f0e0ed1a.0f01a149.e6fcc0e0.c6f63401.bb993ef0.6c52ae28.ae63d11c.7fda7c5e.9b3aedec.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/spi/GridTcpForwarder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 86,
                            "endLine": 86,
                            "startColumn": 33,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/spi/GridTcpForwarder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 86,
                            "endLine": 86,
                            "startColumn": 33,
                            "endColumn": 57
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/InsecureDefaultAesCipher",
          "ruleIndex": 11,
          "level": "warning",
          "message": {
            "text": "Default AES/ECB algorithm (AES) used in javax.crypto.KeyGenerator.getInstance may be insecure, because equal messages get encrypted to equal data. Consider using Galois/Counter Mode (algorithm AES/GCM/NoPadding).",
            "markdown": "Default AES/ECB algorithm ({0}) used in {1} may be insecure, because equal messages get encrypted to equal data. Consider using Galois/Counter Mode (algorithm AES/GCM/NoPadding).",
            "arguments": [
              "[AES](0)",
              "[javax.crypto.KeyGenerator.getInstance](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/main/java/org/apache/ignite/spi/encryption/keystore/KeystoreEncryptionSpi.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 176,
                  "endLine": 176,
                  "startColumn": 32,
                  "endColumn": 56
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6e1a6bc39c18389ed80aa337a72bc42003770e5b6efa6f3649b02d6fd24d0b73",
            "1": "19689298.55f245d5.ebb0a129.1a265755.a4344b96.1110944f.b5ad3603.54d46e25.1d6fe040.55f245d5.ba832df5.de031890.bb61bed7.ce109560.df7e59ba.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/spi/encryption/keystore/KeystoreEncryptionSpi.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 73,
                            "endLine": 73,
                            "startColumn": 46,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/spi/encryption/keystore/KeystoreEncryptionSpi.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 176,
                            "endLine": 176,
                            "startColumn": 32,
                            "endColumn": 56
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/ReturnsPassword/test",
          "ruleIndex": 12,
          "level": "note",
          "message": {
            "text": "An attacker might be able to detect the value of the password due to the exposure of comparison timing. When the functions Arrays.equals() or String.equals() are called, they will exit earlier if fewer bytes are matched. Use password encoder such as BCrypt for comparing passwords.",
            "markdown": "An attacker might be able to detect the value of the password due to the exposure of comparison timing. When the functions Arrays.equals() or String.equals() are called, they will exit earlier if fewer bytes are matched. Use password encoder such as BCrypt for comparing passwords.",
            "arguments": []
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/cassandra/store/src/test/java/org/apache/ignite/tests/DatasourceSerializationTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 127,
                  "endLine": 127,
                  "startColumn": 13,
                  "endColumn": 29
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3642fc2e3a930877c152eec923a574251b0d9c6c617c19544a6fb476f89bd856",
            "1": "b708bae9.bccf2bfb.c61039d0.29f08d07.6bacdef5.31ccdec6.e865951e.e7347fbb.b708bae9.bccf2bfb.34750cd0.29f08d07.6bacdef5.31ccdec6.e865951e.e938611f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/cassandra/store/src/test/java/org/apache/ignite/tests/DatasourceSerializationTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 127,
                            "endLine": 127,
                            "startColumn": 13,
                            "endColumn": 29
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docs/_docs/code-snippets/java/src/main/java/org/apache/ignite/snippets/DiscoveryInTheCloud.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 64,
                  "endLine": 64,
                  "startColumn": 41,
                  "endColumn": 60
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0ccecc68a722486dc5f410cb149778e9048d5f8850d9302aebe3be7383c15cf1",
            "1": "19689298.fa7a87e2.34d9ea71.6c52ae28.753b6150.87a23612.8bbc7acf.fe7f30dc.19689298.fa7a87e2.34d9ea71.6c52ae28.753b6150.87a23612.8bbc7acf.fe7f30dc"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "docs/_docs/code-snippets/java/src/main/java/org/apache/ignite/snippets/DiscoveryInTheCloud.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 64,
                            "endLine": 64,
                            "startColumn": 61,
                            "endColumn": 76
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docs/_docs/code-snippets/java/src/main/java/org/apache/ignite/snippets/DiscoveryInTheCloud.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 108,
                  "endLine": 108,
                  "startColumn": 41,
                  "endColumn": 60
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0d16002bc5ccc977832f473e492dc005c3c0895ba4bfc9437fb637f592faf30b",
            "1": "19689298.fa7a87e2.34d9ea71.6c52ae28.753b6150.87a23612.8bbc7acf.fe7f30dc.19689298.fa7a87e2.34d9ea71.6c52ae28.753b6150.87a23612.8bbc7acf.fe7f30dc"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "docs/_docs/code-snippets/java/src/main/java/org/apache/ignite/snippets/DiscoveryInTheCloud.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 108,
                            "endLine": 108,
                            "startColumn": 61,
                            "endColumn": 76
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docs/_docs/code-snippets/java/src/main/java/org/apache/ignite/snippets/ExternalStorage.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 62,
                  "endLine": 62,
                  "startColumn": 13,
                  "endColumn": 37
                }
              }
            }
          ],
          "fingerprints": {
            "0": "fadc5249921f6477deea4fde86e6ce10e0b4a4a5ea93b3d34039c4c72a40304a",
            "1": "5387ee68.44834e8c.af493c76.e22980a8.f2a5bca1.935029da.d6712bb3.fde7589e.5387ee68.44834e8c.af493c76.e22980a8.f2a5bca1.935029da.d6712bb3.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "docs/_docs/code-snippets/java/src/main/java/org/apache/ignite/snippets/ExternalStorage.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 62,
                            "endLine": 62,
                            "startColumn": 38,
                            "endColumn": 53
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docs/_docs/code-snippets/java/src/main/java/org/apache/ignite/snippets/ExternalStorage.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 149,
                  "endLine": 149,
                  "startColumn": 9,
                  "endColumn": 33
                }
              }
            }
          ],
          "fingerprints": {
            "0": "82994bcefdbd95b6fa23f54ec374d7d9b0b3ec0704c000b87392664f9f9547d1",
            "1": "5387ee68.e8c02a15.fc7d5400.e22980a8.f1d9f854.935029da.85c09417.fde7589e.5387ee68.e8c02a15.fc7d5400.e22980a8.f1d9f854.935029da.85c09417.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "docs/_docs/code-snippets/java/src/main/java/org/apache/ignite/snippets/ExternalStorage.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 149,
                            "endLine": 149,
                            "startColumn": 34,
                            "endColumn": 44
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docs/_docs/code-snippets/java/src/main/java/org/apache/ignite/snippets/CacheJdbcPersonStore.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 113,
                  "endLine": 113,
                  "startColumn": 27,
                  "endColumn": 54
                }
              }
            }
          ],
          "fingerprints": {
            "0": "4b695b5ef3c87a7d7f3610d349dce8ce2a1eed31d195890b891a327050f65d78",
            "1": "2ef7e926.3e5fa67e.14535f1c.e5f3694c.59cf9826.f940a352.2476e372.22f3433b.2ef7e926.44834e8c.14535f1c.e5f3694c.59cf9826.f940a352.2476e372.22f3433b"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "docs/_docs/code-snippets/java/src/main/java/org/apache/ignite/snippets/CacheJdbcPersonStore.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 113,
                            "endLine": 113,
                            "startColumn": 114,
                            "endColumn": 129
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 501,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/IndirectCommandInjection",
          "ruleIndex": 14,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment path variable flows into java.lang.ProcessBuilder, where it is used to build a shell command. Forwarding command-line arguments or file paths from the local environment to a function that executes a system command can change the meaning of the command unexpectedly due to unescaped special characters, which may result in a Indirect Command Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to build a shell command. Forwarding command-line arguments or file paths from the local environment to a function that executes a system command can change the meaning of the command unexpectedly due to unescaped special characters, which may result in a Indirect Command Injection vulnerability.",
            "arguments": [
              "[an environment path variable](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9)",
              "[java.lang.ProcessBuilder](10)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/hadoop/src/main/java/org/apache/ignite/internal/processors/hadoop/taskexecutor/external/HadoopExternalTaskExecutor.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 469,
                  "endLine": 469,
                  "startColumn": 32,
                  "endColumn": 46
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3e2d2ad5b84aaf8079817ca664e20862aa17e65d5effa0dd1bcfd0ba0fe90b55",
            "1": "e6fcc0e0.5f1dec00.510be7d1.e22980a8.ae63d11c.7fda7c5e.320ddb95.54d46e25.bbbd7c96.1a24af54.510be7d1.e22980a8.a63434e4.7fda7c5e.320ddb95.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/main/java/org/apache/ignite/internal/processors/hadoop/taskexecutor/external/HadoopExternalTaskExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 461,
                            "endLine": 461,
                            "startColumn": 24,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/main/java/org/apache/ignite/internal/processors/hadoop/taskexecutor/external/HadoopExternalTaskExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 461,
                            "endLine": 461,
                            "startColumn": 24,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/main/java/org/apache/ignite/internal/processors/hadoop/taskexecutor/external/HadoopExternalTaskExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 461,
                            "endLine": 461,
                            "startColumn": 13,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/main/java/org/apache/ignite/internal/processors/hadoop/taskexecutor/external/HadoopExternalTaskExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 466,
                            "endLine": 466,
                            "startColumn": 19,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/main/java/org/apache/ignite/internal/processors/hadoop/taskexecutor/external/HadoopExternalTaskExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 466,
                            "endLine": 466,
                            "startColumn": 19,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/main/java/org/apache/ignite/internal/processors/hadoop/taskexecutor/external/HadoopExternalTaskExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 466,
                            "endLine": 466,
                            "startColumn": 19,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/main/java/org/apache/ignite/internal/processors/hadoop/taskexecutor/external/HadoopExternalTaskExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 466,
                            "endLine": 466,
                            "startColumn": 19,
                            "endColumn": 69
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/main/java/org/apache/ignite/internal/processors/hadoop/taskexecutor/external/HadoopExternalTaskExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 466,
                            "endLine": 466,
                            "startColumn": 19,
                            "endColumn": 109
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/main/java/org/apache/ignite/internal/processors/hadoop/taskexecutor/external/HadoopExternalTaskExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 466,
                            "endLine": 466,
                            "startColumn": 9,
                            "endColumn": 109
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/main/java/org/apache/ignite/internal/processors/hadoop/taskexecutor/external/HadoopExternalTaskExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 469,
                            "endLine": 469,
                            "startColumn": 47,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/main/java/org/apache/ignite/internal/processors/hadoop/taskexecutor/external/HadoopExternalTaskExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 469,
                            "endLine": 469,
                            "startColumn": 32,
                            "endColumn": 46
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/IndirectCommandInjection",
          "ruleIndex": 14,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment path variable flows into java.lang.ProcessBuilder, where it is used to build a shell command. Forwarding command-line arguments or file paths from the local environment to a function that executes a system command can change the meaning of the command unexpectedly due to unescaped special characters, which may result in a Indirect Command Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to build a shell command. Forwarding command-line arguments or file paths from the local environment to a function that executes a system command can change the meaning of the command unexpectedly due to unescaped special characters, which may result in a Indirect Command Injection vulnerability.",
            "arguments": [
              "[an environment path variable](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30)",
              "[java.lang.ProcessBuilder](31)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/hadoop/src/main/java/org/apache/ignite/internal/processors/hadoop/taskexecutor/external/HadoopExternalTaskExecutor.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 558,
                  "endLine": 558,
                  "startColumn": 20,
                  "endColumn": 34
                }
              }
            }
          ],
          "fingerprints": {
            "0": "84d7dd8a66343519e31bab054f046f14244da940457dc04bbe8f732ccbb03396",
            "1": "4a0a3ef9.97acdc08.510be7d1.6c52ae28.49520b64.3e0b5a26.3dc1bde1.54d46e25.e1d7cd7c.71a6776f.117780a3.de031890.23309c68.7fda7c5e.3d77c60e.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/main/java/org/apache/ignite/internal/processors/hadoop/taskexecutor/external/HadoopExternalTaskExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 461,
                            "endLine": 461,
                            "startColumn": 24,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/main/java/org/apache/ignite/internal/processors/hadoop/taskexecutor/external/HadoopExternalTaskExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 461,
                            "endLine": 461,
                            "startColumn": 24,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/main/java/org/apache/ignite/internal/processors/hadoop/taskexecutor/external/HadoopExternalTaskExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 461,
                            "endLine": 461,
                            "startColumn": 13,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/main/java/org/apache/ignite/internal/processors/hadoop/taskexecutor/external/HadoopExternalTaskExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 466,
                            "endLine": 466,
                            "startColumn": 19,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/main/java/org/apache/ignite/internal/processors/hadoop/taskexecutor/external/HadoopExternalTaskExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 466,
                            "endLine": 466,
                            "startColumn": 19,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/main/java/org/apache/ignite/internal/processors/hadoop/taskexecutor/external/HadoopExternalTaskExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 466,
                            "endLine": 466,
                            "startColumn": 19,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/main/java/org/apache/ignite/internal/processors/hadoop/taskexecutor/external/HadoopExternalTaskExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 466,
                            "endLine": 466,
                            "startColumn": 19,
                            "endColumn": 69
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/main/java/org/apache/ignite/internal/processors/hadoop/taskexecutor/external/HadoopExternalTaskExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 466,
                            "endLine": 466,
                            "startColumn": 19,
                            "endColumn": 109
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/main/java/org/apache/ignite/internal/processors/hadoop/taskexecutor/external/HadoopExternalTaskExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 466,
                            "endLine": 466,
                            "startColumn": 9,
                            "endColumn": 109
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/main/java/org/apache/ignite/internal/processors/hadoop/taskexecutor/external/HadoopExternalTaskExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 536,
                            "endLine": 536,
                            "startColumn": 9,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/main/java/org/apache/ignite/internal/processors/hadoop/taskexecutor/external/HadoopExternalTaskExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 537,
                            "endLine": 537,
                            "startColumn": 9,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/main/java/org/apache/ignite/internal/processors/hadoop/taskexecutor/external/HadoopExternalTaskExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 538,
                            "endLine": 538,
                            "startColumn": 9,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/main/java/org/apache/ignite/internal/processors/hadoop/taskexecutor/external/HadoopExternalTaskExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 539,
                            "endLine": 539,
                            "startColumn": 9,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/main/java/org/apache/ignite/internal/processors/hadoop/taskexecutor/external/HadoopExternalTaskExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 540,
                            "endLine": 540,
                            "startColumn": 9,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/main/java/org/apache/ignite/internal/processors/hadoop/taskexecutor/external/HadoopExternalTaskExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 541,
                            "endLine": 541,
                            "startColumn": 9,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/main/java/org/apache/ignite/internal/processors/hadoop/taskexecutor/external/HadoopExternalTaskExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 542,
                            "endLine": 542,
                            "startColumn": 9,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/main/java/org/apache/ignite/internal/processors/hadoop/taskexecutor/external/HadoopExternalTaskExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 543,
                            "endLine": 543,
                            "startColumn": 9,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/main/java/org/apache/ignite/internal/processors/hadoop/taskexecutor/external/HadoopExternalTaskExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 544,
                            "endLine": 544,
                            "startColumn": 9,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/main/java/org/apache/ignite/internal/processors/hadoop/taskexecutor/external/HadoopExternalTaskExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 545,
                            "endLine": 545,
                            "startColumn": 9,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/main/java/org/apache/ignite/internal/processors/hadoop/taskexecutor/external/HadoopExternalTaskExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 546,
                            "endLine": 546,
                            "startColumn": 9,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/main/java/org/apache/ignite/internal/processors/hadoop/taskexecutor/external/HadoopExternalTaskExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 547,
                            "endLine": 547,
                            "startColumn": 9,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/main/java/org/apache/ignite/internal/processors/hadoop/taskexecutor/external/HadoopExternalTaskExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 548,
                            "endLine": 548,
                            "startColumn": 9,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/main/java/org/apache/ignite/internal/processors/hadoop/taskexecutor/external/HadoopExternalTaskExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 549,
                            "endLine": 549,
                            "startColumn": 9,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/main/java/org/apache/ignite/internal/processors/hadoop/taskexecutor/external/HadoopExternalTaskExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 550,
                            "endLine": 550,
                            "startColumn": 9,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/main/java/org/apache/ignite/internal/processors/hadoop/taskexecutor/external/HadoopExternalTaskExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 551,
                            "endLine": 551,
                            "startColumn": 9,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/main/java/org/apache/ignite/internal/processors/hadoop/taskexecutor/external/HadoopExternalTaskExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 552,
                            "endLine": 552,
                            "startColumn": 9,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/main/java/org/apache/ignite/internal/processors/hadoop/taskexecutor/external/HadoopExternalTaskExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 553,
                            "endLine": 553,
                            "startColumn": 9,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/main/java/org/apache/ignite/internal/processors/hadoop/taskexecutor/external/HadoopExternalTaskExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 554,
                            "endLine": 554,
                            "startColumn": 9,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/main/java/org/apache/ignite/internal/processors/hadoop/taskexecutor/external/HadoopExternalTaskExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 555,
                            "endLine": 555,
                            "startColumn": 9,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 29,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/main/java/org/apache/ignite/internal/processors/hadoop/taskexecutor/external/HadoopExternalTaskExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 556,
                            "endLine": 556,
                            "startColumn": 9,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 30,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/main/java/org/apache/ignite/internal/processors/hadoop/taskexecutor/external/HadoopExternalTaskExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 558,
                            "endLine": 558,
                            "startColumn": 35,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 31,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/main/java/org/apache/ignite/internal/processors/hadoop/taskexecutor/external/HadoopExternalTaskExecutor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 558,
                            "endLine": 558,
                            "startColumn": 20,
                            "endColumn": 34
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/TLS",
          "ruleIndex": 15,
          "level": "error",
          "message": {
            "text": "Implement secure HTTPS communication. Consider using latest TLSv1.2 instead of javax.net.ssl.SSLContext.getInstance.",
            "markdown": "Implement secure HTTPS communication. Consider using latest TLSv1.2 instead of {0}.",
            "arguments": [
              "[javax.net.ssl.SSLContext.getInstance](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/IgniteUtils.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 2295,
                  "endLine": 2295,
                  "startColumn": 34,
                  "endColumn": 56
                }
              }
            }
          ],
          "fingerprints": {
            "0": "877e159d01f85e443c8fd218d57b7e8983ae1d65d1e8d554f0e8984073e36951",
            "1": "19689298.1cbd3ff4.011b8e79.d0dbaa09.6441080e.afca3b91.4e6a08a8.54d46e25.bc8f4787.dd05ec30.011b8e79.de031890.6441080e.ce109560.6f2c337e.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/IgniteUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2295,
                            "endLine": 2295,
                            "startColumn": 34,
                            "endColumn": 56
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 801,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/TLS",
          "ruleIndex": 15,
          "level": "error",
          "message": {
            "text": "Implement secure HTTPS communication. Consider using latest TLSv1.2 instead of javax.net.ssl.SSLContext.getInstance.",
            "markdown": "Implement secure HTTPS communication. Consider using latest TLSv1.2 instead of {0}.",
            "arguments": [
              "[javax.net.ssl.SSLContext.getInstance](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/kubernetes/src/main/java/org/apache/ignite/internal/kubernetes/connection/KubernetesServiceAddressResolver.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 143,
                  "endLine": 143,
                  "startColumn": 23,
                  "endColumn": 45
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5fc0958bfeae78619e13bd48201c278262529ab82ca8f1f8e9794d0c80501fa6",
            "1": "040f5618.1cbd3ff4.33fa5dbe.e22980a8.6441080e.7fda7c5e.f0bed3be.54d46e25.040f5618.1cbd3ff4.33fa5dbe.e22980a8.6441080e.7fda7c5e.df7e59ba.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/kubernetes/src/main/java/org/apache/ignite/internal/kubernetes/connection/KubernetesServiceAddressResolver.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 143,
                            "endLine": 143,
                            "startColumn": 23,
                            "endColumn": 45
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 801,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/TLS",
          "ruleIndex": 15,
          "level": "error",
          "message": {
            "text": "Implement secure HTTPS communication. Consider using latest TLSv1.2 instead of javax.net.ssl.SSLContext.getInstance.",
            "markdown": "Implement secure HTTPS communication. Consider using latest TLSv1.2 instead of {0}.",
            "arguments": [
              "[javax.net.ssl.SSLContext.getInstance](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/urideploy/src/main/java/org/apache/ignite/spi/deployment/uri/scanners/http/UriDeploymentHttpScanner.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 128,
                  "endLine": 128,
                  "startColumn": 34,
                  "endColumn": 56
                }
              }
            }
          ],
          "fingerprints": {
            "0": "608d00b20a85d76b913c57465f112c95769c41109e0605e1af90001884d24457",
            "1": "19689298.1cbd3ff4.011b8e79.13372c17.6441080e.afca3b91.01fae08d.54d46e25.19689298.dd05ec30.011b8e79.de031890.6441080e.ce109560.df7e59ba.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/urideploy/src/main/java/org/apache/ignite/spi/deployment/uri/scanners/http/UriDeploymentHttpScanner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 128,
                            "endLine": 128,
                            "startColumn": 34,
                            "endColumn": 56
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 801,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/TLS",
          "ruleIndex": 15,
          "level": "error",
          "message": {
            "text": "Implement secure HTTPS communication. Consider using latest TLSv1.2 instead of javax.net.ssl.SSLContext.getInstance.",
            "markdown": "Implement secure HTTPS communication. Consider using latest TLSv1.2 instead of {0}.",
            "arguments": [
              "[javax.net.ssl.SSLContext.getInstance](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/kubernetes/src/main/java/org/apache/ignite/spi/discovery/tcp/ipfinder/kubernetes/TcpDiscoveryKubernetesIpFinder.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 253,
                  "endLine": 253,
                  "startColumn": 23,
                  "endColumn": 45
                }
              }
            }
          ],
          "fingerprints": {
            "0": "522f11593fcc7844c9cbdeefe1e5f2a940ddd11e272b52e27f02c47a08015dcf",
            "1": "040f5618.1cbd3ff4.33fa5dbe.e22980a8.6441080e.7fda7c5e.f0bed3be.54d46e25.040f5618.1cbd3ff4.33fa5dbe.e22980a8.6441080e.7fda7c5e.df7e59ba.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/kubernetes/src/main/java/org/apache/ignite/spi/discovery/tcp/ipfinder/kubernetes/TcpDiscoveryKubernetesIpFinder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 253,
                            "endLine": 253,
                            "startColumn": 23,
                            "endColumn": 45
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 801,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/TLS",
          "ruleIndex": 15,
          "level": "error",
          "message": {
            "text": "Implement secure HTTPS communication. Consider using latest TLSv1.2 instead of javax.net.ssl.SSLContext.getInstance.",
            "markdown": "Implement secure HTTPS communication. Consider using latest TLSv1.2 instead of {0}.",
            "arguments": [
              "[javax.net.ssl.SSLContext.getInstance](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/main/java/org/apache/ignite/ssl/SslContextFactory.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 311,
                  "endLine": 311,
                  "startColumn": 30,
                  "endColumn": 52
                }
              }
            }
          ],
          "fingerprints": {
            "0": "9119973ece34c78c80b5888396162551132a3532a11b1550a66a8d5c2f6bbb6f",
            "1": "19689298.1cbd3ff4.011b8e79.53def5fe.6441080e.afca3b91.62036dfc.54d46e25.54a059af.dd05ec30.011b8e79.de031890.6441080e.ce109560.c66d287d.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/ssl/SslContextFactory.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 311,
                            "endLine": 311,
                            "startColumn": 30,
                            "endColumn": 52
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 801,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/TLS",
          "ruleIndex": 15,
          "level": "error",
          "message": {
            "text": "Implement secure HTTPS communication. Consider using latest TLSv1.2 instead of javax.net.ssl.SSLContext.getInstance.",
            "markdown": "Implement secure HTTPS communication. Consider using latest TLSv1.2 instead of {0}.",
            "arguments": [
              "[javax.net.ssl.SSLContext.getInstance](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/web-console/web-agent/src/main/java/org/apache/ignite/console/agent/AgentLauncher.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 361,
                  "endLine": 361,
                  "startColumn": 30,
                  "endColumn": 52
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8df76bfc60f71eb6d7e608486e744f73248ac24191951116698d067c89065cb0",
            "1": "19689298.1cbd3ff4.011b8e79.ede9cf8e.6441080e.afca3b91.01fae08d.54d46e25.19689298.1cbd3ff4.011b8e79.ede9cf8e.6441080e.afca3b91.df7e59ba.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/web-console/web-agent/src/main/java/org/apache/ignite/console/agent/AgentLauncher.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 361,
                            "endLine": 361,
                            "startColumn": 30,
                            "endColumn": 52
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 801,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/TLS",
          "ruleIndex": 15,
          "level": "error",
          "message": {
            "text": "Implement secure HTTPS communication. Consider using latest TLSv1.2 instead of javax.net.ssl.SSLContext.getInstance.",
            "markdown": "Implement secure HTTPS communication. Consider using latest TLSv1.2 instead of {0}.",
            "arguments": [
              "[javax.net.ssl.SSLContext.getInstance](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/main/java/org/apache/ignite/internal/jdbc/thin/JdbcThinSSLUtil.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 301,
                  "endLine": 301,
                  "startColumn": 37,
                  "endColumn": 59
                }
              }
            }
          ],
          "fingerprints": {
            "0": "dcf4f839ac8f2311bc654bd4b17822d13554c9a40b1afc5d6eda27eaf343534c",
            "1": "19689298.1cbd3ff4.011b8e79.b2f7d106.178caa9c.7fda7c5e.3d39ca0c.54d46e25.bbbd7c96.c8c8034f.011b8e79.e22980a8.ae63d11c.7fda7c5e.3d39ca0c.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/jdbc/thin/JdbcThinSSLUtil.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 301,
                            "endLine": 301,
                            "startColumn": 37,
                            "endColumn": 59
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 801,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/TLS",
          "ruleIndex": 15,
          "level": "error",
          "message": {
            "text": "Implement secure HTTPS communication. Consider using latest TLSv1.2 instead of javax.net.ssl.SSLContext.getInstance.",
            "markdown": "Implement secure HTTPS communication. Consider using latest TLSv1.2 instead of {0}.",
            "arguments": [
              "[javax.net.ssl.SSLContext.getInstance](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/main/java/org/apache/ignite/internal/client/thin/ClientSslUtils.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 148,
                  "endLine": 148,
                  "startColumn": 33,
                  "endColumn": 55
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c2bf5c31bb91d5027b95eca78ffee9e93c24cfce559f6b4c2386142163a80ca8",
            "1": "19689298.1cbd3ff4.011b8e79.53def5fe.7111b43d.afca3b91.62036dfc.54d46e25.d298ca26.1cbd3ff4.d4c17266.e22980a8.7111b43d.afca3b91.2d656bd7.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/client/thin/ClientSslUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 33,
                            "endColumn": 55
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 801,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/TLS",
          "ruleIndex": 15,
          "level": "error",
          "message": {
            "text": "Implement secure HTTPS communication. Consider using latest TLSv1.2 instead of javax.net.ssl.SSLContext.getInstance.",
            "markdown": "Implement secure HTTPS communication. Consider using latest TLSv1.2 instead of {0}.",
            "arguments": [
              "[javax.net.ssl.SSLContext.getInstance](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/main/java/org/apache/ignite/internal/client/ssl/GridSslBasicContextFactory.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 304,
                  "endLine": 304,
                  "startColumn": 30,
                  "endColumn": 52
                }
              }
            }
          ],
          "fingerprints": {
            "0": "1b4ae244989b3d8c570cb29c5be88e0de86ba0cfa58532d01435ae39029c8ad2",
            "1": "19689298.1cbd3ff4.011b8e79.53def5fe.6441080e.afca3b91.62036dfc.54d46e25.54a059af.dd05ec30.011b8e79.de031890.6441080e.ce109560.c66d287d.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/client/ssl/GridSslBasicContextFactory.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 304,
                            "endLine": 304,
                            "startColumn": 30,
                            "endColumn": 52
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 801,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/TLS",
          "ruleIndex": 15,
          "level": "error",
          "message": {
            "text": "Implement secure HTTPS communication. Consider using latest TLSv1.2 instead of javax.net.ssl.SSLContext.getInstance.",
            "markdown": "Implement secure HTTPS communication. Consider using latest TLSv1.2 instead of {0}.",
            "arguments": [
              "[javax.net.ssl.SSLContext.getInstance](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/main/java/org/apache/ignite/internal/client/thin/TcpClientChannel.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 443,
                  "endLine": 443,
                  "startColumn": 37,
                  "endColumn": 59
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ac5a37a909e041c4bd75960559fe625da8511854aed8619b1579298b5e68f17d",
            "1": "19689298.1cbd3ff4.011b8e79.53def5fe.7111b43d.afca3b91.62036dfc.54d46e25.d298ca26.1cbd3ff4.d4c17266.e22980a8.7111b43d.afca3b91.2d656bd7.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/client/thin/TcpClientChannel.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 443,
                            "endLine": 443,
                            "startColumn": 37,
                            "endColumn": 59
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 801,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/XXE",
          "ruleIndex": 16,
          "level": "error",
          "message": {
            "text": "Unsanitized input from a local file flows into parse, which allows expansion of external entity references. This may result in a XXE attack leading to the disclosure of confidential data or denial of service.",
            "markdown": "Unsanitized input from a local file {0} into {1}, which allows expansion of external entity references. This may result in a XXE attack leading to the disclosure of confidential data or denial of service.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14)",
              "[parse](15)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/cassandra/store/src/main/java/org/apache/ignite/cache/store/cassandra/persistence/KeyValuePersistenceSettings.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 398,
                  "endLine": 398,
                  "startColumn": 19,
                  "endColumn": 32
                }
              }
            }
          ],
          "fingerprints": {
            "0": "802aae518dc6e269b3f01382bce0bda8b74133e64546582d0011135771466871",
            "1": "a1092ece.2dc1799a.33fa5dbe.6c52ae28.b7dd2760.7fda7c5e.a1439b9f.55425d48.54a059af.60fdb407.c150cd14.c48320d7.a7b964d9.31c50941.a1439b9f.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/cassandra/store/src/main/java/org/apache/ignite/cache/store/cassandra/persistence/KeyValuePersistenceSettings.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 346,
                            "endLine": 346,
                            "startColumn": 63,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/cassandra/store/src/main/java/org/apache/ignite/cache/store/cassandra/persistence/KeyValuePersistenceSettings.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 346,
                            "endLine": 346,
                            "startColumn": 45,
                            "endColumn": 62
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/cassandra/store/src/main/java/org/apache/ignite/cache/store/cassandra/persistence/KeyValuePersistenceSettings.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 346,
                            "endLine": 346,
                            "startColumn": 26,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/cassandra/store/src/main/java/org/apache/ignite/cache/store/cassandra/persistence/KeyValuePersistenceSettings.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 346,
                            "endLine": 346,
                            "startColumn": 13,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/cassandra/store/src/main/java/org/apache/ignite/cache/store/cassandra/persistence/KeyValuePersistenceSettings.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 348,
                            "endLine": 348,
                            "startColumn": 27,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/cassandra/store/src/main/java/org/apache/ignite/cache/store/cassandra/persistence/KeyValuePersistenceSettings.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 348,
                            "endLine": 348,
                            "startColumn": 27,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/cassandra/store/src/main/java/org/apache/ignite/cache/store/cassandra/persistence/KeyValuePersistenceSettings.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 348,
                            "endLine": 348,
                            "startColumn": 20,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/cassandra/store/src/main/java/org/apache/ignite/cache/store/cassandra/persistence/KeyValuePersistenceSettings.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 354,
                            "endLine": 354,
                            "startColumn": 17,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/cassandra/store/src/main/java/org/apache/ignite/cache/store/cassandra/persistence/KeyValuePersistenceSettings.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 354,
                            "endLine": 354,
                            "startColumn": 17,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/cassandra/store/src/main/java/org/apache/ignite/cache/store/cassandra/persistence/KeyValuePersistenceSettings.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 367,
                            "endLine": 367,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/cassandra/store/src/main/java/org/apache/ignite/cache/store/cassandra/persistence/KeyValuePersistenceSettings.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 367,
                            "endLine": 367,
                            "startColumn": 16,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/cassandra/store/src/main/java/org/apache/ignite/cache/store/cassandra/persistence/KeyValuePersistenceSettings.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 392,
                            "endLine": 392,
                            "startColumn": 23,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/cassandra/store/src/main/java/org/apache/ignite/cache/store/cassandra/persistence/KeyValuePersistenceSettings.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 398,
                            "endLine": 398,
                            "startColumn": 53,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/cassandra/store/src/main/java/org/apache/ignite/cache/store/cassandra/persistence/KeyValuePersistenceSettings.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 398,
                            "endLine": 398,
                            "startColumn": 37,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/cassandra/store/src/main/java/org/apache/ignite/cache/store/cassandra/persistence/KeyValuePersistenceSettings.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 398,
                            "endLine": 398,
                            "startColumn": 33,
                            "endColumn": 76
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/cassandra/store/src/main/java/org/apache/ignite/cache/store/cassandra/persistence/KeyValuePersistenceSettings.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 398,
                            "endLine": 398,
                            "startColumn": 19,
                            "endColumn": 32
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 801,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoRateLimitingForExpensiveWebOperation",
          "ruleIndex": 17,
          "level": "warning",
          "message": {
            "text": "This endpoint handler performs a file system operation and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "markdown": "This {0} performs {1} and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "arguments": [
              "[endpoint handler](0)",
              "[a file system operation](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/web-console/backend/app/apiServer.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53,
                  "startColumn": 38,
                  "endColumn": 55
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b8358ef0294fbd61e63f3bae1b698272bb483285cd41d5deb85dd3d9446e7894",
            "1": "62de687f.a17c4800.607187b5.c559ebce.fd1fa73f.b9c617ac.83265159.4c750ffb.cf7733e4.a17c4800.126beb45.c559ebce.fd1fa73f.b9c617ac.83265159.0ac26946"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/web-console/backend/app/apiServer.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 53,
                            "endLine": 53,
                            "startColumn": 38,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/web-console/backend/app/apiServer.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 33,
                            "endColumn": 41
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 651,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              },
              {
                "label": true,
                "type": "commonlyFixed"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoRateLimitingForExpensiveWebOperation",
          "ruleIndex": 17,
          "level": "warning",
          "message": {
            "text": "This endpoint handler performs a file system operation and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "markdown": "This {0} performs {1} and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "arguments": [
              "[endpoint handler](0)",
              "[a file system operation](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/web-console/backend/app/apiServer.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 71,
                  "endLine": 71,
                  "startColumn": 25,
                  "endColumn": 39
                }
              }
            }
          ],
          "fingerprints": {
            "0": "51911a670346e52641b8738e7b7a81be8ecca9674c60c7a7f1bce2dbb6a8f461",
            "1": "2fa3a5cc.4773f344.44eded10.c559ebce.fd1fa73f.37110c89.83265159.d5de5421.87ba341e.4773f344.ff86c2c3.c559ebce.fd1fa73f.becd9ff1.83265159.d5de5421"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/web-console/backend/app/apiServer.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 25,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/web-console/backend/app/apiServer.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 74,
                            "endLine": 74,
                            "startColumn": 25,
                            "endColumn": 31
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 651,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              },
              {
                "label": true,
                "type": "commonlyFixed"
              }
            ]
          }
        },
        {
          "ruleId": "java/ServerInformationExposure/test",
          "ruleIndex": 18,
          "level": "note",
          "message": {
            "text": "The stack trace from printStackTrace flows into HTTP response and is leaked to the user. This may disclose sensitive server information to the attackers.",
            "markdown": "The stack trace from {0} flows into {1} and is leaked to the user. This may disclose sensitive server information to the attackers.",
            "arguments": [
              "[printStackTrace](0)",
              "[HTTP response](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/web/ignite-websphere-test/src/main/java/org/apache/ignite/webtest/TestJtaTxServlet.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 103,
                  "endLine": 103,
                  "startColumn": 13,
                  "endColumn": 30
                }
              }
            }
          ],
          "fingerprints": {
            "0": "61ff09f95edfed552dcc4720d197cd78ec99808e7da470b911389cadaa7ad04e",
            "1": "e26de584.8bd3557c.cd271e66.e22980a8.f1d9f854.ca28b068.62adb608.54d46e25.e12df969.7f413d6f.f9737f71.e22980a8.408180c7.95df3f17.62adb608.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/web/ignite-websphere-test/src/main/java/org/apache/ignite/webtest/TestJtaTxServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 103,
                            "endLine": 103,
                            "startColumn": 13,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/web/ignite-websphere-test/src/main/java/org/apache/ignite/webtest/TestJtaTxServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 103,
                            "endLine": 103,
                            "startColumn": 13,
                            "endColumn": 30
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "python/NoHardcodedPasswords",
          "ruleIndex": 19,
          "level": "warning",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found {0} password used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[password](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docs/_docs/code-snippets/python/auth.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 30,
                  "endLine": 30,
                  "startColumn": 26,
                  "endColumn": 34
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8a5450a75b7f6ce9d1ccb0b25c29742c3974d2beac1df0bd7cbfaab9fc0a96f6",
            "1": "33c6a9f6.7e85419b.4ad07df3.b1e9f145.46462d31.ba14daf2.081ac3f4.8356f9c3.3aaab275.38d94f08.4ad07df3.b1e9f145.e9b52ee9.ba14daf2.bc860626.742d9b21"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "docs/_docs/code-snippets/python/auth.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 30,
                            "endLine": 30,
                            "startColumn": 26,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "docs/_docs/code-snippets/python/auth.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 30,
                            "endLine": 30,
                            "startColumn": 17,
                            "endColumn": 25
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/WebCookieSecureDisabledByDefault",
          "ruleIndex": 20,
          "level": "warning",
          "message": {
            "text": "Cookie misses the Secure attribute (it is false by default). Set it to true to protect the cookie from man-in-the-middle attacks.",
            "markdown": "{0} misses the Secure attribute (it is false by default). Set it to true to protect the cookie from man-in-the-middle attacks.",
            "arguments": [
              "[Cookie](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/web-console/backend/app/configure.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 60,
                  "endLine": 60,
                  "startColumn": 17,
                  "endColumn": 23
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d546683b6320cbb9105cde2ba8deee9643c8c2d9b496e71b49c0398fa8deae5a",
            "1": "06f50278.4773f344.607187b5.e052b9a9.79a7d027.557c6712.bb0395bd.f5919d50.06f50278.4773f344.f815c231.59162423.79a7d027.557c6712.aae58e7b.2b07f8ad"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/web-console/backend/app/configure.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 60,
                            "endLine": 60,
                            "startColumn": 17,
                            "endColumn": 23
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 501,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/UseCsurfForExpress",
          "ruleIndex": 21,
          "level": "warning",
          "message": {
            "text": "CSRF protection is disabled for your Express app. This allows the attackers to execute requests on a user's behalf.",
            "markdown": "CSRF protection is disabled for your {0}. This allows the attackers to execute requests on a user's behalf.",
            "arguments": [
              "[Express app](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/web-console/backend/app/apiServer.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 39,
                  "endLine": 39,
                  "startColumn": 33,
                  "endColumn": 40
                }
              }
            }
          ],
          "fingerprints": {
            "0": "fc2597c033c3029c1fd066418eb0f9504e5597be376b7d15373629bbf1440043",
            "1": "87ba341e.d9b6cad7.ff86c2c3.0015c5d5.8d22f254.5eabb05b.60d372c8.2f4aef18.87ba341e.4773f344.ff86c2c3.c559ebce.8d22f254.8020cfdf.60d372c8.2f4aef18"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/web-console/backend/app/apiServer.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 33,
                            "endColumn": 40
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/TooPermissiveHostnameVerifier/test",
          "ruleIndex": 22,
          "level": "note",
          "message": {
            "text": "The verify method always returns true, which means that any hostname is accepted. Such behaviour is insecure.",
            "markdown": "The {0} method always returns {1}, which means that any hostname is accepted. Such behaviour is insecure.",
            "arguments": [
              "[verify](0)",
              "[true](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/test/java/org/apache/ignite/testframework/junits/common/GridCommonAbstractTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 478,
                  "endLine": 478,
                  "startColumn": 38,
                  "endColumn": 44
                }
              }
            }
          ],
          "fingerprints": {
            "0": "383e3d741857581f94f9ad970a5b40613ff4312d89c48f4e1c5c11a87736287b",
            "1": "3577ba7a.528e35bc.85365f17.e22980a8.0681ed2b.eacd09e2.5b1ccecb.9c4228d3.3577ba7a.528e35bc.85365f17.e22980a8.0681ed2b.eacd09e2.5b1ccecb.9c4228d3"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/junits/common/GridCommonAbstractTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 478,
                            "endLine": 478,
                            "startColumn": 38,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/junits/common/GridCommonAbstractTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 479,
                            "endLine": 479,
                            "startColumn": 24,
                            "endColumn": 28
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/InsecureAesWithBadPaddingCipher",
          "ruleIndex": 23,
          "level": "warning",
          "message": {
            "text": "AES with CBC mode and PKCS5Padding (AES/CBC/PKCS5Padding) used in javax.crypto.Cipher.getInstance is vulnerable to padding oracle attacks. Consider using Galois/Counter Mode (algorithm AES/GCM/NoPadding).",
            "markdown": "AES with CBC mode and PKCS5Padding ({0}) used in {1} is vulnerable to padding oracle attacks. Consider using Galois/Counter Mode (algorithm AES/GCM/NoPadding).",
            "arguments": [
              "[AES/CBC/PKCS5Padding](0)",
              "[javax.crypto.Cipher.getInstance](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/main/java/org/apache/ignite/spi/encryption/keystore/KeystoreEncryptionSpi.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 128,
                  "endLine": 128,
                  "startColumn": 20,
                  "endColumn": 38
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b2145efce08239f576db0f0d66197676fcfd4d2bb4df8e3fec706c9e86cc9ebe",
            "1": "1b46a441.1cbd3ff4.42f6bbbc.e22980a8.d31a8364.f940a352.bae646e8.0ecb4e0a.6e7ad5f8.473a6c9c.42f6bbbc.de031890.d31a8364.ce109560.bae646e8.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/spi/encryption/keystore/KeystoreEncryptionSpi.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 83,
                            "endLine": 83,
                            "startColumn": 52,
                            "endColumn": 74
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/spi/encryption/keystore/KeystoreEncryptionSpi.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 128,
                            "endLine": 128,
                            "startColumn": 20,
                            "endColumn": 38
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedSecret/test",
          "ruleIndex": 24,
          "level": "note",
          "message": {
            "text": "Hardcoded value string is used as a cipher key. Generate the value with a cryptographically strong random number generator such as java.security.SecureRandom instead.",
            "markdown": "Hardcoded value {0} is used as a {1}. Generate the value with a cryptographically strong random number generator such as java.security.SecureRandom instead.",
            "arguments": [
              "[string](0)",
              "[cipher key](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/clients/src/test/java/org/apache/ignite/internal/processors/rest/JettyRestProcessorSignedSelfTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 42,
                  "endLine": 42,
                  "startColumn": 9,
                  "endColumn": 53
                }
              }
            }
          ],
          "fingerprints": {
            "0": "36a567eb0b419d2fd99337173517f609ac7746a65e321176780fb786a31576e1",
            "1": "77fb0531.2a259447.3c6baea4.e22980a8.f1d9f854.560f73f8.86cd3ace.279e7079.77fb0531.dd05ec30.3c6baea4.de031890.bb61bed7.ce109560.57a07cb2.279e7079"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/clients/src/test/java/org/apache/ignite/internal/processors/rest/JettyRestProcessorSignedSelfTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 34,
                            "endLine": 34,
                            "startColumn": 53,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/clients/src/test/java/org/apache/ignite/internal/processors/rest/JettyRestProcessorSignedSelfTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 42,
                            "endLine": 42,
                            "startColumn": 9,
                            "endColumn": 53
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/InsecureHash/test",
          "ruleIndex": 25,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in java.security.MessageDigest.getInstance) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The {0} hash (used in {1}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[MD5](0)",
              "[java.security.MessageDigest.getInstance](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/test/java/org/apache/ignite/cache/affinity/rendezvous/RendezvousAffinityFunctionSimpleBenchmark.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 627,
                  "endLine": 627,
                  "startColumn": 28,
                  "endColumn": 53
                }
              }
            }
          ],
          "fingerprints": {
            "0": "439257b1a640a1835fb92a0971014c7bb983bf8fc50250b5c1dfe0ea0ba26c11",
            "1": "1b46a441.da263459.fc7d5400.e22980a8.d31a8364.b70401ce.bae646e8.1d874c72.1b46a441.da263459.fc7d5400.e22980a8.d31a8364.b70401ce.bae646e8.1d874c72"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/cache/affinity/rendezvous/RendezvousAffinityFunctionSimpleBenchmark.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 627,
                            "endLine": 627,
                            "startColumn": 54,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/cache/affinity/rendezvous/RendezvousAffinityFunctionSimpleBenchmark.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 627,
                            "endLine": 627,
                            "startColumn": 28,
                            "endColumn": 53
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/InsecureHash/test",
          "ruleIndex": 25,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in java.security.MessageDigest.getInstance) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The {0} hash (used in {1}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[MD5](0)",
              "[java.security.MessageDigest.getInstance](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/test/java/org/apache/ignite/cache/affinity/rendezvous/RendezvousAffinityFunctionSimpleBenchmark.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 728,
                  "endLine": 728,
                  "startColumn": 17,
                  "endColumn": 42
                }
              }
            }
          ],
          "fingerprints": {
            "0": "82f60e7c1d90e7df00d2d60a66c124c051ce15a7e2aa33fecbbd9e4bf5480875",
            "1": "1b46a441.da263459.fc7d5400.e22980a8.d31a8364.b70401ce.bae646e8.54d46e25.1b46a441.da263459.fc7d5400.e22980a8.d31a8364.b70401ce.bae646e8.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/cache/affinity/rendezvous/RendezvousAffinityFunctionSimpleBenchmark.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 728,
                            "endLine": 728,
                            "startColumn": 43,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/cache/affinity/rendezvous/RendezvousAffinityFunctionSimpleBenchmark.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 728,
                            "endLine": 728,
                            "startColumn": 17,
                            "endColumn": 42
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/InsecureHash/test",
          "ruleIndex": 25,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in java.security.MessageDigest.getInstance) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The {0} hash (used in {1}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[MD5](0)",
              "[java.security.MessageDigest.getInstance](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/calcite/src/test/java/org/apache/ignite/internal/processors/query/calcite/logical/SqlScriptRunner.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 131,
                  "endLine": 131,
                  "startColumn": 29,
                  "endColumn": 54
                }
              }
            }
          ],
          "fingerprints": {
            "0": "da4e1fc896a202c27c33cd082a0d1ad8be57b244222e422042dadc33e89be843",
            "1": "ca9876a9.da263459.33fa5dbe.e22980a8.bc071aa8.7fda7c5e.a7ce700b.54d46e25.ca9876a9.da263459.33fa5dbe.e22980a8.bc071aa8.7fda7c5e.a7ce700b.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/calcite/src/test/java/org/apache/ignite/internal/processors/query/calcite/logical/SqlScriptRunner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 131,
                            "endLine": 131,
                            "startColumn": 55,
                            "endColumn": 60
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/calcite/src/test/java/org/apache/ignite/internal/processors/query/calcite/logical/SqlScriptRunner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 131,
                            "endLine": 131,
                            "startColumn": 29,
                            "endColumn": 54
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/InsecureHash/test",
          "ruleIndex": 25,
          "level": "note",
          "message": {
            "text": "The SHA-1 hash (used in java.security.MessageDigest.getInstance) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The {0} hash (used in {1}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[SHA-1](0)",
              "[java.security.MessageDigest.getInstance](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/clients/src/test/java/org/apache/ignite/internal/processors/rest/JettyRestProcessorSignedSelfTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 88,
                  "endLine": 88,
                  "startColumn": 32,
                  "endColumn": 57
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3a99277dba4976da85447bf404a89a6d5ad5f68caea60685ea90fd23c3dd369d",
            "1": "19689298.1cbd3ff4.e99130b3.5e6ab657.98fa8f9f.f53a5558.0a026dee.54d46e25.19689298.1cbd3ff4.e99130b3.5e6ab657.98fa8f9f.f53a5558.0a026dee.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/clients/src/test/java/org/apache/ignite/internal/processors/rest/JettyRestProcessorSignedSelfTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 58,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/clients/src/test/java/org/apache/ignite/internal/processors/rest/JettyRestProcessorSignedSelfTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 32,
                            "endColumn": 57
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/HttpToHttps",
          "ruleIndex": 26,
          "level": "warning",
          "message": {
            "text": "http.createServer uses HTTP which is an insecure protocol and should not be used in code due to cleartext transmission of information. Data in cleartext in a communication channel can be sniffed by unauthorized actors. Consider using the https module instead.",
            "markdown": "{0} uses HTTP which is an insecure protocol and should not be used in code due to cleartext transmission of information. Data in cleartext in a communication channel can be sniffed by unauthorized actors. Consider using the https module instead.",
            "arguments": [
              "[http.createServer](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/web-console/backend/index.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 86,
                  "endLine": 86,
                  "startColumn": 95,
                  "endColumn": 112
                }
              }
            }
          ],
          "fingerprints": {
            "0": "79eaf78755a5df5655cbc151574d698123087307ce264e9d0674c0f4f11504c5",
            "1": "31baf5f3.e2a317f0.0ae7e07b.a3a52f1c.e1e04332.eb8c1bb0.01f15059.b1b5c7cb.31baf5f3.e2a317f0.0ae7e07b.a3a52f1c.e1e04332.eb8c1bb0.01f15059.b1b5c7cb"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/web-console/backend/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 86,
                            "endLine": 86,
                            "startColumn": 95,
                            "endColumn": 112
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 501,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials",
          "ruleIndex": 27,
          "level": "warning",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in username.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[username](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docs/_docs/code-snippets/python/auth.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 29,
                  "endLine": 29,
                  "startColumn": 26,
                  "endColumn": 34
                }
              }
            }
          ],
          "fingerprints": {
            "0": "2f80fa6e8b55ef2a2aef4eb846ecb49e4adead8ac3724361d64eaf6601e8ea02",
            "1": "3aaab275.a4c51f0e.4ad07df3.31d647b1.46462d31.ba14daf2.081ac3f4.8356f9c3.3aaab275.38d94f08.4ad07df3.b1e9f145.e9b52ee9.ba14daf2.bc860626.742d9b21"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "docs/_docs/code-snippets/python/auth.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 29,
                            "endLine": 29,
                            "startColumn": 26,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "docs/_docs/code-snippets/python/auth.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 29,
                            "endLine": 29,
                            "startColumn": 17,
                            "endColumn": 25
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/SetWorldWritable",
          "ruleIndex": 28,
          "level": "warning",
          "message": {
            "text": "Call to setWritable with writeable value set to \"true\" allows write access permission to a resource, which could be read or modified by unintended actors.",
            "markdown": "Call to {0} with writeable value set to \"true\" allows write access permission to a resource, which could be read or modified by unintended actors.",
            "arguments": [
              "[setWritable](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/portscanner/GridJmxPortFinder.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 80,
                  "endLine": 80,
                  "startColumn": 13,
                  "endColumn": 29
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a387ca5cc9e454a2bfab408be4f80f107c3fc7aafcae8d6b6281ae4d6e2084e6",
            "1": "31db0352.bc0aca0e.fc7d5400.f9bdd8eb.d31a8364.9e5b8144.bae646e8.54d46e25.19689298.83dbfe52.fc7d5400.f9bdd8eb.d31a8364.9e5b8144.bae646e8.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/portscanner/GridJmxPortFinder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 13,
                            "endColumn": 29
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 29,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/clients/src/test/java/org/apache/ignite/jdbc/thin/JdbcThinAuthenticateConnectionSelfTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 120,
                  "endLine": 120,
                  "startColumn": 32,
                  "endColumn": 59
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8f5d718aaae41789839b91edf5317d927987d952ee2e8b27aafa047df373179d",
            "1": "f6e0d636.a6d8c178.14535f1c.afb32f9c.d31a8364.3f24be90.bae646e8.0f2b422a.f6e0d636.a6d8c178.14535f1c.afb32f9c.d31a8364.3f24be90.bae646e8.0f2b422a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/clients/src/test/java/org/apache/ignite/jdbc/thin/JdbcThinAuthenticateConnectionSelfTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 120,
                            "endLine": 120,
                            "startColumn": 75,
                            "endColumn": 83
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 29,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/clients/src/test/java/org/apache/ignite/jdbc/thin/JdbcThinAuthenticateConnectionSelfTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 140,
                  "endLine": 140,
                  "startColumn": 32,
                  "endColumn": 59
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b5029330836c39ae12d0e9c0c0cf0e129722203cca7bd81c957aa8fe4484a891",
            "1": "2ef7e926.1cbd3ff4.14535f1c.68cf9df5.2f467414.3f24be90.bae646e8.0f2b422a.f6e0d636.1cbd3ff4.14535f1c.68cf9df5.2f467414.3f24be90.737f8113.0f2b422a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/clients/src/test/java/org/apache/ignite/jdbc/thin/JdbcThinAuthenticateConnectionSelfTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 140,
                            "endLine": 140,
                            "startColumn": 81,
                            "endColumn": 89
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 29,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/clients/src/test/java/org/apache/ignite/jdbc/thin/JdbcThinAuthenticateConnectionSelfTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 183,
                  "endLine": 183,
                  "startColumn": 32,
                  "endColumn": 59
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e7653477852cd4dab3a53bc016015e4da29b13d538098ada12fdfcaf33ea9c56",
            "1": "f6e0d636.a6d8c178.14535f1c.afb32f9c.d31a8364.3f24be90.bae646e8.0f2b422a.f6e0d636.a6d8c178.14535f1c.afb32f9c.d31a8364.3f24be90.bae646e8.0f2b422a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/clients/src/test/java/org/apache/ignite/jdbc/thin/JdbcThinAuthenticateConnectionSelfTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 183,
                            "endLine": 183,
                            "startColumn": 75,
                            "endColumn": 83
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 29,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/clients/src/test/java/org/apache/ignite/jdbc/thin/JdbcThinAuthenticateConnectionSelfTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 200,
                  "endLine": 200,
                  "startColumn": 32,
                  "endColumn": 59
                }
              }
            }
          ],
          "fingerprints": {
            "0": "430b2df7f325c915ddca3c8e35fd18208ee6add88d5c71f4069ddbecdfdaad92",
            "1": "f6e0d636.1cbd3ff4.14535f1c.60f340cc.d31a8364.f940a352.bae646e8.53857506.f6e0d636.e8caae0b.14535f1c.60f340cc.d31a8364.3f24be90.0ac97cd8.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/clients/src/test/java/org/apache/ignite/jdbc/thin/JdbcThinAuthenticateConnectionSelfTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 94,
                            "endLine": 94,
                            "startColumn": 40,
                            "endColumn": 48
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 29,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/test/java/org/apache/ignite/internal/encryption/AbstractEncryptionTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 294,
                  "endLine": 294,
                  "startColumn": 21,
                  "endColumn": 48
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a972e12c55de593f4ffe8d16ae5d2e4484a414f06757ede91b58c47a1315c395",
            "1": "4e696cbd.61528139.c8a839b8.d6ab05b5.e39a9447.e2f0b62f.12efa029.3d402e85.c0846cd0.f6eebaf2.3c7d90aa.de031890.8b2d3351.bff76d30.eb038df0.3d402e85"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/internal/encryption/AbstractEncryptionTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 92,
                            "endLine": 92,
                            "startColumn": 52,
                            "endColumn": 66
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 29,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/test/java/org/apache/ignite/internal/encryption/AbstractEncryptionTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 302,
                  "endLine": 302,
                  "startColumn": 13,
                  "endColumn": 21
                }
              }
            }
          ],
          "fingerprints": {
            "0": "71402fbb6ca6213bcb27ba7813fb7e612d07495c01677928b4efc49a79e411b2",
            "1": "362af7fe.f6eebaf2.fc7d5400.d6ab05b5.d31a8364.e2f0b62f.bae646e8.54d46e25.362af7fe.f6eebaf2.075f7928.383ea08e.d31a8364.bff76d30.bae646e8.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/internal/encryption/AbstractEncryptionTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 92,
                            "endLine": 92,
                            "startColumn": 52,
                            "endColumn": 66
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket",
          "ruleIndex": 30,
          "level": "warning",
          "message": {
            "text": "Writing to an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Writing to](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/main/java/org/apache/ignite/internal/client/thin/TcpClientChannel.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 103,
                  "endLine": 103,
                  "startColumn": 19,
                  "endColumn": 39
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f82696e33162f72e8883072a2c1ad618eeb68b2504201c092a595ddbb9c8440d",
            "1": "f9545bfc.49766a9f.bb993ef0.e22980a8.c41fd899.7fda7c5e.36de4586.54d46e25.f9545bfc.be62888c.bb993ef0.e22980a8.c41fd899.85d83993.36de4586.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/client/thin/TcpClientChannel.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 103,
                            "endLine": 103,
                            "startColumn": 19,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/client/thin/TcpClientChannel.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 103,
                            "endLine": 103,
                            "startColumn": 19,
                            "endColumn": 39
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket",
          "ruleIndex": 30,
          "level": "warning",
          "message": {
            "text": "Writing to an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Writing to](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/main/java/org/apache/ignite/spi/discovery/tcp/TcpDiscoverySpi.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1499,
                  "endLine": 1499,
                  "startColumn": 32,
                  "endColumn": 52
                }
              }
            }
          ],
          "fingerprints": {
            "0": "752308c94d56453f793fe4136b606ef177bfb402bb2c77ab66e45826ab9cd016",
            "1": "f9545bfc.49766a9f.2236f628.e1c7b7e6.390f960b.1ca6e5b4.36de4586.54d46e25.f9545bfc.49766a9f.33fa5dbe.6c52ae28.390f960b.7fda7c5e.36de4586.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/spi/discovery/tcp/TcpDiscoverySpi.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1499,
                            "endLine": 1499,
                            "startColumn": 32,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/spi/discovery/tcp/TcpDiscoverySpi.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1499,
                            "endLine": 1499,
                            "startColumn": 32,
                            "endColumn": 52
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket",
          "ruleIndex": 30,
          "level": "warning",
          "message": {
            "text": "Writing to an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Writing to](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 128,
                  "endLine": 128,
                  "startColumn": 61,
                  "endColumn": 81
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6c8b27e2e5eef64a803011a4b6afef1ac3032b3e1d60df8968f7a3acfa27f331",
            "1": "ac4e7c8b.c6f63401.bb993ef0.6c52ae28.56683ff4.48eeb24b.b8a46f6f.0f01a149.19689298.83dbfe52.bb993ef0.6c52ae28.56683ff4.85d83993.b8a46f6f.0f01a149"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 128,
                            "endLine": 128,
                            "startColumn": 61,
                            "endColumn": 81
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 128,
                            "endLine": 128,
                            "startColumn": 61,
                            "endColumn": 81
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket",
          "ruleIndex": 30,
          "level": "warning",
          "message": {
            "text": "Writing to an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Writing to](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/loopback/IpcClientTcpEndpoint.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 78,
                  "endLine": 78,
                  "startColumn": 20,
                  "endColumn": 46
                }
              }
            }
          ],
          "fingerprints": {
            "0": "99a41345a8e0c2ad2d126fdbdf2cba04ccbba978d389832ed103de18c0847648",
            "1": "a7b386a4.ff76257e.33fa5dbe.e22980a8.d31a8364.7fda7c5e.bae646e8.54d46e25.a7b386a4.ff76257e.33fa5dbe.e22980a8.d31a8364.7fda7c5e.bae646e8.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/loopback/IpcClientTcpEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 20,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/loopback/IpcClientTcpEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 20,
                            "endColumn": 46
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket",
          "ruleIndex": 30,
          "level": "warning",
          "message": {
            "text": "Writing to an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Writing to](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "examples/src/main/java/org/apache/ignite/examples/streaming/wordcount/socket/WordsSocketStreamerClient.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 62,
                  "endLine": 62,
                  "startColumn": 57,
                  "endColumn": 77
                }
              }
            }
          ],
          "fingerprints": {
            "0": "4ce4bfd833d2bf0ee67fa8f6109d26d3b213f5e0d0393a903cbe503edcdc1ba7",
            "1": "19689298.83dbfe52.5c8b6ef6.6c52ae28.56683ff4.85d83993.577874a8.0f01a149.3d15ba81.83dbfe52.5c8b6ef6.6c52ae28.39104d1e.85d83993.14f565b1.0f01a149"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "examples/src/main/java/org/apache/ignite/examples/streaming/wordcount/socket/WordsSocketStreamerClient.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 62,
                            "endLine": 62,
                            "startColumn": 57,
                            "endColumn": 77
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "examples/src/main/java/org/apache/ignite/examples/streaming/wordcount/socket/WordsSocketStreamerClient.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 62,
                            "endLine": 62,
                            "startColumn": 57,
                            "endColumn": 77
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 501,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket",
          "ruleIndex": 30,
          "level": "warning",
          "message": {
            "text": "Reading from an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Reading from](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/main/java/org/apache/ignite/internal/client/thin/TcpClientChannel.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 104,
                  "endLine": 104,
                  "startColumn": 18,
                  "endColumn": 37
                }
              }
            }
          ],
          "fingerprints": {
            "0": "fcfccaeda581a7eefa6543187de1b7bb26f5fab202246860a77662f3ad7a7ddc",
            "1": "aea7741a.c6f63401.bb993ef0.c48320d7.c41fd899.7fda7c5e.b8a46f6f.54d46e25.bbbd7c96.be62888c.bb993ef0.c48320d7.c41fd899.85d83993.b192288b.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/client/thin/TcpClientChannel.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 104,
                            "endLine": 104,
                            "startColumn": 18,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/client/thin/TcpClientChannel.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 104,
                            "endLine": 104,
                            "startColumn": 18,
                            "endColumn": 37
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket",
          "ruleIndex": 30,
          "level": "warning",
          "message": {
            "text": "Reading from an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Reading from](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 134,
                  "endLine": 134,
                  "startColumn": 58,
                  "endColumn": 77
                }
              }
            }
          ],
          "fingerprints": {
            "0": "71a69a0e1467d42ed1648a9887d92f2e81f4c4e1452e0bb4a6ab799d7b82fb89",
            "1": "aea7741a.c6f63401.bb993ef0.6c52ae28.56683ff4.4cdc7c2d.b8a46f6f.0f01a149.19689298.83dbfe52.bb993ef0.6c52ae28.56683ff4.85d83993.b8a46f6f.0f01a149"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 134,
                            "endLine": 134,
                            "startColumn": 58,
                            "endColumn": 77
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 134,
                            "endLine": 134,
                            "startColumn": 58,
                            "endColumn": 77
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket",
          "ruleIndex": 30,
          "level": "warning",
          "message": {
            "text": "Reading from an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Reading from](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/loopback/IpcClientTcpEndpoint.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 68,
                  "endLine": 68,
                  "startColumn": 20,
                  "endColumn": 45
                }
              }
            }
          ],
          "fingerprints": {
            "0": "cb8395c9b95331c30325dd25f94b5560c2d1ebad9caffda8f24196c6b82a13c8",
            "1": "a7b386a4.ff76257e.bb993ef0.e22980a8.d31a8364.7fda7c5e.bae646e8.54d46e25.a7b386a4.ff76257e.bb993ef0.e22980a8.d31a8364.7fda7c5e.bae646e8.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/loopback/IpcClientTcpEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 68,
                            "endLine": 68,
                            "startColumn": 20,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/loopback/IpcClientTcpEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 68,
                            "endLine": 68,
                            "startColumn": 20,
                            "endColumn": 45
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/Ssrf",
          "ruleIndex": 31,
          "level": "error",
          "message": {
            "text": "Unsanitized input from the request URL flows into openConnection, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
            "arguments": [
              "[the request URL](0)",
              "[flows](1),(2),(3),(4),(5)",
              "[openConnection](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/mesos/src/main/java/org/apache/ignite/mesos/resource/IgniteProvider.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 101,
                  "endLine": 101,
                  "startColumn": 57,
                  "endColumn": 75
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f9d31b3dbce6c199f2ea2224cf3eb24b962ad91999fc403bb48b4bee19c498f8",
            "1": "6d351a63.9a87848e.a224ef38.60f340cc.58fed59e.7f705fbf.5fb5de37.d5121e89.6d351a63.9a87848e.49d8a740.e22980a8.f84cffab.7fda7c5e.a62d0864.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/mesos/src/main/java/org/apache/ignite/mesos/resource/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 23,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/mesos/src/main/java/org/apache/ignite/mesos/resource/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 23,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/mesos/src/main/java/org/apache/ignite/mesos/resource/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 17,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/mesos/src/main/java/org/apache/ignite/mesos/resource/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 31,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/mesos/src/main/java/org/apache/ignite/mesos/resource/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 97,
                            "endLine": 97,
                            "startColumn": 35,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/mesos/src/main/java/org/apache/ignite/mesos/resource/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 101,
                            "endLine": 101,
                            "startColumn": 57,
                            "endColumn": 60
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/mesos/src/main/java/org/apache/ignite/mesos/resource/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 101,
                            "endLine": 101,
                            "startColumn": 57,
                            "endColumn": 75
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 801,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/Ssrf",
          "ruleIndex": 31,
          "level": "error",
          "message": {
            "text": "Unsanitized input from the HTTP request body flows into openConnection, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
            "arguments": [
              "[the HTTP request body](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27)",
              "[openConnection](28)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/urideploy/src/main/java/org/apache/ignite/spi/deployment/uri/scanners/http/UriDeploymentHttpScanner.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 299,
                  "endLine": 299,
                  "startColumn": 46,
                  "endColumn": 73
                }
              }
            }
          ],
          "fingerprints": {
            "0": "943439bee7ba25f8d74e88c1af043c7e9ac49ced19ef425b7ad5e58780baa35d",
            "1": "6d351a63.9a87848e.35d66547.4eddf48e.e53b8b28.7f705fbf.5fb5de37.d5121e89.e1d7cd7c.660e524c.1427ee93.c48320d7.d31a8364.7fda7c5e.1728803a.edb8ff95"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/urideploy/src/main/java/org/apache/ignite/spi/deployment/uri/scanners/http/UriDeploymentHttpScanner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 396,
                            "endLine": 396,
                            "startColumn": 22,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/urideploy/src/main/java/org/apache/ignite/spi/deployment/uri/scanners/http/UriDeploymentHttpScanner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 396,
                            "endLine": 396,
                            "startColumn": 22,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/urideploy/src/main/java/org/apache/ignite/spi/deployment/uri/scanners/http/UriDeploymentHttpScanner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 396,
                            "endLine": 396,
                            "startColumn": 17,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/urideploy/src/main/java/org/apache/ignite/spi/deployment/uri/scanners/http/UriDeploymentHttpScanner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 401,
                            "endLine": 401,
                            "startColumn": 23,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/urideploy/src/main/java/org/apache/ignite/spi/deployment/uri/scanners/http/UriDeploymentHttpScanner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 401,
                            "endLine": 401,
                            "startColumn": 17,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/urideploy/src/main/java/org/apache/ignite/spi/deployment/uri/scanners/http/UriDeploymentHttpScanner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 422,
                            "endLine": 422,
                            "startColumn": 32,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/urideploy/src/main/java/org/apache/ignite/spi/deployment/uri/scanners/http/UriDeploymentHttpScanner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 434,
                            "endLine": 434,
                            "startColumn": 37,
                            "endColumn": 58
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/urideploy/src/main/java/org/apache/ignite/spi/deployment/uri/scanners/http/UriDeploymentHttpScanner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 436,
                            "endLine": 436,
                            "startColumn": 17,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/urideploy/src/main/java/org/apache/ignite/spi/deployment/uri/scanners/http/UriDeploymentHttpScanner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 436,
                            "endLine": 436,
                            "startColumn": 55,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/urideploy/src/main/java/org/apache/ignite/spi/deployment/uri/scanners/http/UriDeploymentHttpScanner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 437,
                            "endLine": 437,
                            "startColumn": 44,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/urideploy/src/main/java/org/apache/ignite/spi/deployment/uri/scanners/http/UriDeploymentHttpScanner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 437,
                            "endLine": 437,
                            "startColumn": 25,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/urideploy/src/main/java/org/apache/ignite/spi/deployment/uri/scanners/http/UriDeploymentHttpScanner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 439,
                            "endLine": 439,
                            "startColumn": 31,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/urideploy/src/main/java/org/apache/ignite/spi/deployment/uri/scanners/http/UriDeploymentHttpScanner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 439,
                            "endLine": 439,
                            "startColumn": 31,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/urideploy/src/main/java/org/apache/ignite/spi/deployment/uri/scanners/http/UriDeploymentHttpScanner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 439,
                            "endLine": 439,
                            "startColumn": 24,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/urideploy/src/main/java/org/apache/ignite/spi/deployment/uri/scanners/http/UriDeploymentHttpScanner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 441,
                            "endLine": 441,
                            "startColumn": 38,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/urideploy/src/main/java/org/apache/ignite/spi/deployment/uri/scanners/http/UriDeploymentHttpScanner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 445,
                            "endLine": 445,
                            "startColumn": 35,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/urideploy/src/main/java/org/apache/ignite/spi/deployment/uri/scanners/http/UriDeploymentHttpScanner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 445,
                            "endLine": 445,
                            "startColumn": 25,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/urideploy/src/main/java/org/apache/ignite/spi/deployment/uri/scanners/http/UriDeploymentHttpScanner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 458,
                            "endLine": 458,
                            "startColumn": 33,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/urideploy/src/main/java/org/apache/ignite/spi/deployment/uri/scanners/http/UriDeploymentHttpScanner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 458,
                            "endLine": 458,
                            "startColumn": 33,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/urideploy/src/main/java/org/apache/ignite/spi/deployment/uri/scanners/http/UriDeploymentHttpScanner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 458,
                            "endLine": 458,
                            "startColumn": 25,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/urideploy/src/main/java/org/apache/ignite/spi/deployment/uri/scanners/http/UriDeploymentHttpScanner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 434,
                            "endLine": 434,
                            "startColumn": 60,
                            "endColumn": 75
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/urideploy/src/main/java/org/apache/ignite/spi/deployment/uri/scanners/http/UriDeploymentHttpScanner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 424,
                            "endLine": 424,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/urideploy/src/main/java/org/apache/ignite/spi/deployment/uri/scanners/http/UriDeploymentHttpScanner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 283,
                            "endLine": 283,
                            "startColumn": 25,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/urideploy/src/main/java/org/apache/ignite/spi/deployment/uri/scanners/http/UriDeploymentHttpScanner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 285,
                            "endLine": 285,
                            "startColumn": 31,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/urideploy/src/main/java/org/apache/ignite/spi/deployment/uri/scanners/http/UriDeploymentHttpScanner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 285,
                            "endLine": 285,
                            "startColumn": 25,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/urideploy/src/main/java/org/apache/ignite/spi/deployment/uri/scanners/http/UriDeploymentHttpScanner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 472,
                            "endLine": 472,
                            "startColumn": 33,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/urideploy/src/main/java/org/apache/ignite/spi/deployment/uri/scanners/http/UriDeploymentHttpScanner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 299,
                            "endLine": 299,
                            "startColumn": 50,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/urideploy/src/main/java/org/apache/ignite/spi/deployment/uri/scanners/http/UriDeploymentHttpScanner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 299,
                            "endLine": 299,
                            "startColumn": 46,
                            "endColumn": 58
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/urideploy/src/main/java/org/apache/ignite/spi/deployment/uri/scanners/http/UriDeploymentHttpScanner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 299,
                            "endLine": 299,
                            "startColumn": 46,
                            "endColumn": 73
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 801,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/Deserialization",
          "ruleIndex": 32,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from data from a remote resource flows into java.io.ObjectInputStream, where it is used to deserialize an object. This may result in an Unsafe Deserialization vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to deserialize an object. This may result in an Unsafe Deserialization vulnerability.",
            "arguments": [
              "[data from a remote resource](0)",
              "[flows](1)",
              "[java.io.ObjectInputStream](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 134,
                  "endLine": 134,
                  "startColumn": 40,
                  "endColumn": 57
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c6d9aab419d752dde1525c34c6e3c5aec4afd7b344aba7a2eea98ede69e02575",
            "1": "aea7741a.c6f63401.85876e60.6c52ae28.56683ff4.4cdc7c2d.b8a46f6f.0f01a149.e2030dc2.87285a1e.bb993ef0.c48320d7.ae76d99a.85d83993.3241443d.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 134,
                            "endLine": 134,
                            "startColumn": 58,
                            "endColumn": 77
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 134,
                            "endLine": 134,
                            "startColumn": 58,
                            "endColumn": 77
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 134,
                            "endLine": 134,
                            "startColumn": 40,
                            "endColumn": 57
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/Deserialization",
          "ruleIndex": 32,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from data from a remote resource flows into java.io.ObjectInputStream, where it is used to deserialize an object. This may result in an Unsafe Deserialization vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to deserialize an object. This may result in an Unsafe Deserialization vulnerability.",
            "arguments": [
              "[data from a remote resource](0)",
              "[flows](1),(2),(3)",
              "[java.io.ObjectInputStream](4)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryServerEndpoint.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 233,
                  "endLine": 233,
                  "startColumn": 44,
                  "endColumn": 61
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0578d7b30ec5c9617fd8b757b69cc5e0ab5eda6860775aac20be018aaac89c03",
            "1": "19689298.83dbfe52.bb993ef0.6c52ae28.6dbefcdf.4cdc7c2d.78adfa9a.54d46e25.19689298.0762d780.bb993ef0.de031890.6dbefcdf.fc0e2c7e.c66d287d.8f838854"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryServerEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 232,
                            "endLine": 232,
                            "startColumn": 43,
                            "endColumn": 62
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryServerEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 232,
                            "endLine": 232,
                            "startColumn": 43,
                            "endColumn": 62
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryServerEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 232,
                            "endLine": 232,
                            "startColumn": 29,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryServerEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 233,
                            "endLine": 233,
                            "startColumn": 62,
                            "endColumn": 73
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryServerEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 233,
                            "endLine": 233,
                            "startColumn": 44,
                            "endColumn": 61
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/InsecureSecret",
          "ruleIndex": 33,
          "level": "error",
          "message": {
            "text": "Insecure random data flows from nextBytes and is used as a cipher initialization value. Generate the value with a cryptographically strong random number generator such as java.security.SecureRandom instead.",
            "markdown": "Insecure random data {0} from {1} and is used as a {2}. Generate the value with a cryptographically strong random number generator such as java.security.SecureRandom instead.",
            "arguments": [
              "[flows](0)",
              "[nextBytes](1)",
              "[cipher initialization value](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/main/java/org/apache/ignite/spi/encryption/keystore/KeystoreEncryptionSpi.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 262,
                  "endLine": 262,
                  "startColumn": 52,
                  "endColumn": 67
                }
              }
            }
          ],
          "fingerprints": {
            "0": "21c7e24f3ee495fdb4b740b53de709338043ee9b4d3530a046570a9acd2d35de",
            "1": "a75b04d3.7cd4917b.c0d53f87.6c52ae28.178caa9c.50b3887f.0d475b83.b1edfd8e.a75b04d3.f8566157.c29ce5c8.194c63bb.6f07a05e.eada7d42.0d475b83.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/spi/encryption/keystore/KeystoreEncryptionSpi.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 388,
                            "endLine": 388,
                            "startColumn": 9,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/spi/encryption/keystore/KeystoreEncryptionSpi.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 388,
                            "endLine": 388,
                            "startColumn": 9,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/spi/encryption/keystore/KeystoreEncryptionSpi.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 262,
                            "endLine": 262,
                            "startColumn": 52,
                            "endColumn": 67
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 801,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "csharp/PT",
          "ruleIndex": 34,
          "level": "error",
          "message": {
            "text": "(BETA Suggestion) Unsanitized input from a command line argument flows into global::System.IO.File.Exists, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to obtain information about arbitrary files.",
            "markdown": "(BETA Suggestion) Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to obtain information about arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29)",
              "[global::System.IO.File.Exists](30)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/platforms/dotnet/Apache.Ignite/IgniteRunner.cs",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 100,
                  "endLine": 100,
                  "startColumn": 53,
                  "endColumn": 82
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5f2b99274992d8dd00cedca5b8ffebc42d8959a61a7380a95009a21f94ad683b",
            "1": "96f36779.8c06c0b2.68418e3d.f5757239.1ebf615a.7e971bc1.5f1fa597.aee5d829.20a3e71c.8c06c0b2.1d318ef7.f5757239.a416a31a.c18e745c.ce0185b2.bfebfde9"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/IgniteRunner.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 50,
                            "endLine": 50,
                            "startColumn": 35,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/IgniteRunner.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 50,
                            "endLine": 50,
                            "startColumn": 35,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/IgniteRunner.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 21,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/IgniteRunner.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 60,
                            "endLine": 60,
                            "startColumn": 36,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/IgniteRunner.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 47,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/IgniteRunner.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 163,
                            "endLine": 163,
                            "startColumn": 48,
                            "endColumn": 61
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/IgniteRunner.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 165,
                            "endLine": 165,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/IgniteRunner.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 165,
                            "endLine": 165,
                            "startColumn": 20,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/IgniteRunner.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 165,
                            "endLine": 165,
                            "startColumn": 20,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/IgniteRunner.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 25,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/IgniteRunner.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 94,
                            "endLine": 94,
                            "startColumn": 33,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/IgniteRunner.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 93,
                            "endLine": 93,
                            "startColumn": 35,
                            "endColumn": 100
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/IgniteRunner.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 93,
                            "endLine": 94,
                            "startColumn": 35,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/IgniteRunner.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 93,
                            "endLine": 93,
                            "startColumn": 25,
                            "endColumn": 100
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/IgniteRunner.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 100,
                            "endLine": 100,
                            "startColumn": 83,
                            "endColumn": 90
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/Config/Configurator.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 60,
                            "endColumn": 88
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/Config/Configurator.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 75,
                            "endLine": 75,
                            "startColumn": 48,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/Config/Configurator.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 137,
                            "endLine": 137,
                            "startColumn": 69,
                            "endColumn": 97
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/Config/Configurator.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 139,
                            "endLine": 139,
                            "startColumn": 38,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/Config/Configurator.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 177,
                            "endLine": 177,
                            "startColumn": 41,
                            "endColumn": 80
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/Config/Configurator.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 180,
                            "endLine": 180,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/Config/Configurator.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 180,
                            "endLine": 181,
                            "startColumn": 20,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/Config/Configurator.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 180,
                            "endLine": 182,
                            "startColumn": 20,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/Config/Configurator.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 180,
                            "endLine": 183,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/Config/Configurator.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 139,
                            "endLine": 139,
                            "startColumn": 17,
                            "endColumn": 58
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/Config/Configurator.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 147,
                            "endLine": 147,
                            "startColumn": 80,
                            "endColumn": 88
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/Config/Configurator.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 164,
                            "endLine": 164,
                            "startColumn": 61,
                            "endColumn": 76
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/Config/Configurator.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 166,
                            "endLine": 166,
                            "startColumn": 32,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/Config/Configurator.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 166,
                            "endLine": 166,
                            "startColumn": 17,
                            "endColumn": 58
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 29,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/Config/Configurator.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 168,
                            "endLine": 168,
                            "startColumn": 30,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 30,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/Config/Configurator.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 168,
                            "endLine": 168,
                            "startColumn": 18,
                            "endColumn": 29
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 801,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "csharp/PT",
          "ruleIndex": 34,
          "level": "error",
          "message": {
            "text": "(BETA Suggestion) Unsanitized input from a command line argument flows into global::System.IO.File.Exists, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to obtain information about arbitrary files.",
            "markdown": "(BETA Suggestion) Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to obtain information about arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26)",
              "[global::System.IO.File.Exists](27)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/platforms/dotnet/Apache.Ignite/IgniteRunner.cs",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 120,
                  "endLine": 120,
                  "startColumn": 23,
                  "endColumn": 52
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a347b1ca04509f279ccbec139ae0abea3e8ae5d0e034054600aa26ac149481ee",
            "1": "ae951b55.5894468a.50fe9b47.f5757239.4a5c8084.2f4e1548.5f1fa597.0a931e49.330be6b8.39b8d118.1d318ef7.f5757239.a416a31a.c18e745c.ce0185b2.f86b96a7"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/IgniteRunner.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 50,
                            "endLine": 50,
                            "startColumn": 35,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/IgniteRunner.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 50,
                            "endLine": 50,
                            "startColumn": 35,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/IgniteRunner.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 21,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/IgniteRunner.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 60,
                            "endLine": 60,
                            "startColumn": 36,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/IgniteRunner.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 47,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/IgniteRunner.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 163,
                            "endLine": 163,
                            "startColumn": 48,
                            "endColumn": 61
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/IgniteRunner.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 165,
                            "endLine": 165,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/IgniteRunner.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 165,
                            "endLine": 165,
                            "startColumn": 20,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/IgniteRunner.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 165,
                            "endLine": 165,
                            "startColumn": 20,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/IgniteRunner.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 25,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/IgniteRunner.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 120,
                            "endLine": 120,
                            "startColumn": 53,
                            "endColumn": 77
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/IgniteRunner.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 120,
                            "endLine": 120,
                            "startColumn": 53,
                            "endColumn": 91
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/Config/Configurator.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 60,
                            "endColumn": 88
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/Config/Configurator.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 75,
                            "endLine": 75,
                            "startColumn": 48,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/Config/Configurator.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 137,
                            "endLine": 137,
                            "startColumn": 69,
                            "endColumn": 97
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/Config/Configurator.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 139,
                            "endLine": 139,
                            "startColumn": 38,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/Config/Configurator.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 177,
                            "endLine": 177,
                            "startColumn": 41,
                            "endColumn": 80
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/Config/Configurator.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 180,
                            "endLine": 180,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/Config/Configurator.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 180,
                            "endLine": 181,
                            "startColumn": 20,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/Config/Configurator.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 180,
                            "endLine": 182,
                            "startColumn": 20,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/Config/Configurator.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 180,
                            "endLine": 183,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/Config/Configurator.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 139,
                            "endLine": 139,
                            "startColumn": 17,
                            "endColumn": 58
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/Config/Configurator.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 147,
                            "endLine": 147,
                            "startColumn": 80,
                            "endColumn": 88
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/Config/Configurator.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 164,
                            "endLine": 164,
                            "startColumn": 61,
                            "endColumn": 76
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/Config/Configurator.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 166,
                            "endLine": 166,
                            "startColumn": 32,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/Config/Configurator.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 166,
                            "endLine": 166,
                            "startColumn": 17,
                            "endColumn": 58
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/Config/Configurator.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 168,
                            "endLine": 168,
                            "startColumn": 30,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/Config/Configurator.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 168,
                            "endLine": 168,
                            "startColumn": 18,
                            "endColumn": 29
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 801,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/DisablePoweredBy",
          "ruleIndex": 35,
          "level": "warning",
          "message": {
            "text": "Disable X-Powered-By header for your Express app (consider using Helmet middleware), because it exposes information about the used framework to potential attackers.",
            "markdown": "Disable X-Powered-By header for your {0} (consider using Helmet middleware), because it exposes information about the used framework to potential attackers.",
            "arguments": [
              "[Express app](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/web-console/backend/app/apiServer.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 39,
                  "endLine": 39,
                  "startColumn": 33,
                  "endColumn": 40
                }
              }
            }
          ],
          "fingerprints": {
            "0": "346fb5dc520ae0465563969c19d603ff33468a2b98b19567340eee2c13fcf2e4",
            "1": "87ba341e.d9b6cad7.ff86c2c3.0015c5d5.8d22f254.5eabb05b.60d372c8.2f4aef18.87ba341e.4773f344.ff86c2c3.c559ebce.8d22f254.8020cfdf.60d372c8.2f4aef18"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/web-console/backend/app/apiServer.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 33,
                            "endColumn": 40
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/NonCryptoHardcodedSecret/test",
          "ruleIndex": 36,
          "level": "note",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found hardcoded secret.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found hardcoded {0}.",
            "arguments": [
              "[secret](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/ml/src/test/java/org/apache/ignite/ml/math/benchmark/ResultsWriter.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 46,
                  "endLine": 46,
                  "startColumn": 11,
                  "endColumn": 77
                }
              }
            }
          ],
          "fingerprints": {
            "0": "57cbb6a4de0d0dd1b9ed8eb91ca94e17e1f289022c5e95a1768f3d9cd652ebb1",
            "1": "595d9693.dd05ec30.3c7d90aa.de031890.8b2d3351.ce109560.e4580e17.bd386df0.595d9693.dd05ec30.a224ef38.de031890.b70ab506.ce109560.ced81085.bd386df0"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/ml/src/test/java/org/apache/ignite/ml/math/benchmark/ResultsWriter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 46,
                            "endLine": 46,
                            "startColumn": 11,
                            "endColumn": 77
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 351,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT/test",
          "ruleIndex": 37,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a command line argument flows into exists, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to bypass the logic of the application in the conditional expression.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to bypass the logic of the application in the {3}.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9)",
              "[exists](10)",
              "[conditional expression](11)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/test/java/org/apache/ignite/loadtests/GridSingleExecutionTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 187,
                  "endLine": 187,
                  "startColumn": 21,
                  "endColumn": 52
                }
              }
            }
          ],
          "fingerprints": {
            "0": "834a370ae225e4c596808d6fe8e07c1c85c2390a0c64568369af9c368d6e21f5",
            "1": "16a03503.52365723.a224ef38.6c52ae28.025462d2.b7bf53ce.64560cf2.a2537326.8df8fa68.52365723.bf05a696.de031890.025462d2.ce109560.377b98a3.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/loadtests/GridSingleExecutionTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 101,
                            "endLine": 101,
                            "startColumn": 61,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/loadtests/GridSingleExecutionTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 101,
                            "endLine": 101,
                            "startColumn": 61,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/loadtests/GridSingleExecutionTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 186,
                            "endLine": 186,
                            "startColumn": 68,
                            "endColumn": 88
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/loadtests/GridSingleExecutionTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 187,
                            "endLine": 187,
                            "startColumn": 53,
                            "endColumn": 66
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/GridTestUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1155,
                            "endLine": 1155,
                            "startColumn": 52,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/GridTestUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1156,
                            "endLine": 1156,
                            "startColumn": 34,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/GridTestUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1164,
                            "endLine": 1164,
                            "startColumn": 76,
                            "endColumn": 87
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/GridTestUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1173,
                            "endLine": 1173,
                            "startColumn": 24,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/GridTestUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1173,
                            "endLine": 1173,
                            "startColumn": 13,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/GridTestUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1175,
                            "endLine": 1175,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/GridTestUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1175,
                            "endLine": 1175,
                            "startColumn": 20,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/GridTestUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1175,
                            "endLine": 1175,
                            "startColumn": 20,
                            "endColumn": 47
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 351,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT/test",
          "ruleIndex": 37,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a command line argument flows into exists, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to bypass the logic of the application in the conditional expression.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to bypass the logic of the application in the {3}.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9)",
              "[exists](10)",
              "[conditional expression](11)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/test/java/org/apache/ignite/loadtest/GridSingleExecutionTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 200,
                  "endLine": 200,
                  "startColumn": 21,
                  "endColumn": 52
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7fe85f73ec25460864dfb4904e1bed4994bb9b7cc4f6a52b18797fa97103e563",
            "1": "16a03503.52365723.a224ef38.6c52ae28.025462d2.b7bf53ce.64560cf2.a2537326.8df8fa68.52365723.bf05a696.de031890.025462d2.ce109560.4c9185cc.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/loadtest/GridSingleExecutionTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 91,
                            "endLine": 91,
                            "startColumn": 61,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/loadtest/GridSingleExecutionTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 91,
                            "endLine": 91,
                            "startColumn": 61,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/loadtest/GridSingleExecutionTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 199,
                            "endLine": 199,
                            "startColumn": 68,
                            "endColumn": 88
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/loadtest/GridSingleExecutionTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 200,
                            "endLine": 200,
                            "startColumn": 53,
                            "endColumn": 66
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/GridTestUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1155,
                            "endLine": 1155,
                            "startColumn": 52,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/GridTestUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1156,
                            "endLine": 1156,
                            "startColumn": 34,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/GridTestUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1164,
                            "endLine": 1164,
                            "startColumn": 76,
                            "endColumn": 87
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/GridTestUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1173,
                            "endLine": 1173,
                            "startColumn": 24,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/GridTestUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1173,
                            "endLine": 1173,
                            "startColumn": 13,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/GridTestUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1175,
                            "endLine": 1175,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/GridTestUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1175,
                            "endLine": 1175,
                            "startColumn": 20,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/GridTestUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1175,
                            "endLine": 1175,
                            "startColumn": 20,
                            "endColumn": 47
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 351,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT/test",
          "ruleIndex": 37,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a zip file flows into mkdirs, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to manipulate arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to manipulate arbitrary files.",
            "arguments": [
              "[a zip file](0)",
              "[flows](1),(2),(3),(4)",
              "[mkdirs](5)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/hadoop/src/test/java/org/apache/ignite/testsuites/IgniteHadoopTestSuite.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 328,
                  "endLine": 328,
                  "startColumn": 34,
                  "endColumn": 45
                }
              }
            }
          ],
          "fingerprints": {
            "0": "37bb33861a38a7dc14f4cf5f6ff36d46d926495bb357898164c1338b52b204c1",
            "1": "19689298.b5e126a9.8828b72d.10787ca9.dd06b926.7a9cd1a9.a204df5d.54d46e25.f9545bfc.b5e126a9.bb993ef0.c48320d7.d31a8364.7fda7c5e.bae646e8.b837e3a8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/test/java/org/apache/ignite/testsuites/IgniteHadoopTestSuite.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 325,
                            "endLine": 325,
                            "startColumn": 55,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/test/java/org/apache/ignite/testsuites/IgniteHadoopTestSuite.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 325,
                            "endLine": 325,
                            "startColumn": 55,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/test/java/org/apache/ignite/testsuites/IgniteHadoopTestSuite.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 325,
                            "endLine": 325,
                            "startColumn": 41,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/test/java/org/apache/ignite/testsuites/IgniteHadoopTestSuite.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 325,
                            "endLine": 325,
                            "startColumn": 30,
                            "endColumn": 71
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/test/java/org/apache/ignite/testsuites/IgniteHadoopTestSuite.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 328,
                            "endLine": 328,
                            "startColumn": 34,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/test/java/org/apache/ignite/testsuites/IgniteHadoopTestSuite.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 328,
                            "endLine": 328,
                            "startColumn": 34,
                            "endColumn": 45
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT/test",
          "ruleIndex": 37,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a zip file flows into mkdirs, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to manipulate arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to manipulate arbitrary files.",
            "arguments": [
              "[a zip file](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[mkdirs](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/hadoop/src/test/java/org/apache/ignite/testsuites/IgniteHadoopTestSuite.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 342,
                  "endLine": 342,
                  "startColumn": 54,
                  "endColumn": 67
                }
              }
            }
          ],
          "fingerprints": {
            "0": "83142a210431caf9a709d4fb6febf9409d66084adfdc466540fca1ae1e2a168f",
            "1": "19689298.47d6de81.8828b72d.ed144f2d.5304aa89.e4d7b7ac.a204df5d.f82433aa.f9545bfc.b5e126a9.bb993ef0.c48320d7.d31a8364.e4d7b7ac.bae646e8.b837e3a8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/test/java/org/apache/ignite/testsuites/IgniteHadoopTestSuite.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 325,
                            "endLine": 325,
                            "startColumn": 55,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/test/java/org/apache/ignite/testsuites/IgniteHadoopTestSuite.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 325,
                            "endLine": 325,
                            "startColumn": 55,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/test/java/org/apache/ignite/testsuites/IgniteHadoopTestSuite.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 325,
                            "endLine": 325,
                            "startColumn": 41,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/test/java/org/apache/ignite/testsuites/IgniteHadoopTestSuite.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 325,
                            "endLine": 325,
                            "startColumn": 30,
                            "endColumn": 71
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/test/java/org/apache/ignite/testsuites/IgniteHadoopTestSuite.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 340,
                            "endLine": 340,
                            "startColumn": 43,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/test/java/org/apache/ignite/testsuites/IgniteHadoopTestSuite.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 340,
                            "endLine": 340,
                            "startColumn": 43,
                            "endColumn": 61
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/test/java/org/apache/ignite/testsuites/IgniteHadoopTestSuite.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 340,
                            "endLine": 340,
                            "startColumn": 34,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/test/java/org/apache/ignite/testsuites/IgniteHadoopTestSuite.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 342,
                            "endLine": 342,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/test/java/org/apache/ignite/testsuites/IgniteHadoopTestSuite.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 342,
                            "endLine": 342,
                            "startColumn": 54,
                            "endColumn": 60
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/test/java/org/apache/ignite/testsuites/IgniteHadoopTestSuite.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 342,
                            "endLine": 342,
                            "startColumn": 54,
                            "endColumn": 67
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT/test",
          "ruleIndex": 37,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a zip file flows into java.nio.file.Files.createSymbolicLink, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a zip file](0)",
              "[flows](1),(2),(3),(4)",
              "[java.nio.file.Files.createSymbolicLink](5)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/hadoop/src/test/java/org/apache/ignite/testsuites/IgniteHadoopTestSuite.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 337,
                  "endLine": 337,
                  "startColumn": 29,
                  "endColumn": 53
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d754b588f6f4d14abcdafdea829cf0a982eda48a9fa38a5f2e66f59c6682580e",
            "1": "19689298.2887ba96.ab9dcbe2.334c3b1f.45dd7105.695650a5.240e2ba2.54d46e25.f9545bfc.98dbaec4.bb993ef0.c48320d7.d31a8364.695650a5.240e2ba2.b837e3a8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/test/java/org/apache/ignite/testsuites/IgniteHadoopTestSuite.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 333,
                            "endLine": 333,
                            "startColumn": 87,
                            "endColumn": 100
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/test/java/org/apache/ignite/testsuites/IgniteHadoopTestSuite.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 333,
                            "endLine": 333,
                            "startColumn": 87,
                            "endColumn": 100
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/test/java/org/apache/ignite/testsuites/IgniteHadoopTestSuite.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 333,
                            "endLine": 333,
                            "startColumn": 50,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/test/java/org/apache/ignite/testsuites/IgniteHadoopTestSuite.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 333,
                            "endLine": 333,
                            "startColumn": 34,
                            "endColumn": 103
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/test/java/org/apache/ignite/testsuites/IgniteHadoopTestSuite.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 337,
                            "endLine": 337,
                            "startColumn": 54,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/test/java/org/apache/ignite/testsuites/IgniteHadoopTestSuite.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 337,
                            "endLine": 337,
                            "startColumn": 29,
                            "endColumn": 53
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT/test",
          "ruleIndex": 37,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a zip file flows into java.io.FileOutputStream, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "arguments": [
              "[a zip file](0)",
              "[flows](1),(2),(3),(4),(5)",
              "[java.io.FileOutputStream](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/hadoop/src/test/java/org/apache/ignite/testsuites/IgniteHadoopTestSuite.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 347,
                  "endLine": 347,
                  "startColumn": 90,
                  "endColumn": 106
                }
              }
            }
          ],
          "fingerprints": {
            "0": "904d0bf1c08a96b1a795728b57fed2d4afd96dde6a7dffd4b60e5aaedf0427b3",
            "1": "e6fcc0e0.b5e126a9.a34a49e4.10787ca9.99d7f2a7.a0340d99.a204df5d.203bd690.f9545bfc.b5e126a9.bb993ef0.c48320d7.d31a8364.7fda7c5e.bae646e8.b837e3a8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/test/java/org/apache/ignite/testsuites/IgniteHadoopTestSuite.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 325,
                            "endLine": 325,
                            "startColumn": 55,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/test/java/org/apache/ignite/testsuites/IgniteHadoopTestSuite.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 325,
                            "endLine": 325,
                            "startColumn": 55,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/test/java/org/apache/ignite/testsuites/IgniteHadoopTestSuite.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 325,
                            "endLine": 325,
                            "startColumn": 41,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/test/java/org/apache/ignite/testsuites/IgniteHadoopTestSuite.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 325,
                            "endLine": 325,
                            "startColumn": 30,
                            "endColumn": 71
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/test/java/org/apache/ignite/testsuites/IgniteHadoopTestSuite.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 340,
                            "endLine": 340,
                            "startColumn": 43,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/test/java/org/apache/ignite/testsuites/IgniteHadoopTestSuite.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 347,
                            "endLine": 347,
                            "startColumn": 107,
                            "endColumn": 111
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/test/java/org/apache/ignite/testsuites/IgniteHadoopTestSuite.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 347,
                            "endLine": 347,
                            "startColumn": 90,
                            "endColumn": 106
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT/test",
          "ruleIndex": 37,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a zip file flows into java.nio.file.Files.setPosixFilePermissions, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to manipulate arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to manipulate arbitrary files.",
            "arguments": [
              "[a zip file](0)",
              "[flows](1),(2),(3),(4),(5),(6)",
              "[java.nio.file.Files.setPosixFilePermissions](7)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/hadoop/src/test/java/org/apache/ignite/testsuites/IgniteHadoopTestSuite.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 354,
                  "endLine": 354,
                  "startColumn": 29,
                  "endColumn": 58
                }
              }
            }
          ],
          "fingerprints": {
            "0": "06775825efb469facfc5d816a2a0bd2815b2e3490d9486859f3a9d50d48c8f9f",
            "1": "a8b7604e.bffb7392.cf362e06.36130a91.9bf97fb7.f940a352.66baa182.54d46e25.f9545bfc.b5e126a9.bb993ef0.c48320d7.d31a8364.7fda7c5e.bae646e8.b837e3a8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/test/java/org/apache/ignite/testsuites/IgniteHadoopTestSuite.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 325,
                            "endLine": 325,
                            "startColumn": 55,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/test/java/org/apache/ignite/testsuites/IgniteHadoopTestSuite.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 325,
                            "endLine": 325,
                            "startColumn": 55,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/test/java/org/apache/ignite/testsuites/IgniteHadoopTestSuite.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 325,
                            "endLine": 325,
                            "startColumn": 41,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/test/java/org/apache/ignite/testsuites/IgniteHadoopTestSuite.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 325,
                            "endLine": 325,
                            "startColumn": 30,
                            "endColumn": 71
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/test/java/org/apache/ignite/testsuites/IgniteHadoopTestSuite.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 340,
                            "endLine": 340,
                            "startColumn": 43,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/test/java/org/apache/ignite/testsuites/IgniteHadoopTestSuite.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 354,
                            "endLine": 354,
                            "startColumn": 59,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/test/java/org/apache/ignite/testsuites/IgniteHadoopTestSuite.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 354,
                            "endLine": 354,
                            "startColumn": 59,
                            "endColumn": 70
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/hadoop/src/test/java/org/apache/ignite/testsuites/IgniteHadoopTestSuite.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 354,
                            "endLine": 354,
                            "startColumn": 29,
                            "endColumn": 58
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT/test",
          "ruleIndex": 37,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a command line argument flows into java.io.FileWriter, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7)",
              "[java.io.FileWriter](8)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/test/java/org/apache/ignite/loadtests/communication/GridIoManagerBenchmark.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 198,
                  "endLine": 198,
                  "startColumn": 25,
                  "endColumn": 41
                }
              }
            }
          ],
          "fingerprints": {
            "0": "34ffa2e6c54cf81a7cdf23af509359632def77f4e81fec600097924f13183553",
            "1": "8e672c0e.1cbd3ff4.68e0c714.23b22d53.c15f7a0b.bdd25f16.cb27d051.54d46e25.8df8fa68.92e378d2.827c4ecc.51951211.d31a8364.ce109560.377b98a3.b837e3a8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/loadtests/communication/GridIoManagerBenchmark.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 116,
                            "endLine": 116,
                            "startColumn": 51,
                            "endColumn": 58
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/loadtests/communication/GridIoManagerBenchmark.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 116,
                            "endLine": 116,
                            "startColumn": 51,
                            "endColumn": 58
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/loadtests/communication/GridIoManagerBenchmark.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 116,
                            "endLine": 116,
                            "startColumn": 16,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/loadtests/communication/GridIoManagerBenchmark.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 136,
                            "endLine": 136,
                            "startColumn": 52,
                            "endColumn": 66
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/loadtests/communication/GridIoManagerBenchmark.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 153,
                            "endLine": 153,
                            "startColumn": 81,
                            "endColumn": 118
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/loadtests/communication/GridIoManagerBenchmark.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 198,
                            "endLine": 198,
                            "startColumn": 42,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/GridLoadTestUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 41,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/GridLoadTestUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 61,
                            "endLine": 61,
                            "startColumn": 61,
                            "endColumn": 69
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/GridLoadTestUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 61,
                            "endLine": 61,
                            "startColumn": 50,
                            "endColumn": 60
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT/test",
          "ruleIndex": 37,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a command line argument flows into java.io.FileWriter, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5)",
              "[java.io.FileWriter](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/test/java/org/apache/ignite/loadtests/dsi/GridDsiClient.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 372,
                  "endLine": 372,
                  "startColumn": 33,
                  "endColumn": 67
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ceadbf97bc1c6fb03c9d6bfbc67768cd52f3f8c5a355fc4bd412d6b0d68d3a9b",
            "1": "e6fcc0e0.4c829c5f.085ab0d9.23b22d53.ae63d11c.5c43d176.3c0c969e.54d46e25.8df8fa68.f326e24d.622565c7.de031890.408180c7.ce109560.377b98a3.b837e3a8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/loadtests/dsi/GridDsiClient.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 221,
                            "endLine": 221,
                            "startColumn": 72,
                            "endColumn": 79
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/loadtests/dsi/GridDsiClient.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 221,
                            "endLine": 221,
                            "startColumn": 72,
                            "endColumn": 79
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/loadtests/dsi/GridDsiClient.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 221,
                            "endLine": 221,
                            "startColumn": 30,
                            "endColumn": 79
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/loadtests/dsi/GridDsiClient.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 373,
                            "endLine": 373,
                            "startColumn": 37,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/GridLoadTestUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 41,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/GridLoadTestUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 61,
                            "endLine": 61,
                            "startColumn": 61,
                            "endColumn": 69
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/GridLoadTestUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 61,
                            "endLine": 61,
                            "startColumn": 50,
                            "endColumn": 60
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT/test",
          "ruleIndex": 37,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a command line argument flows into java.io.FileWriter, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[java.io.FileWriter](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/test/java/org/apache/ignite/loadtests/dsi/GridDsiClient.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 390,
                  "endLine": 390,
                  "startColumn": 37,
                  "endColumn": 71
                }
              }
            }
          ],
          "fingerprints": {
            "0": "505b970229b045652c881fb9fc70c8f9523520c282a7dd963e6ab1448f90b400",
            "1": "19689298.1cbd3ff4.dca26b77.23b22d53.1b6f57e6.5c43d176.3c0c969e.54d46e25.8df8fa68.f326e24d.622565c7.de031890.408180c7.ce109560.377b98a3.b837e3a8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/loadtests/dsi/GridDsiClient.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 221,
                            "endLine": 221,
                            "startColumn": 72,
                            "endColumn": 79
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/loadtests/dsi/GridDsiClient.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 221,
                            "endLine": 221,
                            "startColumn": 72,
                            "endColumn": 79
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/loadtests/dsi/GridDsiClient.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 221,
                            "endLine": 221,
                            "startColumn": 30,
                            "endColumn": 79
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/loadtests/dsi/GridDsiClient.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 385,
                            "endLine": 385,
                            "startColumn": 60,
                            "endColumn": 74
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/loadtests/dsi/GridDsiClient.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 385,
                            "endLine": 385,
                            "startColumn": 60,
                            "endColumn": 86
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/loadtests/dsi/GridDsiClient.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 385,
                            "endLine": 385,
                            "startColumn": 40,
                            "endColumn": 86
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/loadtests/dsi/GridDsiClient.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 391,
                            "endLine": 391,
                            "startColumn": 41,
                            "endColumn": 58
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/GridLoadTestUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 41,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/GridLoadTestUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 61,
                            "endLine": 61,
                            "startColumn": 61,
                            "endColumn": 69
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/GridLoadTestUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 61,
                            "endLine": 61,
                            "startColumn": 50,
                            "endColumn": 60
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT/test",
          "ruleIndex": 37,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a command line argument flows into java.io.FileWriter, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5)",
              "[java.io.FileWriter](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/test/java/org/apache/ignite/loadtests/job/GridJobExecutionSingleNodeLoadTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 162,
                  "endLine": 162,
                  "startColumn": 33,
                  "endColumn": 67
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c526d7ff65f1cdc142ef2afc9bd00ca308313f826209111b3a4833f02852dcb9",
            "1": "e6fcc0e0.4c829c5f.5a03ebfd.23b22d53.c15f7a0b.bf926f36.cb27d051.54d46e25.8df8fa68.4c829c5f.622565c7.de031890.408180c7.ce109560.377b98a3.b837e3a8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/loadtests/job/GridJobExecutionSingleNodeLoadTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 77,
                            "endLine": 77,
                            "startColumn": 68,
                            "endColumn": 75
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/loadtests/job/GridJobExecutionSingleNodeLoadTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 77,
                            "endLine": 77,
                            "startColumn": 68,
                            "endColumn": 75
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/loadtests/job/GridJobExecutionSingleNodeLoadTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 77,
                            "endLine": 77,
                            "startColumn": 26,
                            "endColumn": 75
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/loadtests/job/GridJobExecutionSingleNodeLoadTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 163,
                            "endLine": 163,
                            "startColumn": 37,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/GridLoadTestUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 41,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/GridLoadTestUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 61,
                            "endLine": 61,
                            "startColumn": 61,
                            "endColumn": 69
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/GridLoadTestUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 61,
                            "endLine": 61,
                            "startColumn": 50,
                            "endColumn": 60
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT/test",
          "ruleIndex": 37,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a command line argument flows into java.io.FileWriter, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5)",
              "[java.io.FileWriter](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/test/java/org/apache/ignite/loadtests/job/GridJobExecutionLoadTestClientSemaphore.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 142,
                  "endLine": 142,
                  "startColumn": 29,
                  "endColumn": 63
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f369879f4555dbe335048b1e4bab3a5478498e718ada6108309415b68e565fda",
            "1": "e6fcc0e0.4c829c5f.085ab0d9.23b22d53.c15f7a0b.f940a352.cb27d051.54d46e25.8df8fa68.4c829c5f.622565c7.de031890.408180c7.ce109560.377b98a3.b837e3a8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/loadtests/job/GridJobExecutionLoadTestClientSemaphore.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 102,
                            "endLine": 102,
                            "startColumn": 61,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/loadtests/job/GridJobExecutionLoadTestClientSemaphore.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 102,
                            "endLine": 102,
                            "startColumn": 61,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/loadtests/job/GridJobExecutionLoadTestClientSemaphore.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 102,
                            "endLine": 102,
                            "startColumn": 26,
                            "endColumn": 75
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/loadtests/job/GridJobExecutionLoadTestClientSemaphore.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 143,
                            "endLine": 143,
                            "startColumn": 33,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/GridLoadTestUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 41,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/GridLoadTestUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 61,
                            "endLine": 61,
                            "startColumn": 61,
                            "endColumn": 69
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/GridLoadTestUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 61,
                            "endLine": 61,
                            "startColumn": 50,
                            "endColumn": 60
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT/test",
          "ruleIndex": 37,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a command line argument flows into java.io.FileWriter, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5)",
              "[java.io.FileWriter](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/test/java/org/apache/ignite/loadtests/job/GridJobExecutionLoadTestClient.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 126,
                  "endLine": 126,
                  "startColumn": 29,
                  "endColumn": 63
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f8ca7291088ed4f6ebfe376be9b7cfcd012e930d884b84b789186fa832496e06",
            "1": "e6fcc0e0.4c829c5f.085ab0d9.23b22d53.c15f7a0b.f940a352.cb27d051.54d46e25.8df8fa68.4c829c5f.622565c7.de031890.408180c7.ce109560.377b98a3.b837e3a8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/loadtests/job/GridJobExecutionLoadTestClient.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 89,
                            "endLine": 89,
                            "startColumn": 61,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/loadtests/job/GridJobExecutionLoadTestClient.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 89,
                            "endLine": 89,
                            "startColumn": 61,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/loadtests/job/GridJobExecutionLoadTestClient.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 89,
                            "endLine": 89,
                            "startColumn": 26,
                            "endColumn": 75
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/loadtests/job/GridJobExecutionLoadTestClient.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 127,
                            "endLine": 127,
                            "startColumn": 33,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/GridLoadTestUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 41,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/GridLoadTestUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 61,
                            "endLine": 61,
                            "startColumn": 61,
                            "endColumn": 69
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/GridLoadTestUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 61,
                            "endLine": 61,
                            "startColumn": 50,
                            "endColumn": 60
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT/test",
          "ruleIndex": 37,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a command line argument flows into java.io.FileWriter, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5)",
              "[java.io.FileWriter](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/test/java/org/apache/ignite/loadtests/cache/GridCacheBenchmark.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 191,
                  "endLine": 191,
                  "startColumn": 21,
                  "endColumn": 55
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5ffe2b33965b71d993245309c901fbb346f526b308a8da641477bc65441aa27d",
            "1": "19689298.4c829c5f.085ab0d9.23b22d53.025462d2.b051b3b8.df7e59ba.54d46e25.8df8fa68.4c829c5f.622565c7.de031890.408180c7.ce109560.377b98a3.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/loadtests/cache/GridCacheBenchmark.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 67,
                            "endLine": 67,
                            "startColumn": 61,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/loadtests/cache/GridCacheBenchmark.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 67,
                            "endLine": 67,
                            "startColumn": 61,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/loadtests/cache/GridCacheBenchmark.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 67,
                            "endLine": 67,
                            "startColumn": 26,
                            "endColumn": 75
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/loadtests/cache/GridCacheBenchmark.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 192,
                            "endLine": 192,
                            "startColumn": 25,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/GridLoadTestUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 41,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/GridLoadTestUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 61,
                            "endLine": 61,
                            "startColumn": 61,
                            "endColumn": 69
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/GridLoadTestUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 61,
                            "endLine": 61,
                            "startColumn": 50,
                            "endColumn": 60
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 351,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT/test",
          "ruleIndex": 37,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a command line argument flows into java.io.FileWriter, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5)",
              "[java.io.FileWriter](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/test/java/org/apache/ignite/loadtests/job/GridJobExecutionSingleNodeSemaphoreLoadTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 136,
                  "endLine": 136,
                  "startColumn": 33,
                  "endColumn": 67
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b35592a82320e901d1cfe806324f615a39849883f95bb0a434bf1d501920fbbc",
            "1": "e6fcc0e0.4c829c5f.5a03ebfd.23b22d53.c15f7a0b.bf926f36.cb27d051.54d46e25.8df8fa68.4c829c5f.622565c7.de031890.408180c7.ce109560.377b98a3.b837e3a8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/loadtests/job/GridJobExecutionSingleNodeSemaphoreLoadTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 85,
                            "endLine": 85,
                            "startColumn": 61,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/loadtests/job/GridJobExecutionSingleNodeSemaphoreLoadTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 85,
                            "endLine": 85,
                            "startColumn": 61,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/loadtests/job/GridJobExecutionSingleNodeSemaphoreLoadTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 85,
                            "endLine": 85,
                            "startColumn": 26,
                            "endColumn": 75
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/loadtests/job/GridJobExecutionSingleNodeSemaphoreLoadTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 137,
                            "endLine": 137,
                            "startColumn": 37,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/GridLoadTestUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 41,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/GridLoadTestUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 61,
                            "endLine": 61,
                            "startColumn": 61,
                            "endColumn": 69
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/GridLoadTestUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 61,
                            "endLine": 61,
                            "startColumn": 50,
                            "endColumn": 60
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 351,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT/test",
          "ruleIndex": 37,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a command line argument flows into java.io.FileWriter, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5)",
              "[java.io.FileWriter](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/clients/src/test/java/org/apache/ignite/loadtests/client/ClientCacheBenchmark.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 253,
                  "endLine": 253,
                  "startColumn": 25,
                  "endColumn": 59
                }
              }
            }
          ],
          "fingerprints": {
            "0": "51be018f59f4d8d6e35d15f624cdcb3434bad3485e8f9ed299537451956cd482",
            "1": "e6fcc0e0.4c829c5f.5a03ebfd.23b22d53.c15f7a0b.bf926f36.cb27d051.54d46e25.8df8fa68.4c829c5f.4ba650a8.de031890.0acd59f9.ce109560.377b98a3.b837e3a8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/clients/src/test/java/org/apache/ignite/loadtests/client/ClientCacheBenchmark.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 237,
                            "endLine": 237,
                            "startColumn": 61,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/clients/src/test/java/org/apache/ignite/loadtests/client/ClientCacheBenchmark.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 237,
                            "endLine": 237,
                            "startColumn": 61,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/clients/src/test/java/org/apache/ignite/loadtests/client/ClientCacheBenchmark.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 237,
                            "endLine": 237,
                            "startColumn": 24,
                            "endColumn": 76
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/clients/src/test/java/org/apache/ignite/loadtests/client/ClientCacheBenchmark.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 254,
                            "endLine": 254,
                            "startColumn": 29,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/GridLoadTestUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 41,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/GridLoadTestUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 61,
                            "endLine": 61,
                            "startColumn": 61,
                            "endColumn": 69
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/GridLoadTestUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 61,
                            "endLine": 61,
                            "startColumn": 50,
                            "endColumn": 60
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 351,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT/test",
          "ruleIndex": 37,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a command line argument flows into java.io.FileWriter, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5)",
              "[java.io.FileWriter](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/test/java/org/apache/ignite/loadtests/mergesort/GridMergeSortLoadTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 94,
                  "endLine": 94,
                  "startColumn": 21,
                  "endColumn": 55
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ca27e510e77a7ecc16499d4d97059c735f7eb09470423030b0f34a9b4efc2480",
            "1": "19689298.4c829c5f.085ab0d9.23b22d53.c15f7a0b.b051b3b8.cb27d051.54d46e25.8df8fa68.4c829c5f.622565c7.de031890.0acd59f9.ce109560.377b98a3.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/loadtests/mergesort/GridMergeSortLoadTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 67,
                            "endLine": 67,
                            "startColumn": 56,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/loadtests/mergesort/GridMergeSortLoadTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 67,
                            "endLine": 67,
                            "startColumn": 56,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/loadtests/mergesort/GridMergeSortLoadTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 67,
                            "endLine": 67,
                            "startColumn": 20,
                            "endColumn": 70
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/loadtests/mergesort/GridMergeSortLoadTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 95,
                            "endLine": 95,
                            "startColumn": 25,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/GridLoadTestUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 41,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/GridLoadTestUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 61,
                            "endLine": 61,
                            "startColumn": 61,
                            "endColumn": 69
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/GridLoadTestUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 61,
                            "endLine": 61,
                            "startColumn": 50,
                            "endColumn": 60
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 351,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT/test",
          "ruleIndex": 37,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a command line argument flows into java.nio.file.Files.newBufferedReader, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3)",
              "[java.nio.file.Files.newBufferedReader](4)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/compatibility/src/test/java/org/apache/ignite/compatibility/testframework/junits/IgniteCompatibilityNodeRunner.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 210,
                  "endLine": 210,
                  "startColumn": 38,
                  "endColumn": 61
                }
              }
            }
          ],
          "fingerprints": {
            "0": "4f97ed77bfb64d6b792d4bdcf39a81ba207b67e529dd29138d4bbea8cbac5112",
            "1": "ca9876a9.1cbd3ff4.5d3b0445.1ecd9681.544c7208.f940a352.52d5e8a8.bfad758f.8df8fa68.dd05ec30.5d3b0445.de031890.544c7208.31c50941.9ba1820f.fa25b062"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/compatibility/src/test/java/org/apache/ignite/compatibility/testframework/junits/IgniteCompatibilityNodeRunner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 83,
                            "endLine": 83,
                            "startColumn": 88,
                            "endColumn": 95
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/compatibility/src/test/java/org/apache/ignite/compatibility/testframework/junits/IgniteCompatibilityNodeRunner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 83,
                            "endLine": 83,
                            "startColumn": 88,
                            "endColumn": 95
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/compatibility/src/test/java/org/apache/ignite/compatibility/testframework/junits/IgniteCompatibilityNodeRunner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 209,
                            "endLine": 209,
                            "startColumn": 71,
                            "endColumn": 86
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/compatibility/src/test/java/org/apache/ignite/compatibility/testframework/junits/IgniteCompatibilityNodeRunner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 210,
                            "endLine": 210,
                            "startColumn": 62,
                            "endColumn": 71
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/compatibility/src/test/java/org/apache/ignite/compatibility/testframework/junits/IgniteCompatibilityNodeRunner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 210,
                            "endLine": 210,
                            "startColumn": 38,
                            "endColumn": 61
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT/test",
          "ruleIndex": 37,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a command line argument flows into java.nio.file.Files.newBufferedReader, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5)",
              "[java.nio.file.Files.newBufferedReader](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/compatibility/src/test/java/org/apache/ignite/compatibility/clients/AbstractClientCompatibilityTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 229,
                  "endLine": 229,
                  "startColumn": 43,
                  "endColumn": 101
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5d575f36529d70bca463cca952a1c0c14d920986fd8401cc6f7ededa71e984f7",
            "1": "19689298.1cbd3ff4.1815d120.0558a6f4.d35f8135.b051b3b8.df7e59ba.54d46e25.e1d7cd7c.7f413d6f.dddb0dff.200082e2.d35f8135.730a5695.377b98a3.b837e3a8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/compatibility/src/test/java/org/apache/ignite/compatibility/clients/AbstractClientCompatibilityTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 227,
                            "endLine": 227,
                            "startColumn": 31,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/compatibility/src/test/java/org/apache/ignite/compatibility/clients/AbstractClientCompatibilityTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 227,
                            "endLine": 227,
                            "startColumn": 31,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/compatibility/src/test/java/org/apache/ignite/compatibility/clients/AbstractClientCompatibilityTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 227,
                            "endLine": 227,
                            "startColumn": 20,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/compatibility/src/test/java/org/apache/ignite/compatibility/clients/AbstractClientCompatibilityTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 229,
                            "endLine": 229,
                            "startColumn": 102,
                            "endColumn": 110
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/compatibility/src/test/java/org/apache/ignite/compatibility/testframework/junits/IgniteCompatibilityNodeRunner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 209,
                            "endLine": 209,
                            "startColumn": 71,
                            "endColumn": 86
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/compatibility/src/test/java/org/apache/ignite/compatibility/testframework/junits/IgniteCompatibilityNodeRunner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 210,
                            "endLine": 210,
                            "startColumn": 62,
                            "endColumn": 71
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/compatibility/src/test/java/org/apache/ignite/compatibility/testframework/junits/IgniteCompatibilityNodeRunner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 210,
                            "endLine": 210,
                            "startColumn": 38,
                            "endColumn": 61
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT/test",
          "ruleIndex": 37,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a command line argument flows into java.io.FileOutputStream, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3)",
              "[java.io.FileOutputStream](4)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/test/java/org/apache/ignite/igfs/IgfsTestInputGenerator.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 41,
                  "endLine": 41,
                  "startColumn": 57,
                  "endColumn": 73
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c4b67f626ad7496d4f075c81f1d9f0d553025b8cce474bc042c3055e1f175e96",
            "1": "19689298.83dbfe52.fa8bb2d4.86587965.025462d2.117e971f.df7e59ba.54d46e25.8df8fa68.7f413d6f.622565c7.86587965.025462d2.d0f74568.377b98a3.55efed1e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/igfs/IgfsTestInputGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 35,
                            "endLine": 35,
                            "startColumn": 30,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/igfs/IgfsTestInputGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 35,
                            "endLine": 35,
                            "startColumn": 30,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/igfs/IgfsTestInputGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 35,
                            "endLine": 35,
                            "startColumn": 16,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/igfs/IgfsTestInputGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 41,
                            "endLine": 41,
                            "startColumn": 74,
                            "endColumn": 85
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/igfs/IgfsTestInputGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 41,
                            "endLine": 41,
                            "startColumn": 57,
                            "endColumn": 73
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 351,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT/test",
          "ruleIndex": 37,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a command line argument flows into java.io.FileReader, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3)",
              "[java.io.FileReader](4)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/test/java/org/apache/ignite/testframework/junits/multijvm/IgniteNodeRunner.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 148,
                  "endLine": 148,
                  "startColumn": 63,
                  "endColumn": 73
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f490b232b94a16780b0cad03027d266165c629ef438ee164c859ce2e1236f0e8",
            "1": "ac4e7c8b.a1e8f583.5d3b0445.1ecd9681.544c7208.0d476878.52d5e8a8.2343ac7f.8df8fa68.dd05ec30.3c6baea4.de031890.544c7208.ce109560.377b98a3.b837e3a8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/junits/multijvm/IgniteNodeRunner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 72,
                            "endLine": 72,
                            "startColumn": 64,
                            "endColumn": 71
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/junits/multijvm/IgniteNodeRunner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 72,
                            "endLine": 72,
                            "startColumn": 64,
                            "endColumn": 71
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/junits/multijvm/IgniteNodeRunner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 146,
                            "endLine": 146,
                            "startColumn": 69,
                            "endColumn": 84
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/junits/multijvm/IgniteNodeRunner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 74,
                            "endColumn": 82
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/junits/multijvm/IgniteNodeRunner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 63,
                            "endColumn": 73
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT/test",
          "ruleIndex": 37,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a command line argument flows into delete, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to manipulate arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to manipulate arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4)",
              "[delete](5)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/test/java/org/apache/ignite/testframework/junits/multijvm/IgniteNodeRunner.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 170,
                  "endLine": 170,
                  "startColumn": 13,
                  "endColumn": 38
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5700d74f5292ad64d9c5390f62cce26824111abf7079e4a0c9209e5c4ce3819c",
            "1": "ac4e7c8b.97acdc08.fc7d5400.e22980a8.a67bd94f.018e1f9c.c4193af3.54d46e25.8df8fa68.dd05ec30.3c6baea4.de031890.544c7208.ce109560.377b98a3.b837e3a8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/junits/multijvm/IgniteNodeRunner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 72,
                            "endLine": 72,
                            "startColumn": 64,
                            "endColumn": 71
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/junits/multijvm/IgniteNodeRunner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 72,
                            "endLine": 72,
                            "startColumn": 64,
                            "endColumn": 71
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/junits/multijvm/IgniteNodeRunner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 146,
                            "endLine": 146,
                            "startColumn": 69,
                            "endColumn": 84
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/junits/multijvm/IgniteNodeRunner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 170,
                            "endLine": 170,
                            "startColumn": 17,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/junits/multijvm/IgniteNodeRunner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 170,
                            "endLine": 170,
                            "startColumn": 13,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/junits/multijvm/IgniteNodeRunner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 170,
                            "endLine": 170,
                            "startColumn": 13,
                            "endColumn": 38
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/TLS/test",
          "ruleIndex": 38,
          "level": "note",
          "message": {
            "text": "Implement secure HTTPS communication. Consider using latest TLSv1.2 instead of javax.net.ssl.SSLContext.getInstance.",
            "markdown": "Implement secure HTTPS communication. Consider using latest TLSv1.2 instead of {0}.",
            "arguments": [
              "[javax.net.ssl.SSLContext.getInstance](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/test/java/org/apache/ignite/testframework/GridTestUtils.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1666,
                  "endLine": 1666,
                  "startColumn": 26,
                  "endColumn": 48
                }
              }
            }
          ],
          "fingerprints": {
            "0": "65aed93d875099c6f604168ae13622c58c7701e846f93a06b7edd2bdc52ed24e",
            "1": "19689298.1cbd3ff4.011b8e79.ede9cf8e.6441080e.afca3b91.01fae08d.54d46e25.19689298.1cbd3ff4.011b8e79.ede9cf8e.6441080e.afca3b91.df7e59ba.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/GridTestUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1666,
                            "endLine": 1666,
                            "startColumn": 26,
                            "endColumn": 48
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "php/XSS",
          "ruleIndex": 39,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from data from a remote resource flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "arguments": [
              "[data from a remote resource](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7)",
              "[the echo statement](8)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "examples/rest/http-rest-example.php",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 101,
                  "endLine": 101,
                  "startColumn": 5,
                  "endColumn": 57
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3de3314b365c4ad2010da6cf2b3c42b01a7a9a629d255c5e1d68174f48949d60",
            "1": "8923d919.c1bfe8a5.c3dea7ce.1f144feb.3d786883.0f833be7.60b22c1d.c3d685e9.743d07e7.464a7316.c3dea7ce.1f144feb.8fef53a9.0f833be7.60b22c1d.c3d685e9"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "examples/rest/http-rest-example.php",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 93,
                            "endLine": 93,
                            "startColumn": 25,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "examples/rest/http-rest-example.php",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 93,
                            "endLine": 93,
                            "startColumn": 25,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "examples/rest/http-rest-example.php",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 93,
                            "endLine": 93,
                            "startColumn": 17,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "examples/rest/http-rest-example.php",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 93,
                            "endLine": 93,
                            "startColumn": 5,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "examples/rest/http-rest-example.php",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 98,
                            "endLine": 98,
                            "startColumn": 10,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "examples/rest/http-rest-example.php",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 101,
                            "endLine": 101,
                            "startColumn": 42,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "examples/rest/http-rest-example.php",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 101,
                            "endLine": 101,
                            "startColumn": 10,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "examples/rest/http-rest-example.php",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 101,
                            "endLine": 101,
                            "startColumn": 5,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "examples/rest/http-rest-example.php",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 101,
                            "endLine": 101,
                            "startColumn": 5,
                            "endColumn": 57
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 501,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 40,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in send.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[send](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/web-console/backend/test/routes/public.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 62,
                  "endLine": 62,
                  "startColumn": 47,
                  "endColumn": 55
                }
              }
            }
          ],
          "fingerprints": {
            "0": "190114566ba2335abb56c16abe281bab5cea4fdad779939ecbf20aafde2dfd69",
            "1": "398fe301.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.3cee0341.839b1d0f.4773f344.bd65d204.e052b9a9.f7ff34e2.8020cfdf.1cc7cbc2.2f05c567"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/web-console/backend/test/routes/public.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 62,
                            "endLine": 62,
                            "startColumn": 22,
                            "endColumn": 26
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 351,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/TrojanSourceConfusingUnicode",
          "ruleIndex": 41,
          "level": "warning",
          "message": {
            "text": "(BETA Suggestion) The identifier name contains potentially confusable UTF-8 characters and may be represented visually in a way that does not convey the actual semantics of the code to a human reviewer.",
            "markdown": "(BETA Suggestion) The identifier name contains potentially confusable UTF-8 characters and may be represented visually in a way that does not convey the actual semantics of the code to a human reviewer.",
            "arguments": []
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/main/java/org/apache/ignite/internal/visor/verify/VisorValidateIndexesTask.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 121,
                  "endLine": 121,
                  "startColumn": 21,
                  "endColumn": 35
                }
              }
            }
          ],
          "fingerprints": {
            "0": "909a4f94c2798724b2f4fe216f7c1c569d7da0ec8e2cf8af1572dfb8d8237e0d"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/visor/verify/VisorValidateIndexesTask.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 121,
                            "endLine": 121,
                            "startColumn": 21,
                            "endColumn": 35
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 301,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileCodeFlow"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 42,
          "level": "error",
          "message": {
            "text": "Unsanitized input from the request URL flows into java.io.FileOutputStream, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "arguments": [
              "[the request URL](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17)",
              "[java.io.FileOutputStream](18)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/mesos/src/main/java/org/apache/ignite/mesos/resource/IgniteProvider.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 113,
                  "endLine": 113,
                  "startColumn": 48,
                  "endColumn": 64
                }
              }
            }
          ],
          "fingerprints": {
            "0": "08adc5205cbd37517684c8e97f968f8c37a7b066bd725dd3f1cb9d725c89c3ae",
            "1": "a9b9b2bb.9bb84c11.5d3b0445.1ecd9681.544c7208.afb13349.52d5e8a8.9f0e1722.8df8fa68.a97a70b8.49d8a740.e22980a8.f84cffab.7fda7c5e.75096d5e.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/mesos/src/main/java/org/apache/ignite/mesos/resource/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 23,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/mesos/src/main/java/org/apache/ignite/mesos/resource/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 23,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/mesos/src/main/java/org/apache/ignite/mesos/resource/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 17,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/mesos/src/main/java/org/apache/ignite/mesos/resource/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 31,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/mesos/src/main/java/org/apache/ignite/mesos/resource/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 97,
                            "endLine": 97,
                            "startColumn": 35,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/mesos/src/main/java/org/apache/ignite/mesos/resource/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 101,
                            "endLine": 101,
                            "startColumn": 57,
                            "endColumn": 60
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/mesos/src/main/java/org/apache/ignite/mesos/resource/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 108,
                            "endLine": 108,
                            "startColumn": 44,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/mesos/src/main/java/org/apache/ignite/mesos/resource/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 108,
                            "endLine": 108,
                            "startColumn": 44,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/mesos/src/main/java/org/apache/ignite/mesos/resource/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 185,
                            "endLine": 185,
                            "startColumn": 36,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/mesos/src/main/java/org/apache/ignite/mesos/resource/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 186,
                            "endLine": 186,
                            "startColumn": 26,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/mesos/src/main/java/org/apache/ignite/mesos/resource/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 186,
                            "endLine": 186,
                            "startColumn": 26,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/mesos/src/main/java/org/apache/ignite/mesos/resource/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 186,
                            "endLine": 186,
                            "startColumn": 18,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/mesos/src/main/java/org/apache/ignite/mesos/resource/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 188,
                            "endLine": 188,
                            "startColumn": 16,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/mesos/src/main/java/org/apache/ignite/mesos/resource/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 188,
                            "endLine": 188,
                            "startColumn": 16,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/mesos/src/main/java/org/apache/ignite/mesos/resource/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 108,
                            "endLine": 108,
                            "startColumn": 24,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/mesos/src/main/java/org/apache/ignite/mesos/resource/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 110,
                            "endLine": 110,
                            "startColumn": 31,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/mesos/src/main/java/org/apache/ignite/mesos/resource/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 135,
                            "endLine": 135,
                            "startColumn": 31,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/mesos/src/main/java/org/apache/ignite/mesos/resource/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 113,
                            "endLine": 113,
                            "startColumn": 65,
                            "endColumn": 90
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/mesos/src/main/java/org/apache/ignite/mesos/resource/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 113,
                            "endLine": 113,
                            "startColumn": 48,
                            "endColumn": 64
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 801,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 42,
          "level": "error",
          "message": {
            "text": "Unsanitized input from the request URL flows into java.io.FileOutputStream, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "arguments": [
              "[the request URL](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11)",
              "[java.io.FileOutputStream](12)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/yarn/src/main/java/org/apache/ignite/yarn/IgniteProvider.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 227,
                  "endLine": 227,
                  "startColumn": 48,
                  "endColumn": 64
                }
              }
            }
          ],
          "fingerprints": {
            "0": "772b56e6686e2183ac0ce2b347d444effd6a0a15fd2aed295823a429ffbefa02",
            "1": "e6fcc0e0.a97a70b8.b4039f85.a21fb2fa.c3baf0d2.b051b3b8.76e77417.bf77c885.8df8fa68.a97a70b8.082139ce.de031890.f84cffab.7fda7c5e.0ac97cd8.6e58eab1"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/yarn/src/main/java/org/apache/ignite/yarn/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 223,
                            "endLine": 223,
                            "startColumn": 38,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/yarn/src/main/java/org/apache/ignite/yarn/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 223,
                            "endLine": 223,
                            "startColumn": 38,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/yarn/src/main/java/org/apache/ignite/yarn/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 223,
                            "endLine": 223,
                            "startColumn": 38,
                            "endColumn": 60
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/yarn/src/main/java/org/apache/ignite/yarn/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 223,
                            "endLine": 223,
                            "startColumn": 24,
                            "endColumn": 62
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/yarn/src/main/java/org/apache/ignite/yarn/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 228,
                            "endLine": 228,
                            "startColumn": 32,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/yarn/src/main/java/org/apache/ignite/yarn/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 312,
                            "endLine": 312,
                            "startColumn": 36,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/yarn/src/main/java/org/apache/ignite/yarn/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 313,
                            "endLine": 313,
                            "startColumn": 26,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/yarn/src/main/java/org/apache/ignite/yarn/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 313,
                            "endLine": 313,
                            "startColumn": 26,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/yarn/src/main/java/org/apache/ignite/yarn/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 313,
                            "endLine": 313,
                            "startColumn": 18,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/yarn/src/main/java/org/apache/ignite/yarn/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 315,
                            "endLine": 315,
                            "startColumn": 16,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/yarn/src/main/java/org/apache/ignite/yarn/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 315,
                            "endLine": 315,
                            "startColumn": 16,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/yarn/src/main/java/org/apache/ignite/yarn/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 227,
                            "endLine": 227,
                            "startColumn": 65,
                            "endColumn": 108
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/yarn/src/main/java/org/apache/ignite/yarn/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 227,
                            "endLine": 227,
                            "startColumn": 48,
                            "endColumn": 64
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 801,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 42,
          "level": "error",
          "message": {
            "text": "Unsanitized input from the HTTP request body flows into java.nio.channels.Channels.newChannel, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "arguments": [
              "[the HTTP request body](0)",
              "[flows](1)",
              "[java.nio.channels.Channels.newChannel](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/mesos/src/main/java/org/apache/ignite/mesos/resource/IgniteProvider.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 115,
                  "endLine": 115,
                  "startColumn": 51,
                  "endColumn": 70
                }
              }
            }
          ],
          "fingerprints": {
            "0": "41131b2796dedba85708c4578471786d8d8a020c2da5d60ff3ba44f7b48e6eb5",
            "1": "92b62c04.11a66e6b.b6a7386d.ab3c2a54.f1ba5a6e.f940a352.5fb5de37.72759c42.6d351a63.11a66e6b.49d8a740.e22980a8.f84cffab.7fda7c5e.9e32790a.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/mesos/src/main/java/org/apache/ignite/mesos/resource/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 115,
                            "endLine": 115,
                            "startColumn": 71,
                            "endColumn": 90
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/mesos/src/main/java/org/apache/ignite/mesos/resource/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 115,
                            "endLine": 115,
                            "startColumn": 71,
                            "endColumn": 90
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/mesos/src/main/java/org/apache/ignite/mesos/resource/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 115,
                            "endLine": 115,
                            "startColumn": 51,
                            "endColumn": 70
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 801,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 42,
          "level": "error",
          "message": {
            "text": "Unsanitized input from the HTTP request body flows into java.nio.channels.Channels.newChannel, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "arguments": [
              "[the HTTP request body](0)",
              "[flows](1)",
              "[java.nio.channels.Channels.newChannel](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/yarn/src/main/java/org/apache/ignite/yarn/IgniteProvider.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 230,
                  "endLine": 230,
                  "startColumn": 51,
                  "endColumn": 70
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5b75bb0a1dd81f3c74d96b8f076ee50ebd6ce39b53203864ecc8011d6318b2ad",
            "1": "ca9876a9.11a66e6b.b6a7386d.58128778.f84cffab.f940a352.45123b97.04a2da35.8df8fa68.a97a70b8.082139ce.de031890.f84cffab.7fda7c5e.0ac97cd8.6e58eab1"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/yarn/src/main/java/org/apache/ignite/yarn/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 230,
                            "endLine": 230,
                            "startColumn": 71,
                            "endColumn": 90
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/yarn/src/main/java/org/apache/ignite/yarn/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 230,
                            "endLine": 230,
                            "startColumn": 71,
                            "endColumn": 90
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/yarn/src/main/java/org/apache/ignite/yarn/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 230,
                            "endLine": 230,
                            "startColumn": 51,
                            "endColumn": 70
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 801,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 42,
          "level": "error",
          "message": {
            "text": "Unsanitized input from the HTTP request body flows into java.nio.channels.Channels.newChannel, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "arguments": [
              "[the HTTP request body](0)",
              "[flows](1)",
              "[java.nio.channels.Channels.newChannel](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/yarn/src/main/java/org/apache/ignite/yarn/IgniteProvider.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 269,
                  "endLine": 269,
                  "startColumn": 51,
                  "endColumn": 70
                }
              }
            }
          ],
          "fingerprints": {
            "0": "04bfeb9ebca1a80b12a3ec06a0bf28b94ca5fee5149ff9b96467f4010dc82173",
            "1": "92b62c04.11a66e6b.b6a7386d.ab3c2a54.f1ba5a6e.f940a352.5fb5de37.72759c42.6d351a63.11a66e6b.bb993ef0.e22980a8.58fed59e.7f705fbf.9e32790a.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/yarn/src/main/java/org/apache/ignite/yarn/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 269,
                            "endLine": 269,
                            "startColumn": 71,
                            "endColumn": 90
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/yarn/src/main/java/org/apache/ignite/yarn/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 269,
                            "endLine": 269,
                            "startColumn": 71,
                            "endColumn": 90
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/yarn/src/main/java/org/apache/ignite/yarn/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 269,
                            "endLine": 269,
                            "startColumn": 51,
                            "endColumn": 70
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 801,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 42,
          "level": "error",
          "message": {
            "text": "Unsanitized input from the request URL flows into exists, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to bypass the logic of the application in the conditional expression.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to bypass the logic of the application in the {3}.",
            "arguments": [
              "[the request URL](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20)",
              "[exists](21)",
              "[conditional expression](22)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/mesos/src/main/java/org/apache/ignite/mesos/resource/IgniteProvider.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 138,
                  "endLine": 138,
                  "startColumn": 16,
                  "endColumn": 45
                }
              }
            }
          ],
          "fingerprints": {
            "0": "eb320795fc6bd76521b69662a0dbe8c31f3a8c19c650372e1ba2d357930e81e8",
            "1": "9cf53582.c5a6056b.fc7d5400.e22980a8.f1d9f854.f940a352.75096d5e.bbe7cc6b.8df8fa68.a97a70b8.49d8a740.e22980a8.f84cffab.7fda7c5e.75096d5e.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/mesos/src/main/java/org/apache/ignite/mesos/resource/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 23,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/mesos/src/main/java/org/apache/ignite/mesos/resource/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 23,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/mesos/src/main/java/org/apache/ignite/mesos/resource/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 17,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/mesos/src/main/java/org/apache/ignite/mesos/resource/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 31,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/mesos/src/main/java/org/apache/ignite/mesos/resource/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 97,
                            "endLine": 97,
                            "startColumn": 35,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/mesos/src/main/java/org/apache/ignite/mesos/resource/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 101,
                            "endLine": 101,
                            "startColumn": 57,
                            "endColumn": 60
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/mesos/src/main/java/org/apache/ignite/mesos/resource/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 108,
                            "endLine": 108,
                            "startColumn": 44,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/mesos/src/main/java/org/apache/ignite/mesos/resource/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 108,
                            "endLine": 108,
                            "startColumn": 44,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/mesos/src/main/java/org/apache/ignite/mesos/resource/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 185,
                            "endLine": 185,
                            "startColumn": 36,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/mesos/src/main/java/org/apache/ignite/mesos/resource/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 186,
                            "endLine": 186,
                            "startColumn": 26,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/mesos/src/main/java/org/apache/ignite/mesos/resource/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 186,
                            "endLine": 186,
                            "startColumn": 26,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/mesos/src/main/java/org/apache/ignite/mesos/resource/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 186,
                            "endLine": 186,
                            "startColumn": 18,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/mesos/src/main/java/org/apache/ignite/mesos/resource/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 188,
                            "endLine": 188,
                            "startColumn": 16,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/mesos/src/main/java/org/apache/ignite/mesos/resource/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 188,
                            "endLine": 188,
                            "startColumn": 16,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/mesos/src/main/java/org/apache/ignite/mesos/resource/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 108,
                            "endLine": 108,
                            "startColumn": 24,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/mesos/src/main/java/org/apache/ignite/mesos/resource/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 110,
                            "endLine": 110,
                            "startColumn": 31,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/mesos/src/main/java/org/apache/ignite/mesos/resource/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 135,
                            "endLine": 135,
                            "startColumn": 31,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/mesos/src/main/java/org/apache/ignite/mesos/resource/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 136,
                            "endLine": 136,
                            "startColumn": 31,
                            "endColumn": 100
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/mesos/src/main/java/org/apache/ignite/mesos/resource/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 136,
                            "endLine": 136,
                            "startColumn": 16,
                            "endColumn": 100
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/mesos/src/main/java/org/apache/ignite/mesos/resource/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 138,
                            "endLine": 138,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/mesos/src/main/java/org/apache/ignite/mesos/resource/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 138,
                            "endLine": 138,
                            "startColumn": 16,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/mesos/src/main/java/org/apache/ignite/mesos/resource/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 138,
                            "endLine": 138,
                            "startColumn": 16,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/mesos/src/main/java/org/apache/ignite/mesos/resource/IgniteProvider.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 110,
                            "endLine": 110,
                            "startColumn": 17,
                            "endColumn": 40
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 801,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 42,
          "level": "error",
          "message": {
            "text": "Unsanitized input from a command line argument flows into exists, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to bypass the logic of the application in the conditional expression.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to bypass the logic of the application in the {3}.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7)",
              "[exists](8)",
              "[conditional expression](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 57,
                  "endLine": 57,
                  "startColumn": 12,
                  "endColumn": 43
                }
              }
            }
          ],
          "fingerprints": {
            "0": "68c228c352a61387e7c5df3371a3d63ed441496ec2f50314988aef986cf41f98",
            "1": "19689298.c8c8034f.92e25e19.75b80ff2.bf3f7b9f.24dcd476.be04624c.54d46e25.8df8fa68.f15a4282.92e25e19.de031890.d31a8364.ce109560.377b98a3.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 50,
                            "endLine": 50,
                            "startColumn": 39,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 50,
                            "endLine": 50,
                            "startColumn": 39,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 50,
                            "endLine": 50,
                            "startColumn": 34,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 50,
                            "endLine": 50,
                            "startColumn": 14,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 51,
                            "endLine": 51,
                            "startColumn": 57,
                            "endColumn": 70
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 55,
                            "endLine": 55,
                            "startColumn": 45,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 55,
                            "endLine": 55,
                            "startColumn": 14,
                            "endColumn": 95
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 57,
                            "endLine": 57,
                            "startColumn": 12,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 57,
                            "endLine": 57,
                            "startColumn": 12,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 57,
                            "endLine": 57,
                            "startColumn": 9,
                            "endColumn": 45
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 801,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 42,
          "level": "error",
          "message": {
            "text": "Unsanitized input from a command line argument flows into exists, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to bypass the logic of the application in the conditional expression.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to bypass the logic of the application in the {3}.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10)",
              "[exists](11)",
              "[conditional expression](12)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 79,
                  "endLine": 79,
                  "startColumn": 13,
                  "endColumn": 46
                }
              }
            }
          ],
          "fingerprints": {
            "0": "1f9d35cdfb4dc9f3e37fe7ad86edc5d57341a759606048b7839e783a6cccf5f3",
            "1": "19689298.3ddf9eb6.e9f7f631.9998adc9.dd06b926.d7c8947b.a204df5d.a1df1a3b.8df8fa68.3ddf9eb6.92e25e19.de031890.dd06b926.ce109560.377b98a3.10c5900f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 50,
                            "endLine": 50,
                            "startColumn": 39,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 50,
                            "endLine": 50,
                            "startColumn": 39,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 50,
                            "endLine": 50,
                            "startColumn": 34,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 50,
                            "endLine": 50,
                            "startColumn": 14,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 51,
                            "endLine": 51,
                            "startColumn": 57,
                            "endColumn": 70
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 36,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 36,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 31,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 14,
                            "endColumn": 92
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 79,
                            "endLine": 79,
                            "startColumn": 13,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 79,
                            "endLine": 79,
                            "startColumn": 13,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 79,
                            "endLine": 79,
                            "startColumn": 13,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 79,
                            "endLine": 79,
                            "startColumn": 9,
                            "endColumn": 48
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 801,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 42,
          "level": "error",
          "message": {
            "text": "Unsanitized input from a command line argument flows into exists, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to bypass the logic of the application in the conditional expression.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to bypass the logic of the application in the {3}.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11)",
              "[exists](12)",
              "[conditional expression](13)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/main/java/org/apache/ignite/internal/client/router/impl/GridRouterCommandLineStartup.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 123,
                  "endLine": 123,
                  "startColumn": 22,
                  "endColumn": 40
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3fa6875c1e5bd5c39ef3063448428b4a44c0236a0b9be6d700d750f6c99cf3c1",
            "1": "6cfe93f6.3c78960b.bdf24e1b.87a0d8b4.3a9c1944.96050d11.fd792fe7.54d46e25.6cfe93f6.3c78960b.622565c7.de031890.3a9c1944.ce109560.fd792fe7.b837e3a8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/client/router/impl/GridRouterCommandLineStartup.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 121,
                            "endLine": 121,
                            "startColumn": 26,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/client/router/impl/GridRouterCommandLineStartup.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 121,
                            "endLine": 121,
                            "startColumn": 26,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/client/router/impl/GridRouterCommandLineStartup.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 121,
                            "endLine": 121,
                            "startColumn": 16,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/client/router/impl/GridRouterCommandLineStartup.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 123,
                            "endLine": 123,
                            "startColumn": 41,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/IgniteUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3772,
                            "endLine": 3772,
                            "startColumn": 50,
                            "endColumn": 61
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/IgniteUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3773,
                            "endLine": 3773,
                            "startColumn": 33,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/IgniteUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3834,
                            "endLine": 3834,
                            "startColumn": 50,
                            "endColumn": 61
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/IgniteUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3835,
                            "endLine": 3835,
                            "startColumn": 36,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/IgniteUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3731,
                            "endLine": 3731,
                            "startColumn": 52,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/IgniteUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3751,
                            "endLine": 3751,
                            "startColumn": 25,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/IgniteUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3751,
                            "endLine": 3751,
                            "startColumn": 14,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/IgniteUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3753,
                            "endLine": 3753,
                            "startColumn": 13,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/IgniteUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3753,
                            "endLine": 3753,
                            "startColumn": 13,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/IgniteUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3753,
                            "endLine": 3753,
                            "startColumn": 9,
                            "endColumn": 26
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 751,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 42,
          "level": "error",
          "message": {
            "text": "Unsanitized input from a command line argument flows into java.io.FileInputStream, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[java.io.FileInputStream](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 60,
                  "endLine": 60,
                  "startColumn": 59,
                  "endColumn": 74
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f2af9894bb340e25efce5026b188bb301532a101325c0e24379a02c844d810d5",
            "1": "19689298.c8c8034f.92e25e19.75b80ff2.bf3f7b9f.7fda7c5e.55c6f621.6f114b23.8df8fa68.f15a4282.92e25e19.de031890.a7b964d9.7fda7c5e.377b98a3.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 50,
                            "endLine": 50,
                            "startColumn": 39,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 50,
                            "endLine": 50,
                            "startColumn": 39,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 50,
                            "endLine": 50,
                            "startColumn": 34,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 50,
                            "endLine": 50,
                            "startColumn": 14,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 51,
                            "endLine": 51,
                            "startColumn": 57,
                            "endColumn": 70
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 55,
                            "endLine": 55,
                            "startColumn": 45,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 55,
                            "endLine": 55,
                            "startColumn": 14,
                            "endColumn": 95
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 57,
                            "endLine": 57,
                            "startColumn": 12,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 60,
                            "endLine": 60,
                            "startColumn": 75,
                            "endColumn": 99
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 60,
                            "endLine": 60,
                            "startColumn": 59,
                            "endColumn": 74
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 801,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 42,
          "level": "error",
          "message": {
            "text": "Unsanitized input from a command line argument flows into java.io.FileInputStream, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4)",
              "[java.io.FileInputStream](5)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/yarn/src/main/java/org/apache/ignite/yarn/IgniteYarnClient.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 68,
                  "endLine": 68,
                  "startColumn": 35,
                  "endColumn": 57
                }
              }
            }
          ],
          "fingerprints": {
            "0": "72e27afe1355f16f173cd5deb7c556156d1d40de7c38123c7d6a32e2d537e115",
            "1": "bbbd7c96.1cbd3ff4.a05df548.b6ca27fe.025462d2.b051b3b8.657bb8d3.daac91d7.8df8fa68.92e378d2.622565c7.de031890.025462d2.3fd24d55.377b98a3.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/yarn/src/main/java/org/apache/ignite/yarn/IgniteYarnClient.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 68,
                            "endLine": 68,
                            "startColumn": 77,
                            "endColumn": 84
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/yarn/src/main/java/org/apache/ignite/yarn/IgniteYarnClient.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 68,
                            "endLine": 68,
                            "startColumn": 77,
                            "endColumn": 84
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/yarn/src/main/java/org/apache/ignite/yarn/IgniteYarnClient.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 68,
                            "endLine": 68,
                            "startColumn": 58,
                            "endColumn": 91
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/yarn/src/main/java/org/apache/ignite/yarn/ClusterProperties.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 362,
                            "endLine": 362,
                            "startColumn": 42,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/yarn/src/main/java/org/apache/ignite/yarn/ClusterProperties.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 369,
                            "endLine": 369,
                            "startColumn": 48,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/yarn/src/main/java/org/apache/ignite/yarn/ClusterProperties.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 369,
                            "endLine": 369,
                            "startColumn": 32,
                            "endColumn": 47
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 751,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 42,
          "level": "error",
          "message": {
            "text": "Unsanitized input from a command line argument flows into java.io.FileInputStream, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4)",
              "[java.io.FileInputStream](5)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/mesos/src/main/java/org/apache/ignite/mesos/IgniteFramework.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 68,
                  "endLine": 68,
                  "startColumn": 42,
                  "endColumn": 64
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a9d796ad0074d1a97820e005e13eee6d3cb256eb96e2424b413f57d39ac0d91e",
            "1": "ca9876a9.d6a1ebef.1b9a1d8e.b6ca27fe.0acd59f9.117e971f.657bb8d3.daac91d7.8df8fa68.56ff68f3.622565c7.de031890.0acd59f9.ce109560.377b98a3.330e106f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/mesos/src/main/java/org/apache/ignite/mesos/IgniteFramework.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 68,
                            "endLine": 68,
                            "startColumn": 84,
                            "endColumn": 91
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/mesos/src/main/java/org/apache/ignite/mesos/IgniteFramework.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 68,
                            "endLine": 68,
                            "startColumn": 84,
                            "endColumn": 91
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/mesos/src/main/java/org/apache/ignite/mesos/IgniteFramework.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 68,
                            "endLine": 68,
                            "startColumn": 65,
                            "endColumn": 98
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/mesos/src/main/java/org/apache/ignite/mesos/ClusterProperties.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 474,
                            "endLine": 474,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/mesos/src/main/java/org/apache/ignite/mesos/ClusterProperties.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 481,
                            "endLine": 481,
                            "startColumn": 63,
                            "endColumn": 66
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/mesos/src/main/java/org/apache/ignite/mesos/ClusterProperties.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 481,
                            "endLine": 481,
                            "startColumn": 47,
                            "endColumn": 62
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 751,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 42,
          "level": "error",
          "message": {
            "text": "Unsanitized input from a command line argument flows into java.io.FileInputStream, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[java.io.FileInputStream](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "examples/src/main/java/org/apache/ignite/examples/igfs/IgfsMapReduceExample.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 123,
                  "endLine": 123,
                  "startColumn": 39,
                  "endColumn": 54
                }
              }
            }
          ],
          "fingerprints": {
            "0": "71fe48814de91a7bcb5a5b86ffbb2d555e5b44d886d80bd38fa93b5d4621f316",
            "1": "e6fcc0e0.83545221.a224ef38.f9bdd8eb.75248ddf.0d476878.2501145e.6f114b23.8df8fa68.a9c34a84.2564e0af.f9bdd8eb.f5d7d1d7.730a5695.377b98a3.9d4df0e4"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "examples/src/main/java/org/apache/ignite/examples/igfs/IgfsMapReduceExample.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 74,
                            "endLine": 74,
                            "startColumn": 35,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "examples/src/main/java/org/apache/ignite/examples/igfs/IgfsMapReduceExample.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 74,
                            "endLine": 74,
                            "startColumn": 35,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "examples/src/main/java/org/apache/ignite/examples/igfs/IgfsMapReduceExample.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 74,
                            "endLine": 74,
                            "startColumn": 24,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "examples/src/main/java/org/apache/ignite/examples/igfs/IgfsMapReduceExample.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 76,
                            "endLine": 76,
                            "startColumn": 33,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "examples/src/main/java/org/apache/ignite/examples/igfs/IgfsMapReduceExample.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 76,
                            "endLine": 76,
                            "startColumn": 22,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "examples/src/main/java/org/apache/ignite/examples/igfs/IgfsMapReduceExample.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 87,
                            "endLine": 87,
                            "startColumn": 57,
                            "endColumn": 61
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "examples/src/main/java/org/apache/ignite/examples/igfs/IgfsMapReduceExample.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 89,
                            "endLine": 89,
                            "startColumn": 39,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "examples/src/main/java/org/apache/ignite/examples/igfs/IgfsMapReduceExample.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 117,
                            "endLine": 117,
                            "startColumn": 73,
                            "endColumn": 82
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "examples/src/main/java/org/apache/ignite/examples/igfs/IgfsMapReduceExample.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 123,
                            "endLine": 123,
                            "startColumn": 55,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "examples/src/main/java/org/apache/ignite/examples/igfs/IgfsMapReduceExample.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 123,
                            "endLine": 123,
                            "startColumn": 39,
                            "endColumn": 54
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 751,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 42,
          "level": "error",
          "message": {
            "text": "Unsanitized input from a command line argument flows into listFiles, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to manipulate arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to manipulate arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4)",
              "[listFiles](5)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/dev-utils/src/main/java/org/apache/ignite/development/utils/IgniteWalConverter.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 65,
                  "endLine": 65,
                  "startColumn": 34,
                  "endColumn": 70
                }
              }
            }
          ],
          "fingerprints": {
            "0": "74f4a9ded58bb047bf162169082064c375a27998c375116e15be03bf5bd08221",
            "1": "8df8fa68.bf43912f.622565c7.6c52ae28.408180c7.24dcd476.be04624c.54d46e25.8df8fa68.bf43912f.c3ba4f86.e22980a8.408180c7.730a5695.377b98a3.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/dev-utils/src/main/java/org/apache/ignite/development/utils/IgniteWalConverter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 63,
                            "endLine": 63,
                            "startColumn": 58,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/dev-utils/src/main/java/org/apache/ignite/development/utils/IgniteWalConverter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 63,
                            "endLine": 63,
                            "startColumn": 58,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/dev-utils/src/main/java/org/apache/ignite/development/utils/IgniteWalConverter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 63,
                            "endLine": 63,
                            "startColumn": 53,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/dev-utils/src/main/java/org/apache/ignite/development/utils/IgniteWalConverter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 63,
                            "endLine": 63,
                            "startColumn": 20,
                            "endColumn": 66
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/dev-utils/src/main/java/org/apache/ignite/development/utils/IgniteWalConverter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 65,
                            "endLine": 65,
                            "startColumn": 34,
                            "endColumn": 60
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/dev-utils/src/main/java/org/apache/ignite/development/utils/IgniteWalConverter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 65,
                            "endLine": 65,
                            "startColumn": 34,
                            "endColumn": 70
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 751,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 42,
          "level": "error",
          "message": {
            "text": "Unsanitized input from a zip file flows into mkdirs, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to manipulate arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to manipulate arbitrary files.",
            "arguments": [
              "[a zip file](0)",
              "[flows](1),(2),(3)",
              "[mkdirs](4)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/IgniteUtils.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 6195,
                  "endLine": 6195,
                  "startColumn": 21,
                  "endColumn": 60
                }
              }
            }
          ],
          "fingerprints": {
            "0": "81434959a2976969732531a0c921a03478e8ef96557e6dfc8f9241f1c157af71",
            "1": "48eb7b2c.97acdc08.8828b72d.e22980a8.f1d9f854.41d8b89f.be04624c.54d46e25.19689298.2329d1ab.bb993ef0.e22980a8.6a152aaf.41d8b89f.9155380b.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/IgniteUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6195,
                            "endLine": 6195,
                            "startColumn": 37,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/IgniteUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6195,
                            "endLine": 6195,
                            "startColumn": 37,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/IgniteUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6195,
                            "endLine": 6195,
                            "startColumn": 25,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/IgniteUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6195,
                            "endLine": 6195,
                            "startColumn": 21,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/IgniteUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6195,
                            "endLine": 6195,
                            "startColumn": 21,
                            "endColumn": 60
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 801,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 42,
          "level": "error",
          "message": {
            "text": "Unsanitized input from a zip file flows into mkdirs, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to manipulate arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to manipulate arbitrary files.",
            "arguments": [
              "[a zip file](0)",
              "[flows](1),(2),(3),(4),(5),(6)",
              "[mkdirs](7)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/IgniteUtils.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 6209,
                  "endLine": 6209,
                  "startColumn": 25,
                  "endColumn": 55
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a7a12cf72babdad2b01307cf9d5b9fa3f6f487e46ab359d5536f206aed53f60d",
            "1": "5266f9a2.c8c8034f.8828b72d.653e2c72.509b216d.41d8b89f.a204df5d.54d46e25.19689298.2329d1ab.bb993ef0.c48320d7.dd06b926.7fda7c5e.a204df5d.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/IgniteUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6206,
                            "endLine": 6206,
                            "startColumn": 52,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/IgniteUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6206,
                            "endLine": 6206,
                            "startColumn": 52,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/IgniteUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6206,
                            "endLine": 6206,
                            "startColumn": 40,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/IgniteUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6206,
                            "endLine": 6206,
                            "startColumn": 26,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/IgniteUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6208,
                            "endLine": 6208,
                            "startColumn": 26,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/IgniteUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6209,
                            "endLine": 6209,
                            "startColumn": 25,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/IgniteUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6209,
                            "endLine": 6209,
                            "startColumn": 25,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/IgniteUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6209,
                            "endLine": 6209,
                            "startColumn": 25,
                            "endColumn": 55
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 801,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 42,
          "level": "error",
          "message": {
            "text": "Unsanitized input from a zip file flows into exists, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to bypass the logic of the application in the conditional expression.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to bypass the logic of the application in the {3}.",
            "arguments": [
              "[a zip file](0)",
              "[flows](1),(2),(3),(4),(5)",
              "[exists](6)",
              "[conditional expression](7)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/IgniteUtils.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 6208,
                  "endLine": 6208,
                  "startColumn": 26,
                  "endColumn": 56
                }
              }
            }
          ],
          "fingerprints": {
            "0": "33272dc3f86da19330f7b63f858ddedeffe7aa4f29bfd874fcbfa1a7c1a0e2da",
            "1": "19689298.c8c8034f.e9f7f631.9998adc9.dd06b926.24dcd476.a204df5d.a1df1a3b.19689298.2329d1ab.bb993ef0.c48320d7.d31a8364.7fda7c5e.bae646e8.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/IgniteUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6206,
                            "endLine": 6206,
                            "startColumn": 52,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/IgniteUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6206,
                            "endLine": 6206,
                            "startColumn": 52,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/IgniteUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6206,
                            "endLine": 6206,
                            "startColumn": 40,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/IgniteUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6206,
                            "endLine": 6206,
                            "startColumn": 26,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/IgniteUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6208,
                            "endLine": 6208,
                            "startColumn": 26,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/IgniteUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6208,
                            "endLine": 6208,
                            "startColumn": 26,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/IgniteUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6208,
                            "endLine": 6208,
                            "startColumn": 26,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/IgniteUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6208,
                            "endLine": 6208,
                            "startColumn": 21,
                            "endColumn": 58
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 801,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 42,
          "level": "error",
          "message": {
            "text": "Unsanitized input from a zip file flows into java.io.FileOutputStream, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "arguments": [
              "[a zip file](0)",
              "[flows](1),(2),(3),(4),(5)",
              "[java.io.FileOutputStream](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/IgniteUtils.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 6211,
                  "endLine": 6211,
                  "startColumn": 56,
                  "endColumn": 72
                }
              }
            }
          ],
          "fingerprints": {
            "0": "87ab18d54c249ed3b13a412e70b9f1d4939d649285097684de0a6931c9b334c1",
            "1": "19689298.83dbfe52.8828b72d.6c52ae28.509b216d.41d8b89f.a204df5d.f82433aa.19689298.2329d1ab.bb993ef0.c48320d7.dd06b926.7fda7c5e.a204df5d.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/IgniteUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6206,
                            "endLine": 6206,
                            "startColumn": 52,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/IgniteUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6206,
                            "endLine": 6206,
                            "startColumn": 52,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/IgniteUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6206,
                            "endLine": 6206,
                            "startColumn": 40,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/IgniteUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6206,
                            "endLine": 6206,
                            "startColumn": 26,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/IgniteUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6208,
                            "endLine": 6208,
                            "startColumn": 26,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/IgniteUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6211,
                            "endLine": 6211,
                            "startColumn": 73,
                            "endColumn": 80
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/IgniteUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6211,
                            "endLine": 6211,
                            "startColumn": 56,
                            "endColumn": 72
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 801,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 42,
          "level": "error",
          "message": {
            "text": "Unsanitized input from data from a remote resource flows into exists, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to bypass the logic of the application in the conditional expression.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to bypass the logic of the application in the {3}.",
            "arguments": [
              "[data from a remote resource](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20)",
              "[exists](21)",
              "[conditional expression](22)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 253,
                  "endLine": 253,
                  "startColumn": 18,
                  "endColumn": 32
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6b5687048d0d6e04a2f6f8e4924962d421a0df48b803e2440a88a884a635b4af",
            "1": "19689298.c8c8034f.3af5e711.9998adc9.dd06b926.c7059a91.d2f0a140.54d46e25.e2030dc2.aa3cd9c0.3af5e711.de031890.2eaf0ea5.85d83993.3241443d.2b9ad474"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 134,
                            "endLine": 134,
                            "startColumn": 58,
                            "endColumn": 77
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 134,
                            "endLine": 134,
                            "startColumn": 58,
                            "endColumn": 77
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 134,
                            "endLine": 134,
                            "startColumn": 40,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 134,
                            "endLine": 134,
                            "startColumn": 31,
                            "endColumn": 80
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 136,
                            "endLine": 136,
                            "startColumn": 76,
                            "endColumn": 78
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 136,
                            "endLine": 136,
                            "startColumn": 76,
                            "endColumn": 89
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 136,
                            "endLine": 136,
                            "startColumn": 47,
                            "endColumn": 91
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 136,
                            "endLine": 136,
                            "startColumn": 41,
                            "endColumn": 91
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 138,
                            "endLine": 138,
                            "startColumn": 19,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 141,
                            "endLine": 141,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 141,
                            "endLine": 141,
                            "startColumn": 40,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 141,
                            "endLine": 141,
                            "startColumn": 24,
                            "endColumn": 61
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 145,
                            "endLine": 145,
                            "startColumn": 31,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 145,
                            "endLine": 145,
                            "startColumn": 17,
                            "endColumn": 99
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 188,
                            "endLine": 188,
                            "startColumn": 24,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 188,
                            "endLine": 188,
                            "startColumn": 9,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 251,
                            "endLine": 251,
                            "startColumn": 37,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 251,
                            "endLine": 251,
                            "startColumn": 37,
                            "endColumn": 58
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 251,
                            "endLine": 251,
                            "startColumn": 32,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 251,
                            "endLine": 251,
                            "startColumn": 18,
                            "endColumn": 61
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 253,
                            "endLine": 253,
                            "startColumn": 18,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 253,
                            "endLine": 253,
                            "startColumn": 18,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 253,
                            "endLine": 253,
                            "startColumn": 13,
                            "endColumn": 34
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 801,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 42,
          "level": "error",
          "message": {
            "text": "Unsanitized input from data from a remote resource flows into exists, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to bypass the logic of the application in the conditional expression.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to bypass the logic of the application in the {3}.",
            "arguments": [
              "[data from a remote resource](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24)",
              "[exists](25)",
              "[conditional expression](26)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 260,
                  "endLine": 260,
                  "startColumn": 18,
                  "endColumn": 32
                }
              }
            }
          ],
          "fingerprints": {
            "0": "47d2aa6f1121e3cab0791a99a79d6db71ec0ba029e3925199bfd8fdcceacc79e",
            "1": "19689298.c8c8034f.3af5e711.9998adc9.dd06b926.c7059a91.d2f0a140.54d46e25.5530da6b.608fb4e9.3af5e711.de031890.2eaf0ea5.85d83993.3241443d.2b9ad474"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 134,
                            "endLine": 134,
                            "startColumn": 58,
                            "endColumn": 77
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 134,
                            "endLine": 134,
                            "startColumn": 58,
                            "endColumn": 77
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 134,
                            "endLine": 134,
                            "startColumn": 40,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 134,
                            "endLine": 134,
                            "startColumn": 31,
                            "endColumn": 80
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 136,
                            "endLine": 136,
                            "startColumn": 76,
                            "endColumn": 78
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 136,
                            "endLine": 136,
                            "startColumn": 76,
                            "endColumn": 89
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 136,
                            "endLine": 136,
                            "startColumn": 47,
                            "endColumn": 91
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 136,
                            "endLine": 136,
                            "startColumn": 41,
                            "endColumn": 91
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 138,
                            "endLine": 138,
                            "startColumn": 19,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 141,
                            "endLine": 141,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 145,
                            "endLine": 145,
                            "startColumn": 67,
                            "endColumn": 70
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 145,
                            "endLine": 145,
                            "startColumn": 83,
                            "endColumn": 86
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 146,
                            "endLine": 146,
                            "startColumn": 21,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 41,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 41,
                            "endColumn": 61
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 24,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 152,
                            "endLine": 152,
                            "startColumn": 32,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 152,
                            "endLine": 152,
                            "startColumn": 17,
                            "endColumn": 102
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 189,
                            "endLine": 189,
                            "startColumn": 25,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 189,
                            "endLine": 189,
                            "startColumn": 9,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 258,
                            "endLine": 258,
                            "startColumn": 37,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 258,
                            "endLine": 258,
                            "startColumn": 37,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 258,
                            "endLine": 258,
                            "startColumn": 32,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 258,
                            "endLine": 258,
                            "startColumn": 18,
                            "endColumn": 62
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 260,
                            "endLine": 260,
                            "startColumn": 18,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 260,
                            "endLine": 260,
                            "startColumn": 18,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 260,
                            "endLine": 260,
                            "startColumn": 13,
                            "endColumn": 34
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 801,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 42,
          "level": "error",
          "message": {
            "text": "Unsanitized input from data from a remote resource flows into delete, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to manipulate arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to manipulate arbitrary files.",
            "arguments": [
              "[data from a remote resource](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26)",
              "[delete](27)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 312,
                  "endLine": 312,
                  "startColumn": 9,
                  "endColumn": 23
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c1eb28336a1540cdbded6199ba05c0dda70eb385a9bf741029b0ec5e257fc26c",
            "1": "19689298.3b7a4802.3af5e711.e22980a8.a67bd94f.38834cec.6d63f75a.54d46e25.e2030dc2.aa3cd9c0.3af5e711.de031890.2eaf0ea5.85d83993.3241443d.2b9ad474"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 134,
                            "endLine": 134,
                            "startColumn": 58,
                            "endColumn": 77
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 134,
                            "endLine": 134,
                            "startColumn": 58,
                            "endColumn": 77
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 134,
                            "endLine": 134,
                            "startColumn": 40,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 134,
                            "endLine": 134,
                            "startColumn": 31,
                            "endColumn": 80
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 136,
                            "endLine": 136,
                            "startColumn": 76,
                            "endColumn": 78
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 136,
                            "endLine": 136,
                            "startColumn": 76,
                            "endColumn": 89
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 136,
                            "endLine": 136,
                            "startColumn": 47,
                            "endColumn": 91
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 136,
                            "endLine": 136,
                            "startColumn": 41,
                            "endColumn": 91
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 138,
                            "endLine": 138,
                            "startColumn": 19,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 141,
                            "endLine": 141,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 141,
                            "endLine": 141,
                            "startColumn": 40,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 141,
                            "endLine": 141,
                            "startColumn": 24,
                            "endColumn": 61
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 145,
                            "endLine": 145,
                            "startColumn": 31,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 145,
                            "endLine": 145,
                            "startColumn": 17,
                            "endColumn": 99
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 188,
                            "endLine": 188,
                            "startColumn": 24,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 188,
                            "endLine": 188,
                            "startColumn": 9,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 267,
                            "endLine": 267,
                            "startColumn": 41,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 269,
                            "endLine": 269,
                            "startColumn": 17,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 271,
                            "endLine": 271,
                            "startColumn": 24,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 300,
                            "endLine": 300,
                            "startColumn": 29,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 303,
                            "endLine": 303,
                            "startColumn": 9,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 305,
                            "endLine": 305,
                            "startColumn": 33,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 305,
                            "endLine": 305,
                            "startColumn": 33,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 305,
                            "endLine": 305,
                            "startColumn": 28,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 305,
                            "endLine": 305,
                            "startColumn": 14,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 310,
                            "endLine": 310,
                            "startColumn": 50,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 312,
                            "endLine": 312,
                            "startColumn": 9,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/util/ipc/shmem/IpcSharedMemoryClientEndpoint.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 312,
                            "endLine": 312,
                            "startColumn": 9,
                            "endColumn": 23
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 801,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 42,
          "level": "error",
          "message": {
            "text": "Unsanitized input from a command line argument flows into mkdirs, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to manipulate arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to manipulate arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11)",
              "[mkdirs](12)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 80,
                  "endLine": 80,
                  "startColumn": 17,
                  "endColumn": 50
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7c9953e3db2e96a0adcef35bdc60fa96c951531a6a4d040b711609d9dd5e8047",
            "1": "daf8aa0f.3ddf9eb6.8828b72d.9998adc9.dd06b926.d7c8947b.a204df5d.f82433aa.8df8fa68.3ddf9eb6.92e25e19.de031890.dd06b926.ce109560.377b98a3.10c5900f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 50,
                            "endLine": 50,
                            "startColumn": 39,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 50,
                            "endLine": 50,
                            "startColumn": 39,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 50,
                            "endLine": 50,
                            "startColumn": 34,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 50,
                            "endLine": 50,
                            "startColumn": 14,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 51,
                            "endLine": 51,
                            "startColumn": 57,
                            "endColumn": 70
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 36,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 36,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 31,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 14,
                            "endColumn": 92
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 79,
                            "endLine": 79,
                            "startColumn": 13,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 17,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 17,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 17,
                            "endColumn": 50
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 801,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 42,
          "level": "error",
          "message": {
            "text": "Unsanitized input from a command line argument flows into java.io.FileOutputStream, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13)",
              "[java.io.FileOutputStream](14)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 111,
                  "endLine": 111,
                  "startColumn": 36,
                  "endColumn": 52
                }
              }
            }
          ],
          "fingerprints": {
            "0": "1e164036dfdf4ec21f51a587a4700df243f26a45fbc7570eda68caf3aaffb9f7",
            "1": "81925955.3ddf9eb6.a224ef38.f129036c.89542039.0d476878.335dc229.65e99aa4.8df8fa68.3ddf9eb6.92e25e19.de031890.7d73cd7b.ce109560.377b98a3.10c5900f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 50,
                            "endLine": 50,
                            "startColumn": 39,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 50,
                            "endLine": 50,
                            "startColumn": 39,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 50,
                            "endLine": 50,
                            "startColumn": 34,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 50,
                            "endLine": 50,
                            "startColumn": 14,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 51,
                            "endLine": 51,
                            "startColumn": 57,
                            "endColumn": 70
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 36,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 36,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 31,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 14,
                            "endColumn": 92
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 79,
                            "endLine": 79,
                            "startColumn": 13,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 85,
                            "endLine": 85,
                            "startColumn": 51,
                            "endColumn": 61
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 87,
                            "endLine": 87,
                            "startColumn": 38,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 97,
                            "endLine": 97,
                            "startColumn": 63,
                            "endColumn": 79
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 111,
                            "endLine": 111,
                            "startColumn": 53,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 111,
                            "endLine": 111,
                            "startColumn": 36,
                            "endColumn": 52
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 801,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/TimingAttack",
          "ruleIndex": 43,
          "level": "warning",
          "message": {
            "text": "An attacker can guess the secret value of digest because it is compared using java.util.Arrays.equals, which is vulnerable to timing attacks. Use java.security.MessageDigest.isEqual to compare values securely.",
            "markdown": "An attacker can guess the secret value of {0} because it is compared using {1}, which is vulnerable to timing attacks. Use java.security.MessageDigest.isEqual to compare values securely.",
            "arguments": [
              "[digest](0)",
              "[java.util.Arrays.equals](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/main/java/org/apache/ignite/internal/managers/encryption/GridEncryptionManager.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1835,
                  "endLine": 1835,
                  "startColumn": 17,
                  "endColumn": 30
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e59f2b8873bc8001390e56d8ed4aa6a592214817715f46cc7938c3fc4ce6f1bb",
            "1": "05517f54.8ba1272f.54350824.39093879.8b6f9762.0bdcf4c7.fa1cb7c0.3e4e792e.05517f54.8ba1272f.54350824.39093879.8b6f9762.0bdcf4c7.fa1cb7c0.3e4e792e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/managers/encryption/GridEncryptionManager.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1803,
                            "endLine": 1803,
                            "startColumn": 71,
                            "endColumn": 84
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/internal/managers/encryption/GridEncryptionManager.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1835,
                            "endLine": 1835,
                            "startColumn": 17,
                            "endColumn": 30
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 351,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ]
          }
        },
        {
          "ruleId": "java/TimingAttack",
          "ruleIndex": 43,
          "level": "warning",
          "message": {
            "text": "An attacker can guess the secret value of digest because it is compared using java.util.Arrays.equals, which is vulnerable to timing attacks. Use java.security.MessageDigest.isEqual to compare values securely.",
            "markdown": "An attacker can guess the secret value of {0} because it is compared using {1}, which is vulnerable to timing attacks. Use java.security.MessageDigest.isEqual to compare values securely.",
            "arguments": [
              "[digest](0)",
              "[java.util.Arrays.equals](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/main/java/org/apache/ignite/spi/encryption/keystore/KeystoreEncryptionKey.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 73,
                  "endLine": 73,
                  "startColumn": 13,
                  "endColumn": 26
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6967579e42f1ad67c2f2932abeab5cfab1b2bd9eaba69106ed8927efc85228ca",
            "1": "05517f54.8ba1272f.54350824.39093879.8b6f9762.0bdcf4c7.fa1cb7c0.3e4e792e.05517f54.8ba1272f.54350824.39093879.8b6f9762.0bdcf4c7.fa1cb7c0.3e4e792e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/spi/encryption/keystore/KeystoreEncryptionKey.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 50,
                            "endLine": 50,
                            "startColumn": 34,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/spi/encryption/keystore/KeystoreEncryptionKey.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 73,
                            "endLine": 73,
                            "startColumn": 13,
                            "endColumn": 26
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 301,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              }
            ]
          }
        },
        {
          "ruleId": "java/Deserialization/test",
          "ruleIndex": 44,
          "level": "note",
          "message": {
            "text": "Unsanitized input from the database flows into java.io.ObjectInputStream, where it is used to deserialize an object. This may result in an Unsafe Deserialization vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to deserialize an object. This may result in an Unsafe Deserialization vulnerability.",
            "arguments": [
              "[the database](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9)",
              "[java.io.ObjectInputStream](10)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/test/java/org/apache/ignite/internal/processors/cache/H2CacheStoreStrategy.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 385,
                  "endLine": 385,
                  "startColumn": 36,
                  "endColumn": 60
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0a96339b3aa8a032d361da532efeb11c6ec443393450c0577060931caba59c32",
            "1": "e2030dc2.92e378d2.33fa5dbe.5772e0e3.4e41a7a6.7fda7c5e.3241443d.36b418e8.e2030dc2.6f391d93.14535f1c.5772e0e3.2f467414.7fda7c5e.3241443d.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/internal/processors/cache/H2CacheStoreStrategy.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 384,
                            "endLine": 384,
                            "startColumn": 22,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/internal/processors/cache/H2CacheStoreStrategy.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 384,
                            "endLine": 384,
                            "startColumn": 22,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/internal/processors/cache/H2CacheStoreStrategy.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 384,
                            "endLine": 384,
                            "startColumn": 17,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/internal/processors/cache/H2CacheStoreStrategy.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 385,
                            "endLine": 385,
                            "startColumn": 24,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/internal/processors/cache/H2CacheStoreStrategy.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 385,
                            "endLine": 385,
                            "startColumn": 61,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/internal/processors/cache/H2CacheStoreStrategy.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 385,
                            "endLine": 385,
                            "startColumn": 61,
                            "endColumn": 72
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/internal/processors/cache/H2CacheStoreStrategy.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 478,
                            "endLine": 478,
                            "startColumn": 42,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/internal/processors/cache/H2CacheStoreStrategy.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 479,
                            "endLine": 479,
                            "startColumn": 47,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/internal/processors/cache/H2CacheStoreStrategy.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 479,
                            "endLine": 479,
                            "startColumn": 39,
                            "endColumn": 74
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/internal/processors/cache/H2CacheStoreStrategy.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 480,
                            "endLine": 480,
                            "startColumn": 66,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/internal/processors/cache/H2CacheStoreStrategy.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 480,
                            "endLine": 480,
                            "startColumn": 48,
                            "endColumn": 65
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/Deserialization/test",
          "ruleIndex": 44,
          "level": "note",
          "message": {
            "text": "Unsanitized input from the database flows into java.io.ObjectInputStream, where it is used to deserialize an object. This may result in an Unsafe Deserialization vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to deserialize an object. This may result in an Unsafe Deserialization vulnerability.",
            "arguments": [
              "[the database](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9)",
              "[java.io.ObjectInputStream](10)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/test/java/org/apache/ignite/internal/processors/cache/H2CacheStoreStrategy.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 480,
                  "endLine": 480,
                  "startColumn": 48,
                  "endColumn": 65
                }
              }
            }
          ],
          "fingerprints": {
            "0": "eb409f6c0b40e842f5699247ee012af875ec67ade584a5e3370a27c523514d8f",
            "1": "a4cfb0fb.4e8fb7ec.b643c2ab.6c52ae28.d31a8364.4cdc7c2d.bae646e8.203bd690.a4cfb0fb.6f391d93.14535f1c.44ab356c.bab812df.4cdc7c2d.bae646e8.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/internal/processors/cache/H2CacheStoreStrategy.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 319,
                            "endLine": 319,
                            "startColumn": 22,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/internal/processors/cache/H2CacheStoreStrategy.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 319,
                            "endLine": 319,
                            "startColumn": 22,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/internal/processors/cache/H2CacheStoreStrategy.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 319,
                            "endLine": 319,
                            "startColumn": 17,
                            "endColumn": 62
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/internal/processors/cache/H2CacheStoreStrategy.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 320,
                            "endLine": 320,
                            "startColumn": 24,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/internal/processors/cache/H2CacheStoreStrategy.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 321,
                            "endLine": 321,
                            "startColumn": 43,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/internal/processors/cache/H2CacheStoreStrategy.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 321,
                            "endLine": 321,
                            "startColumn": 43,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/internal/processors/cache/H2CacheStoreStrategy.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 478,
                            "endLine": 478,
                            "startColumn": 42,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/internal/processors/cache/H2CacheStoreStrategy.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 479,
                            "endLine": 479,
                            "startColumn": 47,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/internal/processors/cache/H2CacheStoreStrategy.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 479,
                            "endLine": 479,
                            "startColumn": 39,
                            "endColumn": 74
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/internal/processors/cache/H2CacheStoreStrategy.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 480,
                            "endLine": 480,
                            "startColumn": 66,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/internal/processors/cache/H2CacheStoreStrategy.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 480,
                            "endLine": 480,
                            "startColumn": 48,
                            "endColumn": 65
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/Deserialization/test",
          "ruleIndex": 44,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a command line argument flows into fromXML, where it is used to deserialize an object. This may result in an Unsafe Deserialization vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to deserialize an object. This may result in an Unsafe Deserialization vulnerability.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6)",
              "[fromXML](7)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/compatibility/src/test/java/org/apache/ignite/compatibility/testframework/junits/IgniteCompatibilityNodeRunner.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 211,
                  "endLine": 211,
                  "startColumn": 40,
                  "endColumn": 61
                }
              }
            }
          ],
          "fingerprints": {
            "0": "02314e0b4523f0a84aecf25bce857c2e08ab8f139edbbb8a4d15777118784060",
            "1": "19689298.1cbd3ff4.b86ac270.6c52ae28.d31a8364.89505584.bae646e8.62fdbf1b.e1d7cd7c.96b675ac.5d3b0445.de031890.544c7208.31c50941.9ba1820f.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/compatibility/src/test/java/org/apache/ignite/compatibility/testframework/junits/IgniteCompatibilityNodeRunner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 83,
                            "endLine": 83,
                            "startColumn": 88,
                            "endColumn": 95
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/compatibility/src/test/java/org/apache/ignite/compatibility/testframework/junits/IgniteCompatibilityNodeRunner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 83,
                            "endLine": 83,
                            "startColumn": 88,
                            "endColumn": 95
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/compatibility/src/test/java/org/apache/ignite/compatibility/testframework/junits/IgniteCompatibilityNodeRunner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 209,
                            "endLine": 209,
                            "startColumn": 71,
                            "endColumn": 86
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/compatibility/src/test/java/org/apache/ignite/compatibility/testframework/junits/IgniteCompatibilityNodeRunner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 210,
                            "endLine": 210,
                            "startColumn": 62,
                            "endColumn": 71
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/compatibility/src/test/java/org/apache/ignite/compatibility/testframework/junits/IgniteCompatibilityNodeRunner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 210,
                            "endLine": 210,
                            "startColumn": 38,
                            "endColumn": 61
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/compatibility/src/test/java/org/apache/ignite/compatibility/testframework/junits/IgniteCompatibilityNodeRunner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 210,
                            "endLine": 210,
                            "startColumn": 29,
                            "endColumn": 106
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/compatibility/src/test/java/org/apache/ignite/compatibility/testframework/junits/IgniteCompatibilityNodeRunner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 211,
                            "endLine": 211,
                            "startColumn": 62,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/compatibility/src/test/java/org/apache/ignite/compatibility/testframework/junits/IgniteCompatibilityNodeRunner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 211,
                            "endLine": 211,
                            "startColumn": 40,
                            "endColumn": 61
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/Deserialization/test",
          "ruleIndex": 44,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a command line argument flows into fromXML, where it is used to deserialize an object. This may result in an Unsafe Deserialization vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to deserialize an object. This may result in an Unsafe Deserialization vulnerability.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6)",
              "[fromXML](7)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/test/java/org/apache/ignite/testframework/junits/multijvm/IgniteNodeRunner.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 149,
                  "endLine": 149,
                  "startColumn": 60,
                  "endColumn": 81
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5af5f8a510713e9b20a5d5eaa8fd03b948a7acc228ea5ee3ee4f3bd452e1f00e",
            "1": "19689298.60a9c58c.56016534.6c52ae28.d31a8364.89505584.bae646e8.ee77547c.8df8fa68.96b675ac.3c6baea4.de031890.544c7208.ce109560.377b98a3.b837e3a8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/junits/multijvm/IgniteNodeRunner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 72,
                            "endLine": 72,
                            "startColumn": 64,
                            "endColumn": 71
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/junits/multijvm/IgniteNodeRunner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 72,
                            "endLine": 72,
                            "startColumn": 64,
                            "endColumn": 71
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/junits/multijvm/IgniteNodeRunner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 146,
                            "endLine": 146,
                            "startColumn": 69,
                            "endColumn": 84
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/junits/multijvm/IgniteNodeRunner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 63,
                            "endColumn": 73
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/junits/multijvm/IgniteNodeRunner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 44,
                            "endColumn": 58
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/junits/multijvm/IgniteNodeRunner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 28,
                            "endColumn": 84
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/junits/multijvm/IgniteNodeRunner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 149,
                            "endLine": 149,
                            "startColumn": 82,
                            "endColumn": 91
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/test/java/org/apache/ignite/testframework/junits/multijvm/IgniteNodeRunner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 149,
                            "endLine": 149,
                            "startColumn": 60,
                            "endColumn": 81
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/Deserialization/test",
          "ruleIndex": 44,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a command line argument flows into fromXML, where it is used to deserialize an object. This may result in an Unsafe Deserialization vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to deserialize an object. This may result in an Unsafe Deserialization vulnerability.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[fromXML](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/compatibility/src/test/java/org/apache/ignite/compatibility/clients/AbstractClientCompatibilityTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 229,
                  "endLine": 229,
                  "startColumn": 43,
                  "endColumn": 101
                }
              }
            }
          ],
          "fingerprints": {
            "0": "65362e402999829701b4e502e5c6b2501d9858917c957fec743d24bbcb7a9a69",
            "1": "19689298.1cbd3ff4.1815d120.0558a6f4.d35f8135.b051b3b8.df7e59ba.54d46e25.e1d7cd7c.7f413d6f.dddb0dff.200082e2.d35f8135.730a5695.377b98a3.b837e3a8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/compatibility/src/test/java/org/apache/ignite/compatibility/clients/AbstractClientCompatibilityTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 227,
                            "endLine": 227,
                            "startColumn": 31,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/compatibility/src/test/java/org/apache/ignite/compatibility/clients/AbstractClientCompatibilityTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 227,
                            "endLine": 227,
                            "startColumn": 31,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/compatibility/src/test/java/org/apache/ignite/compatibility/clients/AbstractClientCompatibilityTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 227,
                            "endLine": 227,
                            "startColumn": 20,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/compatibility/src/test/java/org/apache/ignite/compatibility/clients/AbstractClientCompatibilityTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 229,
                            "endLine": 229,
                            "startColumn": 102,
                            "endColumn": 110
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/compatibility/src/test/java/org/apache/ignite/compatibility/testframework/junits/IgniteCompatibilityNodeRunner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 209,
                            "endLine": 209,
                            "startColumn": 71,
                            "endColumn": 86
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/compatibility/src/test/java/org/apache/ignite/compatibility/testframework/junits/IgniteCompatibilityNodeRunner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 210,
                            "endLine": 210,
                            "startColumn": 62,
                            "endColumn": 71
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/compatibility/src/test/java/org/apache/ignite/compatibility/testframework/junits/IgniteCompatibilityNodeRunner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 210,
                            "endLine": 210,
                            "startColumn": 38,
                            "endColumn": 61
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/compatibility/src/test/java/org/apache/ignite/compatibility/testframework/junits/IgniteCompatibilityNodeRunner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 210,
                            "endLine": 210,
                            "startColumn": 29,
                            "endColumn": 106
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/compatibility/src/test/java/org/apache/ignite/compatibility/testframework/junits/IgniteCompatibilityNodeRunner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 211,
                            "endLine": 211,
                            "startColumn": 62,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/compatibility/src/test/java/org/apache/ignite/compatibility/testframework/junits/IgniteCompatibilityNodeRunner.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 211,
                            "endLine": 211,
                            "startColumn": 40,
                            "endColumn": 61
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoRateLimitingForLogin",
          "ruleIndex": 45,
          "level": "warning",
          "message": {
            "text": "Call to passport.authenticate performs user authentication, but is not protected by any rate-limiting mechanism. This may enable the attackers to bruteforce users' passwords. Consider using a rate-limiting middleware such as express-limit.",
            "markdown": "Call to {0} performs user authentication, but is not protected by any rate-limiting mechanism. This may enable the attackers to bruteforce users' passwords. Consider using a rate-limiting middleware such as express-limit.",
            "arguments": [
              "[passport.authenticate](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/web-console/backend/routes/public.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 69,
                  "endLine": 69,
                  "startColumn": 13,
                  "endColumn": 34
                }
              }
            }
          ],
          "fingerprints": {
            "0": "33228460e367d3673aeb2d033e0c46a6e8d128c530b1cac12f07292e5ae3157f",
            "1": "b98e9ad3.6e22d656.2268d995.03d3a5ae.b8177b89.108b3274.c51efe34.796225fb.b98e9ad3.6e22d656.2268d995.03d3a5ae.b8177b89.108b3274.c51efe34.796225fb"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/web-console/backend/routes/public.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 69,
                            "endLine": 69,
                            "startColumn": 13,
                            "endColumn": 34
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 501,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "csharp/LogForging",
          "ruleIndex": 46,
          "level": "note",
          "message": {
            "text": "(BETA Suggestion) Unsanitized input from a command line argument flows into Debug, where it is used as log input. This may result in a Logs Forging vulnerability.",
            "markdown": "(BETA Suggestion) Unsanitized input from {0} {1} into {2}, where it is used as log input. This may result in a Logs Forging vulnerability.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27)",
              "[Debug](28)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/platforms/dotnet/Apache.Ignite/IgniteRunner.cs",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 100,
                  "endLine": 100,
                  "startColumn": 38,
                  "endColumn": 52
                }
              }
            }
          ],
          "fingerprints": {
            "0": "30a88cbfecf9927e7824ce66de908447d8ed6f076609cd86e4b81838188d66ba",
            "1": "c493a004.0fd32a77.50fe9b47.f5757239.4a5c8084.0aebafad.5f1fa597.a45de1b4.20a3e71c.8c06c0b2.1d318ef7.f5757239.a416a31a.c18e745c.ce0185b2.bfebfde9"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/IgniteRunner.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 50,
                            "endLine": 50,
                            "startColumn": 35,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/IgniteRunner.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 50,
                            "endLine": 50,
                            "startColumn": 35,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/IgniteRunner.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 21,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/IgniteRunner.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 60,
                            "endLine": 60,
                            "startColumn": 36,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/IgniteRunner.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 47,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/IgniteRunner.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 163,
                            "endLine": 163,
                            "startColumn": 48,
                            "endColumn": 61
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/IgniteRunner.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 165,
                            "endLine": 165,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/IgniteRunner.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 165,
                            "endLine": 165,
                            "startColumn": 20,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/IgniteRunner.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 165,
                            "endLine": 165,
                            "startColumn": 20,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/IgniteRunner.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 25,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/IgniteRunner.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 94,
                            "endLine": 94,
                            "startColumn": 33,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/IgniteRunner.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 93,
                            "endLine": 93,
                            "startColumn": 35,
                            "endColumn": 100
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/IgniteRunner.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 93,
                            "endLine": 94,
                            "startColumn": 35,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/IgniteRunner.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 93,
                            "endLine": 93,
                            "startColumn": 25,
                            "endColumn": 100
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite/IgniteRunner.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 100,
                            "endLine": 100,
                            "startColumn": 53,
                            "endColumn": 82
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite.Core/Ignition.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 233,
                            "endLine": 233,
                            "startColumn": 37,
                            "endColumn": 60
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite.Core/Ignition.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 237,
                            "endLine": 237,
                            "startColumn": 23,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite.Core/Ignition.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 237,
                            "endLine": 237,
                            "startColumn": 13,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite.Core/Ignition.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 242,
                            "endLine": 242,
                            "startColumn": 27,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite.Core/Ignition.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 242,
                            "endLine": 242,
                            "startColumn": 31,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite.Core/Ignition.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 242,
                            "endLine": 242,
                            "startColumn": 27,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite.Core/Ignition.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 242,
                            "endLine": 242,
                            "startColumn": 27,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite.Core/Ignition.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 242,
                            "endLine": 242,
                            "startColumn": 21,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite.Core/Ignition.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 244,
                            "endLine": 244,
                            "startColumn": 17,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite.Core/Ignition.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 247,
                            "endLine": 247,
                            "startColumn": 36,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite.Core/Ignition.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 344,
                            "endLine": 344,
                            "startColumn": 68,
                            "endColumn": 79
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite.Core/Ignition.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 254,
                            "endLine": 254,
                            "startColumn": 17,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite.Core/Ignition.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 254,
                            "endLine": 254,
                            "startColumn": 17,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite.Core/Ignition.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 254,
                            "endLine": 254,
                            "startColumn": 17,
                            "endColumn": 26
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/InsecureCipherNoIntegrity",
          "ruleIndex": 47,
          "level": "warning",
          "message": {
            "text": "The CBC mode used in javax.crypto.Cipher.getInstance does not provide integrity. Consided using Galois/Counter Mode.",
            "markdown": "The {0} mode used in {1} does not provide integrity. Consided using Galois/Counter Mode.",
            "arguments": [
              "[CBC](0)",
              "[javax.crypto.Cipher.getInstance](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/main/java/org/apache/ignite/spi/encryption/keystore/KeystoreEncryptionSpi.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 128,
                  "endLine": 128,
                  "startColumn": 20,
                  "endColumn": 38
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b78a8e260a9a0053b341d0cfc1402a10ffe8521ce3a906f20ff0a44cb409ad8e",
            "1": "1b46a441.1cbd3ff4.42f6bbbc.e22980a8.d31a8364.f940a352.bae646e8.0ecb4e0a.416089e6.dd05ec30.42f6bbbc.de031890.d31a8364.ce109560.bae646e8.0ecb4e0a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/spi/encryption/keystore/KeystoreEncryptionSpi.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 83,
                            "endLine": 83,
                            "startColumn": 52,
                            "endColumn": 74
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/spi/encryption/keystore/KeystoreEncryptionSpi.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 128,
                            "endLine": 128,
                            "startColumn": 20,
                            "endColumn": 38
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/InsecureCipherNoIntegrity",
          "ruleIndex": 47,
          "level": "warning",
          "message": {
            "text": "The CBC mode used in javax.crypto.Cipher.getInstance does not provide integrity. Consided using Galois/Counter Mode.",
            "markdown": "The {0} mode used in {1} does not provide integrity. Consided using Galois/Counter Mode.",
            "arguments": [
              "[CBC](0)",
              "[javax.crypto.Cipher.getInstance](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/main/java/org/apache/ignite/spi/encryption/keystore/KeystoreEncryptionSpi.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 138,
                  "endLine": 138,
                  "startColumn": 20,
                  "endColumn": 38
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e531b9f735a3b1f0eb798a8b9eb08908b2b3b1eae3b2ff1fe274f8789864f78f",
            "1": "47baf5cb.e29f9b08.b6cb88d1.b0115c5a.74c2d841.e0ade593.51993618.c4307f3b.47baf5cb.e29f9b08.b6cb88d1.b0115c5a.74c2d841.e0ade593.51993618.c4307f3b"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/spi/encryption/keystore/KeystoreEncryptionSpi.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 55,
                            "endColumn": 74
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/spi/encryption/keystore/KeystoreEncryptionSpi.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 138,
                            "endLine": 138,
                            "startColumn": 20,
                            "endColumn": 38
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/InsecureCipherNoIntegrity",
          "ruleIndex": 47,
          "level": "warning",
          "message": {
            "text": "The ECB mode used in javax.crypto.KeyGenerator.getInstance does not provide integrity. Consided using Galois/Counter Mode.",
            "markdown": "The {0} mode used in {1} does not provide integrity. Consided using Galois/Counter Mode.",
            "arguments": [
              "[ECB](0)",
              "[javax.crypto.KeyGenerator.getInstance](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/core/src/main/java/org/apache/ignite/spi/encryption/keystore/KeystoreEncryptionSpi.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 176,
                  "endLine": 176,
                  "startColumn": 32,
                  "endColumn": 56
                }
              }
            }
          ],
          "fingerprints": {
            "0": "15de52a67455285baeadcfa3c8f71776577033b2314d43cd7abfffeea51ff8d3",
            "1": "19689298.55f245d5.ebb0a129.1a265755.a4344b96.1110944f.b5ad3603.54d46e25.19689298.55f245d5.ba832df5.de031890.a4344b96.ce109560.b5ad3603.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/spi/encryption/keystore/KeystoreEncryptionSpi.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 73,
                            "endLine": 73,
                            "startColumn": 46,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/core/src/main/java/org/apache/ignite/spi/encryption/keystore/KeystoreEncryptionSpi.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 176,
                            "endLine": 176,
                            "startColumn": 32,
                            "endColumn": 56
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "csharp/Deserialization",
          "ruleIndex": 48,
          "level": "note",
          "message": {
            "text": "(BETA Suggestion) Input from C# property set accessor value flows into Deserialize, where it is used to deserialize an object. If the value passed into the set accessor is tainted, this may result in an Unsafe Deserialization vulnerability.",
            "markdown": "(BETA Suggestion) Input from {0} {1} into {2}, where it is used to deserialize an object. If the value passed into the set accessor is tainted, this may result in an Unsafe Deserialization vulnerability.",
            "arguments": [
              "[C# property set accessor value](0)",
              "[flows](1),(2),(3),(4),(5),(6)",
              "[Deserialize](7)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/platforms/dotnet/Apache.Ignite.AspNet/Impl/IgniteSessionStateItemCollection.cs",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 473,
                  "endLine": 473,
                  "startColumn": 38,
                  "endColumn": 71
                }
              }
            }
          ],
          "fingerprints": {
            "0": "20f8486bd77dfeb4c47612cc4e7572cafc46c30bd4ebeaf7b1f5aba0a3b10917",
            "1": "730c170d.5894468a.1bf7edc8.f5757239.bb824921.32eaf465.96127c42.7c597a92.62d63a6e.8c06c0b2.2ae3be44.f5757239.8e57eb0c.bfb9c24a.ce0185b2.fdedd133"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite.AspNet/Impl/IgniteSessionStateItemCollection.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 189,
                            "endLine": 189,
                            "startColumn": 31,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite.AspNet/Impl/IgniteSessionStateItemCollection.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 189,
                            "endLine": 189,
                            "startColumn": 31,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite.AspNet/Impl/IgniteSessionStateItemCollection.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 189,
                            "endLine": 189,
                            "startColumn": 19,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite.AspNet/Impl/IgniteSessionStateItemCollection.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 471,
                            "endLine": 471,
                            "startColumn": 62,
                            "endColumn": 76
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite.AspNet/Impl/IgniteSessionStateItemCollection.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 471,
                            "endLine": 471,
                            "startColumn": 49,
                            "endColumn": 61
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite.AspNet/Impl/IgniteSessionStateItemCollection.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 471,
                            "endLine": 471,
                            "startColumn": 36,
                            "endColumn": 77
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite.AspNet/Impl/IgniteSessionStateItemCollection.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 473,
                            "endLine": 473,
                            "startColumn": 38,
                            "endColumn": 71
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/platforms/dotnet/Apache.Ignite.AspNet/Impl/IgniteSessionStateItemCollection.cs",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 473,
                            "endLine": 473,
                            "startColumn": 38,
                            "endColumn": 71
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 151,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileCodeFlow"
              }
            ]
          }
        }
      ],
      "properties": {
        "coverage": [
          {
            "files": 661,
            "isSupported": true,
            "lang": "XML"
          },
          {
            "files": 13266,
            "isSupported": true,
            "lang": "Java"
          },
          {
            "files": 503,
            "isSupported": true,
            "lang": "JavaScript"
          },
          {
            "files": 1326,
            "isSupported": true,
            "lang": "C# (beta)"
          },
          {
            "files": 13,
            "isSupported": true,
            "lang": "PHP"
          },
          {
            "files": 87,
            "isSupported": true,
            "lang": "Python"
          },
          {
            "files": 19,
            "isSupported": true,
            "lang": "HTML"
          },
          {
            "files": 1,
            "isSupported": true,
            "lang": "Ruby"
          },
          {
            "files": 4,
            "isSupported": false,
            "lang": "Roff Manpage"
          },
          {
            "files": 25,
            "isSupported": false,
            "lang": "Unknown"
          },
          {
            "files": 4,
            "isSupported": true,
            "lang": "TypeScript"
          }
        ]
      }
    }
  ]
}
