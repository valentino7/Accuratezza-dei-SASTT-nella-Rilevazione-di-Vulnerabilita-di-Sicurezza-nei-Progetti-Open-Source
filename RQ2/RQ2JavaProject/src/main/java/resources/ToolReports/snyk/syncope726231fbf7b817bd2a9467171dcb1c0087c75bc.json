{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "SnykCode",
          "semanticVersion": "1.0.0",
          "version": "1.0.0",
          "rules": [
            {
              "id": "java/HardcodedPassword/test",
              "name": "HardcodedPassword/test",
              "shortDescription": {
                "text": "Use of Hardcoded Credentials"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nDevelopers may use hardcoded credentials for convenience when coding in order to simplify their workflow. While they are responsible for removing these before production, occasionally this task may fall through the cracks. This also becomes a maintenance challenge when credentials are re-used across multiple applications.\n\nOnce attackers gain access, they may take advantage of privilege level to remove or alter data, take down a site or app, or hold any of the above for ransom. The risk across multiple similar projects is even greater. If code containing the credentials is reused across multiple projects, they will all be compromised.\n\n### Best practices for prevention\n* Plan software architecture such that keys and passwords are always stored outside the code, wherever possible.\n* Plan encryption into software architecture for all credential information and ensure proper handling of keys, credentials, and passwords.\n* Prompt for a secure password on first login rather than hard-code a default password.\n* If a hardcoded password or credential must be used, limit its use, for example, to system console users rather than via the network.\n* Use strong hashes for inbound password authentication, ideally with randomly assigned salts to increase the difficulty level in case of brute-force attack.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/utluiz/spring-examples/commit/56e44932a3a004c3ac96ce1caa3e6d8817230f6e?diff=split#diff-19d771f687bc8ca37d378c39d20ed425L26",
                    "lines": [
                      {
                        "line": "  ds.setUrl(\"jdbc:mysql://localhost:3311/agenda\");",
                        "lineNumber": 23,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  ds.setUrl(\"jdbc:mysql://localhost/agenda\");",
                        "lineNumber": 20,
                        "lineChange": "added"
                      },
                      {
                        "line": "  ds.setUser(\"root\");",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "  ds.setPassword(\"root\");",
                        "lineNumber": 25,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  ds.setPassword(\"\");",
                        "lineNumber": 22,
                        "lineChange": "added"
                      },
                      {
                        "line": "  return ds;",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 27,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Evolveum/midpoint/commit/9ce1d7ff1e78ca65d6b614c52035e1971d1187cd?diff=split#diff-0003b3a408395a5640011d7c8422d19bL43",
                    "lines": [
                      {
                        "line": "      // set the password for our message.",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "      pc.setPassword(\"5ecr3t\");",
                        "lineNumber": 42,
                        "lineChange": "removed"
                      },
                      {
                        "line": "      pc.setPassword(Main.ADM_PASSWORD);",
                        "lineNumber": 42,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 43,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/theonedev/onedev/commit/ee60c786981347fc5ab6685656f3de2ea67045f7?diff=split#diff-7f6f95fdc3f39c216b4bd099d0ca65b6L60",
                    "lines": [
                      {
                        "line": "  System.exit(1);",
                        "lineNumber": 61,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 62,
                        "lineChange": "none"
                      },
                      {
                        "line": "root.setPassword(\"12345\");",
                        "lineNumber": 59,
                        "lineChange": "removed"
                      },
                      {
                        "line": "String password = Bootstrap.command.getArgs()[0];",
                        "lineNumber": 63,
                        "lineChange": "added"
                      },
                      {
                        "line": "root.setPassword(password);",
                        "lineNumber": 64,
                        "lineChange": "added"
                      },
                      {
                        "line": "accountManager.save(root);",
                        "lineNumber": 65,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Added user/password configuration from YML file.",
                  "Added ability to configure databases to run tests against."
                ],
                "precision": "very-high",
                "repoDatasetSize": 383,
                "cwe": [
                  "CWE-798",
                  "CWE-259"
                ]
              }
            },
            {
              "id": "java/InsecurelyGeneratedPassword",
              "name": "InsecurelyGeneratedPassword",
              "shortDescription": {
                "text": "Use of Insufficiently Random Values"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "\n## Details\n\nComputer security relies on random numbers for many things: generating secure, confidential session keys; hashing password data; encryption for transmitting sensitive data, and more. It's easy to understand why. If session keys, for example, were generated sequentially, attackers would be able to guess these easily and then hijack legitimate user sessions. Similarly, if encryption techniques used easy-to-guess numbers, attackers could use brute-force attacks to gain unauthorized access.\n\nIn reality, since computers cannot generate truly random numbers, they use \"pseudorandom\" numbers instead, generated using an algorithm that is \"seeded\" in a variety of ways to produce highly variable values in a random-seeming order, making them very hard-in theory-for attackers to guess. However, if developers inadvertently make use of a weak random algorithm, attackers may be able to discover the algorithm, seed, or pattern, ultimately unlocking access to commands or sensitive data, which can then be held for ransom or sold.\n\n### Best practices for prevention\n* Avoid using weak pseudorandom number generators (PRNGs), such as statistical PRNGs. Instead, choose a cryptographically secure PRNG.\n* Avoid using predictable seed values, such as user ID or server start time. Instead, use a seed that is itself pseudorandom, such as one taken from an external hardware source.\n* Use standard, accepted security algorithms and libraries rather than taking a DIY approach and creating custom code that may contain inherent weaknesses or overlook critical flaws.\n* Use static analysis tools to identify potential instances of this weakness in code and then ensure good test coverage with appropriate white-box testing.\n* Educate developers about the importance of entropy in security systems development, and consider adopting tools that are FIPS 140-2 compliant.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/vlsidlyarevich/unity/commit/12c7b110ef42d7dcf06f416b2cee05a004c5b75c?diff=split#diff-57d2894dfdae80bdeeaf4f6f888259dbL72",
                    "lines": [
                      {
                        "line": "User newUser = User.builder()",
                        "lineNumber": 69,
                        "lineChange": "removed"
                      },
                      {
                        "line": "final User newUser = User.builder()",
                        "lineNumber": 69,
                        "lineChange": "added"
                      },
                      {
                        "line": "        .username(usrname)",
                        "lineNumber": 70,
                        "lineChange": "none"
                      },
                      {
                        "line": "        .password(RandomStringUtils.randomAlphanumeric(6))",
                        "lineNumber": 71,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        .password(RandomHelper.randomAlphaNumeric())",
                        "lineNumber": 71,
                        "lineChange": "added"
                      },
                      {
                        "line": "        .authorities(authorities)",
                        "lineNumber": 72,
                        "lineChange": "none"
                      },
                      {
                        "line": "        .socialSignInProvider(SocialMediaService.valueOf(providerId.toUpperCase()))",
                        "lineNumber": 73,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/jslsolucoes/nginx-admin/commit/1305e3e728e19cfad4b3a52d5a6cbb12a45bceb6?diff=split#diff-b291834174e6e8f3e72d24fcd9e21c25L85",
                    "lines": [
                      {
                        "line": "@Override",
                        "lineNumber": 82,
                        "lineChange": "none"
                      },
                      {
                        "line": "public void resetPassword(User user) {",
                        "lineNumber": 83,
                        "lineChange": "none"
                      },
                      {
                        "line": "  String password = RandomStringUtils.randomAlphanumeric(8);",
                        "lineNumber": 84,
                        "lineChange": "none"
                      },
                      {
                        "line": "  user = getByLogin(user);",
                        "lineNumber": 85,
                        "lineChange": "none"
                      },
                      {
                        "line": "  user.setPassword(password);",
                        "lineNumber": 86,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  user.setPassword(DigestUtils.sha256Hex(password));",
                        "lineNumber": 86,
                        "lineChange": "added"
                      },
                      {
                        "line": "  user.setPasswordForceChange(1);",
                        "lineNumber": 87,
                        "lineChange": "none"
                      },
                      {
                        "line": "  mailRepository.send(Messages.getString(\"reset.mail.subject\"), user.getLogin(),",
                        "lineNumber": 88,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/zhangmrit/ruoyi-cloud/commit/9546a2a5d5272853c2d0651d571ed32b6c66dc4f?diff=split#diff-b36a8bbcc04aa7c70f9407f00252e3a2L135",
                    "lines": [
                      {
                        "line": "public R resetPwdSave(SysUser user)",
                        "lineNumber": 132,
                        "lineChange": "removed"
                      },
                      {
                        "line": "public R resetPwdSave(@RequestBody SysUser user)",
                        "lineNumber": 157,
                        "lineChange": "added"
                      },
                      {
                        "line": "{",
                        "lineNumber": 158,
                        "lineChange": "none"
                      },
                      {
                        "line": "    user.setSalt(RandomStringUtils.random(6));",
                        "lineNumber": 134,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    user.setSalt(RandomUtil.randomStr(6));",
                        "lineNumber": 159,
                        "lineChange": "added"
                      },
                      {
                        "line": "    user.setPassword(PasswordUtil.encryptPassword(user.getLoginName(), user.getPassword(), user.getSalt()));",
                        "lineNumber": 160,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return toAjax(sysUserService.resetUserPwd(user));",
                        "lineNumber": 161,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 162,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Fix the issue that newly created user can not login",
                  "Cache valid admins' raw password (validated by BCrypt by default)",
                  "merge from 1_1_X to close []"
                ],
                "precision": "very-high",
                "repoDatasetSize": 20,
                "cwe": [
                  "CWE-330"
                ]
              }
            },
            {
              "id": "java/NonCryptoHardcodedSecret",
              "name": "NonCryptoHardcodedSecret",
              "shortDescription": {
                "text": "Use of Hardcoded, Security-relevant Constants"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "## Details\n\nWhen constants are hardcoded into applications, this information could easily be reverse-engineered and become known to attackers. For example, if a breached authentication token is hardcoded in multiple places in the application, it may lead to components of the application remaining vulnerable if not all instances are changed.\nAnother negative effect of hard-coding constants is potential unpredictability in the application's performance if the development team fails to update every single instance of the hardcoded constant throughout the code. For these reasons, hard-coding security-relevant constants is considered bad coding practice and should be remedied if present and avoided in future.\n\n### Best practices for prevention\n* Never hard code security-related constants; use symbolic names or configuration lookup files.\n* As hard coding is often done by coders working alone on a small scale, examine all legacy code components and test carefully when scaling.\n* Adopt a \"future-proof code\" mindset: While use of constants may save a little time now and make development simpler in the short term, it could cost time and money adapting to scale or other unforeseen circumstances (such as new hardware) in the future.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/RocketChat/Rocket.Chat.Java.SDK/commit/6f17474770cd120650daa9945ed65273aaa5ec5c?diff=split#diff-fc51f9a049d8a8cd9df2a4226b87c214L19",
                    "lines": [
                      {
                        "line": "String username = \"sachin.shinde\";",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "String password = \"sachin9924\";",
                        "lineNumber": 18,
                        "lineChange": "removed"
                      },
                      {
                        "line": "String password = \"sachin123\";",
                        "lineNumber": 23,
                        "lineChange": "added"
                      },
                      {
                        "line": "private static String serverurl = \"wss://demo.rocket.chat\";",
                        "lineNumber": 25,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/wso2-attic/ballerina-message-broker/commit/8d606a4838b057411b7226e4651f7ca59d9746ce?diff=split#diff-2d8482e5c13da266ce6e6196d45bdf1eL66",
                    "lines": [
                      {
                        "line": "private String user = \"wso2carbon\";",
                        "lineNumber": 63,
                        "lineChange": "removed"
                      },
                      {
                        "line": "private String user = \"ballerina\";",
                        "lineNumber": 63,
                        "lineChange": "added"
                      },
                      {
                        "line": "private String password = \"wso2carbon\";",
                        "lineNumber": 65,
                        "lineChange": "removed"
                      },
                      {
                        "line": "private String password = \"ballerina\";",
                        "lineNumber": 65,
                        "lineChange": "added"
                      },
                      {
                        "line": "public String getUrl() {",
                        "lineNumber": 67,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/games647/FlexibleLogin/commit/9ea9726f145063f4436ca47ef864735e247c34c1?diff=split#diff-02a91e75dcc99d9c759ee4d9e0c88734L26",
                    "lines": [
                      {
                        "line": "@Setting(comment = \"Password in order to login\")",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "private String password = \"password123456789\";",
                        "lineNumber": 25,
                        "lineChange": "removed"
                      },
                      {
                        "line": "private String password = \"\";",
                        "lineNumber": 25,
                        "lineChange": "added"
                      },
                      {
                        "line": "public SQLType getType() {",
                        "lineNumber": 27,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Removed test keys",
                  "Remove API keys",
                  "Remove DropBox sync API libraries and dependencies"
                ],
                "precision": "very-high",
                "repoDatasetSize": 158,
                "cwe": [
                  "CWE-547"
                ]
              }
            },
            {
              "id": "java/HardcodedSecret/test",
              "name": "HardcodedSecret/test",
              "shortDescription": {
                "text": "Hardcoded Secret"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "## Details\n\nWhen constants are hardcoded into applications, this information could easily be reverse-engineered and become known to attackers. For example, if a breached authentication token is hardcoded in multiple places in the application, it may lead to components of the application remaining vulnerable if not all instances are changed.\nAnother negative effect of hard-coding constants is potential unpredictability in the application's performance if the development team fails to update every single instance of the hardcoded constant throughout the code. For these reasons, hard-coding security-relevant constants is considered bad coding practice and should be remedied if present and avoided in future.\n\n### Best practices for prevention\n- Never hard code security-related constants; use symbolic names or configuration lookup files.\n- As hard coding is often done by coders working alone on a small scale, examine all legacy code components and test carefully when scaling.\n- Adopt a \"future-proof code\" mindset: While use of constants may save a little time now and make development simpler in the short term, it could cost time and money adapting to scale or other unforeseen circumstances (such as new hardware) in the future.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/aberic/fabric-net-server/commit/963bb9fe026b454672fb83fd739f3d754b6844e1?diff=split#diff-759baf3d057123b5320b6a399e775967L67",
                    "lines": [
                      {
                        "line": "app.setKey(MathUtil.getRandom8());",
                        "lineNumber": 77,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.setPublicKey(\"pub1\");",
                        "lineNumber": 65,
                        "lineChange": "removed"
                      },
                      {
                        "line": "app.setPrivateKey(\"pri1\");",
                        "lineNumber": 66,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    }",
                        "lineNumber": 81,
                        "lineChange": "added"
                      },
                      {
                        "line": "    app.setPublicKey(key.getPublicKey());",
                        "lineNumber": 82,
                        "lineChange": "added"
                      },
                      {
                        "line": "    app.setPrivateKey(key.getPrivateKey());",
                        "lineNumber": 83,
                        "lineChange": "added"
                      },
                      {
                        "line": "    return appMapper.updateKey(app);",
                        "lineNumber": 84,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 85,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/karutaproject/karuta-backend/commit/a05377ace2292896e3768e70aa2fde992ddaae62?diff=split#diff-a46279e5e2a97eaacfba9b55e2e3b9b0L104",
                    "lines": [
                      {
                        "line": "{",
                        "lineNumber": 108,
                        "lineChange": "none"
                      },
                      {
                        "line": "  rc4 = Cipher.getInstance(\"RC4\");",
                        "lineNumber": 109,
                        "lineChange": "none"
                      },
                      {
                        "line": "  SecretKeySpec key = new SecretKeySpec(\"testkey\".getBytes(), \"RC4\");",
                        "lineNumber": 103,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  String secretkey = ConfigUtils.get(\"directkey\");",
                        "lineNumber": 110,
                        "lineChange": "added"
                      },
                      {
                        "line": "  SecretKeySpec key = new SecretKeySpec(secretkey.getBytes(), \"RC4\");",
                        "lineNumber": 111,
                        "lineChange": "added"
                      },
                      {
                        "line": "  rc4.init(Cipher.DECRYPT_MODE, key);",
                        "lineNumber": 112,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/apache/cloudstack/commit/0653d6d7f6283752984ea181ef27559bed4b05af?diff=split#diff-af0be1b2a17efe3a3d4ae1941c2e946fL309",
                    "lines": [
                      {
                        "line": "long ts = (new Date()).getTime();",
                        "lineNumber": 306,
                        "lineChange": "removed"
                      },
                      {
                        "line": "long ts = normalizedHashTime.getTime();",
                        "lineNumber": 310,
                        "lineChange": "added"
                      },
                      {
                        "line": "ts = ts/60000;\t\t// round up to 1 minute",
                        "lineNumber": 311,
                        "lineChange": "none"
                      },
                      {
                        "line": "String secretKey = \"cloud.com\";",
                        "lineNumber": 308,
                        "lineChange": "removed"
                      },
                      {
                        "line": "String secretKey = _ms.getHashKey();",
                        "lineNumber": 312,
                        "lineChange": "added"
                      },
                      {
                        "line": "SecretKeySpec keySpec = new SecretKeySpec(secretKey.getBytes(), \"HmacSHA1\");",
                        "lineNumber": 314,
                        "lineChange": "none"
                      },
                      {
                        "line": "mac.init(keySpec);",
                        "lineNumber": 315,
                        "lineChange": "none"
                      },
                      {
                        "line": "mac.update(params.getBytes());",
                        "lineNumber": 316,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Api keys from json file",
                  "Made security file and session key configurable"
                ],
                "precision": "very-high",
                "repoDatasetSize": 62,
                "cwe": [
                  "CWE-547"
                ]
              }
            },
            {
              "id": "java/ReturnsPassword",
              "name": "ReturnsPassword",
              "shortDescription": {
                "text": "Unprotected Storage of Credentials"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nIf credentials are not protected or not sufficiently protected through strong encryption, attackers can access this information in a number of ways. Developers may rely on plain-text storage of credentials when they believe the system is completely secure from attack or only accessible to insiders. This confidence is misguided and dangerous. If a malicious insider-such as a former employee-or a hostile attacker using SQL injection, XML injection, or a brute-force attack accesses the system, they can access this credential information to gain unauthorized permissions within the system and to export other confidential and secure information.\n\n### Best practices for prevention\n* Ensure that passwords are never stored in plain text, even for \"purely internal\" use.\n* Never rely on password encoding, such as base 64 encoding; choose a complex encryption algorithm that includes salting, then hashing.\n* Implement zero-trust approaches in which users have access only to information needed for legitimate business purposes.\n* To the greatest extent possible, secure the application against injection attacks and other types of weaknesses.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/Raysmond/SpringBlog/commit/3fbcae1e4627151fef017182e2be25404efb6778?diff=split#diff-5db28c34e3a8215d068e1650562a5e85L78",
                    "lines": [
                      {
                        "line": "logger.info(\"\" + passwordEncoder.matches(password, user.getPassword()));",
                        "lineNumber": 76,
                        "lineChange": "none"
                      },
                      {
                        "line": "if (!user.getPassword().equals(passwordEncoder.encode(password)))",
                        "lineNumber": 77,
                        "lineChange": "removed"
                      },
                      {
                        "line": "boolean match = passwordEncoder.matches(password, user.getPassword());",
                        "lineNumber": 77,
                        "lineChange": "added"
                      },
                      {
                        "line": "if (!match)",
                        "lineNumber": 78,
                        "lineChange": "added"
                      },
                      {
                        "line": "    return false;",
                        "lineNumber": 79,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/linlinjava/litemall/commit/62964b8be5856976d673e0942a3457d252147d47?diff=split#diff-350e06b09af70876f8b603fb1d33080fL64",
                    "lines": [
                      {
                        "line": "}",
                        "lineNumber": 62,
                        "lineChange": "none"
                      },
                      {
                        "line": "if(!user.getPassword().equals(password)){",
                        "lineNumber": 63,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    return ResponseUtil.badArgumentValue();",
                        "lineNumber": 64,
                        "lineChange": "removed"
                      },
                      {
                        "line": "BCryptPasswordEncoder encoder = new BCryptPasswordEncoder();",
                        "lineNumber": 64,
                        "lineChange": "added"
                      },
                      {
                        "line": "if(!encoder.matches(password, user.getPassword())){",
                        "lineNumber": 65,
                        "lineChange": "added"
                      },
                      {
                        "line": "    return ResponseUtil.fail(403, \"Þ┤ªÕÅÀÕ»åþáüõ©ìÕ»╣\");",
                        "lineNumber": 66,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 67,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/guchengwuyue/yshopmall/commit/28985ae95e09e9433788475d8bef2a10a197d0ec?diff=split#diff-3eddbc993068925ffebe6bd98b170164L155",
                    "lines": [
                      {
                        "line": "    throw new BadRequestException(\"õ┐«µö╣Õñ▒Þ┤Ñ´╝îµùºÕ»åþáüÚöÖÞ»»\");",
                        "lineNumber": 176,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 177,
                        "lineChange": "none"
                      },
                      {
                        "line": "if(userDetails.getPassword().equals(EncryptUtils.encryptPassword(user.getNewPass()))){",
                        "lineNumber": 154,
                        "lineChange": "removed"
                      },
                      {
                        "line": "if(passwordEncoder.matches(newPass, user.getPassword())){",
                        "lineNumber": 178,
                        "lineChange": "added"
                      },
                      {
                        "line": "    throw new BadRequestException(\"µû░Õ»åþáüõ©ìÞâ¢õ©ÄµùºÕ»åþáüþø©ÕÉî\");",
                        "lineNumber": 179,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 180,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Rollback to Password File instead of password"
                ],
                "precision": "very-high",
                "repoDatasetSize": 147,
                "cwe": [
                  "CWE-256"
                ]
              }
            },
            {
              "id": "java/InsecureHash",
              "name": "InsecureHash",
              "shortDescription": {
                "text": "Use of Password Hash With Insufficient Computational Effort"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nSensitive information should never be stored in plain text, since this makes it very easy for unauthorized users, whether malicious insiders or outside attackers, to access. Hashing methods are used to make stored passwords and other sensitive data unreadable to users. For example, when a password is defined for the first time, it is hashed and then stored. The next time that user attempts to log on, the password they enter is hashed following the same procedure and compared with the stored value. In this way, the original password never needs to be stored in the system.\n\nHashing is a one-way scheme, meaning a hashed password cannot be reverse engineered. However, if an outdated or custom programmed hashing scheme is used, it becomes simple for an attacker with powerful modern computing power to gain access to the hashes used. This opens up access to all stored password information, leading to breached security. Therefore, it is essential for developers to understand modern, secure password hashing techniques.\n\n### Best practices for prevention\n* Use strong standard algorithms for hashing rather than simpler but outdated methods or DIY hashing schemes, which may have inherent weaknesses.\n* Use modular design for all code dealing with hashing so it can be swapped out as security standards change over time.\n* Use salting in combination with hashing (While this places more demands on resources, it is an essential step for tighter security.).\n* Implement zero-trust architecture to ensure that access to password data is granted only for legitimate business purposes.\n* Increase developer awareness of current standards in data security and cryptography.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/tita/tita/commit/398f6b776a2aea7f20bf604768b8721beff8d93a?diff=split#diff-dd34c5e6a15ca48bff6f9ca749e68243L164",
                    "lines": [
                      {
                        "line": " */",
                        "lineNumber": 161,
                        "lineChange": "none"
                      },
                      {
                        "line": "private String getHashedPassword(String pwd) throws NoSuchAlgorithmException {",
                        "lineNumber": 162,
                        "lineChange": "none"
                      },
                      {
                        "line": "    MessageDigest md = MessageDigest.getInstance(\"SHA-1\");",
                        "lineNumber": 163,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    MessageDigest md = MessageDigest.getInstance(\"SHA-256\");",
                        "lineNumber": 103,
                        "lineChange": "added"
                      },
                      {
                        "line": "    byte[] encryptMsg = md.digest(pwd.getBytes());",
                        "lineNumber": 164,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return new String(encryptMsg);",
                        "lineNumber": 165,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    return bytes2String(encryptMsg);",
                        "lineNumber": 105,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/devonfw/my-thai-star/commit/095a3fb6bb860a2411cb51e812121ec2a6b99894?diff=split#diff-4f73d1042058dd462057744068125d4eL242",
                    "lines": [
                      {
                        "line": "    + String.format(\"%02d\", ldt1.getSecond());",
                        "lineNumber": 240,
                        "lineChange": "none"
                      },
                      {
                        "line": "MessageDigest md = MessageDigest.getInstance(\"MD5\");",
                        "lineNumber": 241,
                        "lineChange": "removed"
                      },
                      {
                        "line": "MessageDigest md = MessageDigest.getInstance(\"SHA-256\");",
                        "lineNumber": 242,
                        "lineChange": "added"
                      },
                      {
                        "line": "md.update((email + date + time).getBytes());",
                        "lineNumber": 243,
                        "lineChange": "none"
                      },
                      {
                        "line": "byte[] digest = md.digest();",
                        "lineNumber": 244,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/SecurityCompass/AndroidLabs/commit/5608f75dd665beac85dbad08f80b91d73b27904a?diff=split#diff-ffc047d4a5f84de13e373f2392bfb11bL148",
                    "lines": [
                      {
                        "line": "byte[] passwordBytes = (password).getBytes(\"UTF-8\");",
                        "lineNumber": 145,
                        "lineChange": "none"
                      },
                      {
                        "line": "MessageDigest md = MessageDigest.getInstance(\"SHA-1\");",
                        "lineNumber": 147,
                        "lineChange": "removed"
                      },
                      {
                        "line": "MessageDigest md = MessageDigest.getInstance(\"SHA-256\");",
                        "lineNumber": 147,
                        "lineChange": "added"
                      },
                      {
                        "line": "md.reset();",
                        "lineNumber": 148,
                        "lineChange": "none"
                      },
                      {
                        "line": "md.update(salt);",
                        "lineNumber": 149,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Added an enum for the supported encryption algorithms",
                  "Added #hash(byte[], String)",
                  "Added support for\nsha256 and nonce token."
                ],
                "precision": "very-high",
                "repoDatasetSize": 122,
                "cwe": [
                  "CWE-916"
                ]
              }
            },
            {
              "id": "java/PT",
              "name": "PT",
              "shortDescription": {
                "text": "Path Traversal"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nBeing able to access and manipulate an arbitrary path leads to vulnerabilities when a program is being run with privileges that the user providing the path should not have. A website with a path traversal vulnerability would allow users access to sensitive files on the server hosting it. CLI programs may also be vulnerable to path traversal if they are being ran with elevated privileges (such as with the setuid or setgid flags in Unix systems).\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`.\n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/google/j2objc/commit/1b271d8b25c99a91547a19f16f71c048c3164156?diff=split#diff-33b6b27033cb88022415e8cd32b1807cL244",
                    "lines": [
                      {
                        "line": " * Extract a ZipEntry to the specified directory.",
                        "lineNumber": 241,
                        "lineChange": "none"
                      },
                      {
                        "line": " */",
                        "lineNumber": 242,
                        "lineChange": "none"
                      },
                      {
                        "line": "public File extractZipEntry(File dir, ZipFile zipFile, ZipEntry entry) throws IOException {",
                        "lineNumber": 243,
                        "lineChange": "none"
                      },
                      {
                        "line": "  File outputFile = new File(dir, entry.getName());",
                        "lineNumber": 244,
                        "lineChange": "none"
                      },
                      {
                        "line": "  File parentFile = outputFile.getParentFile();",
                        "lineNumber": 245,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if (!parentFile.isDirectory() && !parentFile.mkdirs()) {",
                        "lineNumber": 246,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    throw new IOException(\"Could not extract file to \" + dir.getPath());",
                        "lineNumber": 247,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  if (!outputFile.getCanonicalPath().startsWith(dir.getCanonicalPath() + File.separator)",
                        "lineNumber": 246,
                        "lineChange": "added"
                      },
                      {
                        "line": "      || (!parentFile.isDirectory() && !parentFile.mkdirs())) {",
                        "lineNumber": 247,
                        "lineChange": "added"
                      },
                      {
                        "line": "    throw new IOException(\"Could not extract \" + entry.getName() + \" to \" + dir.getPath());",
                        "lineNumber": 248,
                        "lineChange": "added"
                      },
                      {
                        "line": "  }",
                        "lineNumber": 249,
                        "lineChange": "none"
                      },
                      {
                        "line": "  try (InputStream inputStream = zipFile.getInputStream(entry);",
                        "lineNumber": 250,
                        "lineChange": "none"
                      },
                      {
                        "line": "      FileOutputStream outputStream = new FileOutputStream(outputFile)) {",
                        "lineNumber": 251,
                        "lineChange": "none"
                      },
                      {
                        "line": "    byte[] buf = new byte[1024];",
                        "lineNumber": 252,
                        "lineChange": "none"
                      },
                      {
                        "line": "    int n;",
                        "lineNumber": 253,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/blackducksoftware/synopsys-detect/commit/36555b9322986e9560f241d05f2262c29a17663b?diff=split#diff-bc0b5be9b9918488d8fe1dc64584df62L48",
                    "lines": [
                      {
                        "line": "Enumeration<? extends ZipEntry> entries = zipFile.entries();",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "while (entries.hasMoreElements()) {",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "    ZipEntry entry = entries.nextElement();",
                        "lineNumber": 47,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Path entryPath = destPath.resolve(entry.getName());",
                        "lineNumber": 48,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (!entryPath.normalize().startsWith(dest.toPath()))",
                        "lineNumber": 49,
                        "lineChange": "added"
                      },
                      {
                        "line": "        throw new IOException(\"Zip entry contained path traversal\");",
                        "lineNumber": 50,
                        "lineChange": "added"
                      },
                      {
                        "line": "    if (entry.isDirectory()) {",
                        "lineNumber": 51,
                        "lineChange": "none"
                      },
                      {
                        "line": "        Files.createDirectories(entryPath);",
                        "lineNumber": 52,
                        "lineChange": "none"
                      },
                      {
                        "line": "    } else {",
                        "lineNumber": 53,
                        "lineChange": "none"
                      },
                      {
                        "line": "        Files.createDirectories(entryPath.getParent());",
                        "lineNumber": 54,
                        "lineChange": "none"
                      },
                      {
                        "line": "        try (InputStream in = zipFile.getInputStream(entry)) {",
                        "lineNumber": 55,
                        "lineChange": "none"
                      },
                      {
                        "line": "            try (OutputStream out = new FileOutputStream(entryPath.toFile())) {",
                        "lineNumber": 56,
                        "lineChange": "none"
                      },
                      {
                        "line": "                IOUtils.copy(in, out);",
                        "lineNumber": 57,
                        "lineChange": "none"
                      },
                      {
                        "line": "            }",
                        "lineNumber": 58,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/azkaban/azkaban/commit/3b74a4127c9086cd525252edabc3621febab0428?diff=split#diff-c892cca6401b1e0be4cbca3261b47098L201",
                    "lines": [
                      {
                        "line": "final Enumeration<?> entries = source.entries();",
                        "lineNumber": 198,
                        "lineChange": "none"
                      },
                      {
                        "line": "while (entries.hasMoreElements()) {",
                        "lineNumber": 199,
                        "lineChange": "none"
                      },
                      {
                        "line": "  final ZipEntry entry = (ZipEntry) entries.nextElement();",
                        "lineNumber": 200,
                        "lineChange": "none"
                      },
                      {
                        "line": "  final File newFile = new File(dest, entry.getName());",
                        "lineNumber": 201,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if (!newFile.getCanonicalPath().startsWith(dest.getCanonicalPath())) {",
                        "lineNumber": 202,
                        "lineChange": "added"
                      },
                      {
                        "line": "    throw new IOException(",
                        "lineNumber": 203,
                        "lineChange": "added"
                      },
                      {
                        "line": "        \"Extracting zip entry would have resulted in a file outside the specified destination\"",
                        "lineNumber": 204,
                        "lineChange": "added"
                      },
                      {
                        "line": "if (entry.isDirectory()) {",
                        "lineNumber": 208,
                        "lineChange": "none"
                      },
                      {
                        "line": "  newFile.mkdirs();",
                        "lineNumber": 209,
                        "lineChange": "none"
                      },
                      {
                        "line": "} else {",
                        "lineNumber": 210,
                        "lineChange": "none"
                      },
                      {
                        "line": "  newFile.getParentFile().mkdirs();",
                        "lineNumber": 211,
                        "lineChange": "none"
                      },
                      {
                        "line": "  final InputStream src = source.getInputStream(entry);",
                        "lineNumber": 212,
                        "lineChange": "none"
                      },
                      {
                        "line": "  try {",
                        "lineNumber": 213,
                        "lineChange": "none"
                      },
                      {
                        "line": "    final OutputStream output =",
                        "lineNumber": 214,
                        "lineChange": "none"
                      },
                      {
                        "line": "        new BufferedOutputStream(new FileOutputStream(newFile));",
                        "lineNumber": 215,
                        "lineChange": "none"
                      },
                      {
                        "line": "    try {",
                        "lineNumber": 216,
                        "lineChange": "none"
                      },
                      {
                        "line": "      IOUtils.copy(src, output);",
                        "lineNumber": 217,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Test changed key to file.",
                  "* more code cleanup, some tests",
                  "Add option --xcode for Xcode translation testing"
                ],
                "precision": "very-high",
                "repoDatasetSize": 948,
                "cwe": [
                  "CWE-23"
                ]
              }
            },
            {
              "id": "java/HardcodedPassword",
              "name": "HardcodedPassword",
              "shortDescription": {
                "text": "Use of Hardcoded Credentials"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nDevelopers may use hardcoded credentials for convenience when coding in order to simplify their workflow. While they are responsible for removing these before production, occasionally this task may fall through the cracks. This also becomes a maintenance challenge when credentials are re-used across multiple applications.\n\nOnce attackers gain access, they may take advantage of privilege level to remove or alter data, take down a site or app, or hold any of the above for ransom. The risk across multiple similar projects is even greater. If code containing the credentials is reused across multiple projects, they will all be compromised.\n\n### Best practices for prevention\n* Plan software architecture such that keys and passwords are always stored outside the code, wherever possible.\n* Plan encryption into software architecture for all credential information and ensure proper handling of keys, credentials, and passwords.\n* Prompt for a secure password on first login rather than hard-code a default password.\n* If a hardcoded password or credential must be used, limit its use, for example, to system console users rather than via the network.\n* Use strong hashes for inbound password authentication, ideally with randomly assigned salts to increase the difficulty level in case of brute-force attack.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/utluiz/spring-examples/commit/56e44932a3a004c3ac96ce1caa3e6d8817230f6e?diff=split#diff-19d771f687bc8ca37d378c39d20ed425L26",
                    "lines": [
                      {
                        "line": "  ds.setUrl(\"jdbc:mysql://localhost:3311/agenda\");",
                        "lineNumber": 23,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  ds.setUrl(\"jdbc:mysql://localhost/agenda\");",
                        "lineNumber": 20,
                        "lineChange": "added"
                      },
                      {
                        "line": "  ds.setUser(\"root\");",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "  ds.setPassword(\"root\");",
                        "lineNumber": 25,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  ds.setPassword(\"\");",
                        "lineNumber": 22,
                        "lineChange": "added"
                      },
                      {
                        "line": "  return ds;",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 27,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Evolveum/midpoint/commit/9ce1d7ff1e78ca65d6b614c52035e1971d1187cd?diff=split#diff-0003b3a408395a5640011d7c8422d19bL43",
                    "lines": [
                      {
                        "line": "      // set the password for our message.",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "      pc.setPassword(\"5ecr3t\");",
                        "lineNumber": 42,
                        "lineChange": "removed"
                      },
                      {
                        "line": "      pc.setPassword(Main.ADM_PASSWORD);",
                        "lineNumber": 42,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 43,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/theonedev/onedev/commit/ee60c786981347fc5ab6685656f3de2ea67045f7?diff=split#diff-7f6f95fdc3f39c216b4bd099d0ca65b6L60",
                    "lines": [
                      {
                        "line": "  System.exit(1);",
                        "lineNumber": 61,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 62,
                        "lineChange": "none"
                      },
                      {
                        "line": "root.setPassword(\"12345\");",
                        "lineNumber": 59,
                        "lineChange": "removed"
                      },
                      {
                        "line": "String password = Bootstrap.command.getArgs()[0];",
                        "lineNumber": 63,
                        "lineChange": "added"
                      },
                      {
                        "line": "root.setPassword(password);",
                        "lineNumber": 64,
                        "lineChange": "added"
                      },
                      {
                        "line": "accountManager.save(root);",
                        "lineNumber": 65,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Added user/password configuration from YML file.",
                  "Added ability to configure databases to run tests against."
                ],
                "precision": "very-high",
                "repoDatasetSize": 383,
                "cwe": [
                  "CWE-798",
                  "CWE-259"
                ]
              }
            },
            {
              "id": "java/InsecureRandomData",
              "name": "InsecureRandomData",
              "shortDescription": {
                "text": "Use of Insufficiently Random Values"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "\n## Details\n\nComputer security relies on random numbers for many things: generating secure, confidential session keys; hashing password data; encryption for transmitting sensitive data, and more. It's easy to understand why. If session keys, for example, were generated sequentially, attackers would be able to guess these easily and then hijack legitimate user sessions. Similarly, if encryption techniques used easy-to-guess numbers, attackers could use brute-force attacks to gain unauthorized access.\n\nIn reality, since computers cannot generate truly random numbers, they use \"pseudorandom\" numbers instead, generated using an algorithm that is \"seeded\" in a variety of ways to produce highly variable values in a random-seeming order, making them very hard-in theory-for attackers to guess. However, if developers inadvertently make use of a weak random algorithm, attackers may be able to discover the algorithm, seed, or pattern, ultimately unlocking access to commands or sensitive data, which can then be held for ransom or sold.\n\n### Best practices for prevention\n* Avoid using weak pseudorandom number generators (PRNGs), such as statistical PRNGs. Instead, choose a cryptographically secure PRNG.\n* Avoid using predictable seed values, such as user ID or server start time. Instead, use a seed that is itself pseudorandom, such as one taken from an external hardware source.\n* Use standard, accepted security algorithms and libraries rather than taking a DIY approach and creating custom code that may contain inherent weaknesses or overlook critical flaws.\n* Use static analysis tools to identify potential instances of this weakness in code and then ensure good test coverage with appropriate white-box testing.\n* Educate developers about the importance of entropy in security systems development, and consider adopting tools that are FIPS 140-2 compliant.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/apache/cordova-amazon-fireos/commit/7634ecb0a053b56b32cf7ebebf3e98ca71a7495e?diff=split#diff-2f48d1bc515df7c3997d7ef18b24100cL112",
                    "lines": [
                      {
                        "line": "/** Called by cordova.js to initialize the bridge. */",
                        "lineNumber": 110,
                        "lineChange": "none"
                      },
                      {
                        "line": "int generateBridgeSecret() {",
                        "lineNumber": 111,
                        "lineChange": "none"
                      },
                      {
                        "line": "    expectedBridgeSecret = (int)(Math.random() * Integer.MAX_VALUE);",
                        "lineNumber": 112,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    SecureRandom randGen = new SecureRandom();",
                        "lineNumber": 112,
                        "lineChange": "added"
                      },
                      {
                        "line": "    expectedBridgeSecret = randGen.nextInt(Integer.MAX_VALUE);",
                        "lineNumber": 113,
                        "lineChange": "added"
                      },
                      {
                        "line": "    return expectedBridgeSecret;",
                        "lineNumber": 114,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 115,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/apache/cordova-android/commit/b37498d5f61faf37c5cbe7ca58f004ceacdffb0f?diff=split#diff-2f48d1bc515df7c3997d7ef18b24100cL110",
                    "lines": [
                      {
                        "line": "/** Called by cordova.js to initialize the bridge. */",
                        "lineNumber": 110,
                        "lineChange": "none"
                      },
                      {
                        "line": "int generateBridgeSecret() {",
                        "lineNumber": 111,
                        "lineChange": "none"
                      },
                      {
                        "line": "    expectedBridgeSecret = (int)(Math.random() * Integer.MAX_VALUE);",
                        "lineNumber": 110,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    SecureRandom randGen = new SecureRandom();",
                        "lineNumber": 112,
                        "lineChange": "added"
                      },
                      {
                        "line": "    expectedBridgeSecret = (int)(randGen.nextInt() * Integer.MAX_VALUE);",
                        "lineNumber": 113,
                        "lineChange": "added"
                      },
                      {
                        "line": "    return expectedBridgeSecret;",
                        "lineNumber": 114,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 115,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/keycloak/keycloak/commit/54b5a6c41e74830268ff85b754396f04e48a69c7?diff=split#diff-fdba5f6970a909e54883c518d8677d74L31",
                    "lines": [
                      {
                        "line": "}",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "public static String generateSecret(int length) {",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "    String chars = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVW1234567890\";",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Random r = new Random();",
                        "lineNumber": 32,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    SecureRandom r = new SecureRandom();",
                        "lineNumber": 32,
                        "lineChange": "added"
                      },
                      {
                        "line": "    StringBuilder sb = new StringBuilder();",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "    for (int i = 0; i < length; i++) {",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "        char c = chars.charAt(r.nextInt(chars.length()));",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "        sb.append(c);",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }",
                        "lineNumber": 37,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return sb.toString();",
                        "lineNumber": 38,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 39,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Split repository API for module and DS management.",
                  "Changed password generation to use SecureRandom bytes."
                ],
                "precision": "very-high",
                "repoDatasetSize": 35,
                "cwe": [
                  "CWE-330"
                ]
              }
            },
            {
              "id": "java/XXE",
              "name": "XXE",
              "shortDescription": {
                "text": "XML External Entity (XXE) Injection"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "\n## Details\n\nFor convenience, XML documents can use system identifiers to enable access to stored content, whether local or remote. The XML processor then uses the system identifier to access the resource rather than using the URI. When this weakness exists, the application permits user-supplied data, which could include the address of an XML external identity, to be passed directly to the XML parser. The application will then attempt to retrieve documents from outside of secure, controlled areas.\n\nAttackers can exploit this weakness to expose sensitive data, execute port scanning on the server side, or launch a denial-of-service attack (DoS) such as Billion Laughs.\n\n### Best practices for prevention\n\n* When possible, disable loading of data from external entities. The method of doing this will vary based on the language and XML parser being used.\n* Use a local, static document type definitions (DTDs) and ensure that external DTDs are disallowed entirely.\n* If user input cannot be avoided, perform validation against an allowlist of possible data sources. However, as long as external DTDs are allowed, XML code remains inherently vulnerable to attacks exploiting this weakness.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/Unidata/netcdf-java/commit/475707c10fd20b92a48187aad1ac6379fe126e32?diff=split#diff-2ab50dd3fd1834707ceae5e424963a52L98",
                    "lines": [
                      {
                        "line": "static private org.jdom.Document getCapabilities(String endpoint) throws IOException {",
                        "lineNumber": 95,
                        "lineChange": "none"
                      },
                      {
                        "line": "  org.jdom.Document doc;",
                        "lineNumber": 96,
                        "lineChange": "none"
                      },
                      {
                        "line": "  HttpMethod method = null;",
                        "lineNumber": 97,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  HTTPMethod method = null;",
                        "lineNumber": 97,
                        "lineChange": "added"
                      },
                      {
                        "line": "  try {",
                        "lineNumber": 98,
                        "lineChange": "none"
                      },
                      {
                        "line": "    method = CdmRemote.sendQuery(endpoint, \"req=capabilities\");",
                        "lineNumber": 99,
                        "lineChange": "none"
                      },
                      {
                        "line": "    InputStream in = method.getResponseBodyAsStream();",
                        "lineNumber": 100,
                        "lineChange": "none"
                      },
                      {
                        "line": "    SAXBuilder builder = new SAXBuilder(false);",
                        "lineNumber": 101,
                        "lineChange": "none"
                      },
                      {
                        "line": "    doc = builder.build(in);",
                        "lineNumber": 102,
                        "lineChange": "none"
                      },
                      {
                        "line": "  } catch (Throwable t) {",
                        "lineNumber": 104,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/wirecardBrasil/mockkid/commit/002008cf918a84f962f2fe27cbdb4ba2685c6ae0?diff=split#diff-b441fb2c8c0aa00121642142978b8a0bL18",
                    "lines": [
                      {
                        "line": "private static final Logger logger = LoggerFactory.getLogger(XMLBodyVariableResolver.class);",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "public static String extractValueFromXml(String name, HttpServletRequest request) {",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "    try {",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "        DocumentBuilderFactory builderFactory =",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "                DocumentBuilderFactory.newInstance();",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "        DocumentBuilder builder = builderFactory.newDocumentBuilder();",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "        Document document = builder.parse(request.getInputStream());",
                        "lineNumber": 22,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        Document document = builder.parse(((MockkidRequest) request).getSafeInputStream());",
                        "lineNumber": 23,
                        "lineChange": "added"
                      },
                      {
                        "line": "        XPath xPath =  XPathFactory.newInstance().newXPath();",
                        "lineNumber": 25,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/IanDarwin/javasrc/commit/8251ef48893e6333dee02e29925c16ba933d7d14?diff=split#diff-f4d7011ca260d567d50d5aa022009b3dL17",
                    "lines": [
                      {
                        "line": " */",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "public class SAXLister {",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "  public static void main(String[] args) throws Exception {",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "    new SAXLister(args);",
                        "lineNumber": 19,
                        "lineChange": "added"
                      },
                      {
                        "line": "  }",
                        "lineNumber": 20,
                        "lineChange": "added"
                      },
                      {
                        "line": "  ",
                        "lineNumber": 21,
                        "lineChange": "added"
                      },
                      {
                        "line": "  public SAXLister(String[] args) throws SAXException, IOException {",
                        "lineNumber": 22,
                        "lineChange": "added"
                      },
                      {
                        "line": "    XMLReader parser = XMLReaderFactory",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "        .createXMLReader(\"org.apache.xerces.parsers.SAXParser\");",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "    // should load properties rather than hardcoding class name",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "    parser.setContentHandler(new PeopleHandler());",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "    parser.parse(args.length == 1 ? args[0] : \"parents.xml\");",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "  }",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "  ",
                        "lineNumber": 29,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Move loadind XML documents from streams to XML utils class.",
                  "Added support for File comparator",
                  "Adding unit tests"
                ],
                "precision": "very-high",
                "repoDatasetSize": 110,
                "cwe": [
                  "CWE-611"
                ]
              }
            },
            {
              "id": "java/SetEscapeModelStrings",
              "name": "SetEscapeModelStrings",
              "shortDescription": {
                "text": "Cross-site Scripting (XSS)"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\n\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser's Same Origin Policy.\n\nInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\n\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they've been correctly escaped in the application code and in this way the attempted attack is diverted.\n\nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware.\n\n### Types of attacks\nThere are a few methods by which XSS can be manipulated:\n\n|Type|Origin|Description|\n|--|--|--|\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user's browser.|\n|**DOM-based**|Client|The attacker forces the user's browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\n\n### Affected environments\nThe following environments are susceptible to an XSS attack:\n\n* Web servers\n* Application servers\n* Web application environments\n\n### How to prevent\nThis section describes the top best practices designed to specifically protect your code:\n\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches.\n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents.\n* Give users the option to disable client-side scripts.\n* Redirect invalid requests.\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 0,
                "cwe": [
                  "CWE-79"
                ]
              }
            },
            {
              "id": "java/Deserialization",
              "name": "Deserialization",
              "shortDescription": {
                "text": "Deserialization of Untrusted Data"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating object from sequence of bytes is called deserialization. Serialization is commonly used for communication (sharing objects between multiple hosts) and persistence (store the object state in a file or a database). It is an integral part of popular protocols like _Remote Method Invocation (RMI)_, _Java Management Extension (JMX)_, _Java Messaging System (JMS)_, _Action Message Format (AMF)_, _Java Server Faces (JSF) ViewState_, etc.\n\n_Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)), is when the application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, letting the attacker to control the state or the flow of the execution.\n\nJava deserialization issues have been known for years. However, interest in the issue intensified greatly in 2015, when classes that could be abused to achieve remote code execution were found in a [popular library (Apache Commons Collection)](https://snyk.io/vuln/SNYK-JAVA-COMMONSCOLLECTIONS-30078). These classes were used in zero-days affecting IBM WebSphere, Oracle WebLogic and many other products.\n\n\nAn attacker just needs to identify a piece of software that has both a vulnerable class on its path, and performs deserialization on untrusted data. Then all they need to do is send the payload into the deserializer, getting the command executed.\n\n\n> Developers put too much trust in Java Object Serialization. Some even de-serialize objects pre-authentication. When deserializing an Object in Java you typically cast it to an expected type, and therefore Java's strict type system will ensure you only get valid object trees. Unfortunately, by the time the type checking happens, platform code has already created and executed significant logic. So, before the final type is checked a lot of code is executed from the readObject() methods of various objects, all of which is out of the developer's control. By combining the readObject() methods of various classes which are available on the classpath of the vulnerable application an attacker can execute functions (including calling Runtime.exec() to execute local OS commands).",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/apache/commons-jcs/commit/3d7a7f8fdd526d01c1b4240b6da9abf5701acfe5?diff=split#diff-256cbcc3690cc484ff94133b10b72f16L197",
                    "lines": [
                      {
                        "line": "/** Description of the Method */",
                        "lineNumber": 195,
                        "lineChange": "none"
                      },
                      {
                        "line": "public String read( URLConnection connection )",
                        "lineNumber": 196,
                        "lineChange": "none"
                      },
                      {
                        "line": "{",
                        "lineNumber": 197,
                        "lineChange": "none"
                      },
                      {
                        "line": "    String result = \"\";",
                        "lineNumber": 198,
                        "lineChange": "none"
                      },
                      {
                        "line": "    try",
                        "lineNumber": 199,
                        "lineChange": "none"
                      },
                      {
                        "line": "    {",
                        "lineNumber": 200,
                        "lineChange": "none"
                      },
                      {
                        "line": "        ObjectInputStream is = new ObjectInputStream( connection.getInputStream() );",
                        "lineNumber": 201,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        ObjectInputStream is = new ObjectInputStreamClassLoaderAware( connection.getInputStream(), null );",
                        "lineNumber": 201,
                        "lineChange": "added"
                      },
                      {
                        "line": "        result = ( String ) is.readObject();",
                        "lineNumber": 202,
                        "lineChange": "none"
                      },
                      {
                        "line": "        is.close();",
                        "lineNumber": 203,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/tony19/logback-android/commit/665f0d0747260ddff683569f334db4757ad2ac94?diff=split#diff-3812d3ae08ad7172a48335985b14bdd8L47",
                    "lines": [
                      {
                        "line": " * @param inputStream input stream from which events will be read",
                        "lineNumber": 44,
                        "lineChange": "none"
                      },
                      {
                        "line": " */",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "public RemoteAppenderStreamClient(String id, Socket socket) {",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "  this.id = id;",
                        "lineNumber": 47,
                        "lineChange": "none"
                      },
                      {
                        "line": "  this.socket = socket;",
                        "lineNumber": 48,
                        "lineChange": "none"
                      },
                      {
                        "line": "while (true) {",
                        "lineNumber": 91,
                        "lineChange": "none"
                      },
                      {
                        "line": "  // read an event from the wire",
                        "lineNumber": 92,
                        "lineChange": "none"
                      },
                      {
                        "line": "  ILoggingEvent event = (ILoggingEvent) ois.readObject();",
                        "lineNumber": 93,
                        "lineChange": "none"
                      },
                      {
                        "line": "  // get a logger from the hierarchy. The name of the logger is taken to",
                        "lineNumber": 94,
                        "lineChange": "none"
                      },
                      {
                        "line": "  // be the name contained in the event.",
                        "lineNumber": 95,
                        "lineChange": "none"
                      },
                      {
                        "line": "return new ObjectInputStream(inputStream);",
                        "lineNumber": 128,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    return new HardenedLoggingEventInputStream(inputStream);",
                        "lineNumber": 128,
                        "lineChange": "added"
                      },
                      {
                        "line": "  }",
                        "lineNumber": 129,
                        "lineChange": "none"
                      },
                      {
                        "line": "  return new ObjectInputStream(socket.getInputStream());",
                        "lineNumber": 130,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  return new HardenedLoggingEventInputStream(socket.getInputStream());",
                        "lineNumber": 130,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 131,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Alluxio/alluxio/commit/1a0d75ddbb0d6e1857067789a5ba232887dbf90c?diff=split#diff-110c505811cbbd4fcc108c98190afcbdL51",
                    "lines": [
                      {
                        "line": " *                     stream header in the constructor of {@link ObjectInputStream}",
                        "lineNumber": 48,
                        "lineChange": "none"
                      },
                      {
                        "line": " */",
                        "lineNumber": 49,
                        "lineChange": "none"
                      },
                      {
                        "line": "public AlluxioLog4jSocketNode(AlluxioLogServerProcess process, Socket socket)",
                        "lineNumber": 50,
                        "lineChange": "none"
                      },
                      {
                        "line": "    throws IOException {",
                        "lineNumber": 51,
                        "lineChange": "none"
                      },
                      {
                        "line": "LoggingEvent event;",
                        "lineNumber": 58,
                        "lineChange": "none"
                      },
                      {
                        "line": "Logger remoteLogger;",
                        "lineNumber": 59,
                        "lineChange": "none"
                      },
                      {
                        "line": "try (ObjectInputStream objectInputStream = new ObjectInputStream(",
                        "lineNumber": 60,
                        "lineChange": "none"
                      },
                      {
                        "line": "    new BufferedInputStream(mSocket.getInputStream()))) {",
                        "lineNumber": 61,
                        "lineChange": "none"
                      },
                      {
                        "line": "  while (true) {",
                        "lineNumber": 62,
                        "lineChange": "none"
                      },
                      {
                        "line": "    event = (LoggingEvent) objectInputStream.readObject();",
                        "lineNumber": 63,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (mHierarchy == null) {",
                        "lineNumber": 64,
                        "lineChange": "removed"
                      },
                      {
                        "line": "      mHierarchy = mLogServerProcess.configureHierarchy(",
                        "lineNumber": 65,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    if (hierarchy == null) {",
                        "lineNumber": 63,
                        "lineChange": "added"
                      },
                      {
                        "line": "      hierarchy = mLogServerProcess.configureHierarchy(",
                        "lineNumber": 64,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Save highlights as a json file, not an object dump.",
                  "Serialized reporter - Allow specifying multiple result dir source paths"
                ],
                "precision": "very-high",
                "repoDatasetSize": 68,
                "cwe": [
                  "CWE-502"
                ]
              }
            },
            {
              "id": "java/TooPermissiveTrustManager",
              "name": "TooPermissiveTrustManager",
              "shortDescription": {
                "text": "Improper Certificate Validation"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nCommunication through encrypted TLS/SSL protocols can only take place when the server bears a valid certificate associating that server with a valid public-key identity issued by a third-party authority. If certificate validation is cursory or incomplete, this creates a weakness whereby an attacker can spoof one or more certificate details (e.g., expiration date), gaining unauthorized access to confidential data and privileged actions.\n\n### Best practices for prevention\n* Verify all aspects of any certificate provided, particularly chain of trust (issuing authority), host identity, and expiration.\n* Limit the validity period for certificates.\n* Avoid using self-signed certificates, certificate pinning, and wildcard certificates, as these all add levels of convenience but can also lead to loss of control over site/app security.\n* Disable older and insecure protocols (for example, SSL 2.0/3.0, MD5, and 3DES).\n* Ensure that all team members are familiar with current best practices and approaches, such as current TLS protocols.\n* Implement automated and manual testing using current tools and techniques designed to reveal this and related SSL weaknesses (for example, web application scanners).",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/pentaho/pentaho-kettle/commit/5a4014d3e4e7307198635a1d9d1cbe7e868fb889?diff=split#diff-b711fa3a1339a77fb1b62ea5a608f827L143",
                    "lines": [
                      {
                        "line": "  }",
                        "lineNumber": 143,
                        "lineChange": "none"
                      },
                      {
                        "line": "  @Override",
                        "lineNumber": 145,
                        "lineChange": "none"
                      },
                      {
                        "line": "  public X509Certificate[] getAcceptedIssuers() {",
                        "lineNumber": 146,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return null;",
                        "lineNumber": 144,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    return new X509Certificate[0];",
                        "lineNumber": 147,
                        "lineChange": "added"
                      },
                      {
                        "line": "  }",
                        "lineNumber": 148,
                        "lineChange": "none"
                      },
                      {
                        "line": "};",
                        "lineNumber": 149,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/guardianproject/NetCipher/commit/3b971438ed74870685f404c43feae65fc413d703?diff=split#diff-6f4869070d4eee5c76931a7bf27ed055L179",
                    "lines": [
                      {
                        "line": "}",
                        "lineNumber": 181,
                        "lineChange": "none"
                      },
                      {
                        "line": "public void checkClientTrusted(X509Certificate[] arg0, String arg1) throws CertificateException {",
                        "lineNumber": 183,
                        "lineChange": "none"
                      },
                      {
                        "line": "    //not yet implemented",
                        "lineNumber": 179,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    ",
                        "lineNumber": 184,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tdebug (\"WARNING: Client Cert Trust NOT YET IMPLEMENTED\");",
                        "lineNumber": 185,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 186,
                        "lineChange": "none"
                      },
                      {
                        "line": "{",
                        "lineNumber": 671,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tif (SHOW_DEBUG_OUTPUT)",
                        "lineNumber": 672,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tLog.d(TAG, msg);",
                        "lineNumber": 673,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 674,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/HtmlUnit/htmlunit/commit/2ab74fb459fa25764fa3c6f56d00cf076fadf69d?diff=split#diff-3070dfb96ed2fae966d731bf849982d1L125",
                    "lines": [
                      {
                        "line": " * {@inheritDoc}",
                        "lineNumber": 127,
                        "lineChange": "none"
                      },
                      {
                        "line": " */",
                        "lineNumber": 128,
                        "lineChange": "none"
                      },
                      {
                        "line": "public void checkClientTrusted(final X509Certificate[] chain, final String authType) throws CertificateException {",
                        "lineNumber": 129,
                        "lineChange": "none"
                      },
                      {
                        "line": "    // Everyone is trusted!",
                        "lineNumber": 130,
                        "lineChange": "none"
                      },
                      {
                        "line": "    acceptedIssuers_.addAll(Arrays.asList(chain));",
                        "lineNumber": 131,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 132,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Finalize tests for HTTP libraries",
                  "Relates elastic/elasticsearch",
                  "* Allow possibility for pushing trust issue to user"
                ],
                "precision": "very-high",
                "repoDatasetSize": 54,
                "cwe": [
                  "CWE-295"
                ]
              }
            },
            {
              "id": "javascript/DOMXSS/test",
              "name": "DOMXSS/test",
              "shortDescription": {
                "text": "Cross-site Scripting (XSS)"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "## Details\n\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\n\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser's Same Origin Policy.\n\nInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\n\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they've been correctly escaped in the application code and in this way the attempted attack is diverted.\n\nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware.\n\n### Types of attacks\nThere are a few methods by which XSS can be manipulated:\n\n|Type|Origin|Description|\n|--|--|--|\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user's browser.|\n|**DOM-based**|Client|The attacker forces the user's browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\n\n### Affected environments\nThe following environments are susceptible to an XSS attack:\n\n* Web servers\n* Application servers\n* Web application environments\n\n### How to prevent\nThis section describes the top best practices designed to specifically protect your code:\n\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches.\n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents.\n* Give users the option to disable client-side scripts.\n* Redirect invalid requests.\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/jbt/markdown-editor/commit/4c02744b8a51de4a23002a7064e3d5a9a712f78c?diff=split#diff-0eb547304658805aad788d320f10bf1f292797b5e6d745a3bf617584da017051L187",
                    "lines": [
                      {
                        "line": "  document.getElementById('out').innerHTML = marked(val);",
                        "lineNumber": 186,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 187,
                        "lineChange": "none"
                      },
                      {
                        "line": "var editor = CodeMirror.fromTextArea(document.getElementById('code'), {",
                        "lineNumber": 189,
                        "lineChange": "none"
                      },
                      {
                        "line": "  mode: 'gfm',",
                        "lineNumber": 190,
                        "lineChange": "none"
                      },
                      {
                        "line": "  lineNumbers: true,",
                        "lineNumber": 191,
                        "lineChange": "none"
                      },
                      {
                        "line": "  matchBrackets: true,",
                        "lineNumber": 192,
                        "lineChange": "none"
                      },
                      {
                        "line": "  lineWrapping: true,",
                        "lineNumber": 193,
                        "lineChange": "none"
                      },
                      {
                        "line": "  theme: 'default',",
                        "lineNumber": 194,
                        "lineChange": "none"
                      },
                      {
                        "line": "  onChange: update",
                        "lineNumber": 195,
                        "lineChange": "none"
                      },
                      {
                        "line": "});",
                        "lineNumber": 196,
                        "lineChange": "none"
                      },
                      {
                        "line": "document.addEventListener('drop', function(e){",
                        "lineNumber": 198,
                        "lineChange": "none"
                      },
                      {
                        "line": "  e.preventDefault();",
                        "lineNumber": 199,
                        "lineChange": "none"
                      },
                      {
                        "line": "  e.stopPropagation();",
                        "lineNumber": 200,
                        "lineChange": "none"
                      },
                      {
                        "line": "  var theFile = e.dataTransfer.files[0];",
                        "lineNumber": 202,
                        "lineChange": "none"
                      },
                      {
                        "line": "  var theReader = new FileReader();",
                        "lineNumber": 203,
                        "lineChange": "none"
                      },
                      {
                        "line": "  theReader.onload = function(e){",
                        "lineNumber": 204,
                        "lineChange": "none"
                      },
                      {
                        "line": "    editor.setValue(e.target.result);",
                        "lineNumber": 205,
                        "lineChange": "none"
                      },
                      {
                        "line": "  };",
                        "lineNumber": 206,
                        "lineChange": "none"
                      },
                      {
                        "line": "  theReader.readAsText(theFile);",
                        "lineNumber": 208,
                        "lineChange": "none"
                      },
                      {
                        "line": "}, false);",
                        "lineNumber": 209,
                        "lineChange": "none"
                      },
                      {
                        "line": "function save(){",
                        "lineNumber": 211,
                        "lineChange": "none"
                      },
                      {
                        "line": "  var code = editor.getValue();",
                        "lineNumber": 212,
                        "lineChange": "none"
                      },
                      {
                        "line": "  var blob = new Blob([code], { type: 'text/plain' });",
                        "lineNumber": 213,
                        "lineChange": "none"
                      },
                      {
                        "line": "  saveBlob(blob);",
                        "lineNumber": 214,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 215,
                        "lineChange": "none"
                      },
                      {
                        "line": "function saveBlob(blob){",
                        "lineNumber": 217,
                        "lineChange": "none"
                      },
                      {
                        "line": "  var name = \"untitled.md\";",
                        "lineNumber": 218,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if(window.saveAs){",
                        "lineNumber": 219,
                        "lineChange": "none"
                      },
                      {
                        "line": "    window.saveAs(blob, name);",
                        "lineNumber": 220,
                        "lineChange": "none"
                      },
                      {
                        "line": "  }else if(navigator.saveBlob){",
                        "lineNumber": 221,
                        "lineChange": "none"
                      },
                      {
                        "line": "    navigator.saveBlob(blob, name);",
                        "lineNumber": 222,
                        "lineChange": "none"
                      },
                      {
                        "line": "  }else{",
                        "lineNumber": 223,
                        "lineChange": "none"
                      },
                      {
                        "line": "    url = URL.createObjectURL(blob);",
                        "lineNumber": 224,
                        "lineChange": "none"
                      },
                      {
                        "line": "    var link = document.createElement(\"a\");",
                        "lineNumber": 225,
                        "lineChange": "none"
                      },
                      {
                        "line": "    link.setAttribute(\"href\",url);",
                        "lineNumber": 226,
                        "lineChange": "none"
                      },
                      {
                        "line": "    link.setAttribute(\"download\",name);",
                        "lineNumber": 227,
                        "lineChange": "none"
                      },
                      {
                        "line": "    var event = document.createEvent('MouseEvents');",
                        "lineNumber": 228,
                        "lineChange": "none"
                      },
                      {
                        "line": "    event.initMouseEvent('click', true, true, window, 1, 0, 0, 0, 0, false, false, false, false, 0, null);",
                        "lineNumber": 229,
                        "lineChange": "none"
                      },
                      {
                        "line": "    link.dispatchEvent(event);",
                        "lineNumber": 230,
                        "lineChange": "none"
                      },
                      {
                        "line": "  }",
                        "lineNumber": 231,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 232,
                        "lineChange": "none"
                      },
                      {
                        "line": "document.addEventListener('keydown', function(e){",
                        "lineNumber": 234,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if(e.keyCode == 83 && (e.ctrlKey || e.metaKey)){",
                        "lineNumber": 235,
                        "lineChange": "none"
                      },
                      {
                        "line": "    e.preventDefault();",
                        "lineNumber": 236,
                        "lineChange": "none"
                      },
                      {
                        "line": "    save();",
                        "lineNumber": 237,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return false;",
                        "lineNumber": 238,
                        "lineChange": "none"
                      },
                      {
                        "line": "  }",
                        "lineNumber": 239,
                        "lineChange": "none"
                      },
                      {
                        "line": "})",
                        "lineNumber": 240,
                        "lineChange": "none"
                      },
                      {
                        "line": "var hashto;",
                        "lineNumber": 242,
                        "lineChange": "none"
                      },
                      {
                        "line": "function updateHash(){",
                        "lineNumber": 244,
                        "lineChange": "none"
                      },
                      {
                        "line": "  window.location.hash = btoa(RawDeflate.deflate(editor.getValue()));",
                        "lineNumber": 245,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  window.location.hash = btoa(RawDeflate.deflate(unescape(encodeURIComponent(editor.getValue()))))",
                        "lineNumber": 245,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 246,
                        "lineChange": "none"
                      },
                      {
                        "line": "if(window.location.hash){",
                        "lineNumber": 248,
                        "lineChange": "none"
                      },
                      {
                        "line": "  var h = window.location.hash.replace(/^#/, '');",
                        "lineNumber": 249,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if(h.slice(0,5) == 'view:'){",
                        "lineNumber": 250,
                        "lineChange": "none"
                      },
                      {
                        "line": "    setOutput(RawDeflate.inflate(atob(h.slice(5))));",
                        "lineNumber": 251,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    setOutput(decodeURIComponent(escape(RawDeflate.inflate(atob(h.slice(5))))));",
                        "lineNumber": 251,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/RasPlex/OpenPHT/commit/ea03c88ab96c2607d7fc7bdb04bed16a2c14afa5?diff=split#diff-cbc600141d5846348060616895d0adbb51a9720d9504a4d7d33cd5eb65e44d4bL57",
                    "lines": [
                      {
                        "line": "document.write('<img src=\"' + thumbnail + '\" class=\"cover\"></img>');",
                        "lineNumber": 56,
                        "lineChange": "removed"
                      },
                      {
                        "line": "var imgSrc = item[\"thumbnail\"] ? ('vfs/' + escape(item[\"thumbnail\"])) : \"images/DefaultVideo.png\";",
                        "lineNumber": 53,
                        "lineChange": "added"
                      },
                      {
                        "line": "document.write('<img src=\"' + imgSrc + '\" class=\"cover\"></img>');",
                        "lineNumber": 54,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/RasPlex/OpenPHT/commit/ea03c88ab96c2607d7fc7bdb04bed16a2c14afa5?diff=split#diff-07d3f208648c3e9987149a3900a8c9f269a0edd8ad11f1f0be50ad475bb36320L60",
                    "lines": [
                      {
                        "line": "if (array[activeItem][\"thumbnail\"])",
                        "lineNumber": 59,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  document.write('<img src=\"thumb/' + array[activeItem][\"thumbnail\"] + '.jpg\"></img>\"');",
                        "lineNumber": 60,
                        "lineChange": "removed"
                      },
                      {
                        "line": " else",
                        "lineNumber": 61,
                        "lineChange": "removed"
                      },
                      {
                        "line": "   document.write('<img src=\"images/DefaultAlbumCover.png\"></img>');",
                        "lineNumber": 62,
                        "lineChange": "removed"
                      },
                      {
                        "line": " var imgSrc = array[activeItem][\"thumbnail\"] ? ('vfs/' + escape(array[activeItem][\"thumbnail\"])) : \"images/DefaultAlbumCover.png\";",
                        "lineNumber": 59,
                        "lineChange": "added"
                      },
                      {
                        "line": " document.write('<img src=\"' + imgSrc + '\"></img>');",
                        "lineNumber": 60,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Add unit test.",
                  "e3db0cd CHANGES.md\n84d1acf Add tests.",
                  "Update and clean up the tests by using the iframe's load event."
                ],
                "precision": "very-high",
                "repoDatasetSize": 1490,
                "cwe": [
                  "CWE-79"
                ]
              }
            },
            {
              "id": "java/Sqli",
              "name": "Sqli",
              "shortDescription": {
                "text": "SQL Injection"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nIn an SQL injection attack, the user can submit an SQL query directly to the database, gaining access without providing appropriate credentials. Attackers can then view, export, modify, and delete confidential information; change passwords and other authentication information; and possibly gain access to other systems within the network. This is one of the most commonly exploited categories of vulnerability, but can largely be avoided through good coding practices.\n\n### Best practices for prevention\n* Avoid passing user-entered parameters directly to the SQL server.\n* Avoid using string concatenation to build SQL queries from user-entered parameters.\n* When coding, define SQL code first, then pass in parameters. Use prepared statements with parameterized queries. Examples include `SqlCommand()` in .NET and `bindParam()` in PHP.\n* Use strong typing for all parameters so unexpected user data will be rejected.\n* Where direct user input cannot be avoided for performance reasons, validate input against a very strict allowlist of permitted characters, avoiding special characters such as `? & / < > ; - ' \" \\` and spaces. Use a vendor-supplied escaping routine if possible.\n* Develop your application in an environment and/or using libraries that provide protection against SQL injection.\n* Harden your entire environment around a least-privilege model, ideally with isolated accounts with privileges only for particular tasks.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/jeffdcamp/dbtools-android/commit/2643c30c302955a03233847c154350e424cca1d9?diff=split#diff-e2f0ab1619799e644c57ba98ebe6f39aL474",
                    "lines": [
                      {
                        "line": "}",
                        "lineNumber": 471,
                        "lineChange": "none"
                      },
                      {
                        "line": "public int delete(@Nonnull SQLiteDatabase db, @Nullable String where, @Nullable String[] whereArgs) {",
                        "lineNumber": 473,
                        "lineChange": "removed"
                      },
                      {
                        "line": "public int delete(@Nonnull DatabaseWrapper db, @Nullable String where, @Nullable String[] whereArgs) {",
                        "lineNumber": 412,
                        "lineChange": "added"
                      },
                      {
                        "line": "    checkDB(db);",
                        "lineNumber": 474,
                        "lineChange": "none"
                      },
                      {
                        "line": "    int rowsAffected = 0;",
                        "lineNumber": 475,
                        "lineChange": "none"
                      },
                      {
                        "line": "for (int tryCount = 0; tryCount < MAX_TRY_COUNT && !success; tryCount++) {",
                        "lineNumber": 479,
                        "lineChange": "none"
                      },
                      {
                        "line": "    try {",
                        "lineNumber": 480,
                        "lineChange": "none"
                      },
                      {
                        "line": "        rowsAffected = db.delete(getTableName(), where, whereArgs);",
                        "lineNumber": 481,
                        "lineChange": "none"
                      },
                      {
                        "line": "        postDeleteEvent(db, getTableName(), rowsAffected);",
                        "lineNumber": 482,
                        "lineChange": "none"
                      },
                      {
                        "line": "        success = true;",
                        "lineNumber": 483,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/keycloak/keycloak/commit/c8c86d2badb5ed97f9fbfe2c98e190c5a73cdb66?diff=split#diff-df89d441bd8b2c3dd63c28b12e23245dL47",
                    "lines": [
                      {
                        "line": "@Inject",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "private EntityManager entityManager;",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "@Context",
                        "lineNumber": 48,
                        "lineChange": "none"
                      },
                      {
                        "line": "@Path(\"{id}\")",
                        "lineNumber": 99,
                        "lineChange": "none"
                      },
                      {
                        "line": "@Produces(\"application/json\")",
                        "lineNumber": 100,
                        "lineChange": "none"
                      },
                      {
                        "line": "public Response findById(@PathParam(\"id\") String id) {",
                        "lineNumber": 101,
                        "lineChange": "none"
                      },
                      {
                        "line": "    List result = this.entityManager.createQuery(\"from Album where id = \" + id).getResultList();",
                        "lineNumber": 102,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    List result = this.entityManager.createQuery(\"from Album where id = \" + Long.valueOf(id)).getResultList();",
                        "lineNumber": 102,
                        "lineChange": "added"
                      },
                      {
                        "line": "    if (result.isEmpty()) {",
                        "lineNumber": 104,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/nuls-io/nuls/commit/7ff6aaf43ba54ec5cce6d03f7243e5a941fb3e4a?diff=split#diff-0444fba3b07c567a52ceed78978dc18bR532",
                    "lines": [
                      {
                        "line": "}",
                        "lineNumber": 536,
                        "lineChange": "none"
                      },
                      {
                        "line": " * @return",
                        "lineNumber": 529,
                        "lineChange": "added"
                      },
                      {
                        "line": " */",
                        "lineNumber": 530,
                        "lineChange": "added"
                      },
                      {
                        "line": "@Deprecated",
                        "lineNumber": 531,
                        "lineChange": "added"
                      },
                      {
                        "line": "public static Result delete(String area, String key) {",
                        "lineNumber": 538,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (!baseCheckArea(area)) {",
                        "lineNumber": 539,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return new Result(true, \"KV_AREA_NOT_EXISTS\");",
                        "lineNumber": 540,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }",
                        "lineNumber": 541,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (StringUtils.isBlank(key)) {",
                        "lineNumber": 542,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return Result.getFailed(KernelErrorCode.NULL_PARAMETER);",
                        "lineNumber": 543,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }",
                        "lineNumber": 544,
                        "lineChange": "none"
                      },
                      {
                        "line": "    try {",
                        "lineNumber": 545,
                        "lineChange": "none"
                      },
                      {
                        "line": "        DB db = AREAS.get(area);",
                        "lineNumber": 546,
                        "lineChange": "none"
                      },
                      {
                        "line": "        db.delete(bytes(key));",
                        "lineNumber": 547,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return Result.getSuccess();",
                        "lineNumber": 548,
                        "lineChange": "none"
                      },
                      {
                        "line": "    } catch (Exception e) {",
                        "lineNumber": 549,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "- Support hive user impersonation on hive tables page",
                  "* Moves converter pattern to Java 11",
                  "Add query logging."
                ],
                "precision": "very-high",
                "repoDatasetSize": 197,
                "cwe": [
                  "CWE-89"
                ]
              }
            },
            {
              "id": "java/InsecureSecret",
              "name": "InsecureSecret",
              "shortDescription": {
                "text": "Use of Insufficiently Random Values"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "\n## Details\n\nComputer security relies on random numbers for many things: generating secure, confidential session keys; hashing password data; encryption for transmitting sensitive data, and more. It's easy to understand why. If session keys, for example, were generated sequentially, attackers would be able to guess these easily and then hijack legitimate user sessions. Similarly, if encryption techniques used easy-to-guess numbers, attackers could use brute-force attacks to gain unauthorized access.\n\nIn reality, since computers cannot generate truly random numbers, they use \"pseudorandom\" numbers instead, generated using an algorithm that is \"seeded\" in a variety of ways to produce highly variable values in a random-seeming order, making them very hard-in theory-for attackers to guess. However, if developers inadvertently make use of a weak random algorithm, attackers may be able to discover the algorithm, seed, or pattern, ultimately unlocking access to commands or sensitive data, which can then be held for ransom or sold.\n\n### Best practices for prevention\n* Avoid using weak pseudorandom number generators (PRNGs), such as statistical PRNGs. Instead, choose a cryptographically secure PRNG.\n* Avoid using predictable seed values, such as user ID or server start time. Instead, use a seed that is itself pseudorandom, such as one taken from an external hardware source.\n* Use standard, accepted security algorithms and libraries rather than taking a DIY approach and creating custom code that may contain inherent weaknesses or overlook critical flaws.\n* Use static analysis tools to identify potential instances of this weakness in code and then ensure good test coverage with appropriate white-box testing.\n* Educate developers about the importance of entropy in security systems development, and consider adopting tools that are FIPS 140-2 compliant.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/iamMehedi/Secured-Preference-Store/commit/7a497d4dfff92ecab67c5a2f9bb16360da08d913?diff=split#diff-91bd8c6e8f1edb78f742519c90d26d7dL93",
                    "lines": [
                      {
                        "line": "}",
                        "lineNumber": 90,
                        "lineChange": "none"
                      },
                      {
                        "line": "public byte[] encrypt(byte[] bytes, byte[] IV) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException, IOException, BadPaddingException, NoSuchProviderException, IllegalBlock",
                        "lineNumber": 92,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (bytes != null && bytes.length > 0) {",
                        "lineNumber": 93,
                        "lineChange": "none"
                      },
                      {
                        "line": "        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.M || isCompatMode)",
                        "lineNumber": 94,
                        "lineChange": "none"
                      },
                      {
                        "line": "            return encryptAESCompat(bytes, IV);",
                        "lineNumber": 95,
                        "lineChange": "none"
                      },
                      {
                        "line": "        else return encryptAES(bytes, IV);",
                        "lineNumber": 96,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }",
                        "lineNumber": 97,
                        "lineChange": "none"
                      },
                      {
                        "line": "public String encrypt(String text) throws InvalidKeyException, NoSuchAlgorithmException, NoSuchPaddingException, IOException, IllegalBlockSizeException, InvalidAlgorithmParameterException, NoSuchProviderException, BadPaddingException {",
                        "lineNumber": 112,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (text != null && text.length() > 0) {",
                        "lineNumber": 113,
                        "lineChange": "none"
                      },
                      {
                        "line": "        byte[] IV = getIV();",
                        "lineNumber": 114,
                        "lineChange": "none"
                      },
                      {
                        "line": "       byte[] encrypted = encrypt(text.getBytes(DEFAULT_CHARSET), IV);",
                        "lineNumber": 115,
                        "lineChange": "added"
                      },
                      {
                        "line": "       return base64Encode(IV) + DELIMITER + base64Encode(encrypted);",
                        "lineNumber": 116,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 117,
                        "lineChange": "none"
                      },
                      {
                        "line": "byte[] getIV() throws UnsupportedEncodingException {",
                        "lineNumber": 165,
                        "lineChange": "none"
                      },
                      {
                        "line": "    byte[] iv = new byte[16];",
                        "lineNumber": 166,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Random rng = new Random();",
                        "lineNumber": 159,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    SecureRandom rng = new SecureRandom();",
                        "lineNumber": 167,
                        "lineChange": "added"
                      },
                      {
                        "line": "    rng.nextBytes(iv);",
                        "lineNumber": 168,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return iv;",
                        "lineNumber": 169,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 170,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 184,
                        "lineChange": "none"
                      },
                      {
                        "line": "byte[] encryptAESCompat(byte[] bytes, byte[] IV) throws NoSuchPaddingException, NoSuchAlgorithmException, NoSuchProviderException, InvalidKeyException, BadPaddingException, IllegalBlockSizeExcepti",
                        "lineNumber": 186,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Cipher c = Cipher.getInstance(AES_CIPHER_COMPAT, BOUNCY_CASTLE_PROVIDER);",
                        "lineNumber": 187,
                        "lineChange": "none"
                      },
                      {
                        "line": "    c.init(Cipher.ENCRYPT_MODE, aesKey, new IvParameterSpec(IV));",
                        "lineNumber": 188,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return c.doFinal(bytes);",
                        "lineNumber": 189,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 190,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/aionnetwork/aion/commit/8ac04002e9bfc2ba8b92d54c84de0e5a0d9e350e?diff=split#diff-8154a85bffdd93bc7de0a1a97da8a873L70",
                    "lines": [
                      {
                        "line": "// 128-bit initialisation vector for the cipher (16 bytes)",
                        "lineNumber": 68,
                        "lineChange": "none"
                      },
                      {
                        "line": "final byte[] iv = generateRandomBytes(16);",
                        "lineNumber": 69,
                        "lineChange": "none"
                      },
                      {
                        "line": "final byte[] privateKey = key.getPrivKeyBytes();",
                        "lineNumber": 70,
                        "lineChange": "none"
                      },
                      {
                        "line": "final byte[] encryptKey = Arrays.copyOfRange(derivedKey, 0, 16);",
                        "lineNumber": 71,
                        "lineChange": "none"
                      },
                      {
                        "line": "final byte[] cipherText = encryptAes(iv, encryptKey, privateKey);",
                        "lineNumber": 72,
                        "lineChange": "none"
                      },
                      {
                        "line": "final byte[] mac = HashUtil.h256(concat(Arrays.copyOfRange(derivedKey, 16, 32), cipherText));",
                        "lineNumber": 73,
                        "lineChange": "none"
                      },
                      {
                        "line": "private byte[] generateRandomBytes(int size) {",
                        "lineNumber": 101,
                        "lineChange": "none"
                      },
                      {
                        "line": "    final byte[] bytes = new byte[size];",
                        "lineNumber": 102,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Random random = new Random();",
                        "lineNumber": 103,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    Random random = new SecureRandom();",
                        "lineNumber": 100,
                        "lineChange": "added"
                      },
                      {
                        "line": "    random.nextBytes(bytes);",
                        "lineNumber": 104,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return bytes;",
                        "lineNumber": 105,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 106,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 141,
                        "lineChange": "none"
                      },
                      {
                        "line": "private byte[] encryptAes(byte[] iv, byte[] keyBytes, byte[] cipherText)",
                        "lineNumber": 143,
                        "lineChange": "none"
                      },
                      {
                        "line": "        throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidAlgorithmParameterException,",
                        "lineNumber": 144,
                        "lineChange": "none"
                      },
                      {
                        "line": "        InvalidKeyException, BadPaddingException, IllegalBlockSizeException {",
                        "lineNumber": 145,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return processAes(iv, keyBytes, cipherText, Cipher.ENCRYPT_MODE);",
                        "lineNumber": 146,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 147,
                        "lineChange": "none"
                      },
                      {
                        "line": "private static byte[] processAes(byte[] iv, byte[] keyBytes, byte[] cipherText, int encryptMode)",
                        "lineNumber": 149,
                        "lineChange": "none"
                      },
                      {
                        "line": "        throws NoSuchAlgorithmException, NoSuchPaddingException, InvalidKeyException,",
                        "lineNumber": 150,
                        "lineChange": "none"
                      },
                      {
                        "line": "        InvalidAlgorithmParameterException, IllegalBlockSizeException, BadPaddingException {",
                        "lineNumber": 151,
                        "lineChange": "none"
                      },
                      {
                        "line": "    SecretKeySpec key = new SecretKeySpec(keyBytes, \"AES\");",
                        "lineNumber": 152,
                        "lineChange": "none"
                      },
                      {
                        "line": "    IvParameterSpec ivSpec = new IvParameterSpec(iv);",
                        "lineNumber": 153,
                        "lineChange": "none"
                      },
                      {
                        "line": "    // Mode",
                        "lineNumber": 155,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/aionnetwork/aion_api/commit/6e5dae82db3a09ec6f0d793db4786a2d1bc82378?diff=split#diff-c1d459d663c64f4742ed5553a8f32a0bL63",
                    "lines": [
                      {
                        "line": "// 128-bit initialisation vector for the cipher (16 bytes)",
                        "lineNumber": 66,
                        "lineChange": "none"
                      },
                      {
                        "line": "final byte[] iv = generateRandomBytes(16);",
                        "lineNumber": 67,
                        "lineChange": "none"
                      },
                      {
                        "line": "final byte[] privateKey = key.getPrivKeyBytes();",
                        "lineNumber": 68,
                        "lineChange": "none"
                      },
                      {
                        "line": "final byte[] encryptKey = Arrays.copyOfRange(derivedKey, 0, 16);",
                        "lineNumber": 69,
                        "lineChange": "none"
                      },
                      {
                        "line": "final byte[] cipherText = encryptAes(iv, encryptKey, privateKey);",
                        "lineNumber": 70,
                        "lineChange": "none"
                      },
                      {
                        "line": "final byte[] mac = HashUtil.h256(concat(Arrays.copyOfRange(derivedKey, 16, 32), cipherText));",
                        "lineNumber": 66,
                        "lineChange": "removed"
                      },
                      {
                        "line": "final byte[] mac = HashUtil",
                        "lineNumber": 71,
                        "lineChange": "added"
                      },
                      {
                        "line": "    .h256(concat(Arrays.copyOfRange(derivedKey, 16, 32), cipherText));",
                        "lineNumber": 72,
                        "lineChange": "added"
                      },
                      {
                        "line": "private byte[] generateRandomBytes(int size) {",
                        "lineNumber": 99,
                        "lineChange": "none"
                      },
                      {
                        "line": "    final byte[] bytes = new byte[size];",
                        "lineNumber": 100,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Random random = new Random();",
                        "lineNumber": 95,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    Random random = new SecureRandom();",
                        "lineNumber": 101,
                        "lineChange": "added"
                      },
                      {
                        "line": "    random.nextBytes(bytes);",
                        "lineNumber": 102,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return bytes;",
                        "lineNumber": 103,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 104,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 141,
                        "lineChange": "none"
                      },
                      {
                        "line": "private byte[] encryptAes(byte[] iv, byte[] keyBytes, byte[] cipherText)",
                        "lineNumber": 143,
                        "lineChange": "none"
                      },
                      {
                        "line": "        throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidAlgorithmParameterException,",
                        "lineNumber": 136,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        InvalidKeyException, BadPaddingException, IllegalBlockSizeException {",
                        "lineNumber": 137,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidAlgorithmParameterException,",
                        "lineNumber": 144,
                        "lineChange": "added"
                      },
                      {
                        "line": "    InvalidKeyException, BadPaddingException, IllegalBlockSizeException {",
                        "lineNumber": 145,
                        "lineChange": "added"
                      },
                      {
                        "line": "    return processAes(iv, keyBytes, cipherText, Cipher.ENCRYPT_MODE);",
                        "lineNumber": 146,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 147,
                        "lineChange": "none"
                      },
                      {
                        "line": "private static byte[] processAes(byte[] iv, byte[] keyBytes, byte[] cipherText, int encryptMode)",
                        "lineNumber": 149,
                        "lineChange": "none"
                      },
                      {
                        "line": "        throws NoSuchAlgorithmException, NoSuchPaddingException, InvalidKeyException,",
                        "lineNumber": 142,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        InvalidAlgorithmParameterException, IllegalBlockSizeException, BadPaddingException {",
                        "lineNumber": 143,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    throws NoSuchAlgorithmException, NoSuchPaddingException, InvalidKeyException,",
                        "lineNumber": 150,
                        "lineChange": "added"
                      },
                      {
                        "line": "    InvalidAlgorithmParameterException, IllegalBlockSizeException, BadPaddingException {",
                        "lineNumber": 151,
                        "lineChange": "added"
                      },
                      {
                        "line": "    SecretKeySpec key = new SecretKeySpec(keyBytes, \"AES\");",
                        "lineNumber": 152,
                        "lineChange": "none"
                      },
                      {
                        "line": "    IvParameterSpec ivSpec = new IvParameterSpec(iv);",
                        "lineNumber": 153,
                        "lineChange": "none"
                      },
                      {
                        "line": "    // Mode",
                        "lineNumber": 155,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Random string generation should use SecureRandom w/ Base64 encoding ()",
                  "* fix random strings"
                ],
                "precision": "very-high",
                "repoDatasetSize": 52,
                "cwe": [
                  "CWE-330"
                ]
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 127,
                  "endLine": 127,
                  "startColumn": 9,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "eb83495e6a8849784ff71a422b77160f838ad22dcc6242b0f29dd84836a2cd3d",
            "1": "e903222f.69e6637c.fc7d5400.e22980a8.3cfce590.d57658f9.94b7b297.fde7589e.e903222f.69e6637c.fc7d5400.e22980a8.3cfce590.d57658f9.94b7b297.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 127,
                            "endLine": 127,
                            "startColumn": 28,
                            "endColumn": 41
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 407,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 156,
                  "endLine": 156,
                  "startColumn": 9,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d5a2b83f6307d698132dd266960cf2bc8d5e3fd78edcb7841428ed3abb89109e",
            "1": "e903222f.52ea4e90.fc7d5400.e22980a8.7aea3353.66846dd3.365649ed.fde7589e.e903222f.52ea4e90.fc7d5400.e22980a8.7aea3353.66846dd3.365649ed.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 156,
                            "endLine": 156,
                            "startColumn": 28,
                            "endColumn": 41
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 407,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 203,
                  "endLine": 203,
                  "startColumn": 9,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8932c9fb8e465267c0e40fc5f246a67a90b6e12fdd02ea99690e3e23618dc67a",
            "1": "5387ee68.e8c02a15.374cb727.e22980a8.3cfce590.935029da.94b7b297.fde7589e.5387ee68.e8c02a15.374cb727.e22980a8.3cfce590.935029da.94b7b297.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 203,
                            "endLine": 203,
                            "startColumn": 28,
                            "endColumn": 38
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 407,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 216,
                  "endLine": 216,
                  "startColumn": 9,
                  "endColumn": 28
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d72d368bff71a80faff218b2a64d3e1456677a673906eb1b4a2f0085861654df",
            "1": "5387ee68.0cd2046c.374cb727.e22980a8.ccf2352c.935029da.0d23e23f.fde7589e.5387ee68.0cd2046c.374cb727.e22980a8.ccf2352c.935029da.0d23e23f.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 216,
                            "endLine": 216,
                            "startColumn": 29,
                            "endColumn": 42
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 407,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 230,
                  "endLine": 230,
                  "startColumn": 9,
                  "endColumn": 28
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8d783e72d7eeabc051d4379d1da6fb6aad9e7728cf8aa2b19e17269da90ca48a",
            "1": "5387ee68.0cd2046c.33fa5dbe.e22980a8.ccf2352c.7fda7c5e.0d23e23f.fde7589e.5387ee68.0cd2046c.33fa5dbe.e22980a8.ccf2352c.7fda7c5e.0d23e23f.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 230,
                            "endLine": 230,
                            "startColumn": 29,
                            "endColumn": 42
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 407,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 240,
                  "endLine": 240,
                  "startColumn": 9,
                  "endColumn": 28
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ff57228b85bb4aa70fd7c27d0e3356e78ce6f62aeccb9018a19842ecbaa39156",
            "1": "5387ee68.1d8af74b.33fa5dbe.e22980a8.ccf2352c.7fda7c5e.0d23e23f.fde7589e.5387ee68.1d8af74b.33fa5dbe.e22980a8.ccf2352c.7fda7c5e.0d23e23f.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 240,
                            "endLine": 240,
                            "startColumn": 29,
                            "endColumn": 48
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 407,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 249,
                  "endLine": 249,
                  "startColumn": 9,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "13afecd09287d83ae76e49b2def8606e14ba5cc599150f2f7c22d4e72a838ef0",
            "1": "5387ee68.0cd2046c.fc7d5400.e22980a8.75e62e70.935029da.1e6794c3.fde7589e.5387ee68.0cd2046c.fc7d5400.e22980a8.75e62e70.935029da.1e6794c3.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 249,
                            "endLine": 249,
                            "startColumn": 28,
                            "endColumn": 41
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 407,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 285,
                  "endLine": 285,
                  "startColumn": 9,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7dd8418be6be0747bfd1ddd493d92298f98695f46f5b7e6357aa1bb90d395c30",
            "1": "5387ee68.0cd2046c.33fa5dbe.e22980a8.75e62e70.7fda7c5e.90f68396.fde7589e.5387ee68.0cd2046c.33fa5dbe.e22980a8.75e62e70.7fda7c5e.90f68396.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 285,
                            "endLine": 285,
                            "startColumn": 28,
                            "endColumn": 41
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 407,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 314,
                  "endLine": 314,
                  "startColumn": 9,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "06d64e79abfb3084d3f7bba90740ddd1f1a2abf50a94259e37309c53312e77a4",
            "1": "e903222f.e8c02a15.dc5b7594.e22980a8.3cfce590.935029da.0cd958bf.fde7589e.e903222f.e8c02a15.dc5b7594.e22980a8.3cfce590.935029da.0cd958bf.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 314,
                            "endLine": 314,
                            "startColumn": 28,
                            "endColumn": 34
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 407,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 336,
                  "endLine": 336,
                  "startColumn": 9,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8f643761165ee49224a98ee218ba4a0d3aceee25d87825df02db4c692fbd6af5",
            "1": "e903222f.e8c02a15.7ddbc572.e22980a8.bdc892fe.935029da.be04624c.fde7589e.e903222f.e8c02a15.7ddbc572.e22980a8.bdc892fe.935029da.be04624c.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 336,
                            "endLine": 336,
                            "startColumn": 28,
                            "endColumn": 39
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 407,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 346,
                  "endLine": 346,
                  "startColumn": 9,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "62e93473a0c3ab9d2b0f17b393687e3359bcf7b89c9263bc2d07956225a2f5fc",
            "1": "e903222f.e8c02a15.3ec3969a.e22980a8.bdc892fe.935029da.be04624c.fde7589e.e903222f.e8c02a15.3ec3969a.e22980a8.bdc892fe.935029da.be04624c.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 346,
                            "endLine": 346,
                            "startColumn": 28,
                            "endColumn": 39
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 407,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 644,
                  "endLine": 644,
                  "startColumn": 9,
                  "endColumn": 28
                }
              }
            }
          ],
          "fingerprints": {
            "0": "eb0c2be3367b09e19aa1074aa3e5b89d39dc472c9e8b547f193919008b3c5982",
            "1": "5387ee68.1d8af74b.fc7d5400.e22980a8.ccf2352c.a4d5031c.0d23e23f.fde7589e.5387ee68.1d8af74b.fc7d5400.e22980a8.ccf2352c.a4d5031c.0d23e23f.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 644,
                            "endLine": 644,
                            "startColumn": 29,
                            "endColumn": 35
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 407,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 658,
                  "endLine": 658,
                  "startColumn": 9,
                  "endColumn": 28
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0224aa19b469cc37006b4fc2d19a49e861ce35bf769c4fa106d3938d10f6018e",
            "1": "5387ee68.1d8af74b.fc7d5400.e22980a8.ccf2352c.a4d5031c.0d23e23f.fde7589e.5387ee68.1d8af74b.fc7d5400.e22980a8.ccf2352c.a4d5031c.0d23e23f.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 658,
                            "endLine": 658,
                            "startColumn": 29,
                            "endColumn": 42
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 407,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 683,
                  "endLine": 683,
                  "startColumn": 9,
                  "endColumn": 28
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5ca0d4477338e3bc02bb7f6fb1cda9a6adca87ac3855d8a6dd4931842f2cc166",
            "1": "5387ee68.1d8af74b.fc7d5400.e22980a8.ccf2352c.935029da.264fc90e.fde7589e.5387ee68.1d8af74b.fc7d5400.e22980a8.ccf2352c.935029da.264fc90e.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 683,
                            "endLine": 683,
                            "startColumn": 29,
                            "endColumn": 43
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 407,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 708,
                  "endLine": 708,
                  "startColumn": 9,
                  "endColumn": 37
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d6233e1cb4fd872bf7eee92dc25624b0b391eaf27daa32e1e798aa0374d6212e",
            "1": "da846600.e8c02a15.fc7d5400.e22980a8.355ddd66.935029da.fe6a4459.fde7589e.da846600.e8c02a15.fc7d5400.e22980a8.355ddd66.935029da.fe6a4459.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 708,
                            "endLine": 708,
                            "startColumn": 38,
                            "endColumn": 52
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 407,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 737,
                  "endLine": 737,
                  "startColumn": 9,
                  "endColumn": 28
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d3e699c961d8a308e892fa005aa43944d25e24d6c1875ad852e9ab257ac31ea4",
            "1": "5387ee68.b42449cf.fc7d5400.e22980a8.ccf2352c.ea0fbd90.0d23e23f.fde7589e.5387ee68.b42449cf.fc7d5400.e22980a8.ccf2352c.ea0fbd90.0d23e23f.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 737,
                            "endLine": 737,
                            "startColumn": 29,
                            "endColumn": 45
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 407,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1070,
                  "endLine": 1070,
                  "startColumn": 9,
                  "endColumn": 28
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a7a93d1435f864b19c1b4f719a8241ce4aed7699966aa5f974ef8b54dc85594d",
            "1": "5387ee68.1d8af74b.dfe083dc.37b9e068.ccf2352c.86c80f2c.0d23e23f.fde7589e.5387ee68.1d8af74b.dfe083dc.37b9e068.ccf2352c.86c80f2c.0d23e23f.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1070,
                            "endLine": 1070,
                            "startColumn": 29,
                            "endColumn": 42
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 407,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1202,
                  "endLine": 1202,
                  "startColumn": 9,
                  "endColumn": 28
                }
              }
            }
          ],
          "fingerprints": {
            "0": "1ec5c2a6262d15150fd414af94c727f863afa46daafda41c6be8e4dfb55d5d6f",
            "1": "19689298.e8c02a15.fc7d5400.e22980a8.f1d9f854.ca5b76f8.f3117717.fde7589e.19689298.e8c02a15.fc7d5400.e22980a8.f1d9f854.ca5b76f8.f3117717.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1202,
                            "endLine": 1202,
                            "startColumn": 29,
                            "endColumn": 42
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 407,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1403,
                  "endLine": 1403,
                  "startColumn": 9,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b5bc5c85c947c7cb1679121ac7bc40b0b4ceac2bd284234b446e48bf69911e50",
            "1": "e903222f.e8c02a15.fc7d5400.e22980a8.3cfce590.935029da.ab413d37.fde7589e.e903222f.e8c02a15.fc7d5400.e22980a8.3cfce590.935029da.ab413d37.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1403,
                            "endLine": 1403,
                            "startColumn": 28,
                            "endColumn": 38
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 407,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1837,
                  "endLine": 1837,
                  "startColumn": 9,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "cc93633142c56e6aabdb808d95a02a94bc3eb9087a2549b5e52a0e002c232e01",
            "1": "5387ee68.e8c02a15.fc7d5400.e22980a8.3cfce590.935029da.94b7b297.fde7589e.5387ee68.e8c02a15.fc7d5400.e22980a8.3cfce590.935029da.94b7b297.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1837,
                            "endLine": 1837,
                            "startColumn": 28,
                            "endColumn": 38
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 407,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1851,
                  "endLine": 1851,
                  "startColumn": 9,
                  "endColumn": 28
                }
              }
            }
          ],
          "fingerprints": {
            "0": "2c2d68ca827d9d33ff1476151da823a187f7b1e8c569630280c8eceaa92164fb",
            "1": "5387ee68.0cd2046c.fc7d5400.e22980a8.ccf2352c.935029da.0d23e23f.fde7589e.5387ee68.0cd2046c.fc7d5400.e22980a8.ccf2352c.935029da.0d23e23f.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1851,
                            "endLine": 1851,
                            "startColumn": 29,
                            "endColumn": 42
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 407,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1991,
                  "endLine": 1991,
                  "startColumn": 9,
                  "endColumn": 35
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d2a79503ad12f88ee2c1156c44c445d093caf9bffaf11d7cfdcd0c9ab1701705",
            "1": "5387ee68.e8c02a15.fc7d5400.e22980a8.282c3927.935029da.34bd55c9.fde7589e.5387ee68.e8c02a15.fc7d5400.e22980a8.282c3927.935029da.34bd55c9.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1991,
                            "endLine": 1991,
                            "startColumn": 36,
                            "endColumn": 46
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 407,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 2056,
                  "endLine": 2056,
                  "startColumn": 9,
                  "endColumn": 35
                }
              }
            }
          ],
          "fingerprints": {
            "0": "2e7270ae81809f3fecb47aac7fc296077f2a15ecce687a6296f5100c3157c402",
            "1": "5387ee68.e8c02a15.3a56ce2b.e22980a8.282c3927.935029da.0988060d.fde7589e.5387ee68.e8c02a15.3a56ce2b.e22980a8.282c3927.935029da.0988060d.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2056,
                            "endLine": 2056,
                            "startColumn": 36,
                            "endColumn": 46
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 407,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 2091,
                  "endLine": 2091,
                  "startColumn": 9,
                  "endColumn": 35
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0245e05c9fe2c8b30d5356f0bcb51c55b77712c8d332858a76d0281c71349efe",
            "1": "5387ee68.e8c02a15.fc7d5400.e22980a8.282c3927.935029da.0988060d.fde7589e.5387ee68.e8c02a15.fc7d5400.e22980a8.282c3927.935029da.0988060d.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2091,
                            "endLine": 2091,
                            "startColumn": 36,
                            "endColumn": 46
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 407,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 2143,
                  "endLine": 2143,
                  "startColumn": 9,
                  "endColumn": 28
                }
              }
            }
          ],
          "fingerprints": {
            "0": "4f777363be74c1be70f2ff1f3194a9a5f4051d47263f8b850101ff3632faa695",
            "1": "19689298.e8c02a15.fc7d5400.e22980a8.7cb1f7bf.ca5b76f8.f3117717.fde7589e.19689298.e8c02a15.fc7d5400.e22980a8.7cb1f7bf.ca5b76f8.f3117717.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2143,
                            "endLine": 2143,
                            "startColumn": 29,
                            "endColumn": 49
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 407,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 2308,
                  "endLine": 2308,
                  "startColumn": 9,
                  "endColumn": 25
                }
              }
            }
          ],
          "fingerprints": {
            "0": "05a20712e83af334e98634eb0402f1195942002f5caf3fda865eecbd30e0178c",
            "1": "e903222f.e8c02a15.2d7fb774.e22980a8.0bf67f0b.4e1269f6.426e484a.fde7589e.e903222f.e8c02a15.2d7fb774.e22980a8.0bf67f0b.4e1269f6.426e484a.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2308,
                            "endLine": 2308,
                            "startColumn": 26,
                            "endColumn": 36
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 407,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 2350,
                  "endLine": 2350,
                  "startColumn": 9,
                  "endColumn": 25
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d985b9d4c6cfad6d2de52954cabc7b64bbdce8d40248b10b0ff216b0e6ed0c39",
            "1": "e903222f.e8c02a15.2d7fb774.e22980a8.0bf67f0b.4e1269f6.426e484a.fde7589e.e903222f.e8c02a15.2d7fb774.e22980a8.0bf67f0b.4e1269f6.426e484a.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2350,
                            "endLine": 2350,
                            "startColumn": 26,
                            "endColumn": 36
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 407,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 2430,
                  "endLine": 2430,
                  "startColumn": 9,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "71fec865aa9e935fb589d066d676f93fc2bb678b950c1ff6ec439326b4edaf39",
            "1": "6f4f9f93.e8c02a15.33fa5dbe.e22980a8.1ff03637.7fda7c5e.90f68396.fde7589e.6f4f9f93.e8c02a15.33fa5dbe.e22980a8.1ff03637.7fda7c5e.90f68396.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2430,
                            "endLine": 2430,
                            "startColumn": 28,
                            "endColumn": 46
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 407,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 2449,
                  "endLine": 2449,
                  "startColumn": 9,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "cb6366810b8b0f6d186e03031df35c7be417e0cb4be7a25383b4b40133852501",
            "1": "6f4f9f93.e8c02a15.33fa5dbe.e22980a8.1ff03637.7fda7c5e.90f68396.fde7589e.6f4f9f93.e8c02a15.33fa5dbe.e22980a8.1ff03637.7fda7c5e.90f68396.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2449,
                            "endLine": 2449,
                            "startColumn": 28,
                            "endColumn": 46
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 407,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 2616,
                  "endLine": 2616,
                  "startColumn": 9,
                  "endColumn": 28
                }
              }
            }
          ],
          "fingerprints": {
            "0": "760e9d5e92f4ab1bff9888fe766c2494664570de29c70e23705a7dff716ccab3",
            "1": "5387ee68.1d8af74b.2d967550.e22980a8.ccf2352c.935029da.0d23e23f.fde7589e.5387ee68.1d8af74b.2d967550.e22980a8.ccf2352c.935029da.0d23e23f.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2616,
                            "endLine": 2616,
                            "startColumn": 29,
                            "endColumn": 45
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 407,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/org/apache/syncope/core/rest/TaskTestITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 315,
                  "endLine": 315,
                  "startColumn": 9,
                  "endColumn": 29
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7bde09a726e32f5be4eb4d047e19e155c33b19e979922607c725b8681b54bdcf",
            "1": "e903222f.e8c02a15.fc7d5400.e22980a8.f1d9f854.dac65a69.94b7b297.fde7589e.e903222f.e8c02a15.fc7d5400.e22980a8.f1d9f854.dac65a69.94b7b297.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/org/apache/syncope/core/rest/TaskTestITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 315,
                            "endLine": 315,
                            "startColumn": 30,
                            "endColumn": 43
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 407,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/org/apache/syncope/core/rest/TaskTestITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 646,
                  "endLine": 646,
                  "startColumn": 9,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "1d37c7723ee39735dfd2351641bc7ea77c3ede0f88c98dc54ca55276e514f18f",
            "1": "e903222f.e8c02a15.fc7d5400.e22980a8.3cfce590.935029da.94b7b297.fde7589e.e903222f.e8c02a15.fc7d5400.e22980a8.3cfce590.935029da.94b7b297.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/org/apache/syncope/core/rest/TaskTestITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 646,
                            "endLine": 646,
                            "startColumn": 28,
                            "endColumn": 41
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 407,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/org/apache/syncope/core/rest/TaskTestITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1226,
                  "endLine": 1226,
                  "startColumn": 9,
                  "endColumn": 25
                }
              }
            }
          ],
          "fingerprints": {
            "0": "2267aa02cd569510aa18f3fcf999fdd457a27560745a4aee88a22f092e02ac3f",
            "1": "6cdf77a6.e8c02a15.2d7fb774.e22980a8.0bf67f0b.4e1269f6.eb64cfae.fde7589e.6cdf77a6.e8c02a15.2d7fb774.e22980a8.0bf67f0b.4e1269f6.eb64cfae.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/org/apache/syncope/core/rest/TaskTestITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1226,
                            "endLine": 1226,
                            "startColumn": 26,
                            "endColumn": 36
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 407,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/org/apache/syncope/core/rest/TaskTestITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1280,
                  "endLine": 1280,
                  "startColumn": 9,
                  "endColumn": 25
                }
              }
            }
          ],
          "fingerprints": {
            "0": "57d31171c01a4bcb3fe2dce3bc2192173a42f2ef3eafc5e2e57d140b0c6d60f8",
            "1": "e903222f.e8c02a15.2d7fb774.e22980a8.0bf67f0b.4e1269f6.2e7c22d1.fde7589e.e903222f.e8c02a15.2d7fb774.e22980a8.0bf67f0b.4e1269f6.2e7c22d1.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/org/apache/syncope/core/rest/TaskTestITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1280,
                            "endLine": 1280,
                            "startColumn": 26,
                            "endColumn": 36
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 407,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/org/apache/syncope/core/rest/TaskTestITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1289,
                  "endLine": 1289,
                  "startColumn": 9,
                  "endColumn": 28
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b27309eae6917345f43430e8f57f79c5c9d48fc5e48da7e7dca58ef424d7ca1f",
            "1": "5387ee68.1d8af74b.26c278a8.e22980a8.ccf2352c.935029da.0d23e23f.fde7589e.5387ee68.1d8af74b.26c278a8.e22980a8.ccf2352c.935029da.0d23e23f.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/org/apache/syncope/core/rest/TaskTestITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1289,
                            "endLine": 1289,
                            "startColumn": 29,
                            "endColumn": 43
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 407,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/org/apache/syncope/core/rest/VirAttrTestITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 320,
                  "endLine": 320,
                  "startColumn": 13,
                  "endColumn": 32
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7ab51f25aded43a1a9565a6a1a5b53807c1e9a4d1b3dbbc29d516a795b81ab90",
            "1": "5387ee68.1d8af74b.fc7d5400.e22980a8.ccf2352c.935029da.bae646e8.fde7589e.5387ee68.1d8af74b.fc7d5400.e22980a8.ccf2352c.935029da.bae646e8.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/org/apache/syncope/core/rest/VirAttrTestITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 320,
                            "endLine": 320,
                            "startColumn": 33,
                            "endColumn": 44
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 407,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/org/apache/syncope/core/rest/AuthenticationTestITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 339,
                  "endLine": 339,
                  "startColumn": 9,
                  "endColumn": 31
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b49acf1e53bca8f607955230e78f06a07fd24d2e3806552f8adaf71d3a202ae0",
            "1": "e903222f.8391b8ac.fc7d5400.e22980a8.f1d9f854.935029da.a22f7410.fde7589e.e903222f.8391b8ac.fc7d5400.e22980a8.f1d9f854.935029da.a22f7410.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/org/apache/syncope/core/rest/AuthenticationTestITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 339,
                            "endLine": 339,
                            "startColumn": 32,
                            "endColumn": 42
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 407,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/org/apache/syncope/core/rest/AuthenticationTestITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 404,
                  "endLine": 404,
                  "startColumn": 9,
                  "endColumn": 25
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5e7f9d5615410564b6338c1775198e8175b6787f2f90f0be0d2758c9d18eaa1d",
            "1": "e903222f.e8c02a15.7ddbc572.e22980a8.0bf67f0b.d73ac7e8.be04624c.fde7589e.e903222f.e8c02a15.7ddbc572.e22980a8.0bf67f0b.d73ac7e8.be04624c.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/org/apache/syncope/core/rest/AuthenticationTestITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 404,
                            "endLine": 404,
                            "startColumn": 26,
                            "endColumn": 37
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 407,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/org/apache/syncope/core/rest/AuthenticationTestITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 418,
                  "endLine": 418,
                  "startColumn": 9,
                  "endColumn": 28
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7e186861d24e52bf2969dca4cb32d969100798cdbdf7907777cc324fc3647699",
            "1": "5387ee68.1d8af74b.fc7d5400.e22980a8.ccf2352c.d73ac7e8.0d23e23f.fde7589e.5387ee68.1d8af74b.fc7d5400.e22980a8.ccf2352c.d73ac7e8.0d23e23f.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/org/apache/syncope/core/rest/AuthenticationTestITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 418,
                            "endLine": 418,
                            "startColumn": 29,
                            "endColumn": 40
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 407,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/org/apache/syncope/core/notification/NotificationTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 173,
                  "endLine": 173,
                  "startColumn": 39,
                  "endColumn": 43
                }
              }
            }
          ],
          "fingerprints": {
            "0": "dcb749227d2045e9e80e2725d768a79352b78397af650e6a5f61b60479adc0b4",
            "1": "19689298.83dbfe52.65833a91.6c52ae28.4140d716.c99ed2f3.7986314f.203bd690.19689298.2256d873.65833a91.6c52ae28.4140d716.c99ed2f3.7986314f.93974b55"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/org/apache/syncope/core/notification/NotificationTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 173,
                            "endLine": 173,
                            "startColumn": 55,
                            "endColumn": 70
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 407,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/org/apache/syncope/core/rest/ExceptionMapperTestITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 73,
                  "endLine": 73,
                  "startColumn": 9,
                  "endColumn": 29
                }
              }
            }
          ],
          "fingerprints": {
            "0": "cc93808713f3d36d61f211ee69fcb014a2003cec07332564b66b82cf3ce26d88",
            "1": "1bd3b914.e8c02a15.fc7d5400.e22980a8.f1d9f854.935029da.94b7b297.fde7589e.1bd3b914.e8c02a15.fc7d5400.e22980a8.f1d9f854.935029da.94b7b297.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/org/apache/syncope/core/rest/ExceptionMapperTestITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 73,
                            "endLine": 73,
                            "startColumn": 30,
                            "endColumn": 40
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 407,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/org/apache/syncope/core/rest/ExceptionMapperTestITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 86,
                  "endLine": 86,
                  "startColumn": 9,
                  "endColumn": 29
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f03901b56c13017dc92ad3170b3d293033d24e7cada097788cb69b007f4fbec4",
            "1": "5387ee68.e8c02a15.fc7d5400.e22980a8.924e6d00.935029da.94b7b297.fde7589e.5387ee68.e8c02a15.fc7d5400.e22980a8.924e6d00.935029da.94b7b297.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/org/apache/syncope/core/rest/ExceptionMapperTestITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 86,
                            "endLine": 86,
                            "startColumn": 30,
                            "endColumn": 40
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 407,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/org/apache/syncope/core/rest/ExceptionMapperTestITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 126,
                  "endLine": 126,
                  "startColumn": 9,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6192a119c5753a85de1be820f11c6cb1c76539ab7c2696e67d5c6ea1de0cbe05",
            "1": "5387ee68.e8c02a15.fc7d5400.e22980a8.3cfce590.ada8aa50.13b08e16.fde7589e.5387ee68.e8c02a15.fc7d5400.e22980a8.3cfce590.ada8aa50.13b08e16.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/org/apache/syncope/core/rest/ExceptionMapperTestITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 126,
                            "endLine": 126,
                            "startColumn": 28,
                            "endColumn": 38
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 407,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/org/apache/syncope/core/rest/UserWorkflowTestITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 194,
                  "endLine": 194,
                  "startColumn": 9,
                  "endColumn": 28
                }
              }
            }
          ],
          "fingerprints": {
            "0": "39fa010255ce9ca684d28d4faa33cf80bc8ffd99e94f38c9e20c9cc66ab95dfe",
            "1": "5387ee68.1d8af74b.85c1bf78.e22980a8.ccf2352c.935029da.0d23e23f.fde7589e.5387ee68.1d8af74b.85c1bf78.e22980a8.ccf2352c.935029da.0d23e23f.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/org/apache/syncope/core/rest/UserWorkflowTestITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 194,
                            "endLine": 194,
                            "startColumn": 29,
                            "endColumn": 49
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 407,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/org/apache/syncope/core/rest/UserSelfTestITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 183,
                  "endLine": 183,
                  "startColumn": 9,
                  "endColumn": 28
                }
              }
            }
          ],
          "fingerprints": {
            "0": "cfdb99c2952e371f0cdf42f925f91614bf4a5c0a0aff8500245ec7fae9cdc3cd",
            "1": "5387ee68.17ae5774.fc7d5400.e22980a8.628196cc.935029da.640a442c.fde7589e.5387ee68.17ae5774.fc7d5400.e22980a8.628196cc.935029da.640a442c.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/org/apache/syncope/core/rest/UserSelfTestITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 183,
                            "endLine": 183,
                            "startColumn": 29,
                            "endColumn": 45
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 407,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/org/apache/syncope/core/persistence/dao/UserTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 141,
                  "endLine": 141,
                  "startColumn": 9,
                  "endColumn": 25
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ae3c4a6d2abfdbdc478754943385da1fff3e98ca5f3cad646c31d7d2acdab3db",
            "1": "5387ee68.2825d4a6.ef26b073.e22980a8.0bf67f0b.935029da.0cd958bf.fde7589e.5387ee68.2825d4a6.ef26b073.e22980a8.0bf67f0b.935029da.0cd958bf.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/org/apache/syncope/core/persistence/dao/UserTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 141,
                            "endLine": 141,
                            "startColumn": 26,
                            "endColumn": 32
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 407,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/org/apache/syncope/core/persistence/dao/UserTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 151,
                  "endLine": 151,
                  "startColumn": 9,
                  "endColumn": 25
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c831da8e43cf26ad652688b6556ab161947c627b7b2cc98157b8e27d09df753b",
            "1": "5387ee68.2825d4a6.ef26b073.e22980a8.0bf67f0b.935029da.94b7b297.fde7589e.5387ee68.2825d4a6.ef26b073.e22980a8.0bf67f0b.935029da.94b7b297.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/org/apache/syncope/core/persistence/dao/UserTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 151,
                            "endLine": 151,
                            "startColumn": 26,
                            "endColumn": 36
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 407,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/org/apache/syncope/core/persistence/dao/UserTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 186,
                  "endLine": 186,
                  "startColumn": 9,
                  "endColumn": 25
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8e81122ab8e250def0cc65ca78ecdd444c18bc535c8c19a1b78b39a39b11fc70",
            "1": "dfacb19b.e8c02a15.fc7d5400.e22980a8.0bf67f0b.935029da.055df7b2.fde7589e.dfacb19b.e8c02a15.fc7d5400.e22980a8.0bf67f0b.935029da.055df7b2.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/org/apache/syncope/core/persistence/dao/UserTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 186,
                            "endLine": 186,
                            "startColumn": 26,
                            "endColumn": 36
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 407,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/InsecurelyGeneratedPassword",
          "ruleIndex": 1,
          "level": "error",
          "message": {
            "text": "An insecure random number generator is used to create a password (the random value flows from org.apache.syncope.core.util.SecureRandomUtil.generateRandomPassword). Consider using java.security.SecureRandom to generate strong passwords.",
            "markdown": "An insecure random number generator is used to create a password (the random value {0} from {1}). Consider using java.security.SecureRandom to generate strong passwords.",
            "arguments": [
              "[flows](0),(1),(2)",
              "[org.apache.syncope.core.util.SecureRandomUtil.generateRandomPassword](3)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/main/java/org/apache/syncope/core/connid/ConnObjectUtil.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 199,
                  "endLine": 199,
                  "startColumn": 13,
                  "endColumn": 31
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ef8e0bdf98c47877412a41b36a8892e4a1d52592dfaeeb220f38b747c5045783",
            "1": "5387ee68.e8c02a15.71a71d19.e22980a8.75e62e70.7fda7c5e.5cd65e98.fde7589e.5387ee68.e3699e8a.71a71d19.9d61b745.75e62e70.7fda7c5e.62adb608.fde7589e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/org/apache/syncope/core/connid/ConnObjectUtil.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 199,
                            "endLine": 199,
                            "startColumn": 32,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/org/apache/syncope/core/connid/ConnObjectUtil.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 197,
                            "endLine": 197,
                            "startColumn": 17,
                            "endColumn": 71
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/org/apache/syncope/core/connid/ConnObjectUtil.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 197,
                            "endLine": 197,
                            "startColumn": 28,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/org/apache/syncope/core/connid/ConnObjectUtil.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 197,
                            "endLine": 197,
                            "startColumn": 28,
                            "endColumn": 67
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 751,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/NonCryptoHardcodedSecret",
          "ruleIndex": 2,
          "level": "error",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found hardcoded secret.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found hardcoded {0}.",
            "arguments": [
              "[secret](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/main/java/org/apache/syncope/core/util/Encryptor.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53,
                  "startColumn": 54,
                  "endColumn": 80
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8467adef4b4342c60d77c42ea579f11769c4aebefd6d1ce15b9af9937b2a6df9",
            "1": "876135de.f19c7705.e1deb58b.de031890.8b2d3351.7fda7c5e.7351b430.fc342a9e.19689298.f19c7705.e1deb58b.de031890.2ac85f8b.7fda7c5e.d112323a.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/org/apache/syncope/core/util/Encryptor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 53,
                            "endLine": 53,
                            "startColumn": 54,
                            "endColumn": 80
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 801,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedSecret/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Hardcoded value string is used as a cipher key. Generate the value with a cryptographically strong random number generator such as java.security.SecureRandom instead.",
            "markdown": "Hardcoded value {0} is used as a {1}. Generate the value with a cryptographically strong random number generator such as java.security.SecureRandom instead.",
            "arguments": [
              "[string](0)",
              "[cipher key](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/org/apache/syncope/core/rest/SchemaTestITCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 128,
                  "endLine": 128,
                  "startColumn": 9,
                  "endColumn": 30
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d36b9d6078bf5428202a1480168cf381bf07e9ed0f871bc341057295417d3873",
            "1": "ac4e7c8b.2a259447.d8761960.e22980a8.f1d9f854.8f7c1ec1.5d8964bb.279e7079.d7976c2d.2a259447.d8761960.863309c8.3e82576e.2f4e1548.5d8964bb.279e7079"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/org/apache/syncope/core/rest/SchemaTestITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 128,
                            "endLine": 128,
                            "startColumn": 31,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/org/apache/syncope/core/rest/SchemaTestITCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 128,
                            "endLine": 128,
                            "startColumn": 9,
                            "endColumn": 30
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/ReturnsPassword",
          "ruleIndex": 4,
          "level": "warning",
          "message": {
            "text": "An attacker might be able to detect the value of the password due to the exposure of comparison timing. When the functions Arrays.equals() or String.equals() are called, they will exit earlier if fewer bytes are matched. Use password encoder such as BCrypt for comparing passwords.",
            "markdown": "An attacker might be able to detect the value of the password due to the exposure of comparison timing. When the functions Arrays.equals() or String.equals() are called, they will exit earlier if fewer bytes are matched. Use password encoder such as BCrypt for comparing passwords.",
            "arguments": []
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "common/src/main/java/org/apache/syncope/common/util/AttributableOperations.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 229,
                  "endLine": 229,
                  "startColumn": 21,
                  "endColumn": 41
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0e4662a1ec8982d2b6d1b7c8a8cb0c8b87719fb1ffeac7f6af11275726e3ff09",
            "1": "524d7e3a.02e6f4cd.f0ccf3e9.9998adc9.dd06b926.e4d7b7ac.53690dc9.121c2b24.524d7e3a.02e6f4cd.f0ccf3e9.9998adc9.dd06b926.e4d7b7ac.53690dc9.b732d57d"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "common/src/main/java/org/apache/syncope/common/util/AttributableOperations.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 229,
                            "endLine": 229,
                            "startColumn": 21,
                            "endColumn": 41
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 501,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/InsecureHash",
          "ruleIndex": 5,
          "level": "warning",
          "message": {
            "text": "The SHA-1 hash (used in java.security.MessageDigest.getInstance) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The {0} hash (used in {1}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[SHA-1](0)",
              "[java.security.MessageDigest.getInstance](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "installer/src/main/java/org/apache/syncope/installer/utilities/PasswordGenerator.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 32,
                  "endLine": 32,
                  "startColumn": 41,
                  "endColumn": 66
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5cd3eb5d3e6ff78242c905ea0c5e405ffc930ebbc822cda2da581a6af3553525",
            "1": "19689298.7797192f.09fc77c2.841706af.408180c7.c80ba7fb.2a1a68a1.54d46e25.19689298.7797192f.09fc77c2.841706af.408180c7.c80ba7fb.df7e59ba.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "installer/src/main/java/org/apache/syncope/installer/utilities/PasswordGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 32,
                            "endLine": 32,
                            "startColumn": 67,
                            "endColumn": 74
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "installer/src/main/java/org/apache/syncope/installer/utilities/PasswordGenerator.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 32,
                            "endLine": 32,
                            "startColumn": 41,
                            "endColumn": 66
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 501,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 6,
          "level": "error",
          "message": {
            "text": "Unsanitized input from a zip file flows into exists, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to bypass the logic of the application in the conditional expression.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to bypass the logic of the application in the {3}.",
            "arguments": [
              "[a zip file](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9)",
              "[exists](10)",
              "[conditional expression](11)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build-tools/src/main/java/org/apache/syncope/buildtools/JarSchemaLdifExtractor.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 154,
                  "endLine": 154,
                  "startColumn": 17,
                  "endColumn": 35
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6de29f331de63c42c79e089f9d88412b1587083c8fe62a900944f0788d4bc50c",
            "1": "19689298.7797192f.fc7d5400.e22980a8.408180c7.24dcd476.a204df5d.54d46e25.e1d7cd7c.2329d1ab.0e5f0313.747886f1.a0110e3e.3d094664.8e161874.5b4ae63a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "build-tools/src/main/java/org/apache/syncope/buildtools/JarSchemaLdifExtractor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 130,
                            "endLine": 130,
                            "startColumn": 28,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "build-tools/src/main/java/org/apache/syncope/buildtools/JarSchemaLdifExtractor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 130,
                            "endLine": 130,
                            "startColumn": 28,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "build-tools/src/main/java/org/apache/syncope/buildtools/JarSchemaLdifExtractor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 130,
                            "endLine": 130,
                            "startColumn": 17,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "build-tools/src/main/java/org/apache/syncope/buildtools/JarSchemaLdifExtractor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 135,
                            "endLine": 135,
                            "startColumn": 16,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "build-tools/src/main/java/org/apache/syncope/buildtools/JarSchemaLdifExtractor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 103,
                            "endLine": 103,
                            "startColumn": 29,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "build-tools/src/main/java/org/apache/syncope/buildtools/JarSchemaLdifExtractor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 103,
                            "endLine": 103,
                            "startColumn": 21,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "build-tools/src/main/java/org/apache/syncope/buildtools/JarSchemaLdifExtractor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 144,
                            "endLine": 144,
                            "startColumn": 33,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "build-tools/src/main/java/org/apache/syncope/buildtools/JarSchemaLdifExtractor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 149,
                            "endLine": 149,
                            "startColumn": 42,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "build-tools/src/main/java/org/apache/syncope/buildtools/JarSchemaLdifExtractor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 149,
                            "endLine": 149,
                            "startColumn": 24,
                            "endColumn": 73
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "build-tools/src/main/java/org/apache/syncope/buildtools/JarSchemaLdifExtractor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 154,
                            "endLine": 154,
                            "startColumn": 17,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "build-tools/src/main/java/org/apache/syncope/buildtools/JarSchemaLdifExtractor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 154,
                            "endLine": 154,
                            "startColumn": 17,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "build-tools/src/main/java/org/apache/syncope/buildtools/JarSchemaLdifExtractor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 154,
                            "endLine": 154,
                            "startColumn": 13,
                            "endColumn": 37
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 801,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 6,
          "level": "error",
          "message": {
            "text": "Unsanitized input from a zip file flows into mkdirs, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to manipulate arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to manipulate arbitrary files.",
            "arguments": [
              "[a zip file](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12)",
              "[mkdirs](13)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build-tools/src/main/java/org/apache/syncope/buildtools/JarSchemaLdifExtractor.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 158,
                  "endLine": 158,
                  "startColumn": 59,
                  "endColumn": 93
                }
              }
            }
          ],
          "fingerprints": {
            "0": "66c4cce6fd5407b638a9f0d0ecbb5cea680936c02ada5ce0cd7b70575203d5e5",
            "1": "daf8aa0f.97acdc08.8828b72d.9998adc9.dd06b926.41d8b89f.a204df5d.f82433aa.e1d7cd7c.2329d1ab.0e5f0313.747886f1.a0110e3e.3d094664.8e161874.5b4ae63a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "build-tools/src/main/java/org/apache/syncope/buildtools/JarSchemaLdifExtractor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 130,
                            "endLine": 130,
                            "startColumn": 28,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "build-tools/src/main/java/org/apache/syncope/buildtools/JarSchemaLdifExtractor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 130,
                            "endLine": 130,
                            "startColumn": 28,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "build-tools/src/main/java/org/apache/syncope/buildtools/JarSchemaLdifExtractor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 130,
                            "endLine": 130,
                            "startColumn": 17,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "build-tools/src/main/java/org/apache/syncope/buildtools/JarSchemaLdifExtractor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 135,
                            "endLine": 135,
                            "startColumn": 16,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "build-tools/src/main/java/org/apache/syncope/buildtools/JarSchemaLdifExtractor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 103,
                            "endLine": 103,
                            "startColumn": 29,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "build-tools/src/main/java/org/apache/syncope/buildtools/JarSchemaLdifExtractor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 103,
                            "endLine": 103,
                            "startColumn": 21,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "build-tools/src/main/java/org/apache/syncope/buildtools/JarSchemaLdifExtractor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 144,
                            "endLine": 144,
                            "startColumn": 33,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "build-tools/src/main/java/org/apache/syncope/buildtools/JarSchemaLdifExtractor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 149,
                            "endLine": 149,
                            "startColumn": 42,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "build-tools/src/main/java/org/apache/syncope/buildtools/JarSchemaLdifExtractor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 149,
                            "endLine": 149,
                            "startColumn": 24,
                            "endColumn": 73
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "build-tools/src/main/java/org/apache/syncope/buildtools/JarSchemaLdifExtractor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 154,
                            "endLine": 154,
                            "startColumn": 17,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "build-tools/src/main/java/org/apache/syncope/buildtools/JarSchemaLdifExtractor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 158,
                            "endLine": 158,
                            "startColumn": 18,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "build-tools/src/main/java/org/apache/syncope/buildtools/JarSchemaLdifExtractor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 158,
                            "endLine": 158,
                            "startColumn": 59,
                            "endColumn": 70
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "build-tools/src/main/java/org/apache/syncope/buildtools/JarSchemaLdifExtractor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 158,
                            "endLine": 158,
                            "startColumn": 59,
                            "endColumn": 84
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "build-tools/src/main/java/org/apache/syncope/buildtools/JarSchemaLdifExtractor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 158,
                            "endLine": 158,
                            "startColumn": 59,
                            "endColumn": 93
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 801,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 6,
          "level": "error",
          "message": {
            "text": "Unsanitized input from a zip file flows into java.io.FileOutputStream, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "arguments": [
              "[a zip file](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12)",
              "[java.io.FileOutputStream](13)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build-tools/src/main/java/org/apache/syncope/buildtools/JarSchemaLdifExtractor.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 163,
                  "endLine": 163,
                  "startColumn": 46,
                  "endColumn": 62
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7ee7af922b242fa52ace5d343086081dcb763b7660ba14627e74e46ac8a99581",
            "1": "5266f9a2.9bb84c11.8828b72d.c2655490.b636048f.41d8b89f.a204df5d.f82433aa.e1d7cd7c.2329d1ab.0e5f0313.747886f1.a0110e3e.3d094664.8e161874.5b4ae63a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "build-tools/src/main/java/org/apache/syncope/buildtools/JarSchemaLdifExtractor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 130,
                            "endLine": 130,
                            "startColumn": 28,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "build-tools/src/main/java/org/apache/syncope/buildtools/JarSchemaLdifExtractor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 130,
                            "endLine": 130,
                            "startColumn": 28,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "build-tools/src/main/java/org/apache/syncope/buildtools/JarSchemaLdifExtractor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 130,
                            "endLine": 130,
                            "startColumn": 17,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "build-tools/src/main/java/org/apache/syncope/buildtools/JarSchemaLdifExtractor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 135,
                            "endLine": 135,
                            "startColumn": 16,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "build-tools/src/main/java/org/apache/syncope/buildtools/JarSchemaLdifExtractor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 103,
                            "endLine": 103,
                            "startColumn": 29,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "build-tools/src/main/java/org/apache/syncope/buildtools/JarSchemaLdifExtractor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 103,
                            "endLine": 103,
                            "startColumn": 21,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "build-tools/src/main/java/org/apache/syncope/buildtools/JarSchemaLdifExtractor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 144,
                            "endLine": 144,
                            "startColumn": 33,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "build-tools/src/main/java/org/apache/syncope/buildtools/JarSchemaLdifExtractor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 149,
                            "endLine": 149,
                            "startColumn": 42,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "build-tools/src/main/java/org/apache/syncope/buildtools/JarSchemaLdifExtractor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 149,
                            "endLine": 149,
                            "startColumn": 24,
                            "endColumn": 73
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "build-tools/src/main/java/org/apache/syncope/buildtools/JarSchemaLdifExtractor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 154,
                            "endLine": 154,
                            "startColumn": 17,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "build-tools/src/main/java/org/apache/syncope/buildtools/JarSchemaLdifExtractor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 158,
                            "endLine": 158,
                            "startColumn": 18,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "build-tools/src/main/java/org/apache/syncope/buildtools/JarSchemaLdifExtractor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 158,
                            "endLine": 158,
                            "startColumn": 59,
                            "endColumn": 70
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "build-tools/src/main/java/org/apache/syncope/buildtools/JarSchemaLdifExtractor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 163,
                            "endLine": 163,
                            "startColumn": 63,
                            "endColumn": 74
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "build-tools/src/main/java/org/apache/syncope/buildtools/JarSchemaLdifExtractor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 163,
                            "endLine": 163,
                            "startColumn": 46,
                            "endColumn": 62
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 801,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword",
          "ruleIndex": 7,
          "level": "warning",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/main/java/org/apache/syncope/core/sync/impl/AbstractSyncJob.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 344,
                  "endLine": 344,
                  "startColumn": 45,
                  "endColumn": 49
                }
              }
            }
          ],
          "fingerprints": {
            "0": "1a06ca7b2442a903c0faea29790bb8795df2eb5a4a3a5daca7134aeeabe04a21",
            "1": "19689298.83dbfe52.65833a91.6c52ae28.68003c41.c99ed2f3.7986314f.ac8386d7.19689298.83dbfe52.65833a91.6c52ae28.68003c41.c99ed2f3.7986314f.ac8386d7"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/org/apache/syncope/core/sync/impl/AbstractSyncJob.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 344,
                            "endLine": 344,
                            "startColumn": 59,
                            "endColumn": 74
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword",
          "ruleIndex": 7,
          "level": "warning",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/main/java/org/apache/syncope/core/sync/impl/AbstractSyncJob.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 347,
                  "endLine": 347,
                  "startColumn": 21,
                  "endColumn": 56
                }
              }
            }
          ],
          "fingerprints": {
            "0": "cbf6590424713b6cb0ef5cfd56f335cb61081d70386bda9abd04bb9516a3ad66",
            "1": "fe69b77a.41d4ee69.750d773f.1bc7f334.d10418c5.34428aef.9959382a.203bd690.fe69b77a.41d4ee69.750d773f.1bc7f334.d10418c5.0a7f0123.7986314f.203bd690"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/org/apache/syncope/core/sync/impl/AbstractSyncJob.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 347,
                            "endLine": 347,
                            "startColumn": 70,
                            "endColumn": 85
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword",
          "ruleIndex": 7,
          "level": "warning",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/main/java/org/apache/syncope/core/security/SyncopeUserDetailsService.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 101,
                  "endLine": 101,
                  "startColumn": 20,
                  "endColumn": 24
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6cb9b7170fe9e5c4fec703d4ce04a29b4bbd9b8440d4060acb6f3b8071fbb4f2",
            "1": "0120c889.5e44bcc3.fc7d5400.e22980a8.68003c41.06efd86c.3b1ca363.1d874c72.0120c889.1b0fc519.636c9be1.e22980a8.68003c41.06efd86c.3b1ca363.93974b55"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/org/apache/syncope/core/security/SyncopeUserDetailsService.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 101,
                            "endLine": 101,
                            "startColumn": 35,
                            "endColumn": 59
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 501,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword",
          "ruleIndex": 7,
          "level": "warning",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/main/java/org/apache/syncope/core/quartz/RoleMemberProvisionTaskJob.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 96,
                  "endLine": 96,
                  "startColumn": 45,
                  "endColumn": 49
                }
              }
            }
          ],
          "fingerprints": {
            "0": "995c91aea278b4b904b0b388562e0065991685e00688105b0a19a8d05ed171ee",
            "1": "19689298.83dbfe52.65833a91.6c52ae28.68003c41.c99ed2f3.7986314f.ac8386d7.19689298.83dbfe52.65833a91.6c52ae28.68003c41.c99ed2f3.7986314f.ac8386d7"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/org/apache/syncope/core/quartz/RoleMemberProvisionTaskJob.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 96,
                            "endLine": 96,
                            "startColumn": 59,
                            "endColumn": 74
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword",
          "ruleIndex": 7,
          "level": "warning",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/main/java/org/apache/syncope/core/quartz/RoleMemberProvisionTaskJob.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 99,
                  "endLine": 99,
                  "startColumn": 21,
                  "endColumn": 56
                }
              }
            }
          ],
          "fingerprints": {
            "0": "782666f6f04d5b0ed6e2e66bee620e21c3104cd334e838208ddb77cb162de4de",
            "1": "fe69b77a.41d4ee69.750d773f.1bc7f334.d10418c5.34428aef.9959382a.203bd690.fe69b77a.41d4ee69.750d773f.1bc7f334.d10418c5.0a7f0123.7986314f.203bd690"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/org/apache/syncope/core/quartz/RoleMemberProvisionTaskJob.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 99,
                            "endLine": 99,
                            "startColumn": 70,
                            "endColumn": 85
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/InsecureRandomData",
          "ruleIndex": 8,
          "level": "error",
          "message": {
            "text": "Insecure random data (org.apache.commons.lang3.RandomStringUtils.random) flows into generated password. Use SecureRandom to generate passwords",
            "markdown": "Insecure random data ({0}) {1} into generated password. Use SecureRandom to generate passwords",
            "arguments": [
              "[org.apache.commons.lang3.RandomStringUtils.random](0)",
              "[flows](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/main/java/org/apache/syncope/core/util/SecureRandomUtil.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 29,
                  "endLine": 29,
                  "startColumn": 26,
                  "endColumn": 48
                }
              }
            }
          ],
          "fingerprints": {
            "0": "717866fa76428366f5c0281bcea214913d4251bf6318ab250f3b4df665403491",
            "1": "88c09604.dd05ec30.a224ef38.de031890.f0e1baa5.ce109560.5b1ccecb.1d874c72.88c09604.dd05ec30.a224ef38.de031890.f0e1baa5.ce109560.5b1ccecb.1d874c72"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/org/apache/syncope/core/util/SecureRandomUtil.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 30,
                            "endLine": 30,
                            "startColumn": 16,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/org/apache/syncope/core/util/SecureRandomUtil.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 30,
                            "endLine": 30,
                            "startColumn": 16,
                            "endColumn": 40
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 751,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/XXE",
          "ruleIndex": 9,
          "level": "error",
          "message": {
            "text": "Unsanitized input from a local file flows into parse, which allows expansion of external entity references. This may result in a XXE attack leading to the disclosure of confidential data or denial of service.",
            "markdown": "Unsanitized input from a local file {0} into {1}, which allows expansion of external entity references. This may result in a XXE attack leading to the disclosure of confidential data or denial of service.",
            "arguments": [
              "[flows](0)",
              "[parse](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "installer/src/main/java/org/apache/syncope/installer/utilities/MavenUtils.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 195,
                  "endLine": 195,
                  "startColumn": 39,
                  "endColumn": 52
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8944b5dadcaf864faa8dd9563796d6cd0a52d62918291ff23a2a0123f0d42bbf",
            "1": "19689298.02457e3d.159549fe.8341007e.8b3339c8.2f4e1548.e865951e.95eb89ca.19689298.6b6c8f02.6e99755f.8341007e.6f8c11e9.c46d1f9b.7f7327a4.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "installer/src/main/java/org/apache/syncope/installer/utilities/MavenUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 195,
                            "endLine": 195,
                            "startColumn": 53,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "installer/src/main/java/org/apache/syncope/installer/utilities/MavenUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 195,
                            "endLine": 195,
                            "startColumn": 39,
                            "endColumn": 52
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 801,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/XXE",
          "ruleIndex": 9,
          "level": "error",
          "message": {
            "text": "Unsanitized input from a local file flows into transform, which allows expansion of external entity references. This may result in a XXE attack leading to the disclosure of confidential data or denial of service.",
            "markdown": "Unsanitized input from a local file {0} into {1}, which allows expansion of external entity references. This may result in a XXE attack leading to the disclosure of confidential data or denial of service.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19)",
              "[transform](20)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "installer/src/main/java/org/apache/syncope/installer/utilities/MavenUtils.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 230,
                  "endLine": 230,
                  "startColumn": 13,
                  "endColumn": 37
                }
              }
            }
          ],
          "fingerprints": {
            "0": "9cfa31002673fab0e2eab6106afe4ec6dc3bc7177b9a9db15be2351a78be181c",
            "1": "35d8f6a6.1cbd3ff4.9e3bc03d.6c52ae28.4a9c8cbc.2517b96f.df7e59ba.54d46e25.f6c2e330.9bdc841c.71a71d19.8341007e.96ef8110.dd62fee0.5c59e3fc.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "installer/src/main/java/org/apache/syncope/installer/utilities/MavenUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 195,
                            "endLine": 195,
                            "startColumn": 53,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "installer/src/main/java/org/apache/syncope/installer/utilities/MavenUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 195,
                            "endLine": 195,
                            "startColumn": 39,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "installer/src/main/java/org/apache/syncope/installer/utilities/MavenUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 195,
                            "endLine": 195,
                            "startColumn": 28,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "installer/src/main/java/org/apache/syncope/installer/utilities/MavenUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 197,
                            "endLine": 197,
                            "startColumn": 47,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "installer/src/main/java/org/apache/syncope/installer/utilities/MavenUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 199,
                            "endLine": 199,
                            "startColumn": 35,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "installer/src/main/java/org/apache/syncope/installer/utilities/MavenUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 201,
                            "endLine": 201,
                            "startColumn": 32,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "installer/src/main/java/org/apache/syncope/installer/utilities/MavenUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 202,
                            "endLine": 202,
                            "startColumn": 36,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "installer/src/main/java/org/apache/syncope/installer/utilities/MavenUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 203,
                            "endLine": 203,
                            "startColumn": 38,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "installer/src/main/java/org/apache/syncope/installer/utilities/MavenUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 204,
                            "endLine": 204,
                            "startColumn": 34,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "installer/src/main/java/org/apache/syncope/installer/utilities/MavenUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 205,
                            "endLine": 205,
                            "startColumn": 34,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "installer/src/main/java/org/apache/syncope/installer/utilities/MavenUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 206,
                            "endLine": 206,
                            "startColumn": 43,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "installer/src/main/java/org/apache/syncope/installer/utilities/MavenUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 207,
                            "endLine": 207,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "installer/src/main/java/org/apache/syncope/installer/utilities/MavenUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 208,
                            "endLine": 208,
                            "startColumn": 32,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "installer/src/main/java/org/apache/syncope/installer/utilities/MavenUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 209,
                            "endLine": 209,
                            "startColumn": 34,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "installer/src/main/java/org/apache/syncope/installer/utilities/MavenUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 210,
                            "endLine": 210,
                            "startColumn": 30,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "installer/src/main/java/org/apache/syncope/installer/utilities/MavenUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 211,
                            "endLine": 211,
                            "startColumn": 30,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "installer/src/main/java/org/apache/syncope/installer/utilities/MavenUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 230,
                            "endLine": 230,
                            "startColumn": 38,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "installer/src/main/java/org/apache/syncope/installer/utilities/FileSystemUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 114,
                            "endLine": 114,
                            "startColumn": 33,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "installer/src/main/java/org/apache/syncope/installer/utilities/FileSystemUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 124,
                            "endLine": 124,
                            "startColumn": 39,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "installer/src/main/java/org/apache/syncope/installer/utilities/FileSystemUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 124,
                            "endLine": 124,
                            "startColumn": 35,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "installer/src/main/java/org/apache/syncope/installer/utilities/FileSystemUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 124,
                            "endLine": 124,
                            "startColumn": 13,
                            "endColumn": 34
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 801,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/SetEscapeModelStrings",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Call to setEscapeModelStrings disables HTML escaping of content, which can lead to Cross-Site Scripting (XSS) attacks.",
            "markdown": "Call to {0} disables HTML escaping of content, which can lead to Cross-Site Scripting (XSS) attacks.",
            "arguments": [
              "[setEscapeModelStrings](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "console/src/main/java/org/apache/syncope/console/wicket/markup/html/form/SpinnerFieldPanel.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 93,
                  "endLine": 93,
                  "startColumn": 36,
                  "endColumn": 41
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7f0e2df2da6764fbf3999041eb2c0f6b6731e19d5502576b4c9f49c6743724ac",
            "1": "1ff1f1f7.5133f0cd.0c9d82bf.8415ef30.056cf8f5.a0340d99.d85953ad.2cc06456.19689298.cf0ab0c0.34d94eb1.e22980a8.056cf8f5.a0340d99.d85953ad.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "console/src/main/java/org/apache/syncope/console/wicket/markup/html/form/SpinnerFieldPanel.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 94,
                            "endLine": 94,
                            "startColumn": 9,
                            "endColumn": 45
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 301,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileCodeFlow"
              }
            ]
          }
        },
        {
          "ruleId": "java/Deserialization",
          "ruleIndex": 11,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from the database flows into fromXML, where it is used to deserialize an object. This may result in an Unsafe Deserialization vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to deserialize an object. This may result in an Unsafe Deserialization vulnerability.",
            "arguments": [
              "[the database](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11)",
              "[fromXML](12)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core-upgrader/src/main/java/org/apache/syncope/upgrader/ContentUpgrader.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 397,
                  "endLine": 397,
                  "startColumn": 51,
                  "endColumn": 97
                }
              }
            }
          ],
          "fingerprints": {
            "0": "47734c23fbc0cdbeed6002cb992f41a2ae044c6ef577b706b834186a6bb7dd00",
            "1": "85f3d2c5.1cbd3ff4.49a3b0f3.f128e3b7.261769f9.89505584.46b4e1b1.62fdbf1b.e1d7cd7c.1fd94efe.1f78ea81.de031890.408180c7.7fda7c5e.5f600e00.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core-upgrader/src/main/java/org/apache/syncope/upgrader/ContentUpgrader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 391,
                            "endLine": 391,
                            "startColumn": 62,
                            "endColumn": 87
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core-upgrader/src/main/java/org/apache/syncope/upgrader/ContentUpgrader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 391,
                            "endLine": 391,
                            "startColumn": 62,
                            "endColumn": 87
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core-upgrader/src/main/java/org/apache/syncope/upgrader/ContentUpgrader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 391,
                            "endLine": 391,
                            "startColumn": 45,
                            "endColumn": 80
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core-upgrader/src/main/java/org/apache/syncope/upgrader/ContentUpgrader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 393,
                            "endLine": 393,
                            "startColumn": 44,
                            "endColumn": 58
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core-upgrader/src/main/java/org/apache/syncope/upgrader/ContentUpgrader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 393,
                            "endLine": 393,
                            "startColumn": 38,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core-upgrader/src/main/java/org/apache/syncope/upgrader/ContentUpgrader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 394,
                            "endLine": 394,
                            "startColumn": 60,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core-upgrader/src/main/java/org/apache/syncope/upgrader/ContentUpgrader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 394,
                            "endLine": 394,
                            "startColumn": 60,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core-upgrader/src/main/java/org/apache/syncope/upgrader/ContentUpgrader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 394,
                            "endLine": 394,
                            "startColumn": 51,
                            "endColumn": 89
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core-upgrader/src/main/java/org/apache/syncope/upgrader/ContentUpgrader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 394,
                            "endLine": 394,
                            "startColumn": 30,
                            "endColumn": 89
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core-upgrader/src/main/java/org/apache/syncope/upgrader/ContentUpgrader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 397,
                            "endLine": 397,
                            "startColumn": 98,
                            "endColumn": 116
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core-upgrader/src/main/java/org/apache/syncope/upgrader/util/XMLDeserializer.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 36,
                            "endLine": 36,
                            "startColumn": 52,
                            "endColumn": 75
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core-upgrader/src/main/java/org/apache/syncope/upgrader/util/XMLDeserializer.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 42,
                            "endLine": 42,
                            "startColumn": 42,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core-upgrader/src/main/java/org/apache/syncope/upgrader/util/XMLDeserializer.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 42,
                            "endLine": 42,
                            "startColumn": 26,
                            "endColumn": 41
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/TooPermissiveTrustManager",
          "ruleIndex": 12,
          "level": "warning",
          "message": {
            "text": "TrustManager might be too permissive: all clients are trusted.",
            "markdown": "TrustManager might be too permissive: {0}.",
            "arguments": [
              "[all clients are trusted](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/main/java/org/apache/syncope/core/util/ConnIdBundleManager.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 140,
                  "endLine": 140,
                  "startColumn": 33,
                  "endColumn": 51
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6570f01f71f4eca35a4c4e62bed862543bea7dc211bb442df494f38d0efc0600",
            "1": "d3279c65.528e35bc.b1ce14cf.e22980a8.f0e1baa5.eacd09e2.7011a60a.1d874c72.d3279c65.528e35bc.b1ce14cf.e22980a8.f0e1baa5.eacd09e2.7011a60a.1d874c72"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/org/apache/syncope/core/util/ConnIdBundleManager.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 140,
                            "endLine": 140,
                            "startColumn": 33,
                            "endColumn": 51
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/TooPermissiveTrustManager",
          "ruleIndex": 12,
          "level": "warning",
          "message": {
            "text": "TrustManager might be too permissive: all servers are trusted.",
            "markdown": "TrustManager might be too permissive: {0}.",
            "arguments": [
              "[all servers are trusted](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/main/java/org/apache/syncope/core/util/ConnIdBundleManager.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 146,
                  "endLine": 146,
                  "startColumn": 33,
                  "endColumn": 51
                }
              }
            }
          ],
          "fingerprints": {
            "0": "30e51693e561c32c6e8b2a21a2b14ebe1264438a9f28dcc7a1d321bc5c838190",
            "1": "d3279c65.528e35bc.b1ce14cf.e22980a8.f0e1baa5.eacd09e2.7011a60a.1d874c72.d3279c65.528e35bc.b1ce14cf.e22980a8.f0e1baa5.eacd09e2.7011a60a.1d874c72"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/org/apache/syncope/core/util/ConnIdBundleManager.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 146,
                            "endLine": 146,
                            "startColumn": 33,
                            "endColumn": 51
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/TooPermissiveTrustManager",
          "ruleIndex": 12,
          "level": "warning",
          "message": {
            "text": "TrustManager might be too permissive: all Certificate Authorities are trusted.",
            "markdown": "TrustManager might be too permissive: {0}.",
            "arguments": [
              "[all Certificate Authorities are trusted](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/main/java/org/apache/syncope/core/util/ConnIdBundleManager.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 152,
                  "endLine": 152,
                  "startColumn": 46,
                  "endColumn": 64
                }
              }
            }
          ],
          "fingerprints": {
            "0": "dfab047f3dc8f6dbe41ad38f7c62491da45905948d3db05cb5e4ae05c96c87ee",
            "1": "8df8fa68.528e35bc.b1ce14cf.e22980a8.f0e1baa5.eacd09e2.f1ccdb3e.1d874c72.8df8fa68.528e35bc.5821b615.e22980a8.3fe90ae4.eacd09e2.7c57638b.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/org/apache/syncope/core/util/ConnIdBundleManager.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 153,
                            "endLine": 153,
                            "startColumn": 32,
                            "endColumn": 36
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/DOMXSS/test",
          "ruleIndex": 13,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an exception flows into innerHTML, where it is used to dynamically construct the HTML page on client side. This may result in a DOM Based Cross-Site Scripting attack (DOMXSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to dynamically construct the HTML page on client side. This may result in a DOM Based Cross-Site Scripting attack (DOMXSS).",
            "arguments": [
              "[an exception](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39),(40),(41),(42),(43),(44),(45),(46),(47),(48),(49),(50),(51),(52),(53),(54),(55),(56),(57),(58),(59),(60),(61),(62),(63),(64),(65),(66),(67),(68),(69),(70),(71),(72),(73),(74),(75),(76),(77),(78),(79),(80),(81)",
              "[innerHTML](82)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 819,
                  "endLine": 819,
                  "startColumn": 5,
                  "endColumn": 70
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b3208c7173e31e199843bb92ef6232c4824e9f45073e46ed9d0c4e993c5e42af",
            "1": "2d06e3d6.9a74fed2.656daf57.41ad5cda.921998f5.dbe83c7e.cd61fc56.545e9171.08510d78.bf4464f1.7603686c.d3185418.3f452f8c.dbe83c7e.f0256597.9fed00c4"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 178,
                            "endLine": 178,
                            "startColumn": 71,
                            "endColumn": 78
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 178,
                            "endLine": 178,
                            "startColumn": 71,
                            "endColumn": 78
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 178,
                            "endLine": 178,
                            "startColumn": 106,
                            "endColumn": 107
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 178,
                            "endLine": 178,
                            "startColumn": 87,
                            "endColumn": 104
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1388,
                            "endLine": 1388,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 465,
                            "endLine": 465,
                            "startColumn": 108,
                            "endColumn": 128
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 14,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1407,
                            "endLine": 1407,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 946,
                            "endLine": 946,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 535,
                            "endLine": 535,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 536,
                            "endLine": 536,
                            "startColumn": 22,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 537,
                            "endLine": 537,
                            "startColumn": 86,
                            "endColumn": 92
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1414,
                            "endLine": 1414,
                            "startColumn": 22,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1415,
                            "endLine": 1415,
                            "startColumn": 8,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1295,
                            "endLine": 1295,
                            "startColumn": 4,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1295,
                            "endLine": 1295,
                            "startColumn": 19,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1293,
                            "endLine": 1296,
                            "startColumn": 20,
                            "endColumn": 4
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1296,
                            "endLine": 1296,
                            "startColumn": 5,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1293,
                            "endLine": 1293,
                            "startColumn": 12,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1293,
                            "endLine": 1293,
                            "startColumn": 3,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1581,
                            "endLine": 1581,
                            "startColumn": 20,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1581,
                            "endLine": 1581,
                            "startColumn": 48,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1581,
                            "endLine": 1581,
                            "startColumn": 60,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1582,
                            "endLine": 1582,
                            "startColumn": 3,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1582,
                            "endLine": 1582,
                            "startColumn": 12,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1287,
                            "endLine": 1287,
                            "startColumn": 3,
                            "endColumn": 5
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1208,
                            "endLine": 1208,
                            "startColumn": 10,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1208,
                            "endLine": 1208,
                            "startColumn": 3,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1211,
                            "endLine": 1211,
                            "startColumn": 7,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 29,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1251,
                            "endLine": 1251,
                            "startColumn": 2,
                            "endColumn": 8
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 30,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1254,
                            "endLine": 1254,
                            "startColumn": 7,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 31,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1256,
                            "endLine": 1256,
                            "startColumn": 10,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 32,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1257,
                            "endLine": 1257,
                            "startColumn": 12,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 33,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1258,
                            "endLine": 1258,
                            "startColumn": 12,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 34,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1258,
                            "endLine": 1258,
                            "startColumn": 37,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 35,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1259,
                            "endLine": 1259,
                            "startColumn": 11,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 36,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1262,
                            "endLine": 1262,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 37,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1267,
                            "endLine": 1267,
                            "startColumn": 27,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 38,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1268,
                            "endLine": 1268,
                            "startColumn": 12,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 39,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1268,
                            "endLine": 1268,
                            "startColumn": 31,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 40,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1276,
                            "endLine": 1276,
                            "startColumn": 4,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 41,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1278,
                            "endLine": 1278,
                            "startColumn": 4,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 42,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1290,
                            "endLine": 1290,
                            "startColumn": 7,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 43,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1300,
                            "endLine": 1300,
                            "startColumn": 7,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 44,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1300,
                            "endLine": 1300,
                            "startColumn": 51,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 45,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1316,
                            "endLine": 1316,
                            "startColumn": 11,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 46,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1318,
                            "endLine": 1318,
                            "startColumn": 10,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 47,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1326,
                            "endLine": 1326,
                            "startColumn": 12,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 48,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1326,
                            "endLine": 1326,
                            "startColumn": 29,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 49,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1327,
                            "endLine": 1327,
                            "startColumn": 12,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 50,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1327,
                            "endLine": 1327,
                            "startColumn": 29,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 51,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1336,
                            "endLine": 1336,
                            "startColumn": 7,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 52,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1437,
                            "endLine": 1437,
                            "startColumn": 2,
                            "endColumn": 8
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 53,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1439,
                            "endLine": 1439,
                            "startColumn": 7,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 54,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1439,
                            "endLine": 1439,
                            "startColumn": 26,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 55,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1449,
                            "endLine": 1449,
                            "startColumn": 17,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 56,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1449,
                            "endLine": 1449,
                            "startColumn": 2,
                            "endColumn": 8
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 57,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1451,
                            "endLine": 1451,
                            "startColumn": 10,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 58,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1451,
                            "endLine": 1451,
                            "startColumn": 34,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 59,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1459,
                            "endLine": 1459,
                            "startColumn": 2,
                            "endColumn": 8
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 60,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1460,
                            "endLine": 1460,
                            "startColumn": 16,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 61,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1460,
                            "endLine": 1460,
                            "startColumn": 36,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 62,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1460,
                            "endLine": 1460,
                            "startColumn": 59,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 63,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 447,
                            "endLine": 447,
                            "startColumn": 8,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 64,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 488,
                            "endLine": 488,
                            "startColumn": 3,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 65,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 489,
                            "endLine": 489,
                            "startColumn": 3,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 66,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 491,
                            "endLine": 491,
                            "startColumn": 8,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 67,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 517,
                            "endLine": 517,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 68,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 525,
                            "endLine": 525,
                            "startColumn": 13,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 69,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 526,
                            "endLine": 526,
                            "startColumn": 11,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 70,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1597,
                            "endLine": 1597,
                            "startColumn": 15,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 71,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 956,
                            "endLine": 956,
                            "startColumn": 3,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 72,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 916,
                            "endLine": 916,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 73,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 922,
                            "endLine": 922,
                            "startColumn": 13,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 74,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 969,
                            "endLine": 969,
                            "startColumn": 5,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 75,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 968,
                            "endLine": 968,
                            "startColumn": 4,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 76,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 986,
                            "endLine": 986,
                            "startColumn": 4,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 77,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 987,
                            "endLine": 987,
                            "startColumn": 81,
                            "endColumn": 87
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 78,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 987,
                            "endLine": 987,
                            "startColumn": 69,
                            "endColumn": 79
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 79,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1420,
                            "endLine": 1420,
                            "startColumn": 11,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 80,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 819,
                            "endLine": 819,
                            "startColumn": 32,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 81,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 819,
                            "endLine": 819,
                            "startColumn": 5,
                            "endColumn": 70
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 82,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 819,
                            "endLine": 819,
                            "startColumn": 5,
                            "endColumn": 70
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 501,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              },
              {
                "label": true,
                "type": "commonlyFixed"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/DOMXSS/test",
          "ruleIndex": 13,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an exception flows into innerHTML, where it is used to dynamically construct the HTML page on client side. This may result in a DOM Based Cross-Site Scripting attack (DOMXSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to dynamically construct the HTML page on client side. This may result in a DOM Based Cross-Site Scripting attack (DOMXSS).",
            "arguments": [
              "[an exception](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39)",
              "[innerHTML](40)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1126,
                  "endLine": 1126,
                  "startColumn": 22,
                  "endColumn": 146
                }
              }
            }
          ],
          "fingerprints": {
            "0": "122de63a8ddf39648580b5cb61e509a5b088f39b945b9eb070603b9d59214c3f",
            "1": "2d06e3d6.c10c9cd6.98501263.7da15f0a.9cde7c93.dbe83c7e.cd61fc56.ba6006e5.08510d78.bf4464f1.7603686c.d3185418.3f452f8c.dbe83c7e.f0256597.9fed00c4"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 178,
                            "endLine": 178,
                            "startColumn": 71,
                            "endColumn": 78
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 178,
                            "endLine": 178,
                            "startColumn": 71,
                            "endColumn": 78
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 178,
                            "endLine": 178,
                            "startColumn": 106,
                            "endColumn": 107
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 178,
                            "endLine": 178,
                            "startColumn": 87,
                            "endColumn": 104
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1388,
                            "endLine": 1388,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 465,
                            "endLine": 465,
                            "startColumn": 108,
                            "endColumn": 128
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 14,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1407,
                            "endLine": 1407,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 946,
                            "endLine": 946,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 535,
                            "endLine": 535,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 536,
                            "endLine": 536,
                            "startColumn": 22,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 537,
                            "endLine": 537,
                            "startColumn": 86,
                            "endColumn": 92
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1414,
                            "endLine": 1414,
                            "startColumn": 22,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1415,
                            "endLine": 1415,
                            "startColumn": 8,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1094,
                            "endLine": 1094,
                            "startColumn": 18,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1420,
                            "endLine": 1420,
                            "startColumn": 11,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 819,
                            "endLine": 819,
                            "startColumn": 32,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 818,
                            "endLine": 818,
                            "startColumn": 10,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 818,
                            "endLine": 818,
                            "startColumn": 4,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1582,
                            "endLine": 1582,
                            "startColumn": 12,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1287,
                            "endLine": 1287,
                            "startColumn": 3,
                            "endColumn": 5
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1208,
                            "endLine": 1208,
                            "startColumn": 10,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1208,
                            "endLine": 1208,
                            "startColumn": 3,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1211,
                            "endLine": 1211,
                            "startColumn": 7,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1251,
                            "endLine": 1251,
                            "startColumn": 2,
                            "endColumn": 8
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1254,
                            "endLine": 1254,
                            "startColumn": 7,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1256,
                            "endLine": 1256,
                            "startColumn": 10,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1257,
                            "endLine": 1257,
                            "startColumn": 12,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1258,
                            "endLine": 1258,
                            "startColumn": 12,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 29,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1258,
                            "endLine": 1258,
                            "startColumn": 37,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 30,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1259,
                            "endLine": 1259,
                            "startColumn": 11,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 31,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1597,
                            "endLine": 1597,
                            "startColumn": 15,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 32,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1262,
                            "endLine": 1262,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 33,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1267,
                            "endLine": 1267,
                            "startColumn": 27,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 34,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1268,
                            "endLine": 1268,
                            "startColumn": 12,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 35,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1268,
                            "endLine": 1268,
                            "startColumn": 12,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 36,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1269,
                            "endLine": 1280,
                            "startColumn": 10,
                            "endColumn": 4
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 37,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1280,
                            "endLine": 1280,
                            "startColumn": 5,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 38,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1269,
                            "endLine": 1269,
                            "startColumn": 3,
                            "endColumn": 7
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 39,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1126,
                            "endLine": 1126,
                            "startColumn": 22,
                            "endColumn": 146
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 40,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1126,
                            "endLine": 1126,
                            "startColumn": 22,
                            "endColumn": 146
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 501,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              },
              {
                "label": true,
                "type": "commonlyFixed"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/DOMXSS/test",
          "ruleIndex": 13,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an exception flows into innerHTML, where it is used to dynamically construct the HTML page on client side. This may result in a DOM Based Cross-Site Scripting attack (DOMXSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to dynamically construct the HTML page on client side. This may result in a DOM Based Cross-Site Scripting attack (DOMXSS).",
            "arguments": [
              "[an exception](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39),(40),(41),(42),(43),(44),(45),(46),(47),(48),(49),(50),(51),(52),(53),(54),(55),(56),(57),(58),(59),(60),(61),(62),(63),(64),(65),(66),(67),(68),(69),(70),(71),(72),(73),(74),(75),(76),(77),(78),(79),(80),(81),(82),(83),(84),(85)",
              "[innerHTML](86)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1172,
                  "endLine": 1172,
                  "startColumn": 44,
                  "endColumn": 57
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3fba52c7e537c4348fd47b4c9625e155e50f11c451f861ec4023987cf0c4fed6",
            "1": "2d06e3d6.941f7e15.693cee93.d7919eeb.5c2b5c9d.dbe83c7e.f0256597.036c6bc7.08510d78.bf4464f1.7603686c.d3185418.3f452f8c.dbe83c7e.f0256597.9fed00c4"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 178,
                            "endLine": 178,
                            "startColumn": 71,
                            "endColumn": 78
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 178,
                            "endLine": 178,
                            "startColumn": 71,
                            "endColumn": 78
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 178,
                            "endLine": 178,
                            "startColumn": 106,
                            "endColumn": 107
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 178,
                            "endLine": 178,
                            "startColumn": 87,
                            "endColumn": 104
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1388,
                            "endLine": 1388,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 465,
                            "endLine": 465,
                            "startColumn": 108,
                            "endColumn": 128
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 14,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1407,
                            "endLine": 1407,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 946,
                            "endLine": 946,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 535,
                            "endLine": 535,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 536,
                            "endLine": 536,
                            "startColumn": 22,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 537,
                            "endLine": 537,
                            "startColumn": 86,
                            "endColumn": 92
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1414,
                            "endLine": 1414,
                            "startColumn": 22,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1415,
                            "endLine": 1415,
                            "startColumn": 8,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1295,
                            "endLine": 1295,
                            "startColumn": 4,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1295,
                            "endLine": 1295,
                            "startColumn": 19,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1293,
                            "endLine": 1296,
                            "startColumn": 20,
                            "endColumn": 4
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1296,
                            "endLine": 1296,
                            "startColumn": 5,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1293,
                            "endLine": 1293,
                            "startColumn": 12,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1293,
                            "endLine": 1293,
                            "startColumn": 3,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1290,
                            "endLine": 1290,
                            "startColumn": 35,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1290,
                            "endLine": 1290,
                            "startColumn": 63,
                            "endColumn": 71
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1295,
                            "endLine": 1295,
                            "startColumn": 4,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 819,
                            "endLine": 819,
                            "startColumn": 32,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1126,
                            "endLine": 1126,
                            "startColumn": 10,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1126,
                            "endLine": 1126,
                            "startColumn": 3,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1582,
                            "endLine": 1582,
                            "startColumn": 12,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1287,
                            "endLine": 1287,
                            "startColumn": 3,
                            "endColumn": 5
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1208,
                            "endLine": 1208,
                            "startColumn": 10,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 29,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1208,
                            "endLine": 1208,
                            "startColumn": 3,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 30,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1211,
                            "endLine": 1211,
                            "startColumn": 7,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 31,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1251,
                            "endLine": 1251,
                            "startColumn": 2,
                            "endColumn": 8
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 32,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1254,
                            "endLine": 1254,
                            "startColumn": 7,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 33,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1256,
                            "endLine": 1256,
                            "startColumn": 10,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 34,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1257,
                            "endLine": 1257,
                            "startColumn": 12,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 35,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1258,
                            "endLine": 1258,
                            "startColumn": 12,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 36,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1258,
                            "endLine": 1258,
                            "startColumn": 37,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 37,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1259,
                            "endLine": 1259,
                            "startColumn": 11,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 38,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1262,
                            "endLine": 1262,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 39,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1267,
                            "endLine": 1267,
                            "startColumn": 27,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 40,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1268,
                            "endLine": 1268,
                            "startColumn": 12,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 41,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1268,
                            "endLine": 1268,
                            "startColumn": 31,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 42,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1276,
                            "endLine": 1276,
                            "startColumn": 4,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 43,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1278,
                            "endLine": 1278,
                            "startColumn": 4,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 44,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1290,
                            "endLine": 1290,
                            "startColumn": 7,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 45,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1300,
                            "endLine": 1300,
                            "startColumn": 7,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 46,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1300,
                            "endLine": 1300,
                            "startColumn": 51,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 47,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1316,
                            "endLine": 1316,
                            "startColumn": 11,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 48,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1318,
                            "endLine": 1318,
                            "startColumn": 10,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 49,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1326,
                            "endLine": 1326,
                            "startColumn": 12,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 50,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1326,
                            "endLine": 1326,
                            "startColumn": 29,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 51,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1327,
                            "endLine": 1327,
                            "startColumn": 12,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 52,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1327,
                            "endLine": 1327,
                            "startColumn": 29,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 53,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1336,
                            "endLine": 1336,
                            "startColumn": 7,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 54,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1437,
                            "endLine": 1437,
                            "startColumn": 2,
                            "endColumn": 8
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 55,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1439,
                            "endLine": 1439,
                            "startColumn": 7,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 56,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1439,
                            "endLine": 1439,
                            "startColumn": 26,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 57,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1449,
                            "endLine": 1449,
                            "startColumn": 17,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 58,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1449,
                            "endLine": 1449,
                            "startColumn": 2,
                            "endColumn": 8
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 59,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1451,
                            "endLine": 1451,
                            "startColumn": 10,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 60,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1451,
                            "endLine": 1451,
                            "startColumn": 34,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 61,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1459,
                            "endLine": 1459,
                            "startColumn": 2,
                            "endColumn": 8
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 62,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1460,
                            "endLine": 1460,
                            "startColumn": 16,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 63,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1460,
                            "endLine": 1460,
                            "startColumn": 36,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 64,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1460,
                            "endLine": 1460,
                            "startColumn": 59,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 65,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 447,
                            "endLine": 447,
                            "startColumn": 8,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 66,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 488,
                            "endLine": 488,
                            "startColumn": 3,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 67,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 489,
                            "endLine": 489,
                            "startColumn": 3,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 68,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 491,
                            "endLine": 491,
                            "startColumn": 8,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 69,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 517,
                            "endLine": 517,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 70,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 525,
                            "endLine": 525,
                            "startColumn": 13,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 71,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 526,
                            "endLine": 526,
                            "startColumn": 11,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 72,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1597,
                            "endLine": 1597,
                            "startColumn": 15,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 73,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 956,
                            "endLine": 956,
                            "startColumn": 3,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 74,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 916,
                            "endLine": 916,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 75,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 922,
                            "endLine": 922,
                            "startColumn": 13,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 76,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 969,
                            "endLine": 969,
                            "startColumn": 5,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 77,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 968,
                            "endLine": 968,
                            "startColumn": 4,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 78,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 986,
                            "endLine": 986,
                            "startColumn": 4,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 79,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 987,
                            "endLine": 987,
                            "startColumn": 81,
                            "endColumn": 87
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 80,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 987,
                            "endLine": 987,
                            "startColumn": 69,
                            "endColumn": 79
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 81,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1094,
                            "endLine": 1094,
                            "startColumn": 18,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 82,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1420,
                            "endLine": 1420,
                            "startColumn": 11,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 83,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1093,
                            "endLine": 1093,
                            "startColumn": 39,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 84,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1089,
                            "endLine": 1089,
                            "startColumn": 3,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 85,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1172,
                            "endLine": 1172,
                            "startColumn": 44,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 86,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1172,
                            "endLine": 1172,
                            "startColumn": 44,
                            "endColumn": 57
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 501,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              },
              {
                "label": true,
                "type": "commonlyFixed"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/DOMXSS/test",
          "ruleIndex": 13,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an exception flows into innerHTML, where it is used to dynamically construct the HTML page on client side. This may result in a DOM Based Cross-Site Scripting attack (DOMXSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to dynamically construct the HTML page on client side. This may result in a DOM Based Cross-Site Scripting attack (DOMXSS).",
            "arguments": [
              "[an exception](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39),(40),(41),(42),(43),(44),(45),(46),(47),(48),(49),(50),(51),(52),(53),(54),(55),(56),(57),(58),(59),(60),(61),(62),(63),(64),(65),(66),(67),(68),(69),(70),(71),(72),(73),(74),(75),(76),(77),(78),(79),(80),(81),(82),(83),(84),(85),(86)",
              "[innerHTML](87)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1189,
                  "endLine": 1189,
                  "startColumn": 29,
                  "endColumn": 45
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a76832e53a6b3a681094984ebf8612cc8387a52426db412b1f464c560af17a3c",
            "1": "2d06e3d6.5a267ca1.693cee93.cd16a919.5c2b5c9d.dbe83c7e.f0256597.9bc872dd.08510d78.bf4464f1.7603686c.d3185418.3f452f8c.dbe83c7e.f0256597.9fed00c4"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 178,
                            "endLine": 178,
                            "startColumn": 71,
                            "endColumn": 78
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 178,
                            "endLine": 178,
                            "startColumn": 71,
                            "endColumn": 78
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 178,
                            "endLine": 178,
                            "startColumn": 106,
                            "endColumn": 107
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 178,
                            "endLine": 178,
                            "startColumn": 87,
                            "endColumn": 104
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1388,
                            "endLine": 1388,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 465,
                            "endLine": 465,
                            "startColumn": 108,
                            "endColumn": 128
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 14,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1407,
                            "endLine": 1407,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 946,
                            "endLine": 946,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 535,
                            "endLine": 535,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 536,
                            "endLine": 536,
                            "startColumn": 22,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 537,
                            "endLine": 537,
                            "startColumn": 86,
                            "endColumn": 92
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1414,
                            "endLine": 1414,
                            "startColumn": 22,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1415,
                            "endLine": 1415,
                            "startColumn": 8,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1295,
                            "endLine": 1295,
                            "startColumn": 4,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1295,
                            "endLine": 1295,
                            "startColumn": 19,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1293,
                            "endLine": 1296,
                            "startColumn": 20,
                            "endColumn": 4
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1296,
                            "endLine": 1296,
                            "startColumn": 5,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1293,
                            "endLine": 1293,
                            "startColumn": 12,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1293,
                            "endLine": 1293,
                            "startColumn": 3,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1290,
                            "endLine": 1290,
                            "startColumn": 35,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1290,
                            "endLine": 1290,
                            "startColumn": 63,
                            "endColumn": 71
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1295,
                            "endLine": 1295,
                            "startColumn": 4,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 819,
                            "endLine": 819,
                            "startColumn": 32,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1126,
                            "endLine": 1126,
                            "startColumn": 10,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1126,
                            "endLine": 1126,
                            "startColumn": 3,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1582,
                            "endLine": 1582,
                            "startColumn": 12,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1287,
                            "endLine": 1287,
                            "startColumn": 3,
                            "endColumn": 5
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1208,
                            "endLine": 1208,
                            "startColumn": 10,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 29,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1208,
                            "endLine": 1208,
                            "startColumn": 3,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 30,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1211,
                            "endLine": 1211,
                            "startColumn": 7,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 31,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1251,
                            "endLine": 1251,
                            "startColumn": 2,
                            "endColumn": 8
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 32,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1254,
                            "endLine": 1254,
                            "startColumn": 7,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 33,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1256,
                            "endLine": 1256,
                            "startColumn": 10,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 34,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1257,
                            "endLine": 1257,
                            "startColumn": 12,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 35,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1258,
                            "endLine": 1258,
                            "startColumn": 12,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 36,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1258,
                            "endLine": 1258,
                            "startColumn": 37,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 37,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1259,
                            "endLine": 1259,
                            "startColumn": 11,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 38,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1262,
                            "endLine": 1262,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 39,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1267,
                            "endLine": 1267,
                            "startColumn": 27,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 40,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1268,
                            "endLine": 1268,
                            "startColumn": 12,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 41,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1268,
                            "endLine": 1268,
                            "startColumn": 31,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 42,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1276,
                            "endLine": 1276,
                            "startColumn": 4,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 43,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1278,
                            "endLine": 1278,
                            "startColumn": 4,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 44,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1290,
                            "endLine": 1290,
                            "startColumn": 7,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 45,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1300,
                            "endLine": 1300,
                            "startColumn": 7,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 46,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1300,
                            "endLine": 1300,
                            "startColumn": 51,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 47,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1316,
                            "endLine": 1316,
                            "startColumn": 11,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 48,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1318,
                            "endLine": 1318,
                            "startColumn": 10,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 49,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1326,
                            "endLine": 1326,
                            "startColumn": 12,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 50,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1326,
                            "endLine": 1326,
                            "startColumn": 29,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 51,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1327,
                            "endLine": 1327,
                            "startColumn": 12,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 52,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1327,
                            "endLine": 1327,
                            "startColumn": 29,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 53,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1336,
                            "endLine": 1336,
                            "startColumn": 7,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 54,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1437,
                            "endLine": 1437,
                            "startColumn": 2,
                            "endColumn": 8
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 55,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1439,
                            "endLine": 1439,
                            "startColumn": 7,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 56,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1439,
                            "endLine": 1439,
                            "startColumn": 26,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 57,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1449,
                            "endLine": 1449,
                            "startColumn": 17,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 58,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1449,
                            "endLine": 1449,
                            "startColumn": 2,
                            "endColumn": 8
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 59,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1451,
                            "endLine": 1451,
                            "startColumn": 10,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 60,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1451,
                            "endLine": 1451,
                            "startColumn": 34,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 61,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1459,
                            "endLine": 1459,
                            "startColumn": 2,
                            "endColumn": 8
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 62,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1460,
                            "endLine": 1460,
                            "startColumn": 16,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 63,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1460,
                            "endLine": 1460,
                            "startColumn": 36,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 64,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1460,
                            "endLine": 1460,
                            "startColumn": 59,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 65,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 447,
                            "endLine": 447,
                            "startColumn": 8,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 66,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 488,
                            "endLine": 488,
                            "startColumn": 3,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 67,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 489,
                            "endLine": 489,
                            "startColumn": 3,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 68,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 491,
                            "endLine": 491,
                            "startColumn": 8,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 69,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 517,
                            "endLine": 517,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 70,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 525,
                            "endLine": 525,
                            "startColumn": 13,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 71,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 526,
                            "endLine": 526,
                            "startColumn": 11,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 72,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1597,
                            "endLine": 1597,
                            "startColumn": 15,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 73,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 956,
                            "endLine": 956,
                            "startColumn": 3,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 74,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 916,
                            "endLine": 916,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 75,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 922,
                            "endLine": 922,
                            "startColumn": 13,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 76,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 969,
                            "endLine": 969,
                            "startColumn": 5,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 77,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 968,
                            "endLine": 968,
                            "startColumn": 4,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 78,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 986,
                            "endLine": 986,
                            "startColumn": 4,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 79,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 987,
                            "endLine": 987,
                            "startColumn": 81,
                            "endColumn": 87
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 80,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 987,
                            "endLine": 987,
                            "startColumn": 69,
                            "endColumn": 79
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 81,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1113,
                            "endLine": 1113,
                            "startColumn": 11,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 82,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1420,
                            "endLine": 1420,
                            "startColumn": 11,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 83,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1111,
                            "endLine": 1111,
                            "startColumn": 44,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 84,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1111,
                            "endLine": 1111,
                            "startColumn": 4,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 85,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1115,
                            "endLine": 1115,
                            "startColumn": 2,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 86,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1189,
                            "endLine": 1189,
                            "startColumn": 29,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 87,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1189,
                            "endLine": 1189,
                            "startColumn": 29,
                            "endColumn": 45
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 501,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              },
              {
                "label": true,
                "type": "commonlyFixed"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/DOMXSS/test",
          "ruleIndex": 13,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an exception flows into innerHTML, where it is used to dynamically construct the HTML page on client side. This may result in a DOM Based Cross-Site Scripting attack (DOMXSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to dynamically construct the HTML page on client side. This may result in a DOM Based Cross-Site Scripting attack (DOMXSS).",
            "arguments": [
              "[an exception](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39)",
              "[innerHTML](40)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1287,
                  "endLine": 1287,
                  "startColumn": 40,
                  "endColumn": 44
                }
              }
            }
          ],
          "fingerprints": {
            "0": "75b2575b5b04e90bd29afc1ff4cc9547d9562de03b74d0c7f50af7b6c4d3312c",
            "1": "2d06e3d6.4773f344.6bb8eed2.d7919eeb.d3b893ab.dbe83c7e.cd61fc56.545e9171.08510d78.bf4464f1.7603686c.d3185418.3f452f8c.dbe83c7e.f0256597.9fed00c4"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 178,
                            "endLine": 178,
                            "startColumn": 71,
                            "endColumn": 78
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 178,
                            "endLine": 178,
                            "startColumn": 71,
                            "endColumn": 78
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 178,
                            "endLine": 178,
                            "startColumn": 106,
                            "endColumn": 107
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 178,
                            "endLine": 178,
                            "startColumn": 87,
                            "endColumn": 104
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1388,
                            "endLine": 1388,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 465,
                            "endLine": 465,
                            "startColumn": 108,
                            "endColumn": 128
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 14,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1407,
                            "endLine": 1407,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 946,
                            "endLine": 946,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 535,
                            "endLine": 535,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 536,
                            "endLine": 536,
                            "startColumn": 22,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 537,
                            "endLine": 537,
                            "startColumn": 86,
                            "endColumn": 92
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1414,
                            "endLine": 1414,
                            "startColumn": 22,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1415,
                            "endLine": 1415,
                            "startColumn": 8,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1094,
                            "endLine": 1094,
                            "startColumn": 18,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1420,
                            "endLine": 1420,
                            "startColumn": 11,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 819,
                            "endLine": 819,
                            "startColumn": 32,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1126,
                            "endLine": 1126,
                            "startColumn": 10,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1126,
                            "endLine": 1126,
                            "startColumn": 3,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1582,
                            "endLine": 1582,
                            "startColumn": 12,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1287,
                            "endLine": 1287,
                            "startColumn": 3,
                            "endColumn": 5
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1208,
                            "endLine": 1208,
                            "startColumn": 10,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1208,
                            "endLine": 1208,
                            "startColumn": 3,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1211,
                            "endLine": 1211,
                            "startColumn": 7,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1597,
                            "endLine": 1597,
                            "startColumn": 15,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 956,
                            "endLine": 956,
                            "startColumn": 3,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 916,
                            "endLine": 916,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 963,
                            "endLine": 963,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1587,
                            "endLine": 1587,
                            "startColumn": 3,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 29,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1057,
                            "endLine": 1057,
                            "startColumn": 2,
                            "endColumn": 8
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 30,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1251,
                            "endLine": 1251,
                            "startColumn": 2,
                            "endColumn": 8
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 31,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1254,
                            "endLine": 1254,
                            "startColumn": 7,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 32,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1262,
                            "endLine": 1262,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 33,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1267,
                            "endLine": 1267,
                            "startColumn": 27,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 34,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1268,
                            "endLine": 1268,
                            "startColumn": 12,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 35,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1268,
                            "endLine": 1268,
                            "startColumn": 12,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 36,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1269,
                            "endLine": 1280,
                            "startColumn": 10,
                            "endColumn": 4
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 37,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1280,
                            "endLine": 1280,
                            "startColumn": 5,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 38,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1269,
                            "endLine": 1269,
                            "startColumn": 3,
                            "endColumn": 7
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 39,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1287,
                            "endLine": 1287,
                            "startColumn": 40,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 40,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ext/flowable/client-console/target/classes/META-INF/resources/flowable-modeler/libs/sizzle_1.10.16/test/libs/qunit/qunit.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1287,
                            "endLine": 1287,
                            "startColumn": 40,
                            "endColumn": 44
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 501,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              },
              {
                "label": true,
                "type": "commonlyFixed"
              }
            ]
          }
        },
        {
          "ruleId": "java/Sqli",
          "ruleIndex": 14,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from the database flows into prepareStatement, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
            "arguments": [
              "[the database](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14)",
              "[prepareStatement](15)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/main/java/org/apache/syncope/core/util/ContentExporter.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 298,
                  "endLine": 298,
                  "startColumn": 20,
                  "endColumn": 41
                }
              }
            }
          ],
          "fingerprints": {
            "0": "84957c3173905665486a6fa31eff3f72ab7e842ee08a3faa523d78d2d329fe41",
            "1": "54a059af.b5ec4abe.33fa5dbe.ede9cf8e.4a9c8cbc.7fda7c5e.df7e59ba.54d46e25.9485d037.6f391d93.925380ba.2c674c84.c41fd899.7fda7c5e.0ac97cd8.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/org/apache/syncope/core/util/ContentExporter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 372,
                            "endLine": 372,
                            "startColumn": 36,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/org/apache/syncope/core/util/ContentExporter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 372,
                            "endLine": 372,
                            "startColumn": 36,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/org/apache/syncope/core/util/ContentExporter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 372,
                            "endLine": 372,
                            "startColumn": 24,
                            "endColumn": 62
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/org/apache/syncope/core/util/ContentExporter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 374,
                            "endLine": 374,
                            "startColumn": 36,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/org/apache/syncope/core/util/ContentExporter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 84,
                            "endLine": 84,
                            "startColumn": 36,
                            "endColumn": 58
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/org/apache/syncope/core/util/ContentExporter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 375,
                            "endLine": 375,
                            "startColumn": 21,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/org/apache/syncope/core/util/ContentExporter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 382,
                            "endLine": 382,
                            "startColumn": 37,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/org/apache/syncope/core/util/ContentExporter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 382,
                            "endLine": 382,
                            "startColumn": 25,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/org/apache/syncope/core/util/ContentExporter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 385,
                            "endLine": 385,
                            "startColumn": 91,
                            "endColumn": 100
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/org/apache/syncope/core/util/ContentExporter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 225,
                            "endLine": 225,
                            "startColumn": 13,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/org/apache/syncope/core/util/ContentExporter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 291,
                            "endLine": 291,
                            "startColumn": 13,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/org/apache/syncope/core/util/ContentExporter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 291,
                            "endLine": 291,
                            "startColumn": 13,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/org/apache/syncope/core/util/ContentExporter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 291,
                            "endLine": 291,
                            "startColumn": 13,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/org/apache/syncope/core/util/ContentExporter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 298,
                            "endLine": 298,
                            "startColumn": 42,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/org/apache/syncope/core/util/ContentExporter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 298,
                            "endLine": 298,
                            "startColumn": 42,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/org/apache/syncope/core/util/ContentExporter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 298,
                            "endLine": 298,
                            "startColumn": 20,
                            "endColumn": 41
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 501,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/InsecureSecret",
          "ruleIndex": 15,
          "level": "error",
          "message": {
            "text": "Insecure random data flows from org.apache.syncope.core.util.SecureRandomUtil.generateRandomPassword and is used as a cipher key. Generate the value with a cryptographically strong random number generator such as java.security.SecureRandom instead.",
            "markdown": "Insecure random data {0} from {1} and is used as a {2}. Generate the value with a cryptographically strong random number generator such as java.security.SecureRandom instead.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10)",
              "[org.apache.syncope.core.util.SecureRandomUtil.generateRandomPassword](11)",
              "[cipher key](12)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/main/java/org/apache/syncope/core/util/Encryptor.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 186,
                  "endLine": 186,
                  "startColumn": 27,
                  "endColumn": 40
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6f7b3422e609a8fd197109970876c42021227bd54babf5809a78f083907ac160",
            "1": "a75b04d3.7cd4917b.10a73398.3f6e204a.bb654c7c.7fda7c5e.c23c997b.54d46e25.54a059af.f9b5c894.e8652a32.44ab356c.0771466d.7fda7c5e.d112323a.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/org/apache/syncope/core/util/Encryptor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 186,
                            "endLine": 186,
                            "startColumn": 41,
                            "endColumn": 60
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/org/apache/syncope/core/util/Encryptor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 187,
                            "endLine": 187,
                            "startColumn": 21,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/org/apache/syncope/core/util/Encryptor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 187,
                            "endLine": 187,
                            "startColumn": 21,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/org/apache/syncope/core/util/Encryptor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 179,
                            "endLine": 179,
                            "startColumn": 13,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/org/apache/syncope/core/util/Encryptor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 179,
                            "endLine": 179,
                            "startColumn": 25,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/org/apache/syncope/core/util/Encryptor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 179,
                            "endLine": 179,
                            "startColumn": 25,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/org/apache/syncope/core/util/Encryptor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 178,
                            "endLine": 178,
                            "startColumn": 13,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/org/apache/syncope/core/util/Encryptor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 178,
                            "endLine": 178,
                            "startColumn": 13,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/org/apache/syncope/core/util/Encryptor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 178,
                            "endLine": 178,
                            "startColumn": 37,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/org/apache/syncope/core/util/Encryptor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 176,
                            "endLine": 176,
                            "startColumn": 20,
                            "endColumn": 81
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/org/apache/syncope/core/util/Encryptor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 176,
                            "endLine": 176,
                            "startColumn": 34,
                            "endColumn": 73
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/org/apache/syncope/core/util/Encryptor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 176,
                            "endLine": 176,
                            "startColumn": 34,
                            "endColumn": 73
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/org/apache/syncope/core/util/Encryptor.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 186,
                            "endLine": 186,
                            "startColumn": 27,
                            "endColumn": 40
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 801,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        }
      ],
      "properties": {
        "coverage": [
          {
            "files": 107,
            "isSupported": true,
            "lang": "XML"
          },
          {
            "files": 921,
            "isSupported": true,
            "lang": "Java"
          },
          {
            "files": 642,
            "isSupported": true,
            "lang": "HTML"
          },
          {
            "files": 238,
            "isSupported": true,
            "lang": "JavaScript"
          },
          {
            "files": 21,
            "isSupported": false,
            "lang": "Unknown"
          },
          {
            "files": 14,
            "isSupported": false,
            "lang": "Roff Manpage"
          }
        ]
      }
    }
  ]
}
