{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "SnykCode",
          "semanticVersion": "1.0.0",
          "version": "1.0.0",
          "rules": [
            {
              "id": "java/UsageOfUnencryptedSocket",
              "name": "UsageOfUnencryptedSocket",
              "shortDescription": {
                "text": "Cleartext Transmission of Sensitive Information"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\nThis weakness occurs when software transmits sensitive information, such as passwords or credit card numbers, in unencrypted form. This information may then be intercepted by threat actors using sniffer tools or interception techniques such as man-in-the-middle (MITM) attacks (often involving social engineering). Attackers can then use information gleaned to perform a variety of actions, depending on the information type. Possible actions include gaining unauthorized access, impersonating a user, moving laterally within the organization's network, or retrieving and potentially modifying files. This weakness is almost completely avoidable through intelligent architecture and design.\n\n### Best practices for prevention\n* Build web applications around a security mindset and the awareness that sniffers may be present at any time.\n* Ensure that all sensitive data transmission uses reliable encryption.\n* Implement security measures so that sensitive results are never returned in plain text.\n* Implement multiple-factor authentication methods to validate remote instances.\n* Use SSL not only at logon but throughout communications.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/ME1312/SubServers-2/commit/9a219a7d0fd259870a94d1f875f3cbb3c942ec1e?diff=split#diff-4a76c605749ad18708be15720e8fac67L57",
                    "lines": [
                      {
                        "line": "public SubDataClient(SubPlugin plugin, InetAddress address, int port, Encryption encryption) throws IOException {",
                        "lineNumber": 58,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (Util.isNull(plugin, address, port)) throw new NullPointerException();",
                        "lineNumber": 59,
                        "lineChange": "none"
                      },
                      {
                        "line": "    socket = new Socket(address, port);",
                        "lineNumber": 56,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    socket = new NamedContainer<>(false, new Socket(address, port));",
                        "lineNumber": 60,
                        "lineChange": "added"
                      },
                      {
                        "line": "    this.plugin = plugin;",
                        "lineNumber": 61,
                        "lineChange": "none"
                      },
                      {
                        "line": "    this.writer = new PrintWriter(socket.getOutputStream(), true);",
                        "lineNumber": 58,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    this.writer = new PrintWriter(socket.get().getOutputStream(), true);",
                        "lineNumber": 62,
                        "lineChange": "added"
                      },
                      {
                        "line": "    this.encryption = encryption;",
                        "lineNumber": 63,
                        "lineChange": "none"
                      },
                      {
                        "line": "    this.queue = new LinkedList<NamedContainer<String, PacketOut>>();",
                        "lineNumber": 64,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/dddpaul/android-SimpleNetCat/commit/3235f85ae26fa31e1e36739c608668e15c53a04c?diff=split#diff-6689eedf89cc41d9c93933ea7ff5ebf4L62",
                    "lines": [
                      {
                        "line": "    int port = Integer.parseInt( params[2] );",
                        "lineNumber": 63,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Log.d( CLASS_NAME, String.format( \"Connecting to %s:%d\", host, port ) );",
                        "lineNumber": 64,
                        "lineChange": "none"
                      },
                      {
                        "line": "    socket = new Socket( host, port );",
                        "lineNumber": 61,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    result.object = new Socket( host, port );",
                        "lineNumber": 65,
                        "lineChange": "added"
                      },
                      {
                        "line": "    break;",
                        "lineNumber": 66,
                        "lineChange": "none"
                      },
                      {
                        "line": "case RECEIVE:",
                        "lineNumber": 67,
                        "lineChange": "none"
                      },
                      {
                        "line": "{",
                        "lineNumber": 110,
                        "lineChange": "none"
                      },
                      {
                        "line": "    BufferedReader reader = new BufferedReader( new InputStreamReader( input ) );",
                        "lineNumber": 111,
                        "lineChange": "none"
                      },
                      {
                        "line": "    PrintWriter writer = new PrintWriter( socket.getOutputStream() );",
                        "lineNumber": 112,
                        "lineChange": "none"
                      },
                      {
                        "line": "    transferStreams( reader, writer );",
                        "lineNumber": 113,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 114,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/rancher/cattle/commit/b06df6f37fdfe906b7804fbba41d2c02d472f8ab?diff=split#diff-125505ce5e24cbf259a0267dd1d3af77L314",
                    "lines": [
                      {
                        "line": "String[] parts = master.getConfig().getAdvertiseAddress().split(\":\");",
                        "lineNumber": 311,
                        "lineChange": "none"
                      },
                      {
                        "line": "try (",
                        "lineNumber": 312,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Socket socket = new Socket(parts[0], Integer.parseInt(parts[1]));",
                        "lineNumber": 313,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    OutputStream os = socket.getOutputStream();",
                        "lineNumber": 314,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    Socket socket = new Socket();",
                        "lineNumber": 313,
                        "lineChange": "added"
                      },
                      {
                        "line": ") {",
                        "lineNumber": 315,
                        "lineChange": "none"
                      },
                      {
                        "line": "    socket.connect(new InetSocketAddress(parts[0], Integer.parseInt(parts[1])), 5000);",
                        "lineNumber": 315,
                        "lineChange": "added"
                      },
                      {
                        "line": "    log.info(\"Connection test to master\");",
                        "lineNumber": 316,
                        "lineChange": "none"
                      },
                      {
                        "line": " } catch (IOException e) {",
                        "lineNumber": 317,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Use thread local sockets for everything except IDLE and STATUS.",
                  "- Adding a test that a locator can shut itself down\nwith SSL.",
                  "Added support for SSL secured Manager connections"
                ],
                "precision": "very-high",
                "repoDatasetSize": 108,
                "cwe": [
                  "CWE-319"
                ]
              }
            },
            {
              "id": "java/InsecureHash/test",
              "name": "InsecureHash/test",
              "shortDescription": {
                "text": "Use of Password Hash With Insufficient Computational Effort"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nSensitive information should never be stored in plain text, since this makes it very easy for unauthorized users, whether malicious insiders or outside attackers, to access. Hashing methods are used to make stored passwords and other sensitive data unreadable to users. For example, when a password is defined for the first time, it is hashed and then stored. The next time that user attempts to log on, the password they enter is hashed following the same procedure and compared with the stored value. In this way, the original password never needs to be stored in the system.\n\nHashing is a one-way scheme, meaning a hashed password cannot be reverse engineered. However, if an outdated or custom programmed hashing scheme is used, it becomes simple for an attacker with powerful modern computing power to gain access to the hashes used. This opens up access to all stored password information, leading to breached security. Therefore, it is essential for developers to understand modern, secure password hashing techniques.\n\n### Best practices for prevention\n* Use strong standard algorithms for hashing rather than simpler but outdated methods or DIY hashing schemes, which may have inherent weaknesses.\n* Use modular design for all code dealing with hashing so it can be swapped out as security standards change over time.\n* Use salting in combination with hashing (While this places more demands on resources, it is an essential step for tighter security.).\n* Implement zero-trust architecture to ensure that access to password data is granted only for legitimate business purposes.\n* Increase developer awareness of current standards in data security and cryptography.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/tita/tita/commit/398f6b776a2aea7f20bf604768b8721beff8d93a?diff=split#diff-dd34c5e6a15ca48bff6f9ca749e68243L164",
                    "lines": [
                      {
                        "line": " */",
                        "lineNumber": 161,
                        "lineChange": "none"
                      },
                      {
                        "line": "private String getHashedPassword(String pwd) throws NoSuchAlgorithmException {",
                        "lineNumber": 162,
                        "lineChange": "none"
                      },
                      {
                        "line": "    MessageDigest md = MessageDigest.getInstance(\"SHA-1\");",
                        "lineNumber": 163,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    MessageDigest md = MessageDigest.getInstance(\"SHA-256\");",
                        "lineNumber": 103,
                        "lineChange": "added"
                      },
                      {
                        "line": "    byte[] encryptMsg = md.digest(pwd.getBytes());",
                        "lineNumber": 164,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return new String(encryptMsg);",
                        "lineNumber": 165,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    return bytes2String(encryptMsg);",
                        "lineNumber": 105,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/devonfw/my-thai-star/commit/095a3fb6bb860a2411cb51e812121ec2a6b99894?diff=split#diff-4f73d1042058dd462057744068125d4eL242",
                    "lines": [
                      {
                        "line": "    + String.format(\"%02d\", ldt1.getSecond());",
                        "lineNumber": 240,
                        "lineChange": "none"
                      },
                      {
                        "line": "MessageDigest md = MessageDigest.getInstance(\"MD5\");",
                        "lineNumber": 241,
                        "lineChange": "removed"
                      },
                      {
                        "line": "MessageDigest md = MessageDigest.getInstance(\"SHA-256\");",
                        "lineNumber": 242,
                        "lineChange": "added"
                      },
                      {
                        "line": "md.update((email + date + time).getBytes());",
                        "lineNumber": 243,
                        "lineChange": "none"
                      },
                      {
                        "line": "byte[] digest = md.digest();",
                        "lineNumber": 244,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/SecurityCompass/AndroidLabs/commit/5608f75dd665beac85dbad08f80b91d73b27904a?diff=split#diff-ffc047d4a5f84de13e373f2392bfb11bL148",
                    "lines": [
                      {
                        "line": "byte[] passwordBytes = (password).getBytes(\"UTF-8\");",
                        "lineNumber": 145,
                        "lineChange": "none"
                      },
                      {
                        "line": "MessageDigest md = MessageDigest.getInstance(\"SHA-1\");",
                        "lineNumber": 147,
                        "lineChange": "removed"
                      },
                      {
                        "line": "MessageDigest md = MessageDigest.getInstance(\"SHA-256\");",
                        "lineNumber": 147,
                        "lineChange": "added"
                      },
                      {
                        "line": "md.reset();",
                        "lineNumber": 148,
                        "lineChange": "none"
                      },
                      {
                        "line": "md.update(salt);",
                        "lineNumber": 149,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Added an enum for the supported encryption algorithms",
                  "Added #hash(byte[], String)",
                  "Added support for\nsha256 and nonce token."
                ],
                "precision": "very-high",
                "repoDatasetSize": 122,
                "cwe": [
                  "CWE-916"
                ]
              }
            },
            {
              "id": "python/Ssrf",
              "name": "Ssrf",
              "shortDescription": {
                "text": "Server-Side Request Forgery (SSRF)"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\nIn a server-side request forgery attack, a malicious user supplies a URL (an external URL or a network IP address such as 127.0.0.1) to the application's back end. The server then accesses the URL and shares its results, which may include sensitive information such as AWS metadata, internal configuration information, or database contents with the attacker. Because the request comes from the back end, it bypasses access controls, potentially exposing information the user does not have sufficient privileges to receive. The attacker can then exploit this information to gain access, modify the web application, or demand a ransom payment.\n\n### Best practices for prevention\n* Blacklists are problematic and attackers have numerous ways to bypass them; ideally, use a whitelist of all permitted domains and IP addresses.\n* Use authentication even within your own network to prevent exploitation of server-side requests.\n* Implement zero trust and sanitize and validate all URL and header data returning to the server from the user. Strip invalid or suspect characters, then inspect to be certain it contains a valid and expected value.\n* Ideally, avoid sending server requests based on user-provided data altogether.\n* Ensure that you are not sending raw response bodies from the server directly to the client. Only deliver expected responses.\n* Disable suspect and exploitable URL schemas. Common culprits include obscure and little-used schemas such as `file://`, `dict://`, `ftp://`, and `gopher://`.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 0,
                "cwe": [
                  "CWE-918"
                ]
              }
            },
            {
              "id": "java/PT",
              "name": "PT",
              "shortDescription": {
                "text": "Path Traversal"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nBeing able to access and manipulate an arbitrary path leads to vulnerabilities when a program is being run with privileges that the user providing the path should not have. A website with a path traversal vulnerability would allow users access to sensitive files on the server hosting it. CLI programs may also be vulnerable to path traversal if they are being ran with elevated privileges (such as with the setuid or setgid flags in Unix systems).\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`.\n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/google/j2objc/commit/1b271d8b25c99a91547a19f16f71c048c3164156?diff=split#diff-33b6b27033cb88022415e8cd32b1807cL244",
                    "lines": [
                      {
                        "line": " * Extract a ZipEntry to the specified directory.",
                        "lineNumber": 241,
                        "lineChange": "none"
                      },
                      {
                        "line": " */",
                        "lineNumber": 242,
                        "lineChange": "none"
                      },
                      {
                        "line": "public File extractZipEntry(File dir, ZipFile zipFile, ZipEntry entry) throws IOException {",
                        "lineNumber": 243,
                        "lineChange": "none"
                      },
                      {
                        "line": "  File outputFile = new File(dir, entry.getName());",
                        "lineNumber": 244,
                        "lineChange": "none"
                      },
                      {
                        "line": "  File parentFile = outputFile.getParentFile();",
                        "lineNumber": 245,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if (!parentFile.isDirectory() && !parentFile.mkdirs()) {",
                        "lineNumber": 246,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    throw new IOException(\"Could not extract file to \" + dir.getPath());",
                        "lineNumber": 247,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  if (!outputFile.getCanonicalPath().startsWith(dir.getCanonicalPath() + File.separator)",
                        "lineNumber": 246,
                        "lineChange": "added"
                      },
                      {
                        "line": "      || (!parentFile.isDirectory() && !parentFile.mkdirs())) {",
                        "lineNumber": 247,
                        "lineChange": "added"
                      },
                      {
                        "line": "    throw new IOException(\"Could not extract \" + entry.getName() + \" to \" + dir.getPath());",
                        "lineNumber": 248,
                        "lineChange": "added"
                      },
                      {
                        "line": "  }",
                        "lineNumber": 249,
                        "lineChange": "none"
                      },
                      {
                        "line": "  try (InputStream inputStream = zipFile.getInputStream(entry);",
                        "lineNumber": 250,
                        "lineChange": "none"
                      },
                      {
                        "line": "      FileOutputStream outputStream = new FileOutputStream(outputFile)) {",
                        "lineNumber": 251,
                        "lineChange": "none"
                      },
                      {
                        "line": "    byte[] buf = new byte[1024];",
                        "lineNumber": 252,
                        "lineChange": "none"
                      },
                      {
                        "line": "    int n;",
                        "lineNumber": 253,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/blackducksoftware/synopsys-detect/commit/36555b9322986e9560f241d05f2262c29a17663b?diff=split#diff-bc0b5be9b9918488d8fe1dc64584df62L48",
                    "lines": [
                      {
                        "line": "Enumeration<? extends ZipEntry> entries = zipFile.entries();",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "while (entries.hasMoreElements()) {",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "    ZipEntry entry = entries.nextElement();",
                        "lineNumber": 47,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Path entryPath = destPath.resolve(entry.getName());",
                        "lineNumber": 48,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (!entryPath.normalize().startsWith(dest.toPath()))",
                        "lineNumber": 49,
                        "lineChange": "added"
                      },
                      {
                        "line": "        throw new IOException(\"Zip entry contained path traversal\");",
                        "lineNumber": 50,
                        "lineChange": "added"
                      },
                      {
                        "line": "    if (entry.isDirectory()) {",
                        "lineNumber": 51,
                        "lineChange": "none"
                      },
                      {
                        "line": "        Files.createDirectories(entryPath);",
                        "lineNumber": 52,
                        "lineChange": "none"
                      },
                      {
                        "line": "    } else {",
                        "lineNumber": 53,
                        "lineChange": "none"
                      },
                      {
                        "line": "        Files.createDirectories(entryPath.getParent());",
                        "lineNumber": 54,
                        "lineChange": "none"
                      },
                      {
                        "line": "        try (InputStream in = zipFile.getInputStream(entry)) {",
                        "lineNumber": 55,
                        "lineChange": "none"
                      },
                      {
                        "line": "            try (OutputStream out = new FileOutputStream(entryPath.toFile())) {",
                        "lineNumber": 56,
                        "lineChange": "none"
                      },
                      {
                        "line": "                IOUtils.copy(in, out);",
                        "lineNumber": 57,
                        "lineChange": "none"
                      },
                      {
                        "line": "            }",
                        "lineNumber": 58,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/azkaban/azkaban/commit/3b74a4127c9086cd525252edabc3621febab0428?diff=split#diff-c892cca6401b1e0be4cbca3261b47098L201",
                    "lines": [
                      {
                        "line": "final Enumeration<?> entries = source.entries();",
                        "lineNumber": 198,
                        "lineChange": "none"
                      },
                      {
                        "line": "while (entries.hasMoreElements()) {",
                        "lineNumber": 199,
                        "lineChange": "none"
                      },
                      {
                        "line": "  final ZipEntry entry = (ZipEntry) entries.nextElement();",
                        "lineNumber": 200,
                        "lineChange": "none"
                      },
                      {
                        "line": "  final File newFile = new File(dest, entry.getName());",
                        "lineNumber": 201,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if (!newFile.getCanonicalPath().startsWith(dest.getCanonicalPath())) {",
                        "lineNumber": 202,
                        "lineChange": "added"
                      },
                      {
                        "line": "    throw new IOException(",
                        "lineNumber": 203,
                        "lineChange": "added"
                      },
                      {
                        "line": "        \"Extracting zip entry would have resulted in a file outside the specified destination\"",
                        "lineNumber": 204,
                        "lineChange": "added"
                      },
                      {
                        "line": "if (entry.isDirectory()) {",
                        "lineNumber": 208,
                        "lineChange": "none"
                      },
                      {
                        "line": "  newFile.mkdirs();",
                        "lineNumber": 209,
                        "lineChange": "none"
                      },
                      {
                        "line": "} else {",
                        "lineNumber": 210,
                        "lineChange": "none"
                      },
                      {
                        "line": "  newFile.getParentFile().mkdirs();",
                        "lineNumber": 211,
                        "lineChange": "none"
                      },
                      {
                        "line": "  final InputStream src = source.getInputStream(entry);",
                        "lineNumber": 212,
                        "lineChange": "none"
                      },
                      {
                        "line": "  try {",
                        "lineNumber": 213,
                        "lineChange": "none"
                      },
                      {
                        "line": "    final OutputStream output =",
                        "lineNumber": 214,
                        "lineChange": "none"
                      },
                      {
                        "line": "        new BufferedOutputStream(new FileOutputStream(newFile));",
                        "lineNumber": 215,
                        "lineChange": "none"
                      },
                      {
                        "line": "    try {",
                        "lineNumber": 216,
                        "lineChange": "none"
                      },
                      {
                        "line": "      IOUtils.copy(src, output);",
                        "lineNumber": 217,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Test changed key to file.",
                  "* more code cleanup, some tests",
                  "Add option --xcode for Xcode translation testing"
                ],
                "precision": "very-high",
                "repoDatasetSize": 948,
                "cwe": [
                  "CWE-23"
                ]
              }
            },
            {
              "id": "java/Ssrf",
              "name": "Ssrf",
              "shortDescription": {
                "text": "Server-Side Request Forgery (SSRF)"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "\n## Details\nIn a server-side request forgery attack, a malicious user supplies a URL (an external URL or a network IP address such as 127.0.0.1) to the application's back end. The server then accesses the URL and shares its results, which may include sensitive information such as AWS metadata, internal configuration information, or database contents with the attacker. Because the request comes from the back end, it bypasses access controls, potentially exposing information the user does not have sufficient privileges to receive. The attacker can then exploit this information to gain access, modify the web application, or demand a ransom payment.\n\n### Best practices for prevention\n* Blacklists are problematic and attackers have numerous ways to bypass them; ideally, use a whitelist of all permitted domains and IP addresses.\n* Use authentication even within your own network to prevent exploitation of server-side requests.\n* Implement zero trust and sanitize and validate all URL and header data returning to the server from the user. Strip invalid or suspect characters, then inspect to be certain it contains a valid and expected value.\n* Ideally, avoid sending server requests based on user-provided data altogether.\n* Ensure that you are not sending raw response bodies from the server directly to the client. Only deliver expected responses.\n* Disable suspect and exploitable URL schemas. Common culprits include obscure and little-used schemas such as `file://`, `dict://`, `ftp://`, and `gopher://`.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/httpcache4j/httpcache4j/commit/81f9db7ad6e7e18227b8b5de717c580da15ed7ae?diff=split#diff-99799647d646d0fff0a1b4b465dd5de0L49",
                    "lines": [
                      {
                        "line": "public HTTPResponse resolve(HTTPRequest request) throws IOException {",
                        "lineNumber": 47,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    req = getAuthenticator().preparePreemptiveAuthentication(req);",
                        "lineNumber": 50,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 51,
                        "lineChange": "added"
                      },
                      {
                        "line": "URL url = request.getRequestURI().toURL();",
                        "lineNumber": 52,
                        "lineChange": "none"
                      },
                      {
                        "line": "URLConnection openConnection = url.openConnection();",
                        "lineNumber": 53,
                        "lineChange": "none"
                      },
                      {
                        "line": "if (openConnection instanceof HttpURLConnection) {",
                        "lineNumber": 54,
                        "lineChange": "none"
                      },
                      {
                        "line": "    HttpURLConnection connection = (HttpURLConnection) openConnection;",
                        "lineNumber": 55,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/LearnLib/alex/commit/cb22c1446dfa65bb405f50baa79ba77866c4c706?diff=split#diff-1723d8f955b61289dccacfea34e7737dL58",
                    "lines": [
                      {
                        "line": "@GET",
                        "lineNumber": 55,
                        "lineChange": "none"
                      },
                      {
                        "line": "@Produces(MediaType.TEXT_HTML)",
                        "lineNumber": 56,
                        "lineChange": "none"
                      },
                      {
                        "line": "public Response doGetProxy(@QueryParam(\"url\") String url, @HeaderParam(\"Cookie\") String cookies) {",
                        "lineNumber": 57,
                        "lineChange": "none"
                      },
                      {
                        "line": "    LOGGER.trace(\"IFrameProxyResource.doGetProxy(\" + url + \", \" + cookies + \").\");",
                        "lineNumber": 58,
                        "lineChange": "added"
                      },
                      {
                        "line": "    try {",
                        "lineNumber": 60,
                        "lineChange": "none"
                      },
                      {
                        "line": "        Connection connection = Jsoup.connect(url);",
                        "lineNumber": 61,
                        "lineChange": "none"
                      },
                      {
                        "line": "        connection = parseAndProcessCookies(connection, cookies);",
                        "lineNumber": 62,
                        "lineChange": "none"
                      },
                      {
                        "line": "        connection = connection.method(Connection.Method.GET);",
                        "lineNumber": 63,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/dotnet/aspnetcore/commit/e089cfc11cb86d6da786d82ee92aeef1c903f0f5?diff=split#diff-f69c44e82917810b055809e4c47c7e7dL84",
                    "lines": [
                      {
                        "line": "@Override",
                        "lineNumber": 94,
                        "lineChange": "none"
                      },
                      {
                        "line": "public Single<HttpResponse> send(HttpRequest httpRequest) {",
                        "lineNumber": 95,
                        "lineChange": "none"
                      },
                      {
                        "line": "@Override",
                        "lineNumber": 99,
                        "lineChange": "added"
                      },
                      {
                        "line": "public Single<HttpResponse> send(HttpRequest httpRequest, String bodyContent) {",
                        "lineNumber": 100,
                        "lineChange": "added"
                      },
                      {
                        "line": "    Request.Builder requestBuilder = new Request.Builder().url(httpRequest.getUrl());",
                        "lineNumber": 101,
                        "lineChange": "none"
                      },
                      {
                        "line": "    switch (httpRequest.getMethod()) {",
                        "lineNumber": 103,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Support Java 8 class files",
                  "- app requests work in tests",
                  "* Add logic to catch unranked hiscores and display them properly."
                ],
                "precision": "very-high",
                "repoDatasetSize": 233,
                "cwe": [
                  "CWE-918"
                ]
              }
            },
            {
              "id": "python/InsecureXmlParser",
              "name": "InsecureXmlParser",
              "shortDescription": {
                "text": "Insecure Xml Parser"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nFor convenience, XML documents can use system identifiers to enable access to stored content, whether local or remote. The XML processor then uses the system identifier to access the resource rather than using the URI. When this weakness exists, the application permits user-supplied data, which could include the address of an XML external identity, to be passed directly to the XML parser. The application will then attempt to retrieve documents from outside of secure, controlled areas.\n\nAttackers can exploit this weakness to expose sensitive data, execute port scanning on the server side, or launch a denial-of-service attack (DoS) such as Billion Laughs.\n\n### Best practices for prevention\n* Avoid using vulnerable APIs\n* When possible, disable loading of data from external entities. The method of doing this will vary based on the language and XML parser being used.\n* Use a local, static document type definitions (DTDs) and ensure that external DTDs are disallowed entirely.\n* If user input cannot be avoided, perform validation against an allowlist of possible data sources. However, as long as external DTDs are allowed, XML code remains inherently vulnerable to attacks exploiting this weakness.\n\n\n## References\n* [XML vulnerabilities](https://docs.python.org/3/library/xml.html#xml-vulnerabilities)",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/AcutronicRobotics/HRIM/commit/250c0c6fbccf7d1584927c2e7dd3761ae1c97012?diff=split#diff-c98fee250d6c0852708b3e48b7c79662L21",
                    "lines": [
                      {
                        "line": "                     choices=component_type_array)",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "args = parser.parse_args()",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "tree = et.parse(args.filename)",
                        "lineNumber": 20,
                        "lineChange": "removed"
                      },
                      {
                        "line": "tree = parse(args.filename)",
                        "lineNumber": 20,
                        "lineChange": "added"
                      },
                      {
                        "line": "root = tree.getroot()",
                        "lineNumber": 21,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/moloch--/RootTheBox/commit/49d8f3f218c10aa71697fab2aab7d4eebbbc2618?diff=split#diff-f03054770abb9c24ad726a4465460150L124",
                    "lines": [
                      {
                        "line": "try:",
                        "lineNumber": 124,
                        "lineChange": "none"
                      },
                      {
                        "line": "    tree = ET.parse(filename)",
                        "lineNumber": 125,
                        "lineChange": "none"
                      },
                      {
                        "line": "except Exception as error:",
                        "lineNumber": 124,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    print(WARN+\"ERROR: \" + str(error))",
                        "lineNumber": 125,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    xml_root = tree.getroot()",
                        "lineNumber": 126,
                        "lineChange": "added"
                      },
                      {
                        "line": "    levels = get_child_by_tag(xml_root, \"gamelevels\")",
                        "lineNumber": 127,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/eucalyptus/eucaconsole/commit/62b8abc0b08531e1145d48f6951ebc7bd6afc735?diff=split#diff-c8dbccf4ef1ce28db5c8808ff9d73422L293",
                    "lines": [
                      {
                        "line": "    creds = Credentials()",
                        "lineNumber": 291,
                        "lineChange": "none"
                      },
                      {
                        "line": "    h = BotoXmlHandler(creds, None)",
                        "lineNumber": 292,
                        "lineChange": "none"
                      },
                      {
                        "line": "    xml.sax.parseString(body, h)",
                        "lineNumber": 292,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    parseString(body, h)",
                        "lineNumber": 293,
                        "lineChange": "added"
                      },
                      {
                        "line": "    return creds",
                        "lineNumber": 294,
                        "lineChange": "none"
                      },
                      {
                        "line": "except SSLError as err:",
                        "lineNumber": 295,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Use defusedxml in server code ()",
                  "using defusedxml ElementTree for safer parsing of untrusted XML data ()"
                ],
                "precision": "very-high",
                "repoDatasetSize": 32,
                "cwe": [
                  "CWE-611"
                ]
              }
            },
            {
              "id": "java/IndirectCommandInjection",
              "name": "IndirectCommandInjection",
              "shortDescription": {
                "text": "Command Injection"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "## Details\n\nWith an OS command injection attack a web application user can pass commands directly to the system shell, attached to a legitimate request. These commands can then be executed on the application server, potentially leading to harmful consequences, including data exposure or deletion. Like code injection attacks, command injection attacks are essentially a failure of data validation. Unlike code injection attacks, which introduce new code, command injection attacks use existing system functions, often taking advantage of the application's unnecessarily high privilege level, increasing the risk of serious harm and reputational damage.\n\n### Best practices for prevention\n- Never trust user input. Assume any input may transmit harmful values.\n- Adopt the principle of least privilege: No application should have a greater access level than needed to run its required tasks.\n- Control user access policies on a task-by-task basis.\n- Don't pass user input directly to the system; use libraries or APIs that lack system access.\n- Where shell commands must be passed, escape values using functions like shlex for Python, or escapeshellarg() for PHP.\n- Sanitize user input with regular expressions to define permitted characters along with maximum string length.\n- Convert special characters such as `& |  ; $ > < \\ !` before passing to the server.\n- Whitelist permitted commands and validate user responses against these expectations.\n- Remember that code injection can take place on multiple fronts: GET and POST requests, but also cookies and HTTP headers.\n- Ensure up-to-date patching across all systems to remediate known vulnerabilities.\n- Educate all team members on safer data handling procedures to prevent attacks.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/apache/joshua/commit/92c797ffdee361adfdf10c91afe7af08d29e6e17?diff=split#diff-438e6e2bf8732a786b739705b7382c48L125",
                    "lines": [
                      {
                        "line": "static String decoderConfigFileName, decoderCommandFileName;",
                        "lineNumber": 126,
                        "lineChange": "none"
                      },
                      {
                        "line": "public static void main(String[] args) throws Exception",
                        "lineNumber": 128,
                        "lineChange": "none"
                      },
                      {
                        "line": "{",
                        "lineNumber": 129,
                        "lineChange": "none"
                      },
                      {
                        "line": "  EvaluationMetric.set_knownNames();",
                        "lineNumber": 130,
                        "lineChange": "none"
                      },
                      {
                        "line": "  System.exit(0);",
                        "lineNumber": 134,
                        "lineChange": "none"
                      },
                      {
                        "line": "} else if (args.length == 1) {",
                        "lineNumber": 135,
                        "lineChange": "none"
                      },
                      {
                        "line": "  processArgsArray(cfgFileToArgsArray(args[0]));",
                        "lineNumber": 136,
                        "lineChange": "none"
                      },
                      {
                        "line": "} else {",
                        "lineNumber": 137,
                        "lineChange": "none"
                      },
                      {
                        "line": "  processArgsArray(args);",
                        "lineNumber": 138,
                        "lineChange": "none"
                      },
                      {
                        "line": "for (int r = 0; r < refsPerSen; ++r) {",
                        "lineNumber": 149,
                        "lineChange": "none"
                      },
                      {
                        "line": "  println(\"Testing evaluation metric calculation on reference set \" + r + \":\",2);",
                        "lineNumber": 150,
                        "lineChange": "none"
                      },
                      {
                        "line": "  test_score(refFileName, refsPerSen, r, true,2);",
                        "lineNumber": 151,
                        "lineChange": "none"
                      },
                      {
                        "line": "  println(\"\",2);",
                        "lineNumber": 152,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 153,
                        "lineChange": "none"
                      },
                      {
                        "line": "println(\"\",1);",
                        "lineNumber": 189,
                        "lineChange": "none"
                      },
                      {
                        "line": "numParams = countLines(paramsFileName);",
                        "lineNumber": 191,
                        "lineChange": "none"
                      },
                      {
                        "line": "numSentences = countLines(sourceFileName);",
                        "lineNumber": 192,
                        "lineChange": "none"
                      },
                      {
                        "line": "if (numSentences * refsPerSen != countLines(refFileName)) {",
                        "lineNumber": 194,
                        "lineChange": "none"
                      },
                      {
                        "line": "  println(\"Line count mismatch between \" + sourceFileName + \" and \" + refFileName);",
                        "lineNumber": 195,
                        "lineChange": "none"
                      },
                      {
                        "line": "  System.exit(20);",
                        "lineNumber": 196,
                        "lineChange": "none"
                      },
                      {
                        "line": "// create copy of config file",
                        "lineNumber": 200,
                        "lineChange": "none"
                      },
                      {
                        "line": "copyFile(decoderConfigFileName,decoderConfigFileName+\".orig.MERT\");",
                        "lineNumber": 201,
                        "lineChange": "none"
                      },
                      {
                        "line": "// read paramter names",
                        "lineNumber": 212,
                        "lineChange": "none"
                      },
                      {
                        "line": "BufferedReader inFile_names = new BufferedReader(new FileReader(paramsFileName));",
                        "lineNumber": 213,
                        "lineChange": "none"
                      },
                      {
                        "line": "for (int c = 1; c <= numParams; ++c) {",
                        "lineNumber": 215,
                        "lineChange": "none"
                      },
                      {
                        "line": "// initialize lambda[]",
                        "lineNumber": 223,
                        "lineChange": "none"
                      },
                      {
                        "line": "Scanner inFile_init = new Scanner(new FileReader(paramsFileName));",
                        "lineNumber": 224,
                        "lineChange": "none"
                      },
                      {
                        "line": "String dummy = \"\";",
                        "lineNumber": 226,
                        "lineChange": "none"
                      },
                      {
                        "line": "// read in reference sentences",
                        "lineNumber": 280,
                        "lineChange": "none"
                      },
                      {
                        "line": "BufferedReader inFile_refs = new BufferedReader(new FileReader(refFileName));",
                        "lineNumber": 282,
                        "lineChange": "none"
                      },
                      {
                        "line": "String line;",
                        "lineNumber": 283,
                        "lineChange": "none"
                      },
                      {
                        "line": "// read in decoder command",
                        "lineNumber": 296,
                        "lineChange": "none"
                      },
                      {
                        "line": "BufferedReader inFile_comm = new BufferedReader(new FileReader(decoderCommandFileName));",
                        "lineNumber": 298,
                        "lineChange": "none"
                      },
                      {
                        "line": "decoderCommand = inFile_comm.readLine();",
                        "lineNumber": 299,
                        "lineChange": "none"
                      },
                      {
                        "line": "inFile_comm.close();",
                        "lineNumber": 300,
                        "lineChange": "none"
                      },
                      {
                        "line": "/******************************/",
                        "lineNumber": 415,
                        "lineChange": "none"
                      },
                      {
                        "line": "createConfigFile(lambda,decoderConfigFileName,decoderConfigFileName+\".orig.MERT\");",
                        "lineNumber": 417,
                        "lineChange": "none"
                      },
                      {
                        "line": "/***************/",
                        "lineNumber": 419,
                        "lineChange": "none"
                      },
                      {
                        "line": " ",
                        "lineNumber": 422,
                        "lineChange": "none"
                      },
                      {
                        "line": "      println(\"Running Joshua decoder...\",1);",
                        "lineNumber": 423,
                        "lineChange": "added"
                      },
                      {
                        "line": "      myDecoder.initializeDecoder(decoderConfigFileName);",
                        "lineNumber": 424,
                        "lineChange": "added"
                      },
                      {
                        "line": "      myDecoder.decodingTestSet(sourceFileName, decoderOutFileName);",
                        "lineNumber": 425,
                        "lineChange": "added"
                      },
                      {
                        "line": "/*",
                        "lineNumber": 427,
                        "lineChange": "added"
                      },
                      {
                        "line": "      println(\"Running decoder...\",1);",
                        "lineNumber": 428,
                        "lineChange": "none"
                      },
                      {
                        "line": " ",
                        "lineNumber": 429,
                        "lineChange": "none"
                      },
                      {
                        "line": "      Runtime rt = Runtime.getRuntime();",
                        "lineNumber": 430,
                        "lineChange": "none"
                      },
                      {
                        "line": "      Process p = rt.exec (decoderCommand);",
                        "lineNumber": 431,
                        "lineChange": "none"
                      },
                      {
                        "line": "      InputStream is = p.getErrorStream();",
                        "lineNumber": 432,
                        "lineChange": "none"
                      },
                      {
                        "line": "      InputStreamReader isr = new InputStreamReader(is);",
                        "lineNumber": 433,
                        "lineChange": "none"
                      },
                      {
                        "line": "println(\"Ensuring proper decoder output.\",2);",
                        "lineNumber": 451,
                        "lineChange": "none"
                      },
                      {
                        "line": "checkFile(decoderOutFileName);",
                        "lineNumber": 453,
                        "lineChange": "none"
                      },
                      {
                        "line": "fixDecoderOutput();",
                        "lineNumber": 455,
                        "lineChange": "none"
                      },
                      {
                        "line": "progress = 0;",
                        "lineNumber": 461,
                        "lineChange": "none"
                      },
                      {
                        "line": "BufferedReader inFile = new BufferedReader(new FileReader(decoderOutFileName));",
                        "lineNumber": 463,
                        "lineChange": "none"
                      },
                      {
                        "line": "String line, candidate_str;",
                        "lineNumber": 464,
                        "lineChange": "none"
                      },
                      {
                        "line": "if (saveInterCfg) {",
                        "lineNumber": 635,
                        "lineChange": "none"
                      },
                      {
                        "line": "  // create config file with current values",
                        "lineNumber": 636,
                        "lineChange": "none"
                      },
                      {
                        "line": "  createConfigFile(lambda, decoderConfigFileName+\".\"+iteration,decoderConfigFileName+\".orig.MERT\");",
                        "lineNumber": 637,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 638,
                        "lineChange": "none"
                      },
                      {
                        "line": "private static void fixDecoderOutput() throws Exception",
                        "lineNumber": 983,
                        "lineChange": "none"
                      },
                      {
                        "line": "{",
                        "lineNumber": 984,
                        "lineChange": "none"
                      },
                      {
                        "line": "  copyFile(decoderOutFileName,decoderOutFileName+\".temp.MERT\");",
                        "lineNumber": 985,
                        "lineChange": "none"
                      },
                      {
                        "line": "  BufferedReader inFile = new BufferedReader(new FileReader(decoderOutFileName+\".temp.MERT\"));",
                        "lineNumber": 986,
                        "lineChange": "none"
                      },
                      {
                        "line": "  PrintWriter outFile = new PrintWriter(decoderOutFileName);",
                        "lineNumber": 987,
                        "lineChange": "none"
                      },
                      {
                        "line": "  String line, prevLine;",
                        "lineNumber": 988,
                        "lineChange": "none"
                      },
                      {
                        "line": "  // delete temp copy of old decoder output",
                        "lineNumber": 1033,
                        "lineChange": "none"
                      },
                      {
                        "line": "  File cp = new File(decoderOutFileName+\".temp.MERT\");",
                        "lineNumber": 1034,
                        "lineChange": "none"
                      },
                      {
                        "line": "  cp.delete();",
                        "lineNumber": 1035,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 1037,
                        "lineChange": "none"
                      },
                      {
                        "line": "private static void createConfigFile(double[] params, String cfgFileName, String templateFileName) throws Exception",
                        "lineNumber": 1039,
                        "lineChange": "none"
                      },
                      {
                        "line": "{",
                        "lineNumber": 1040,
                        "lineChange": "none"
                      },
                      {
                        "line": "  // i.e. create cfgFileName, which is similar to templateFileName, but with",
                        "lineNumber": 1041,
                        "lineChange": "none"
                      },
                      {
                        "line": "BufferedReader inFile = new BufferedReader(new FileReader(templateFileName));",
                        "lineNumber": 1044,
                        "lineChange": "none"
                      },
                      {
                        "line": "PrintWriter outFile = new PrintWriter(cfgFileName);",
                        "lineNumber": 1045,
                        "lineChange": "none"
                      },
                      {
                        "line": "String line = inFile.readLine();",
                        "lineNumber": 1047,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 1067,
                        "lineChange": "none"
                      },
                      {
                        "line": "private static void copyFile(String sourceFileName, String targetFileName) throws Exception",
                        "lineNumber": 1069,
                        "lineChange": "none"
                      },
                      {
                        "line": "{",
                        "lineNumber": 1070,
                        "lineChange": "none"
                      },
                      {
                        "line": "  InputStream inStream = new FileInputStream(new File(sourceFileName));",
                        "lineNumber": 1071,
                        "lineChange": "none"
                      },
                      {
                        "line": "  BufferedReader inFile = new BufferedReader(new InputStreamReader(inStream, \"utf8\"));",
                        "lineNumber": 1072,
                        "lineChange": "none"
                      },
                      {
                        "line": "private static void test_score(String inFileName, int candPerSen, int testIndex, boolean isRefFile, int v) throws Exception",
                        "lineNumber": 1097,
                        "lineChange": "none"
                      },
                      {
                        "line": "{",
                        "lineNumber": 1098,
                        "lineChange": "none"
                      },
                      {
                        "line": "    // test that the translations in inFileName get the expected scores",
                        "lineNumber": 1099,
                        "lineChange": "none"
                      },
                      {
                        "line": "SentenceInfo[] candSentenceInfo = new SentenceInfo[numSentences];",
                        "lineNumber": 1118,
                        "lineChange": "none"
                      },
                      {
                        "line": "BufferedReader inFile = new BufferedReader(new FileReader(inFileName));",
                        "lineNumber": 1120,
                        "lineChange": "none"
                      },
                      {
                        "line": "String line, candidate_str;",
                        "lineNumber": 1121,
                        "lineChange": "none"
                      },
                      {
                        "line": "SentenceInfo[] candSentenceInfo = new SentenceInfo[numSentences];",
                        "lineNumber": 1164,
                        "lineChange": "none"
                      },
                      {
                        "line": "BufferedReader inFile = new BufferedReader(new FileReader(decoderOutFileName));",
                        "lineNumber": 1166,
                        "lineChange": "none"
                      },
                      {
                        "line": "String line, candidate_str;",
                        "lineNumber": 1167,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 1252,
                        "lineChange": "none"
                      },
                      {
                        "line": "private static String[] cfgFileToArgsArray(String fileName) throws Exception",
                        "lineNumber": 1254,
                        "lineChange": "none"
                      },
                      {
                        "line": "{",
                        "lineNumber": 1255,
                        "lineChange": "none"
                      },
                      {
                        "line": "  checkFile(fileName);",
                        "lineNumber": 1256,
                        "lineChange": "none"
                      },
                      {
                        "line": "while (i < args.length) {",
                        "lineNumber": 1331,
                        "lineChange": "none"
                      },
                      {
                        "line": "  String option = args[i];",
                        "lineNumber": 1332,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if (option.equals(\"-s\")) { sourceFileName = args[i+1]; }",
                        "lineNumber": 1333,
                        "lineChange": "none"
                      },
                      {
                        "line": "  else if (option.equals(\"-r\")) { refFileName = args[i+1]; }",
                        "lineNumber": 1334,
                        "lineChange": "none"
                      },
                      {
                        "line": "  else if (option.equals(\"-rps\")) {",
                        "lineNumber": 1335,
                        "lineChange": "none"
                      },
                      {
                        "line": "    refsPerSen = Integer.parseInt(args[i+1]);",
                        "lineNumber": 1336,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if (maxGramLength < 1) { println(\"maxGramLength must be positive.\"); System.exit(10); }",
                        "lineNumber": 1341,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 1342,
                        "lineChange": "none"
                      },
                      {
                        "line": "else if (option.equals(\"-decOut\")) { decoderOutFileName = args[i+1]; }",
                        "lineNumber": 1343,
                        "lineChange": "none"
                      },
                      {
                        "line": "else if (option.equals(\"-decExit\")) {",
                        "lineNumber": 1344,
                        "lineChange": "none"
                      },
                      {
                        "line": "  validDecoderExitValue = Integer.parseInt(args[i+1]);",
                        "lineNumber": 1345,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 1346,
                        "lineChange": "none"
                      },
                      {
                        "line": "else if (option.equals(\"-dir\")) { dirPrefix = args[i+1]; }",
                        "lineNumber": 1347,
                        "lineChange": "none"
                      },
                      {
                        "line": "else if (option.equals(\"-p\")) { paramsFileName = args[i+1]; }",
                        "lineNumber": 1348,
                        "lineChange": "none"
                      },
                      {
                        "line": "else if (option.equals(\"-rand\")) {",
                        "lineNumber": 1349,
                        "lineChange": "none"
                      },
                      {
                        "line": "  int rand = Integer.parseInt(args[i+1]);",
                        "lineNumber": 1350,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if (runCount < 1) { println(\"runCount must be positive.\"); System.exit(10); }",
                        "lineNumber": 1357,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 1358,
                        "lineChange": "none"
                      },
                      {
                        "line": "else if (option.equals(\"-fin\")) { finalLambdasFileName = args[i+1]; }",
                        "lineNumber": 1359,
                        "lineChange": "none"
                      },
                      {
                        "line": "else if (option.equals(\"-cmd\")) { decoderCommandFileName = args[i+1]; }",
                        "lineNumber": 1360,
                        "lineChange": "none"
                      },
                      {
                        "line": "else if (option.equals(\"-dcfg\")) { decoderConfigFileName = args[i+1]; }",
                        "lineNumber": 1361,
                        "lineChange": "none"
                      },
                      {
                        "line": "else if (option.equals(\"-save\")) {",
                        "lineNumber": 1362,
                        "lineChange": "none"
                      },
                      {
                        "line": "  int save = Integer.parseInt(args[i+1]);",
                        "lineNumber": 1363,
                        "lineChange": "none"
                      },
                      {
                        "line": "if (runCount > 1 && randInits == false) { println(\"For runCount > 1, randInits must be set to 1.\"); System.exit(10); }",
                        "lineNumber": 1408,
                        "lineChange": "none"
                      },
                      {
                        "line": "if (dirPrefix != null) {",
                        "lineNumber": 1410,
                        "lineChange": "none"
                      },
                      {
                        "line": "  sourceFileName = fullPath(dirPrefix,sourceFileName);",
                        "lineNumber": 1411,
                        "lineChange": "none"
                      },
                      {
                        "line": "  refFileName = fullPath(dirPrefix,refFileName);",
                        "lineNumber": 1412,
                        "lineChange": "none"
                      },
                      {
                        "line": "  decoderOutFileName = fullPath(dirPrefix,decoderOutFileName);",
                        "lineNumber": 1413,
                        "lineChange": "none"
                      },
                      {
                        "line": "  paramsFileName = fullPath(dirPrefix,paramsFileName);",
                        "lineNumber": 1414,
                        "lineChange": "none"
                      },
                      {
                        "line": "  finalLambdasFileName = fullPath(dirPrefix,finalLambdasFileName);",
                        "lineNumber": 1415,
                        "lineChange": "none"
                      },
                      {
                        "line": "  decoderCommandFileName = fullPath(dirPrefix,decoderCommandFileName);",
                        "lineNumber": 1416,
                        "lineChange": "none"
                      },
                      {
                        "line": "  decoderConfigFileName = fullPath(dirPrefix,decoderConfigFileName);",
                        "lineNumber": 1417,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 1418,
                        "lineChange": "none"
                      },
                      {
                        "line": "if (refsPerSen > 1) {",
                        "lineNumber": 1420,
                        "lineChange": "none"
                      },
                      {
                        "line": "  // the provided refFileName might be a prefix",
                        "lineNumber": 1421,
                        "lineChange": "none"
                      },
                      {
                        "line": "  File dummy = new File(refFileName);",
                        "lineNumber": 1422,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if (!dummy.exists()) {",
                        "lineNumber": 1423,
                        "lineChange": "none"
                      },
                      {
                        "line": "    refFileName = createUnifiedRefFile(refFileName,refsPerSen);",
                        "lineNumber": 1424,
                        "lineChange": "none"
                      },
                      {
                        "line": "  }",
                        "lineNumber": 1425,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 1426,
                        "lineChange": "none"
                      },
                      {
                        "line": "checkFile(sourceFileName);",
                        "lineNumber": 1428,
                        "lineChange": "none"
                      },
                      {
                        "line": "checkFile(paramsFileName);",
                        "lineNumber": 1429,
                        "lineChange": "none"
                      },
                      {
                        "line": "checkFile(decoderCommandFileName);",
                        "lineNumber": 1430,
                        "lineChange": "none"
                      },
                      {
                        "line": "checkFile(decoderConfigFileName);",
                        "lineNumber": 1431,
                        "lineChange": "none"
                      },
                      {
                        "line": "} // processArgs(String[] args)",
                        "lineNumber": 1443,
                        "lineChange": "none"
                      },
                      {
                        "line": "private static void checkFile(String fileName)",
                        "lineNumber": 1445,
                        "lineChange": "none"
                      },
                      {
                        "line": "{",
                        "lineNumber": 1446,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if (!fileExists(fileName)) {",
                        "lineNumber": 1447,
                        "lineChange": "none"
                      },
                      {
                        "line": "    println(\"The file \" + fileName + \" was not found!\");",
                        "lineNumber": 1448,
                        "lineChange": "none"
                      },
                      {
                        "line": "    System.exit(40);",
                        "lineNumber": 1449,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 1451,
                        "lineChange": "none"
                      },
                      {
                        "line": "private static boolean fileExists(String fileName)",
                        "lineNumber": 1453,
                        "lineChange": "none"
                      },
                      {
                        "line": "{",
                        "lineNumber": 1454,
                        "lineChange": "none"
                      },
                      {
                        "line": "  File checker = new File(fileName);",
                        "lineNumber": 1455,
                        "lineChange": "none"
                      },
                      {
                        "line": "  return checker.exists();",
                        "lineNumber": 1456,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 1457,
                        "lineChange": "none"
                      },
                      {
                        "line": "private static String createUnifiedRefFile(String prefix, int numFiles) throws Exception",
                        "lineNumber": 1459,
                        "lineChange": "none"
                      },
                      {
                        "line": "{",
                        "lineNumber": 1460,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if (numFiles < 2) {",
                        "lineNumber": 1461,
                        "lineChange": "none"
                      },
                      {
                        "line": "    println(\"Warning: createUnifiedRefFile called with numFiles = \" + numFiles + \"; doing nothing.\");",
                        "lineNumber": 1462,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return prefix;",
                        "lineNumber": 1463,
                        "lineChange": "none"
                      },
                      {
                        "line": "  } else {",
                        "lineNumber": 1464,
                        "lineChange": "none"
                      },
                      {
                        "line": "    File checker;",
                        "lineNumber": 1465,
                        "lineChange": "none"
                      },
                      {
                        "line": "    checker = new File(prefix+\"1\");",
                        "lineNumber": 1466,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (!checker.exists()) {",
                        "lineNumber": 1468,
                        "lineChange": "none"
                      },
                      {
                        "line": "      checker = new File(prefix+\".1\");",
                        "lineNumber": 1469,
                        "lineChange": "none"
                      },
                      {
                        "line": "      if (!checker.exists()) {",
                        "lineNumber": 1470,
                        "lineChange": "none"
                      },
                      {
                        "line": "        println(\"Can't find reference files.\");",
                        "lineNumber": 1471,
                        "lineChange": "none"
                      },
                      {
                        "line": "        System.exit(50);",
                        "lineNumber": 1472,
                        "lineChange": "none"
                      },
                      {
                        "line": "      } else {",
                        "lineNumber": 1473,
                        "lineChange": "none"
                      },
                      {
                        "line": "        prefix = prefix + \".\";",
                        "lineNumber": 1474,
                        "lineChange": "none"
                      },
                      {
                        "line": "      }",
                        "lineNumber": 1475,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }",
                        "lineNumber": 1476,
                        "lineChange": "none"
                      },
                      {
                        "line": "    String outFileName;",
                        "lineNumber": 1478,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (prefix.endsWith(\".\")) { outFileName = prefix+\"all\"; }",
                        "lineNumber": 1479,
                        "lineChange": "none"
                      },
                      {
                        "line": "    else { outFileName = prefix+\".all\"; }",
                        "lineNumber": 1480,
                        "lineChange": "none"
                      },
                      {
                        "line": "    PrintWriter outFile = new PrintWriter(outFileName);",
                        "lineNumber": 1482,
                        "lineChange": "none"
                      },
                      {
                        "line": "    BufferedReader[] inFile = new BufferedReader[numFiles];",
                        "lineNumber": 1484,
                        "lineChange": "none"
                      },
                      {
                        "line": "  for (int r = 0; r < numFiles; ++r) { inFile[r].close(); }",
                        "lineNumber": 1512,
                        "lineChange": "none"
                      },
                      {
                        "line": "  return outFileName;",
                        "lineNumber": 1514,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 1516,
                        "lineChange": "none"
                      },
                      {
                        "line": "} // createUnifiedRefFile(String prefix, int numFiles)",
                        "lineNumber": 1518,
                        "lineChange": "none"
                      },
                      {
                        "line": "private static int countLines(String fileName) throws Exception",
                        "lineNumber": 1520,
                        "lineChange": "none"
                      },
                      {
                        "line": "{",
                        "lineNumber": 1521,
                        "lineChange": "none"
                      },
                      {
                        "line": "  BufferedReader inFile = new BufferedReader(new FileReader(fileName));",
                        "lineNumber": 1522,
                        "lineChange": "none"
                      },
                      {
                        "line": "  String line;",
                        "lineNumber": 1524,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 1589,
                        "lineChange": "none"
                      },
                      {
                        "line": "private static String fullPath(String dir, String fileName)",
                        "lineNumber": 1591,
                        "lineChange": "none"
                      },
                      {
                        "line": "{",
                        "lineNumber": 1592,
                        "lineChange": "none"
                      },
                      {
                        "line": "  File dummyFile = new File(dir,fileName);",
                        "lineNumber": 1593,
                        "lineChange": "none"
                      },
                      {
                        "line": "  return dummyFile.getAbsolutePath();",
                        "lineNumber": 1594,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 1595,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/virtualcell/vcell/commit/7327deda4296af0f802e4b1a21ee47c013a708c6?diff=split#diff-efea0b403bca8feff6ef723e9fd1d2eaL16",
                    "lines": [
                      {
                        "line": " * @param args",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": " */",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "public static void main(String[] args) throws Exception{",
                        "lineNumber": 15,
                        "lineChange": "removed"
                      },
                      {
                        "line": "}",
                        "lineNumber": 55,
                        "lineChange": "added"
                      },
                      {
                        "line": "public static void main(String[] args){",
                        "lineNumber": 57,
                        "lineChange": "added"
                      },
                      {
                        "line": "  String action = args[0];",
                        "lineNumber": 58,
                        "lineChange": "added"
                      },
                      {
                        "line": "  String[] actionArgs = null;",
                        "lineNumber": 59,
                        "lineChange": "added"
                      },
                      {
                        "line": "  if(args.length > 1){",
                        "lineNumber": 60,
                        "lineChange": "added"
                      },
                      {
                        "line": "    actionArgs = new String[args.length-1];",
                        "lineNumber": 61,
                        "lineChange": "added"
                      },
                      {
                        "line": "private static ProcessInfo spawnProcess(String spawnCommand) throws Exception{",
                        "lineNumber": 84,
                        "lineChange": "added"
                      },
                      {
                        "line": "  Process exportProcess = Runtime.getRuntime().exec(spawnCommand);",
                        "lineNumber": 85,
                        "lineChange": "added"
                      },
                      {
                        "line": "  //Listen for output",
                        "lineNumber": 86,
                        "lineChange": "added"
                      },
                      {
                        "line": "  StreamReader normalOutput = new StreamReader(exportProcess.getInputStream());",
                        "lineNumber": 87,
                        "lineChange": "added"
                      },
                      {
                        "line": "  }",
                        "lineNumber": 99,
                        "lineChange": "added"
                      },
                      {
                        "line": "  private static String createExportCommand(String vcellSchema,String password,String dbHostName,String dbSrvcName,File backupFile){",
                        "lineNumber": 100,
                        "lineChange": "added"
                      },
                      {
                        "line": "    return \"exp \"+\"system\"+\"/\"+(password==null?\"xxxxx\":password)+\"@\"+",
                        "lineNumber": 101,
                        "lineChange": "added"
                      },
                      {
                        "line": "    \"(description\\\\=(address\\\\=(protocol\\\\=tcp)(host\\\\=\"+dbHostName+\")(port\\\\=1521))(connect_data\\\\=(service_name\\\\=\"+dbSrvcName+\")))\"+",
                        "lineNumber": 102,
                        "lineChange": "added"
                      },
                      {
                        "line": "//\t\t\" TABLES=(vc_userinfo) \"+",
                        "lineNumber": 103,
                        "lineChange": "added"
                      },
                      {
                        "line": "    \" FILE=\"+backupFile.getAbsolutePath()",
                        "lineNumber": 104,
                        "lineChange": "added"
                      },
                      {
                        "line": "    +\" OWNER=\"+vcellSchema+\" CONSISTENT=Y\";",
                        "lineNumber": 105,
                        "lineChange": "added"
                      },
                      {
                        "line": "  }",
                        "lineNumber": 107,
                        "lineChange": "added"
                      },
                      {
                        "line": "if(args.length != 6){",
                        "lineNumber": 109,
                        "lineChange": "none"
                      },
                      {
                        "line": "  return;",
                        "lineNumber": 111,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 112,
                        "lineChange": "none"
                      },
                      {
                        "line": "String credentials = args[0];",
                        "lineNumber": 21,
                        "lineChange": "removed"
                      },
                      {
                        "line": "String dbName = args[1];",
                        "lineNumber": 22,
                        "lineChange": "removed"
                      },
                      {
                        "line": "File workingDir = new File(args[2]);",
                        "lineNumber": 23,
                        "lineChange": "removed"
                      },
                      {
                        "line": "File exportDir = new File(args[3]);",
                        "lineNumber": 24,
                        "lineChange": "removed"
                      },
                      {
                        "line": "String userSchema = args[4];",
                        "lineNumber": 25,
                        "lineChange": "removed"
                      },
                      {
                        "line": "String dbServerName = args[5];",
                        "lineNumber": 26,
                        "lineChange": "removed"
                      },
                      {
                        "line": "//\t\t\treturn;",
                        "lineNumber": 115,
                        "lineChange": "added"
                      },
                      {
                        "line": "//\t\t}",
                        "lineNumber": 116,
                        "lineChange": "added"
                      },
                      {
                        "line": "    String dbHostName = args[0];",
                        "lineNumber": 117,
                        "lineChange": "added"
                      },
                      {
                        "line": "    String vcellSchema = args[1];",
                        "lineNumber": 118,
                        "lineChange": "added"
                      },
                      {
                        "line": "    String password = args[2];",
                        "lineNumber": 119,
                        "lineChange": "added"
                      },
                      {
                        "line": "    String dbSrvcName = args[3];",
                        "lineNumber": 120,
                        "lineChange": "added"
                      },
                      {
                        "line": "    File workingDir = new File(args[4]);",
                        "lineNumber": 121,
                        "lineChange": "added"
                      },
                      {
                        "line": "    File exportDir = new File(args[5]);",
                        "lineNumber": 122,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 129,
                        "lineChange": "added"
                      },
                      {
                        "line": "String baseFileName = null;",
                        "lineNumber": 130,
                        "lineChange": "none"
                      },
                      {
                        "line": "File backupFile = null;",
                        "lineNumber": 131,
                        "lineChange": "added"
                      },
                      {
                        "line": "    try{",
                        "lineNumber": 132,
                        "lineChange": "none"
                      },
                      {
                        "line": "      String datePart = new SimpleDateFormat(\"yyyy_MM_dd_HH_mm_ss\").format(Calendar.getInstance().getTime());",
                        "lineNumber": 133,
                        "lineChange": "none"
                      },
                      {
                        "line": "      baseFileName = dbServerName+\"_\"+dbName+\"_\"+userSchema+\"_\"+datePart;",
                        "lineNumber": 33,
                        "lineChange": "removed"
                      },
                      {
                        "line": "      File backupFile = new File(workingDir,baseFileName+\".dmp\");",
                        "lineNumber": 34,
                        "lineChange": "removed"
                      },
                      {
                        "line": "      String exportCommand =",
                        "lineNumber": 35,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        \"exp \"+credentials+\"@\"+dbName+\" FILE=\"+backupFile.getAbsolutePath()+\" OWNER=\"+userSchema+\" CONSISTENT=Y\";",
                        "lineNumber": 36,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        ",
                        "lineNumber": 37,
                        "lineChange": "removed"
                      },
                      {
                        "line": "      baseFileName = dbHostName+\"_\"+dbSrvcName+\"_\"+vcellSchema+\"_\"+datePart;",
                        "lineNumber": 134,
                        "lineChange": "added"
                      },
                      {
                        "line": "      backupFile = new File(workingDir,baseFileName+\".dmp\");",
                        "lineNumber": 135,
                        "lineChange": "added"
                      },
                      {
                        "line": "//\t\t\tString exportCommand =",
                        "lineNumber": 136,
                        "lineChange": "added"
                      },
                      {
                        "line": "//\t\t\t\t\"exp \"+credentials+\"@\"+dbName+\" FILE=\"+backupFile.getAbsolutePath()+\" OWNER=\"+userSchema+\" CONSISTENT=Y\";",
                        "lineNumber": 137,
                        "lineChange": "added"
                      },
                      {
                        "line": "      String exportCommand = createExportCommand(vcellSchema, password, dbHostName, dbSrvcName, backupFile);",
                        "lineNumber": 138,
                        "lineChange": "added"
                      },
                      {
                        "line": "//\t\t\tSystem.out.println(exportCommand);",
                        "lineNumber": 139,
                        "lineChange": "added"
                      },
                      {
                        "line": "      //Create export Process",
                        "lineNumber": 140,
                        "lineChange": "none"
                      },
                      {
                        "line": "      final Process exportProcess = Runtime.getRuntime().exec(exportCommand);",
                        "lineNumber": 39,
                        "lineChange": "removed"
                      },
                      {
                        "line": "      //Listen for output",
                        "lineNumber": 40,
                        "lineChange": "removed"
                      },
                      {
                        "line": "      final boolean[] outReadFlag = new boolean[1];",
                        "lineNumber": 41,
                        "lineChange": "removed"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/ammarx/TagAPI_3/commit/cdc43ec0f44be26d080b8106cb8df503bb4e6599?diff=split#diff-7bdd4dadff7e107738652c771a83bb84L19",
                    "lines": [
                      {
                        "line": " */",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "//we will be using this for testing only...",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "public static void main(String[] args) {",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "    // TODO code application logic here",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "    //*** Remove this as this is required for it to work fully...",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": " Local local = new Local();",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "Network network = new Network();",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "String UsernameToUse = args[0];",
                        "lineNumber": 26,
                        "lineChange": "removed"
                      },
                      {
                        "line": "String VersionToUse = args[1];",
                        "lineNumber": 27,
                        "lineChange": "removed"
                      },
                      {
                        "line": "String UsernameToUse = \"Ammar_Ahmad\";",
                        "lineNumber": 26,
                        "lineChange": "added"
                      },
                      {
                        "line": "String VersionToUse = \"1.7.2\";",
                        "lineNumber": 27,
                        "lineChange": "added"
                      },
                      {
                        "line": "String OperatingSystemToUse = utils.getOS();",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "System.out.println(\"OS: \" + OperatingSystemToUse);",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "//get profile",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "System.out.println(\"Getting profile details\");",
                        "lineNumber": 37,
                        "lineChange": "none"
                      },
                      {
                        "line": "network.downloadProfile(OperatingSystemToUse, UsernameToUse);",
                        "lineNumber": 38,
                        "lineChange": "none"
                      },
                      {
                        "line": "network.downloadVersionManifest(utils.getMineCraft_Version_Manifest_json(OperatingSystemToUse));",
                        "lineNumber": 39,
                        "lineChange": "none"
                      },
                      {
                        "line": "String MOD_id = null;",
                        "lineNumber": 52,
                        "lineChange": "none"
                      },
                      {
                        "line": "//check if it is vanilla or not",
                        "lineNumber": 53,
                        "lineChange": "none"
                      },
                      {
                        "line": "if (local.checkIfVanillaMC(VersionToUse).equals(true)) {",
                        "lineNumber": 54,
                        "lineChange": "none"
                      },
                      {
                        "line": "    System.out.println(\"Vanilla Minecraft found!\");",
                        "lineNumber": 55,
                        "lineChange": "none"
                      },
                      {
                        "line": "} else {",
                        "lineNumber": 57,
                        "lineChange": "none"
                      },
                      {
                        "line": "    System.out.println(\"Modded Minecraft found!\");",
                        "lineNumber": 58,
                        "lineChange": "none"
                      },
                      {
                        "line": "    local.MOD_readJson_libraries_name_PLUS_url(utils.getMineCraft_Version_Json(OperatingSystemToUse, VersionToUse));",
                        "lineNumber": 59,
                        "lineChange": "none"
                      },
                      {
                        "line": "    for (int i = 0; i < local.version_name_list.size(); i++) {",
                        "lineNumber": 60,
                        "lineChange": "none"
                      },
                      {
                        "line": "        System.out.println(local.version_name_list.get(i));",
                        "lineNumber": 61,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }",
                        "lineNumber": 78,
                        "lineChange": "none"
                      },
                      {
                        "line": "    ",
                        "lineNumber": 79,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    MOD_inheritsFrom = local.readJson_inheritsFrom(utils.getMineCraft_Version_Json(OperatingSystemToUse, VersionToUse));",
                        "lineNumber": 80,
                        "lineChange": "none"
                      },
                      {
                        "line": "    System.out.println(\"inheritsFrom: \" + MOD_inheritsFrom);",
                        "lineNumber": 81,
                        "lineChange": "none"
                      },
                      {
                        "line": "    MOD_jar = local.readJson_jar(utils.getMineCraft_Version_Json(OperatingSystemToUse, VersionToUse));",
                        "lineNumber": 83,
                        "lineChange": "none"
                      },
                      {
                        "line": "    System.out.println(\"jar: \" + MOD_jar);",
                        "lineNumber": 84,
                        "lineChange": "none"
                      },
                      {
                        "line": "    MOD_assets = local.readJson_assets(utils.getMineCraft_Version_Json(OperatingSystemToUse, VersionToUse));",
                        "lineNumber": 86,
                        "lineChange": "none"
                      },
                      {
                        "line": "    System.out.println(\"assets: \" + MOD_assets);",
                        "lineNumber": 87,
                        "lineChange": "none"
                      },
                      {
                        "line": "    MOD_minecraftArguments = local.readJson_minecraftArguments(utils.getMineCraft_Version_Json(OperatingSystemToUse, VersionToUse));",
                        "lineNumber": 89,
                        "lineChange": "none"
                      },
                      {
                        "line": "    System.out.println(\"minecraftArguments: \" + MOD_minecraftArguments);",
                        "lineNumber": 90,
                        "lineChange": "none"
                      },
                      {
                        "line": "    MOD_mainClass = local.readJson_mainClass(utils.getMineCraft_Version_Json(OperatingSystemToUse, VersionToUse));",
                        "lineNumber": 92,
                        "lineChange": "none"
                      },
                      {
                        "line": "    System.out.println(\"mainClass: \" + MOD_mainClass);",
                        "lineNumber": 93,
                        "lineChange": "none"
                      },
                      {
                        "line": "    MOD_id = local.readJson_id(utils.getMineCraft_Version_Json(OperatingSystemToUse, VersionToUse));",
                        "lineNumber": 95,
                        "lineChange": "none"
                      },
                      {
                        "line": "    System.out.println(\"id: \" + MOD_id);",
                        "lineNumber": 96,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 97,
                        "lineChange": "none"
                      },
                      {
                        "line": "if (MOD_inheritsFrom == null) {",
                        "lineNumber": 99,
                        "lineChange": "none"
                      },
                      {
                        "line": "    System.out.println(\"Using: \" + VersionToUse);",
                        "lineNumber": 100,
                        "lineChange": "none"
                      },
                      {
                        "line": "} else {",
                        "lineNumber": 102,
                        "lineChange": "none"
                      },
                      {
                        "line": "    VersionToUse = MOD_inheritsFrom;",
                        "lineNumber": 103,
                        "lineChange": "none"
                      },
                      {
                        "line": "    System.out.println(\"Using: \" + VersionToUse);",
                        "lineNumber": 104,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 106,
                        "lineChange": "none"
                      },
                      {
                        "line": "//download 1.7.10.json_libs",
                        "lineNumber": 115,
                        "lineChange": "none"
                      },
                      {
                        "line": "for (int i = 0; i < local.version_manifest_versions_id.size(); i++) {",
                        "lineNumber": 116,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (local.version_manifest_versions_id.get(i).equals(VersionToUse)) {",
                        "lineNumber": 117,
                        "lineChange": "none"
                      },
                      {
                        "line": "        network.downloadVersionJson(OperatingSystemToUse, local.version_manifest_versions_url.get(i).toString(), local.version_manifest_versions_id.get(i).toString());",
                        "lineNumber": 118,
                        "lineChange": "none"
                      },
                      {
                        "line": "        break;",
                        "lineNumber": 119,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 136,
                        "lineChange": "none"
                      },
                      {
                        "line": "System.out.print(utils.getMineCraft_Version_Json(OperatingSystemToUse, VersionToUse));",
                        "lineNumber": 138,
                        "lineChange": "none"
                      },
                      {
                        "line": "System.out.print(\"\\n\\n\");",
                        "lineNumber": 139,
                        "lineChange": "none"
                      },
                      {
                        "line": "local.readJson_libraries_downloads_artifact_url(utils.getMineCraft_Version_Json(OperatingSystemToUse, VersionToUse));",
                        "lineNumber": 141,
                        "lineChange": "removed"
                      },
                      {
                        "line": "local.readJson_libraries_downloads_artifact_path(utils.getMineCraft_Version_Json(OperatingSystemToUse, VersionToUse));",
                        "lineNumber": 142,
                        "lineChange": "removed"
                      },
                      {
                        "line": "local.readJson_libraries_name(utils.getMineCraft_Version_Json(OperatingSystemToUse, VersionToUse));",
                        "lineNumber": 143,
                        "lineChange": "removed"
                      },
                      {
                        "line": "try {",
                        "lineNumber": 140,
                        "lineChange": "added"
                      },
                      {
                        "line": "    local.readJson_libraries_downloads_artifact_url(utils.getMineCraft_Version_Json(OperatingSystemToUse, VersionToUse));",
                        "lineNumber": 141,
                        "lineChange": "added"
                      },
                      {
                        "line": "} catch (Exception ex) {",
                        "lineNumber": 143,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 145,
                        "lineChange": "added"
                      },
                      {
                        "line": "try {",
                        "lineNumber": 146,
                        "lineChange": "added"
                      },
                      {
                        "line": "    local.readJson_libraries_downloads_artifact_path(utils.getMineCraft_Version_Json(OperatingSystemToUse, VersionToUse));",
                        "lineNumber": 147,
                        "lineChange": "added"
                      },
                      {
                        "line": "} catch (Exception ex) {",
                        "lineNumber": 149,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 151,
                        "lineChange": "added"
                      },
                      {
                        "line": "try {",
                        "lineNumber": 152,
                        "lineChange": "added"
                      },
                      {
                        "line": "    local.readJson_libraries_name(utils.getMineCraft_Version_Json(OperatingSystemToUse, VersionToUse));",
                        "lineNumber": 153,
                        "lineChange": "added"
                      },
                      {
                        "line": "} catch (Exception ex) {",
                        "lineNumber": 155,
                        "lineChange": "added"
                      },
                      {
                        "line": "///************************************************************",
                        "lineNumber": 158,
                        "lineChange": "none"
                      },
                      {
                        "line": "for (int i = 0; i < local.version_url_list.size(); i++) {",
                        "lineNumber": 159,
                        "lineChange": "none"
                      },
                      {
                        "line": "//this may need to be edited!*************//",
                        "lineNumber": 172,
                        "lineChange": "none"
                      },
                      {
                        "line": "System.out.println(local.readJson_assetIndex_url(utils.getMineCraft_Version_Json(OperatingSystemToUse, VersionToUse)));",
                        "lineNumber": 159,
                        "lineChange": "removed"
                      },
                      {
                        "line": "System.out.println(local.readJson_assetIndex_id(utils.getMineCraft_Version_Json(OperatingSystemToUse, VersionToUse)));",
                        "lineNumber": 160,
                        "lineChange": "removed"
                      },
                      {
                        "line": "try {",
                        "lineNumber": 173,
                        "lineChange": "added"
                      },
                      {
                        "line": "    System.out.println(local.readJson_assetIndex_url(utils.getMineCraft_Version_Json(OperatingSystemToUse, VersionToUse)));",
                        "lineNumber": 174,
                        "lineChange": "added"
                      },
                      {
                        "line": "} catch (Exception ex) {",
                        "lineNumber": 176,
                        "lineChange": "added"
                      },
                      {
                        "line": "try {",
                        "lineNumber": 180,
                        "lineChange": "added"
                      },
                      {
                        "line": "    System.out.println(local.readJson_assetIndex_id(utils.getMineCraft_Version_Json(OperatingSystemToUse, VersionToUse)));",
                        "lineNumber": 181,
                        "lineChange": "added"
                      },
                      {
                        "line": "} catch (Exception ex) {",
                        "lineNumber": 182,
                        "lineChange": "added"
                      },
                      {
                        "line": "    System.err.println(ex);",
                        "lineNumber": 183,
                        "lineChange": "added"
                      },
                      {
                        "line": "//get assets index id!",
                        "lineNumber": 186,
                        "lineChange": "none"
                      },
                      {
                        "line": "network.downloadLaunchermeta(OperatingSystemToUse, local.readJson_assetIndex_url(utils.getMineCraft_Version_Json(OperatingSystemToUse, VersionToUse)), local.readJson_assetIndex_id(utils.getMin",
                        "lineNumber": 187,
                        "lineChange": "none"
                      },
                      {
                        "line": "System.out.println(utils.getMineCraftAssetsIndexes_X_json(OperatingSystemToUse, VersionToUse));",
                        "lineNumber": 189,
                        "lineChange": "none"
                      },
                      {
                        "line": "local.readJson_objects_KEY(utils.getMineCraftAssetsIndexes_X_json(OperatingSystemToUse, local.readJson_assetIndex_id(utils.getMineCraft_Version_Json(OperatingSystemToUse, VersionToUse))));",
                        "lineNumber": 191,
                        "lineChange": "none"
                      },
                      {
                        "line": "local.readJson_objects_KEY_hash(utils.getMineCraftAssetsIndexes_X_json(OperatingSystemToUse, local.readJson_assetIndex_id(utils.getMineCraft_Version_Json(OperatingSystemToUse, VersionToUse))))",
                        "lineNumber": 192,
                        "lineChange": "none"
                      },
                      {
                        "line": "for (int i = 0; i < local.objects_hash.size(); i++) {",
                        "lineNumber": 194,
                        "lineChange": "none"
                      },
                      {
                        "line": "System.out.println(\"DOWNLOADING MINECRAFT JAR\");",
                        "lineNumber": 206,
                        "lineChange": "none"
                      },
                      {
                        "line": "if (MOD_jar == null) {",
                        "lineNumber": 207,
                        "lineChange": "none"
                      },
                      {
                        "line": "    network.downloadMinecraftJar(OperatingSystemToUse, VersionToUse);",
                        "lineNumber": 208,
                        "lineChange": "none"
                      },
                      {
                        "line": "} else {",
                        "lineNumber": 210,
                        "lineChange": "none"
                      },
                      {
                        "line": "    network.downloadMinecraftJar(OperatingSystemToUse, MOD_jar);",
                        "lineNumber": 211,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 213,
                        "lineChange": "none"
                      },
                      {
                        "line": "//would have tp edit this line as we also need natives paths!",
                        "lineNumber": 215,
                        "lineChange": "none"
                      },
                      {
                        "line": "System.out.println(\"Getting NATIVES URL\");",
                        "lineNumber": 216,
                        "lineChange": "none"
                      },
                      {
                        "line": "local.readJson_libraries_downloads_classifiers_natives_X(utils.getMineCraft_Versions_X_X_json(OperatingSystemToUse, VersionToUse), OperatingSystemToUse);",
                        "lineNumber": 217,
                        "lineChange": "none"
                      },
                      {
                        "line": "System.out.println(\"Getting NATIVES PATH\");",
                        "lineNumber": 218,
                        "lineChange": "none"
                      },
                      {
                        "line": "local.readJson_libraries_downloads_classifiers_natives_Y(utils.getMineCraft_Versions_X_X_json(OperatingSystemToUse, VersionToUse), OperatingSystemToUse);",
                        "lineNumber": 219,
                        "lineChange": "none"
                      },
                      {
                        "line": "for (int i = 0; i < local.version_url_list_natives.size(); i++) {",
                        "lineNumber": 221,
                        "lineChange": "none"
                      },
                      {
                        "line": "    System.out.println(\"Extracting...\");",
                        "lineNumber": 225,
                        "lineChange": "none"
                      },
                      {
                        "line": "    System.out.println(local.version_url_list_natives.get(i).toString());",
                        "lineNumber": 226,
                        "lineChange": "none"
                      },
                      {
                        "line": "    System.out.println(utils.getMineCraft_Versions_X_Natives(OperatingSystemToUse, VersionToUse));",
                        "lineNumber": 227,
                        "lineChange": "none"
                      },
                      {
                        "line": "    utils.jarExtract(OperatingSystemToUse, local.version_path_list_natives.get(i).toString(), utils.getMineCraft_Versions_X_Natives(OperatingSystemToUse, VersionToUse));",
                        "lineNumber": 229,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 231,
                        "lineChange": "none"
                      },
                      {
                        "line": "//String HalfArgumentTemplate = local.readJson_minecraftArguments(utils.getMineCraft_Versions_X_X_json(OperatingSystemToUse, VersionToUse));",
                        "lineNumber": 235,
                        "lineChange": "none"
                      },
                      {
                        "line": "String mainClass;",
                        "lineNumber": 244,
                        "lineChange": "none"
                      },
                      {
                        "line": "if (MOD_mainClass == null){",
                        "lineNumber": 212,
                        "lineChange": "removed"
                      },
                      {
                        "line": "if (MOD_mainClass == null) {",
                        "lineNumber": 245,
                        "lineChange": "added"
                      },
                      {
                        "line": "    mainClass = local.readJson_mainClass(utils.getMineCraft_Versions_X_X_json(OperatingSystemToUse, VersionToUse));",
                        "lineNumber": 246,
                        "lineChange": "none"
                      },
                      {
                        "line": "    ",
                        "lineNumber": 214,
                        "lineChange": "removed"
                      },
                      {
                        "line": "} else {",
                        "lineNumber": 248,
                        "lineChange": "none"
                      },
                      {
                        "line": "    mainClass =  MOD_mainClass;",
                        "lineNumber": 216,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    mainClass = MOD_mainClass;",
                        "lineNumber": 249,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 250,
                        "lineChange": "none"
                      },
                      {
                        "line": "String NativesDir = utils.getMineCraft_Versions_X_Natives(OperatingSystemToUse, VersionToUse);",
                        "lineNumber": 252,
                        "lineChange": "none"
                      },
                      {
                        "line": "String assetsIdexId;",
                        "lineNumber": 253,
                        "lineChange": "none"
                      },
                      {
                        "line": "if (MOD_assets == null){",
                        "lineNumber": 221,
                        "lineChange": "removed"
                      },
                      {
                        "line": "if (MOD_assets == null) {",
                        "lineNumber": 254,
                        "lineChange": "added"
                      },
                      {
                        "line": "    assetsIdexId = local.readJson_assets(utils.getMineCraft_Versions_X_X_json(OperatingSystemToUse, VersionToUse));",
                        "lineNumber": 255,
                        "lineChange": "none"
                      },
                      {
                        "line": "} else {",
                        "lineNumber": 257,
                        "lineChange": "none"
                      },
                      {
                        "line": "    assetsIdexId = MOD_assets;",
                        "lineNumber": 258,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 259,
                        "lineChange": "none"
                      },
                      {
                        "line": "String versionName;",
                        "lineNumber": 267,
                        "lineChange": "none"
                      },
                      {
                        "line": "if (MOD_id == null){",
                        "lineNumber": 232,
                        "lineChange": "removed"
                      },
                      {
                        "line": "if (MOD_id == null) {",
                        "lineNumber": 268,
                        "lineChange": "added"
                      },
                      {
                        "line": "    versionName = local.readJson_id(utils.getMineCraft_Versions_X_X_json(OperatingSystemToUse, VersionToUse));",
                        "lineNumber": 269,
                        "lineChange": "none"
                      },
                      {
                        "line": "} else {",
                        "lineNumber": 270,
                        "lineChange": "none"
                      },
                      {
                        "line": "    versionName = MOD_id;",
                        "lineNumber": 271,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 272,
                        "lineChange": "none"
                      },
                      {
                        "line": "String authuuid = local.readJson_id(utils.getMineCraft_X_json(OperatingSystemToUse, UsernameToUse));",
                        "lineNumber": 274,
                        "lineChange": "none"
                      },
                      {
                        "line": "String Username = UsernameToUse;",
                        "lineNumber": 275,
                        "lineChange": "none"
                      },
                      {
                        "line": "String MinecraftJar;",
                        "lineNumber": 276,
                        "lineChange": "none"
                      },
                      {
                        "line": "if (MOD_jar == null){",
                        "lineNumber": 242,
                        "lineChange": "removed"
                      },
                      {
                        "line": "if (MOD_jar == null) {",
                        "lineNumber": 277,
                        "lineChange": "added"
                      },
                      {
                        "line": "    MinecraftJar = utils.getMineCraft_Versions_X_X_jar(OperatingSystemToUse, VersionToUse);",
                        "lineNumber": 278,
                        "lineChange": "none"
                      },
                      {
                        "line": "} else {",
                        "lineNumber": 280,
                        "lineChange": "none"
                      },
                      {
                        "line": "    MinecraftJar = utils.getMineCraft_Versions_X_X_jar(OperatingSystemToUse, MOD_jar);",
                        "lineNumber": 281,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 282,
                        "lineChange": "none"
                      },
                      {
                        "line": "String GameAssets = utils.getMineCraftAssetsVirtualLegacyLocation(OperatingSystemToUse);",
                        "lineNumber": 287,
                        "lineChange": "none"
                      },
                      {
                        "line": "System.out.println(\"NativesPath: \" + NativesDir);",
                        "lineNumber": 288,
                        "lineChange": "none"
                      },
                      {
                        "line": "for (int i = 0; i < local.version_path_list.size(); i++) {",
                        "lineNumber": 290,
                        "lineChange": "none"
                      },
                      {
                        "line": "String HalfLibraryArgument = local.generateLibrariesArguments(OperatingSystemToUse);",
                        "lineNumber": 295,
                        "lineChange": "none"
                      },
                      {
                        "line": "String FullLibraryArgument = local.generateLibrariesArguments(OperatingSystemToUse) + utils.getArgsDiv(OperatingSystemToUse) + MinecraftJar;",
                        "lineNumber": 296,
                        "lineChange": "none"
                      },
                      {
                        "line": "System.out.println(\"HalfLibraryArgument: \" + HalfLibraryArgument);",
                        "lineNumber": 297,
                        "lineChange": "none"
                      },
                      {
                        "line": "System.out.println(\"FullLibraryArgument: \" + FullLibraryArgument);",
                        "lineNumber": 298,
                        "lineChange": "none"
                      },
                      {
                        "line": "String HalfArgument = local.generateMinecraftArguments(OperatingSystemToUse, Username, versionName, gameDirectory, AssetsRoot, assetsIdexId, authuuid, \"aeef7bc935f9420eb6314dea7ad7e1e5\", \"{\\\"t",
                        "lineNumber": 300,
                        "lineChange": "none"
                      },
                      {
                        "line": "System.out.println(\"HalfArgument: \" + HalfArgument);",
                        "lineNumber": 301,
                        "lineChange": "none"
                      },
                      {
                        "line": "System.out.println(\"Minecraft.jar: \" + MinecraftJar);",
                        "lineNumber": 302,
                        "lineChange": "none"
                      },
                      {
                        "line": "System.out.println(\"username: \" + Username);",
                        "lineNumber": 304,
                        "lineChange": "none"
                      },
                      {
                        "line": "System.out.println(\"version number: \" + versionName);",
                        "lineNumber": 305,
                        "lineChange": "none"
                      },
                      {
                        "line": "System.out.println(\"game directory: \" + gameDirectory);",
                        "lineNumber": 306,
                        "lineChange": "none"
                      },
                      {
                        "line": "System.out.println(\"assets root directory: \" + AssetsRoot);",
                        "lineNumber": 307,
                        "lineChange": "none"
                      },
                      {
                        "line": "System.out.println(\"assets Index Id: \" + assetsIdexId);",
                        "lineNumber": 308,
                        "lineChange": "none"
                      },
                      {
                        "line": "System.out.println(\"assets legacy directory: \" + GameAssets);",
                        "lineNumber": 309,
                        "lineChange": "none"
                      },
                      {
                        "line": "System.out.println(local.generateRunnableArguments(Xmx, NativesDir, FullLibraryArgument, mainClass, HalfArgument));",
                        "lineNumber": 310,
                        "lineChange": "none"
                      },
                      {
                        "line": "try {",
                        "lineNumber": 312,
                        "lineChange": "none"
                      },
                      {
                        "line": "    String ArgsX = local.generateRunnableArguments(Xmx, NativesDir, FullLibraryArgument, mainClass, HalfArgument);",
                        "lineNumber": 314,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Runtime.getRuntime().exec(\"java \" + ArgsX);",
                        "lineNumber": 315,
                        "lineChange": "none"
                      },
                      {
                        "line": "} catch (Exception e) {",
                        "lineNumber": 317,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "- generating lineCharts is possible",
                  "Integrated MERT and decoder (though still need to integrate -decV option)."
                ],
                "precision": "very-high",
                "repoDatasetSize": 7,
                "cwe": [
                  "CWE-78"
                ]
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "java/UsageOfUnencryptedSocket",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Writing to an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Writing to](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tika-core/src/main/java/org/apache/tika/parser/NetworkParser.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 86,
                  "endLine": 86,
                  "startColumn": 64,
                  "endColumn": 86
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0550a0a7d8bf571b8ba1d5e1cbacbc9b600279e51cbffd3e15cd6078f4ca7e6d",
            "1": "3b542730.6086bd0b.bb993ef0.6c52ae28.d3c9d364.85d83993.5ef2310d.0f01a149.3b542730.be62888c.bb993ef0.6c52ae28.9a5f6332.85d83993.ed1ab504.0f01a149"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-core/src/main/java/org/apache/tika/parser/NetworkParser.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 86,
                            "endLine": 86,
                            "startColumn": 64,
                            "endColumn": 86
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-core/src/main/java/org/apache/tika/parser/NetworkParser.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 86,
                            "endLine": 86,
                            "startColumn": 64,
                            "endColumn": 86
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Reading from an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Reading from](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tika-core/src/main/java/org/apache/tika/parser/NetworkParser.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 92,
                  "endLine": 92,
                  "startColumn": 25,
                  "endColumn": 46
                }
              }
            }
          ],
          "fingerprints": {
            "0": "4d5c5071f9f7633957e05a1f829dd22fdab57675ad3acc2713f342c662ee8494",
            "1": "3b542730.850c6097.bb993ef0.6c52ae28.3117d18e.05f431a2.012da213.54d46e25.3b542730.be62888c.bb993ef0.6c52ae28.9a5f6332.85d83993.ed1ab504.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-core/src/main/java/org/apache/tika/parser/NetworkParser.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 92,
                            "endLine": 92,
                            "startColumn": 25,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-core/src/main/java/org/apache/tika/parser/NetworkParser.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 92,
                            "endLine": 92,
                            "startColumn": 25,
                            "endColumn": 46
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/InsecureHash/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "The MD2 hash (used in org.apache.commons.codec.digest.DigestUtils.md2Hex) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The MD2 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[org.apache.commons.codec.digest.DigestUtils.md2Hex](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tika-parsers/src/test/java/org/apache/tika/parser/DigestingParserTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 247,
                  "endLine": 247,
                  "startColumn": 30,
                  "endColumn": 48
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3ed98500c9c4d4b11712ba1075b92f8624a537832e751000407e4a0dbebbf7b9",
            "1": "ca9876a9.1cbd3ff4.33fa5dbe.9a3eee45.10af9ac5.7fda7c5e.be04624c.c4e81b6c.ca9876a9.1cbd3ff4.33fa5dbe.9a3eee45.10af9ac5.7fda7c5e.be04624c.c4e81b6c"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-parsers/src/test/java/org/apache/tika/parser/DigestingParserTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 247,
                            "endLine": 247,
                            "startColumn": 30,
                            "endColumn": 48
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/InsecureHash/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "The MD2 hash (used in org.apache.commons.codec.digest.DigestUtils.md2Hex) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The MD2 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[org.apache.commons.codec.digest.DigestUtils.md2Hex](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tika-parsers/src/test/java/org/apache/tika/parser/BouncyCastleDigestingParserTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 249,
                  "endLine": 249,
                  "startColumn": 26,
                  "endColumn": 44
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b80444a4e57dea1daf2b0ae65bb213b75c84baf9123ad3279dd5e2e6d5d94882",
            "1": "ca9876a9.1cbd3ff4.33fa5dbe.e22980a8.10af9ac5.7fda7c5e.be04624c.c4e81b6c.ca9876a9.1cbd3ff4.33fa5dbe.e22980a8.10af9ac5.7fda7c5e.be04624c.c4e81b6c"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-parsers/src/test/java/org/apache/tika/parser/BouncyCastleDigestingParserTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 249,
                            "endLine": 249,
                            "startColumn": 26,
                            "endColumn": 44
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/InsecureHash/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in org.apache.commons.codec.digest.DigestUtils.md5Hex) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The MD5 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[org.apache.commons.codec.digest.DigestUtils.md5Hex](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tika-parsers/src/test/java/org/apache/tika/parser/DigestingParserTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 250,
                  "endLine": 250,
                  "startColumn": 30,
                  "endColumn": 48
                }
              }
            }
          ],
          "fingerprints": {
            "0": "fb1f81d480975c67ec172d5a692eb38c3350d412a900752fc36dd1f04443391a",
            "1": "2708beb0.1cbd3ff4.33fa5dbe.9a3eee45.3d2bca12.7fda7c5e.be04624c.c4e81b6c.2708beb0.1cbd3ff4.33fa5dbe.9a3eee45.3d2bca12.7fda7c5e.be04624c.c4e81b6c"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-parsers/src/test/java/org/apache/tika/parser/DigestingParserTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 250,
                            "endLine": 250,
                            "startColumn": 30,
                            "endColumn": 48
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/InsecureHash/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in org.apache.commons.codec.digest.DigestUtils.md5Hex) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The MD5 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[org.apache.commons.codec.digest.DigestUtils.md5Hex](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tika-parsers/src/test/java/org/apache/tika/parser/BouncyCastleDigestingParserTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 251,
                  "endLine": 251,
                  "startColumn": 26,
                  "endColumn": 44
                }
              }
            }
          ],
          "fingerprints": {
            "0": "abd394ee26b32667d5d4ecf9e9f755df5e5a580b68a95e5869873367b4ae6369",
            "1": "2708beb0.1cbd3ff4.33fa5dbe.e22980a8.3d2bca12.7fda7c5e.be04624c.c4e81b6c.2708beb0.1cbd3ff4.33fa5dbe.e22980a8.3d2bca12.7fda7c5e.be04624c.c4e81b6c"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-parsers/src/test/java/org/apache/tika/parser/BouncyCastleDigestingParserTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 251,
                            "endLine": 251,
                            "startColumn": 26,
                            "endColumn": 44
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/InsecureHash/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in org.apache.commons.codec.digest.DigestUtils.md5Hex) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The MD5 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[org.apache.commons.codec.digest.DigestUtils.md5Hex](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tika-server/src/test/java/org/apache/tika/server/CXFTestBase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 138,
                  "endLine": 138,
                  "startColumn": 39,
                  "endColumn": 57
                }
              }
            }
          ],
          "fingerprints": {
            "0": "69e22a416d0d6ed44b4b3d59de90d6bcb369738e2d1a2811e38cf9c73d3083d2",
            "1": "2708beb0.1cbd3ff4.0fd4bb2a.c81e2a8c.4c30c5cc.f940a352.bb2e8730.54d46e25.2708beb0.1cbd3ff4.0fd4bb2a.c81e2a8c.4c30c5cc.f940a352.bb2e8730.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-server/src/test/java/org/apache/tika/server/CXFTestBase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 138,
                            "endLine": 138,
                            "startColumn": 39,
                            "endColumn": 57
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/InsecureHash/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in org.apache.commons.codec.digest.DigestUtils.md5Hex) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The MD5 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[org.apache.commons.codec.digest.DigestUtils.md5Hex](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tika-server/src/test/java/org/apache/tika/server/CXFTestBase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 167,
                  "endLine": 167,
                  "startColumn": 39,
                  "endColumn": 57
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c0f0e5a9ebc43449a7bafe9fc38f3f46b766a0510fa25644c13dec208b233c5b",
            "1": "2708beb0.1cbd3ff4.0fd4bb2a.c81e2a8c.4c30c5cc.f940a352.bb2e8730.54d46e25.2708beb0.1cbd3ff4.0fd4bb2a.c81e2a8c.4c30c5cc.f940a352.bb2e8730.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-server/src/test/java/org/apache/tika/server/CXFTestBase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 167,
                            "endLine": 167,
                            "startColumn": 39,
                            "endColumn": 57
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/InsecureHash/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "The SHA1 hash (used in org.apache.commons.codec.digest.DigestUtils.sha1Hex) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The SHA1 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[org.apache.commons.codec.digest.DigestUtils.sha1Hex](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tika-parsers/src/test/java/org/apache/tika/parser/DigestingParserTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 253,
                  "endLine": 253,
                  "startColumn": 30,
                  "endColumn": 49
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f625aca7a29636345ab364e59f78e7887af30677b0d299af86926f8c9e8ca048",
            "1": "ca9876a9.1cbd3ff4.33fa5dbe.b1d78af9.3d2bca12.7fda7c5e.e1124db7.c4e81b6c.ca9876a9.1cbd3ff4.33fa5dbe.b1d78af9.3d2bca12.7fda7c5e.e1124db7.c4e81b6c"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-parsers/src/test/java/org/apache/tika/parser/DigestingParserTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 253,
                            "endLine": 253,
                            "startColumn": 30,
                            "endColumn": 49
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/InsecureHash/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "The SHA1 hash (used in org.apache.commons.codec.digest.DigestUtils.sha1Hex) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The SHA1 hash (used in {0}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[org.apache.commons.codec.digest.DigestUtils.sha1Hex](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tika-parsers/src/test/java/org/apache/tika/parser/BouncyCastleDigestingParserTest.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 253,
                  "endLine": 253,
                  "startColumn": 26,
                  "endColumn": 45
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c548d2d42aba1de31b8c56d805e745772da35c558aad271260c98f519b6295b1",
            "1": "ca9876a9.1cbd3ff4.33fa5dbe.b1d78af9.3d2bca12.7fda7c5e.e1124db7.c4e81b6c.ca9876a9.1cbd3ff4.33fa5dbe.b1d78af9.3d2bca12.7fda7c5e.e1124db7.c4e81b6c"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-parsers/src/test/java/org/apache/tika/parser/BouncyCastleDigestingParserTest.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 253,
                            "endLine": 253,
                            "startColumn": 26,
                            "endColumn": 45
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "python/Ssrf",
          "ruleIndex": 2,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an HTTP parameter flows into requests.get, where it is used as an URL to perform a request. This may result in a Server Side Request Forgery vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as an URL to perform a request. This may result in a Server Side Request Forgery vulnerability.",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1),(2),(3),(4),(5),(6)",
              "[requests.get](7)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tika-parsers/src/main/resources/org/apache/tika/parser/recognition/tf/inceptionapi.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 170,
                  "endLine": 170,
                  "startColumn": 15,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3611b008e85c5ae5fa0ded5dd0ff90a6c4a6bd4ce3d045cd4e3ce4a16ade6dd7",
            "1": "800eb1b9.4e7b2cf3.ef7ad415.139c59a8.25ac000c.ba14daf2.c3137c0f.f355b44c.101172a8.9e28a386.ef7ad415.c2d58534.25ac000c.3e7b0b10.cc914b1e.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-parsers/src/main/resources/org/apache/tika/parser/recognition/tf/inceptionapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 324,
                            "endLine": 324,
                            "startColumn": 15,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-parsers/src/main/resources/org/apache/tika/parser/recognition/tf/inceptionapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 324,
                            "endLine": 324,
                            "startColumn": 15,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-parsers/src/main/resources/org/apache/tika/parser/recognition/tf/inceptionapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 324,
                            "endLine": 324,
                            "startColumn": 9,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-parsers/src/main/resources/org/apache/tika/parser/recognition/tf/inceptionapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 325,
                            "endLine": 325,
                            "startColumn": 46,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-parsers/src/main/resources/org/apache/tika/parser/recognition/tf/inceptionapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 162,
                            "endLine": 162,
                            "startColumn": 21,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-parsers/src/main/resources/org/apache/tika/parser/recognition/tf/inceptionapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 168,
                            "endLine": 168,
                            "startColumn": 37,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-parsers/src/main/resources/org/apache/tika/parser/recognition/tf/inceptionapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 170,
                            "endLine": 170,
                            "startColumn": 28,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-parsers/src/main/resources/org/apache/tika/parser/recognition/tf/inceptionapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 170,
                            "endLine": 170,
                            "startColumn": 15,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 351,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ]
          }
        },
        {
          "ruleId": "python/Ssrf",
          "ruleIndex": 2,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an HTTP parameter flows into requests.get, where it is used as an URL to perform a request. This may result in a Server Side Request Forgery vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as an URL to perform a request. This may result in a Server Side Request Forgery vulnerability.",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1),(2),(3),(4),(5),(6)",
              "[requests.get](7)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tika-parsers/src/main/resources/org/apache/tika/parser/captioning/tf/im2txtapi.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 140,
                  "endLine": 140,
                  "startColumn": 15,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "616022c3c6b84e4ced208f14f6b0d39434cd75c949b1ef9be973c45a7b1f0a39",
            "1": "800eb1b9.4e7b2cf3.ef7ad415.139c59a8.25ac000c.ba14daf2.c3137c0f.f355b44c.101172a8.9e28a386.ef7ad415.c2d58534.25ac000c.3e7b0b10.cc914b1e.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-parsers/src/main/resources/org/apache/tika/parser/captioning/tf/im2txtapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 201,
                            "endLine": 201,
                            "startColumn": 15,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-parsers/src/main/resources/org/apache/tika/parser/captioning/tf/im2txtapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 201,
                            "endLine": 201,
                            "startColumn": 15,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-parsers/src/main/resources/org/apache/tika/parser/captioning/tf/im2txtapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 201,
                            "endLine": 201,
                            "startColumn": 9,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-parsers/src/main/resources/org/apache/tika/parser/captioning/tf/im2txtapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 202,
                            "endLine": 202,
                            "startColumn": 46,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-parsers/src/main/resources/org/apache/tika/parser/captioning/tf/im2txtapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 132,
                            "endLine": 132,
                            "startColumn": 21,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-parsers/src/main/resources/org/apache/tika/parser/captioning/tf/im2txtapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 138,
                            "endLine": 138,
                            "startColumn": 37,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-parsers/src/main/resources/org/apache/tika/parser/captioning/tf/im2txtapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 140,
                            "endLine": 140,
                            "startColumn": 28,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-parsers/src/main/resources/org/apache/tika/parser/captioning/tf/im2txtapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 140,
                            "endLine": 140,
                            "startColumn": 15,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 351,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 3,
          "level": "error",
          "message": {
            "text": "Unsanitized input from a command line argument flows into java.io.FileInputStream, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1)",
              "[java.io.FileInputStream](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tika-parsers/src/main/java/org/apache/tika/parser/ner/corenlp/CoreNLPNERecogniser.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 162,
                  "endLine": 162,
                  "startColumn": 43,
                  "endColumn": 58
                }
              }
            }
          ],
          "fingerprints": {
            "0": "99287a5dd9d8305f8436e8e8a54f06298d0d216cfd30804a57e19f021e5af6f0",
            "1": "682e2f2f.ff76257e.1b9a1d8e.6c52ae28.f6d438cc.117e971f.55c6f621.fdedd133.8df8fa68.dd05ec30.622565c7.de031890.a7b964d9.ce109560.377b98a3.fdedd133"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-parsers/src/main/java/org/apache/tika/parser/ner/corenlp/CoreNLPNERecogniser.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 162,
                            "endLine": 162,
                            "startColumn": 59,
                            "endColumn": 66
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-parsers/src/main/java/org/apache/tika/parser/ner/corenlp/CoreNLPNERecogniser.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 162,
                            "endLine": 162,
                            "startColumn": 59,
                            "endColumn": 66
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-parsers/src/main/java/org/apache/tika/parser/ner/corenlp/CoreNLPNERecogniser.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 162,
                            "endLine": 162,
                            "startColumn": 43,
                            "endColumn": 58
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 803,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 3,
          "level": "error",
          "message": {
            "text": "Unsanitized input from a command line argument flows into java.io.FileInputStream, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5)",
              "[java.io.FileInputStream](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tika-core/src/main/java/org/apache/tika/language/LanguageProfilerBuilder.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 503,
                  "endLine": 503,
                  "startColumn": 43,
                  "endColumn": 58
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b1c9b300df5f27e8249b96d3300a495f1e9f4cf86c1190cc56941f08ec6db424",
            "1": "19689298.336127bc.4d63df5a.6c52ae28.a12717c0.2f4e1548.2501145e.54d46e25.8df8fa68.dd05ec30.50c8bb92.de031890.a7b964d9.7fda7c5e.0ac97cd8.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-core/src/main/java/org/apache/tika/language/LanguageProfilerBuilder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 477,
                            "endLine": 477,
                            "startColumn": 28,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-core/src/main/java/org/apache/tika/language/LanguageProfilerBuilder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 477,
                            "endLine": 477,
                            "startColumn": 28,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-core/src/main/java/org/apache/tika/language/LanguageProfilerBuilder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 477,
                            "endLine": 477,
                            "startColumn": 17,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-core/src/main/java/org/apache/tika/language/LanguageProfilerBuilder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 502,
                            "endLine": 502,
                            "startColumn": 30,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-core/src/main/java/org/apache/tika/language/LanguageProfilerBuilder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 502,
                            "endLine": 502,
                            "startColumn": 22,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-core/src/main/java/org/apache/tika/language/LanguageProfilerBuilder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 503,
                            "endLine": 503,
                            "startColumn": 59,
                            "endColumn": 60
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-core/src/main/java/org/apache/tika/language/LanguageProfilerBuilder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 503,
                            "endLine": 503,
                            "startColumn": 43,
                            "endColumn": 58
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 803,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 3,
          "level": "error",
          "message": {
            "text": "Unsanitized input from a command line argument flows into java.io.FileInputStream, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5)",
              "[java.io.FileInputStream](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tika-core/src/main/java/org/apache/tika/language/LanguageProfilerBuilder.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 517,
                  "endLine": 517,
                  "startColumn": 27,
                  "endColumn": 42
                }
              }
            }
          ],
          "fingerprints": {
            "0": "cd3f4d1b6e7ffcc415d7dc5e225236ad42bca4d051353f49d872fadca0b413e9",
            "1": "3b395a7c.f1efe30e.33fa5dbe.6c52ae28.2515323e.7fda7c5e.55c6f621.54d46e25.8df8fa68.dd05ec30.50c8bb92.de031890.a7b964d9.7fda7c5e.0ac97cd8.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-core/src/main/java/org/apache/tika/language/LanguageProfilerBuilder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 477,
                            "endLine": 477,
                            "startColumn": 28,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-core/src/main/java/org/apache/tika/language/LanguageProfilerBuilder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 477,
                            "endLine": 477,
                            "startColumn": 28,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-core/src/main/java/org/apache/tika/language/LanguageProfilerBuilder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 477,
                            "endLine": 477,
                            "startColumn": 17,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-core/src/main/java/org/apache/tika/language/LanguageProfilerBuilder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 516,
                            "endLine": 516,
                            "startColumn": 25,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-core/src/main/java/org/apache/tika/language/LanguageProfilerBuilder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 516,
                            "endLine": 516,
                            "startColumn": 17,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-core/src/main/java/org/apache/tika/language/LanguageProfilerBuilder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 517,
                            "endLine": 517,
                            "startColumn": 43,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-core/src/main/java/org/apache/tika/language/LanguageProfilerBuilder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 517,
                            "endLine": 517,
                            "startColumn": 27,
                            "endColumn": 42
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 803,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 3,
          "level": "error",
          "message": {
            "text": "Unsanitized input from a command line argument flows into java.io.FileInputStream, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5)",
              "[java.io.FileInputStream](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tika-core/src/main/java/org/apache/tika/language/LanguageProfilerBuilder.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 523,
                  "endLine": 523,
                  "startColumn": 27,
                  "endColumn": 42
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7f711181715ce09184f31830bb20e80bac5d46860021a7a8939ae45f9fbb1421",
            "1": "3b395a7c.f1efe30e.33fa5dbe.6c52ae28.2515323e.7fda7c5e.55c6f621.54d46e25.8df8fa68.dd05ec30.33fa5dbe.de031890.a7b964d9.7fda7c5e.0ac97cd8.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-core/src/main/java/org/apache/tika/language/LanguageProfilerBuilder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 484,
                            "endLine": 484,
                            "startColumn": 29,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-core/src/main/java/org/apache/tika/language/LanguageProfilerBuilder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 484,
                            "endLine": 484,
                            "startColumn": 29,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-core/src/main/java/org/apache/tika/language/LanguageProfilerBuilder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 484,
                            "endLine": 484,
                            "startColumn": 17,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-core/src/main/java/org/apache/tika/language/LanguageProfilerBuilder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 522,
                            "endLine": 522,
                            "startColumn": 25,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-core/src/main/java/org/apache/tika/language/LanguageProfilerBuilder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 522,
                            "endLine": 522,
                            "startColumn": 17,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-core/src/main/java/org/apache/tika/language/LanguageProfilerBuilder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 523,
                            "endLine": 523,
                            "startColumn": 43,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-core/src/main/java/org/apache/tika/language/LanguageProfilerBuilder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 523,
                            "endLine": 523,
                            "startColumn": 27,
                            "endColumn": 42
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 803,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 3,
          "level": "error",
          "message": {
            "text": "Unsanitized input from a command line argument flows into java.io.FileInputStream, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5)",
              "[java.io.FileInputStream](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tika-core/src/main/java/org/apache/tika/language/LanguageProfilerBuilder.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 533,
                  "endLine": 533,
                  "startColumn": 27,
                  "endColumn": 42
                }
              }
            }
          ],
          "fingerprints": {
            "0": "34b745cfb9f687097402b950213d607150d37bce17de7cd6411cce72cd18d177",
            "1": "3b395a7c.f1efe30e.33fa5dbe.6c52ae28.2515323e.7fda7c5e.55c6f621.54d46e25.8df8fa68.dd05ec30.50c8bb92.de031890.a7b964d9.7fda7c5e.0ac97cd8.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-core/src/main/java/org/apache/tika/language/LanguageProfilerBuilder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 477,
                            "endLine": 477,
                            "startColumn": 28,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-core/src/main/java/org/apache/tika/language/LanguageProfilerBuilder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 477,
                            "endLine": 477,
                            "startColumn": 28,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-core/src/main/java/org/apache/tika/language/LanguageProfilerBuilder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 477,
                            "endLine": 477,
                            "startColumn": 17,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-core/src/main/java/org/apache/tika/language/LanguageProfilerBuilder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 532,
                            "endLine": 532,
                            "startColumn": 25,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-core/src/main/java/org/apache/tika/language/LanguageProfilerBuilder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 532,
                            "endLine": 532,
                            "startColumn": 17,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-core/src/main/java/org/apache/tika/language/LanguageProfilerBuilder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 533,
                            "endLine": 533,
                            "startColumn": 43,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-core/src/main/java/org/apache/tika/language/LanguageProfilerBuilder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 533,
                            "endLine": 533,
                            "startColumn": 27,
                            "endColumn": 42
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 803,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 3,
          "level": "error",
          "message": {
            "text": "Unsanitized input from a command line argument flows into java.io.FileInputStream, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[java.io.FileInputStream](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tika-core/src/main/java/org/apache/tika/language/LanguageProfilerBuilder.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 538,
                  "endLine": 538,
                  "startColumn": 27,
                  "endColumn": 42
                }
              }
            }
          ],
          "fingerprints": {
            "0": "541853c9712b97ba09b41767c292c402654fa81fca1019ed60cc0b867796a450",
            "1": "3b395a7c.f1efe30e.33fa5dbe.6c52ae28.2515323e.7fda7c5e.55c6f621.54d46e25.8df8fa68.dd05ec30.a5c25d38.de031890.a7b964d9.7fda7c5e.0ac97cd8.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-core/src/main/java/org/apache/tika/language/LanguageProfilerBuilder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 476,
                            "endLine": 476,
                            "startColumn": 31,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-core/src/main/java/org/apache/tika/language/LanguageProfilerBuilder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 476,
                            "endLine": 476,
                            "startColumn": 31,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-core/src/main/java/org/apache/tika/language/LanguageProfilerBuilder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 476,
                            "endLine": 476,
                            "startColumn": 17,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-core/src/main/java/org/apache/tika/language/LanguageProfilerBuilder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 537,
                            "endLine": 537,
                            "startColumn": 30,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-core/src/main/java/org/apache/tika/language/LanguageProfilerBuilder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 537,
                            "endLine": 537,
                            "startColumn": 30,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-core/src/main/java/org/apache/tika/language/LanguageProfilerBuilder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 537,
                            "endLine": 537,
                            "startColumn": 30,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-core/src/main/java/org/apache/tika/language/LanguageProfilerBuilder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 537,
                            "endLine": 537,
                            "startColumn": 25,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-core/src/main/java/org/apache/tika/language/LanguageProfilerBuilder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 537,
                            "endLine": 537,
                            "startColumn": 17,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-core/src/main/java/org/apache/tika/language/LanguageProfilerBuilder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 538,
                            "endLine": 538,
                            "startColumn": 43,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-core/src/main/java/org/apache/tika/language/LanguageProfilerBuilder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 538,
                            "endLine": 538,
                            "startColumn": 27,
                            "endColumn": 42
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 803,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 3,
          "level": "error",
          "message": {
            "text": "Unsanitized input from a command line argument flows into java.io.FileOutputStream, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[java.io.FileOutputStream](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tika-core/src/main/java/org/apache/tika/language/LanguageProfilerBuilder.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 508,
                  "endLine": 508,
                  "startColumn": 44,
                  "endColumn": 60
                }
              }
            }
          ],
          "fingerprints": {
            "0": "94b1f0b3d773c1559a69a62dd52a09fdc3a6e692f91f0188fad9e97cfba940bd",
            "1": "81925955.f1efe30e.33fa5dbe.6c52ae28.e0c1f32c.7fda7c5e.df7e59ba.54d46e25.8df8fa68.dd05ec30.a5c25d38.de031890.025462d2.7fda7c5e.0ac97cd8.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-core/src/main/java/org/apache/tika/language/LanguageProfilerBuilder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 476,
                            "endLine": 476,
                            "startColumn": 31,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-core/src/main/java/org/apache/tika/language/LanguageProfilerBuilder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 476,
                            "endLine": 476,
                            "startColumn": 31,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-core/src/main/java/org/apache/tika/language/LanguageProfilerBuilder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 476,
                            "endLine": 476,
                            "startColumn": 17,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-core/src/main/java/org/apache/tika/language/LanguageProfilerBuilder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 507,
                            "endLine": 507,
                            "startColumn": 30,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-core/src/main/java/org/apache/tika/language/LanguageProfilerBuilder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 507,
                            "endLine": 507,
                            "startColumn": 30,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-core/src/main/java/org/apache/tika/language/LanguageProfilerBuilder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 507,
                            "endLine": 507,
                            "startColumn": 30,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-core/src/main/java/org/apache/tika/language/LanguageProfilerBuilder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 507,
                            "endLine": 507,
                            "startColumn": 25,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-core/src/main/java/org/apache/tika/language/LanguageProfilerBuilder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 507,
                            "endLine": 507,
                            "startColumn": 17,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-core/src/main/java/org/apache/tika/language/LanguageProfilerBuilder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 508,
                            "endLine": 508,
                            "startColumn": 61,
                            "endColumn": 62
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-core/src/main/java/org/apache/tika/language/LanguageProfilerBuilder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 508,
                            "endLine": 508,
                            "startColumn": 44,
                            "endColumn": 60
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 803,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 3,
          "level": "error",
          "message": {
            "text": "Unsanitized input from a command line argument flows into java.io.FileOutputStream, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39),(40),(41),(42),(43),(44),(45),(46),(47),(48),(49),(50),(51),(52),(53),(54),(55),(56),(57),(58),(59),(60),(61),(62),(63),(64),(65),(66),(67),(68),(69)",
              "[java.io.FileOutputStream](70)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 149,
                  "endLine": 149,
                  "startColumn": 17,
                  "endColumn": 28
                }
              }
            }
          ],
          "fingerprints": {
            "0": "9cdd41fb34e43d0d41770e6d0c76adb3d76b88d975c996b76b54141db64cee59",
            "1": "032e2559.ff76257e.c55f45e9.b4d12a11.f6d438cc.34cec91e.3b2adeff.54d46e25.8df8fa68.dd05ec30.622565c7.de031890.dd06b926.ce109560.377b98a3.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 149,
                            "endLine": 149,
                            "startColumn": 29,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 149,
                            "endLine": 149,
                            "startColumn": 29,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 362,
                            "endLine": 362,
                            "startColumn": 25,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 363,
                            "endLine": 363,
                            "startColumn": 13,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 363,
                            "endLine": 363,
                            "startColumn": 33,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 366,
                            "endLine": 366,
                            "startColumn": 20,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 366,
                            "endLine": 366,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 369,
                            "endLine": 369,
                            "startColumn": 20,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 369,
                            "endLine": 369,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 371,
                            "endLine": 371,
                            "startColumn": 20,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 371,
                            "endLine": 371,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 378,
                            "endLine": 378,
                            "startColumn": 20,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 378,
                            "endLine": 378,
                            "startColumn": 51,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 381,
                            "endLine": 381,
                            "startColumn": 20,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 381,
                            "endLine": 381,
                            "startColumn": 53,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 384,
                            "endLine": 384,
                            "startColumn": 20,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 384,
                            "endLine": 384,
                            "startColumn": 58,
                            "endColumn": 61
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 387,
                            "endLine": 387,
                            "startColumn": 20,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 387,
                            "endLine": 387,
                            "startColumn": 62,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 390,
                            "endLine": 390,
                            "startColumn": 19,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 393,
                            "endLine": 393,
                            "startColumn": 19,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 396,
                            "endLine": 396,
                            "startColumn": 20,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 399,
                            "endLine": 399,
                            "startColumn": 20,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 402,
                            "endLine": 402,
                            "startColumn": 20,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 405,
                            "endLine": 405,
                            "startColumn": 20,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 408,
                            "endLine": 408,
                            "startColumn": 20,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 411,
                            "endLine": 411,
                            "startColumn": 20,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 412,
                            "endLine": 412,
                            "startColumn": 20,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 414,
                            "endLine": 414,
                            "startColumn": 20,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 29,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 414,
                            "endLine": 414,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 30,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 416,
                            "endLine": 416,
                            "startColumn": 20,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 31,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 418,
                            "endLine": 418,
                            "startColumn": 20,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 32,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 421,
                            "endLine": 421,
                            "startColumn": 20,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 33,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 423,
                            "endLine": 423,
                            "startColumn": 20,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 34,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 425,
                            "endLine": 425,
                            "startColumn": 20,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 35,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 425,
                            "endLine": 425,
                            "startColumn": 45,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 36,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 427,
                            "endLine": 427,
                            "startColumn": 20,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 37,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 429,
                            "endLine": 429,
                            "startColumn": 21,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 38,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 429,
                            "endLine": 429,
                            "startColumn": 41,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 39,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 431,
                            "endLine": 431,
                            "startColumn": 20,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 40,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 431,
                            "endLine": 431,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 41,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 433,
                            "endLine": 433,
                            "startColumn": 20,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 42,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 433,
                            "endLine": 433,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 43,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 435,
                            "endLine": 435,
                            "startColumn": 20,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 44,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 435,
                            "endLine": 435,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 45,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 437,
                            "endLine": 437,
                            "startColumn": 20,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 46,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 437,
                            "endLine": 437,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 47,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 439,
                            "endLine": 439,
                            "startColumn": 20,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 48,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 439,
                            "endLine": 439,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 49,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 441,
                            "endLine": 441,
                            "startColumn": 20,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 50,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 441,
                            "endLine": 441,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 51,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 443,
                            "endLine": 443,
                            "startColumn": 20,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 52,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 443,
                            "endLine": 443,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 53,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 445,
                            "endLine": 445,
                            "startColumn": 20,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 54,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 445,
                            "endLine": 445,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 55,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 447,
                            "endLine": 447,
                            "startColumn": 20,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 56,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 447,
                            "endLine": 447,
                            "startColumn": 40,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 57,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 449,
                            "endLine": 449,
                            "startColumn": 20,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 58,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 450,
                            "endLine": 450,
                            "startColumn": 30,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 59,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 450,
                            "endLine": 450,
                            "startColumn": 30,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 60,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 450,
                            "endLine": 450,
                            "startColumn": 20,
                            "endColumn": 70
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 61,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 453,
                            "endLine": 453,
                            "startColumn": 17,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 62,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 456,
                            "endLine": 456,
                            "startColumn": 30,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 63,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 456,
                            "endLine": 456,
                            "startColumn": 13,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 64,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1130,
                            "endLine": 1130,
                            "startColumn": 34,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 65,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1130,
                            "endLine": 1130,
                            "startColumn": 17,
                            "endColumn": 93
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 66,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1132,
                            "endLine": 1132,
                            "startColumn": 20,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 67,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1060,
                            "endLine": 1060,
                            "startColumn": 13,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 68,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1063,
                            "endLine": 1063,
                            "startColumn": 27,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 69,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1071,
                            "endLine": 1071,
                            "startColumn": 61,
                            "endColumn": 71
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 70,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1071,
                            "endLine": 1071,
                            "startColumn": 44,
                            "endColumn": 60
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 753,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 3,
          "level": "error",
          "message": {
            "text": "Unsanitized input from a command line argument flows into org.apache.lucene.store.FSDirectory.open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2)",
              "[org.apache.lucene.store.FSDirectory.open](3)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tika-example/src/main/java/org/apache/tika/example/LuceneIndexerExtended.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 47,
                  "endLine": 47,
                  "startColumn": 38,
                  "endColumn": 54
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c8771e67dfb1ab6a18ee39d879f8823af5e2c12b7fbcd6e9219e1f276cb52b49",
            "1": "ca9876a9.1cbd3ff4.b9b8316f.8ecece7f.025462d2.117e971f.df7e59ba.26e528aa.8df8fa68.dd05ec30.622565c7.de031890.d31a8364.ce109560.377b98a3.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-example/src/main/java/org/apache/tika/example/LuceneIndexerExtended.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 47,
                            "endLine": 47,
                            "startColumn": 65,
                            "endColumn": 72
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-example/src/main/java/org/apache/tika/example/LuceneIndexerExtended.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 47,
                            "endLine": 47,
                            "startColumn": 65,
                            "endColumn": 72
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-example/src/main/java/org/apache/tika/example/LuceneIndexerExtended.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 47,
                            "endLine": 47,
                            "startColumn": 55,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-example/src/main/java/org/apache/tika/example/LuceneIndexerExtended.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 47,
                            "endLine": 47,
                            "startColumn": 38,
                            "endColumn": 54
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 753,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 3,
          "level": "error",
          "message": {
            "text": "Unsanitized input from a command line argument flows into java.nio.file.Files.walkFileTree, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to list files in arbitrary directories.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to list files in arbitrary directories.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[java.nio.file.Files.walkFileTree](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tika-example/src/main/java/org/apache/tika/example/StandardsExtractionExample.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 70,
                  "endLine": 70,
                  "startColumn": 4,
                  "endColumn": 22
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ad46aaad1745be1d431129df9013128ed13bb742462c0be87a76badcc345ce7f",
            "1": "b7848510.9368e2bb.a224ef38.6c52ae28.76afdaa3.0d476878.df7e59ba.54d46e25.8df8fa68.9368e2bb.bd5a7635.de031890.76afdaa3.ce109560.377b98a3.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-example/src/main/java/org/apache/tika/example/StandardsExtractionExample.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 59,
                            "endLine": 59,
                            "startColumn": 21,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-example/src/main/java/org/apache/tika/example/StandardsExtractionExample.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 59,
                            "endLine": 59,
                            "startColumn": 21,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-example/src/main/java/org/apache/tika/example/StandardsExtractionExample.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 59,
                            "endLine": 59,
                            "startColumn": 10,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-example/src/main/java/org/apache/tika/example/StandardsExtractionExample.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 61,
                            "endLine": 61,
                            "startColumn": 17,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-example/src/main/java/org/apache/tika/example/StandardsExtractionExample.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 61,
                            "endLine": 61,
                            "startColumn": 8,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-example/src/main/java/org/apache/tika/example/StandardsExtractionExample.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 62,
                            "endLine": 62,
                            "startColumn": 37,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-example/src/main/java/org/apache/tika/example/StandardsExtractionExample.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 63,
                            "endLine": 63,
                            "startColumn": 17,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-example/src/main/java/org/apache/tika/example/StandardsExtractionExample.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 68,
                            "endLine": 68,
                            "startColumn": 35,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-example/src/main/java/org/apache/tika/example/StandardsExtractionExample.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 23,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-example/src/main/java/org/apache/tika/example/StandardsExtractionExample.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 4,
                            "endColumn": 22
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 753,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 3,
          "level": "error",
          "message": {
            "text": "Unsanitized input from a command line argument flows into java.nio.file.Files.walkFileTree, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to list files in arbitrary directories.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to list files in arbitrary directories.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7)",
              "[java.nio.file.Files.walkFileTree](8)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tika-example/src/main/java/org/apache/tika/example/GrabPhoneNumbersExample.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 67,
                  "endLine": 67,
                  "startColumn": 13,
                  "endColumn": 31
                }
              }
            }
          ],
          "fingerprints": {
            "0": "9d45a6ab85bda5a713040d12e4693747d8f65edd6f77262f7c3aa56a93c937ba",
            "1": "b7848510.9368e2bb.a224ef38.6c52ae28.76afdaa3.0d476878.df7e59ba.54d46e25.8df8fa68.9368e2bb.eec952d7.de031890.76afdaa3.ce109560.377b98a3.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-example/src/main/java/org/apache/tika/example/GrabPhoneNumbersExample.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 33,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-example/src/main/java/org/apache/tika/example/GrabPhoneNumbersExample.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 33,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-example/src/main/java/org/apache/tika/example/GrabPhoneNumbersExample.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 23,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-example/src/main/java/org/apache/tika/example/GrabPhoneNumbersExample.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 14,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-example/src/main/java/org/apache/tika/example/GrabPhoneNumbersExample.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 59,
                            "endLine": 59,
                            "startColumn": 43,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-example/src/main/java/org/apache/tika/example/GrabPhoneNumbersExample.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 60,
                            "endLine": 60,
                            "startColumn": 23,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-example/src/main/java/org/apache/tika/example/GrabPhoneNumbersExample.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 65,
                            "endLine": 65,
                            "startColumn": 38,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-example/src/main/java/org/apache/tika/example/GrabPhoneNumbersExample.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 67,
                            "endLine": 67,
                            "startColumn": 32,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-example/src/main/java/org/apache/tika/example/GrabPhoneNumbersExample.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 67,
                            "endLine": 67,
                            "startColumn": 13,
                            "endColumn": 31
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 753,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 3,
          "level": "error",
          "message": {
            "text": "Unsanitized input from a command line argument flows into org.apache.commons.io.FileUtils.readFileToString, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6)",
              "[org.apache.commons.io.FileUtils.readFileToString](7)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tika-example/src/main/java/org/apache/tika/example/MyFirstTika.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 101,
                  "endLine": 101,
                  "startColumn": 51,
                  "endColumn": 77
                }
              }
            }
          ],
          "fingerprints": {
            "0": "78e90d19231b2749b96ecfe118e5198a25adaa99b94087d4a6641a1e8e4a47b8",
            "1": "89236f73.fbbc39dc.2ca3f416.8c2163ce.1627d703.435e3fe1.df7e59ba.428178e3.8df8fa68.fbbc39dc.50c8bb92.838af290.d8e845eb.fe985351.377b98a3.9cd70b99"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-example/src/main/java/org/apache/tika/example/MyFirstTika.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 50,
                            "endLine": 50,
                            "startColumn": 27,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-example/src/main/java/org/apache/tika/example/MyFirstTika.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 50,
                            "endLine": 50,
                            "startColumn": 27,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-example/src/main/java/org/apache/tika/example/MyFirstTika.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 50,
                            "endLine": 50,
                            "startColumn": 16,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-example/src/main/java/org/apache/tika/example/MyFirstTika.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 44,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-example/src/main/java/org/apache/tika/example/MyFirstTika.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 81,
                            "endLine": 81,
                            "startColumn": 47,
                            "endColumn": 62
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-example/src/main/java/org/apache/tika/example/MyFirstTika.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 101,
                            "endLine": 101,
                            "startColumn": 82,
                            "endColumn": 86
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-example/src/main/java/org/apache/tika/example/MyFirstTika.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 101,
                            "endLine": 101,
                            "startColumn": 78,
                            "endColumn": 96
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-example/src/main/java/org/apache/tika/example/MyFirstTika.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 101,
                            "endLine": 101,
                            "startColumn": 51,
                            "endColumn": 77
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 753,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 3,
          "level": "error",
          "message": {
            "text": "Unsanitized input from a command line argument flows into java.nio.file.Files.newInputStream, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6)",
              "[java.nio.file.Files.newInputStream](7)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tika-eval/src/main/java/org/apache/tika/eval/XMLErrorLogUpdater.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 63,
                  "endLine": 63,
                  "startColumn": 9,
                  "endColumn": 22
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e29e2744643bee2b624160a462c058c6fd26bc1cef15de1b034c3e779122f2e2",
            "1": "19689298.277c621c.7be03776.334c3b1f.1760cb9b.cad67b95.f991e70c.54d46e25.8df8fa68.277c621c.622565c7.de031890.1760cb9b.ce109560.377b98a3.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-eval/src/main/java/org/apache/tika/eval/XMLErrorLogUpdater.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 38,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-eval/src/main/java/org/apache/tika/eval/XMLErrorLogUpdater.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 38,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-eval/src/main/java/org/apache/tika/eval/XMLErrorLogUpdater.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 28,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-eval/src/main/java/org/apache/tika/eval/XMLErrorLogUpdater.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 14,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-eval/src/main/java/org/apache/tika/eval/XMLErrorLogUpdater.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 63,
                            "endLine": 63,
                            "startColumn": 78,
                            "endColumn": 89
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-eval/src/main/java/org/apache/tika/eval/XMLErrorLogUpdater.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 69,
                            "endLine": 69,
                            "startColumn": 68,
                            "endColumn": 83
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-eval/src/main/java/org/apache/tika/eval/XMLErrorLogUpdater.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 72,
                            "endLine": 72,
                            "startColumn": 52,
                            "endColumn": 62
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-eval/src/main/java/org/apache/tika/eval/XMLErrorLogUpdater.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 72,
                            "endLine": 72,
                            "startColumn": 31,
                            "endColumn": 51
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 803,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 3,
          "level": "error",
          "message": {
            "text": "Unsanitized input from a command line argument flows into java.nio.file.Files.newInputStream, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6)",
              "[java.nio.file.Files.newInputStream](7)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tika-eval/src/main/java/org/apache/tika/eval/XMLErrorLogUpdater.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 64,
                  "endLine": 64,
                  "startColumn": 9,
                  "endColumn": 22
                }
              }
            }
          ],
          "fingerprints": {
            "0": "78fef25bd7f99dfff04d2b9faa562aa840986c55c3fd7390cb7306b3791a08f4",
            "1": "19689298.277c621c.7be03776.334c3b1f.fa5f6fc4.cad67b95.a56419a6.54d46e25.8df8fa68.277c621c.622565c7.de031890.025462d2.ce109560.377b98a3.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-eval/src/main/java/org/apache/tika/eval/XMLErrorLogUpdater.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 59,
                            "endLine": 59,
                            "startColumn": 38,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-eval/src/main/java/org/apache/tika/eval/XMLErrorLogUpdater.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 59,
                            "endLine": 59,
                            "startColumn": 38,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-eval/src/main/java/org/apache/tika/eval/XMLErrorLogUpdater.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 59,
                            "endLine": 59,
                            "startColumn": 28,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-eval/src/main/java/org/apache/tika/eval/XMLErrorLogUpdater.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 59,
                            "endLine": 59,
                            "startColumn": 14,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-eval/src/main/java/org/apache/tika/eval/XMLErrorLogUpdater.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 64,
                            "endLine": 64,
                            "startColumn": 78,
                            "endColumn": 89
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-eval/src/main/java/org/apache/tika/eval/XMLErrorLogUpdater.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 69,
                            "endLine": 69,
                            "startColumn": 68,
                            "endColumn": 83
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-eval/src/main/java/org/apache/tika/eval/XMLErrorLogUpdater.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 72,
                            "endLine": 72,
                            "startColumn": 52,
                            "endColumn": 62
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-eval/src/main/java/org/apache/tika/eval/XMLErrorLogUpdater.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 72,
                            "endLine": 72,
                            "startColumn": 31,
                            "endColumn": 51
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 803,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/Ssrf",
          "ruleIndex": 4,
          "level": "error",
          "message": {
            "text": "Unsanitized input from a command line argument flows into openStream, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5)",
              "[openStream](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tika-example/src/main/java/org/apache/tika/example/DisplayMetInstance.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 43,
                  "endLine": 43,
                  "startColumn": 24,
                  "endColumn": 49
                }
              }
            }
          ],
          "fingerprints": {
            "0": "55ab05d78dc181352e99d7aa93a72b9eadbb4cb04f18643ef9c308fd68780426",
            "1": "ac4e7c8b.97acdc08.35d66547.4eddf48e.025462d2.64de07d1.df7e59ba.26e528aa.8df8fa68.f15a4282.622565c7.e22980a8.025462d2.6fdeb98e.377b98a3.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-example/src/main/java/org/apache/tika/example/DisplayMetInstance.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 58,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-example/src/main/java/org/apache/tika/example/DisplayMetInstance.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 58,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-example/src/main/java/org/apache/tika/example/DisplayMetInstance.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 54,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-example/src/main/java/org/apache/tika/example/DisplayMetInstance.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 50,
                            "endColumn": 66
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-example/src/main/java/org/apache/tika/example/DisplayMetInstance.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 34,
                            "endLine": 34,
                            "startColumn": 35,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-example/src/main/java/org/apache/tika/example/DisplayMetInstance.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 38,
                            "startColumn": 22,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-example/src/main/java/org/apache/tika/example/DisplayMetInstance.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 38,
                            "startColumn": 22,
                            "endColumn": 36
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 801,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "python/InsecureXmlParser",
          "ruleIndex": 5,
          "level": "warning",
          "message": {
            "text": "xml.etree.ElementTree.parse is considered insecure. Use an analog from the defusedxml package.",
            "markdown": "{0} is considered insecure. Use an analog from the defusedxml package.",
            "arguments": [
              "[xml.etree.ElementTree.parse](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tika-parsers/src/main/resources/org/apache/tika/parser/captioning/tf/im2txtapi.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 60,
                  "endLine": 60,
                  "startColumn": 12,
                  "endColumn": 20
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5ebb06089d0a06793ed09669158e24fadec4be14bb4f3eafa0415313ebbdfb15",
            "1": "44bc8a18.a3a83841.a13da7cf.0b2e3a9e.416ae69f.5b57c246.88f3b76f.cdb021a1.44bc8a18.a3a83841.a13da7cf.0b2e3a9e.416ae69f.5b57c246.88f3b76f.cdb021a1"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-parsers/src/main/resources/org/apache/tika/parser/captioning/tf/im2txtapi.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 60,
                            "endLine": 60,
                            "startColumn": 12,
                            "endColumn": 20
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/IndirectCommandInjection",
          "ruleIndex": 6,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an environment path variable flows into command, where it is used to build a shell command. Forwarding command-line arguments or file paths from the local environment to a function that executes a system command can change the meaning of the command unexpectedly due to unescaped special characters, which may result in a Indirect Command Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to build a shell command. Forwarding command-line arguments or file paths from the local environment to a function that executes a system command can change the meaning of the command unexpectedly due to unescaped special characters, which may result in a Indirect Command Injection vulnerability.",
            "arguments": [
              "[an environment path variable](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18)",
              "[command](19)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tika-server/src/main/java/org/apache/tika/server/TikaServerWatchDog.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 282,
                  "endLine": 282,
                  "startColumn": 13,
                  "endColumn": 28
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b1ee983320505835f6089d19c78b4cf2325bb8e337142c612486b606d72a6376",
            "1": "e6fcc0e0.f59a628a.aa4517d0.4d1392c1.ab415621.5d10e9ce.df7e59ba.54d46e25.e1d7cd7c.24877279.77f21732.334c3b1f.4856fe5b.7fda7c5e.d03f2423.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-server/src/main/java/org/apache/tika/server/TikaServerWatchDog.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 155,
                            "endLine": 155,
                            "startColumn": 24,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-server/src/main/java/org/apache/tika/server/TikaServerWatchDog.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 155,
                            "endLine": 155,
                            "startColumn": 24,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-server/src/main/java/org/apache/tika/server/TikaServerWatchDog.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 155,
                            "endLine": 155,
                            "startColumn": 13,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-server/src/main/java/org/apache/tika/server/TikaServerWatchDog.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 158,
                            "endLine": 158,
                            "startColumn": 26,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-server/src/main/java/org/apache/tika/server/TikaServerWatchDog.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 158,
                            "endLine": 158,
                            "startColumn": 26,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-server/src/main/java/org/apache/tika/server/TikaServerWatchDog.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 158,
                            "endLine": 158,
                            "startColumn": 26,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-server/src/main/java/org/apache/tika/server/TikaServerWatchDog.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 158,
                            "endLine": 158,
                            "startColumn": 18,
                            "endColumn": 76
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-server/src/main/java/org/apache/tika/server/TikaServerWatchDog.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 160,
                            "endLine": 160,
                            "startColumn": 21,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-server/src/main/java/org/apache/tika/server/TikaServerWatchDog.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 160,
                            "endLine": 160,
                            "startColumn": 21,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-server/src/main/java/org/apache/tika/server/TikaServerWatchDog.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 160,
                            "endLine": 160,
                            "startColumn": 21,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-server/src/main/java/org/apache/tika/server/TikaServerWatchDog.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 159,
                            "endLine": 159,
                            "startColumn": 20,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-server/src/main/java/org/apache/tika/server/TikaServerWatchDog.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 267,
                            "endLine": 267,
                            "startColumn": 20,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-server/src/main/java/org/apache/tika/server/TikaServerWatchDog.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 271,
                            "endLine": 271,
                            "startColumn": 13,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-server/src/main/java/org/apache/tika/server/TikaServerWatchDog.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 277,
                            "endLine": 277,
                            "startColumn": 13,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-server/src/main/java/org/apache/tika/server/TikaServerWatchDog.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 278,
                            "endLine": 278,
                            "startColumn": 13,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-server/src/main/java/org/apache/tika/server/TikaServerWatchDog.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 279,
                            "endLine": 279,
                            "startColumn": 13,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-server/src/main/java/org/apache/tika/server/TikaServerWatchDog.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 280,
                            "endLine": 280,
                            "startColumn": 13,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-server/src/main/java/org/apache/tika/server/TikaServerWatchDog.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 281,
                            "endLine": 281,
                            "startColumn": 54,
                            "endColumn": 61
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-server/src/main/java/org/apache/tika/server/TikaServerWatchDog.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 282,
                            "endLine": 282,
                            "startColumn": 29,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tika-server/src/main/java/org/apache/tika/server/TikaServerWatchDog.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 282,
                            "endLine": 282,
                            "startColumn": 13,
                            "endColumn": 28
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        }
      ],
      "properties": {
        "coverage": [
          {
            "files": 253,
            "isSupported": true,
            "lang": "XML"
          },
          {
            "files": 1040,
            "isSupported": true,
            "lang": "Java"
          },
          {
            "files": 30,
            "isSupported": true,
            "lang": "HTML"
          },
          {
            "files": 8,
            "isSupported": true,
            "lang": "Python"
          },
          {
            "files": 2,
            "isSupported": true,
            "lang": "JavaScript"
          }
        ]
      }
    }
  ]
}
