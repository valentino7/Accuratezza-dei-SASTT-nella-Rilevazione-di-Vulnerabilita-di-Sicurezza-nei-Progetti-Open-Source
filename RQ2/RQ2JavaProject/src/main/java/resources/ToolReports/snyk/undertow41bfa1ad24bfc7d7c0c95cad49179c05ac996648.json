{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "SnykCode",
          "semanticVersion": "1.0.0",
          "version": "1.0.0",
          "rules": [
            {
              "id": "java/Ssrf/test",
              "name": "Ssrf/test",
              "shortDescription": {
                "text": "Server-Side Request Forgery (SSRF)"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\nIn a server-side request forgery attack, a malicious user supplies a URL (an external URL or a network IP address such as 127.0.0.1) to the application's back end. The server then accesses the URL and shares its results, which may include sensitive information such as AWS metadata, internal configuration information, or database contents with the attacker. Because the request comes from the back end, it bypasses access controls, potentially exposing information the user does not have sufficient privileges to receive. The attacker can then exploit this information to gain access, modify the web application, or demand a ransom payment.\n\n### Best practices for prevention\n* Blacklists are problematic and attackers have numerous ways to bypass them; ideally, use a whitelist of all permitted domains and IP addresses.\n* Use authentication even within your own network to prevent exploitation of server-side requests.\n* Implement zero trust and sanitize and validate all URL and header data returning to the server from the user. Strip invalid or suspect characters, then inspect to be certain it contains a valid and expected value.\n* Ideally, avoid sending server requests based on user-provided data altogether.\n* Ensure that you are not sending raw response bodies from the server directly to the client. Only deliver expected responses.\n* Disable suspect and exploitable URL schemas. Common culprits include obscure and little-used schemas such as `file://`, `dict://`, `ftp://`, and `gopher://`.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/httpcache4j/httpcache4j/commit/81f9db7ad6e7e18227b8b5de717c580da15ed7ae?diff=split#diff-99799647d646d0fff0a1b4b465dd5de0L49",
                    "lines": [
                      {
                        "line": "public HTTPResponse resolve(HTTPRequest request) throws IOException {",
                        "lineNumber": 47,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    req = getAuthenticator().preparePreemptiveAuthentication(req);",
                        "lineNumber": 50,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 51,
                        "lineChange": "added"
                      },
                      {
                        "line": "URL url = request.getRequestURI().toURL();",
                        "lineNumber": 52,
                        "lineChange": "none"
                      },
                      {
                        "line": "URLConnection openConnection = url.openConnection();",
                        "lineNumber": 53,
                        "lineChange": "none"
                      },
                      {
                        "line": "if (openConnection instanceof HttpURLConnection) {",
                        "lineNumber": 54,
                        "lineChange": "none"
                      },
                      {
                        "line": "    HttpURLConnection connection = (HttpURLConnection) openConnection;",
                        "lineNumber": 55,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/LearnLib/alex/commit/cb22c1446dfa65bb405f50baa79ba77866c4c706?diff=split#diff-1723d8f955b61289dccacfea34e7737dL58",
                    "lines": [
                      {
                        "line": "@GET",
                        "lineNumber": 55,
                        "lineChange": "none"
                      },
                      {
                        "line": "@Produces(MediaType.TEXT_HTML)",
                        "lineNumber": 56,
                        "lineChange": "none"
                      },
                      {
                        "line": "public Response doGetProxy(@QueryParam(\"url\") String url, @HeaderParam(\"Cookie\") String cookies) {",
                        "lineNumber": 57,
                        "lineChange": "none"
                      },
                      {
                        "line": "    LOGGER.trace(\"IFrameProxyResource.doGetProxy(\" + url + \", \" + cookies + \").\");",
                        "lineNumber": 58,
                        "lineChange": "added"
                      },
                      {
                        "line": "    try {",
                        "lineNumber": 60,
                        "lineChange": "none"
                      },
                      {
                        "line": "        Connection connection = Jsoup.connect(url);",
                        "lineNumber": 61,
                        "lineChange": "none"
                      },
                      {
                        "line": "        connection = parseAndProcessCookies(connection, cookies);",
                        "lineNumber": 62,
                        "lineChange": "none"
                      },
                      {
                        "line": "        connection = connection.method(Connection.Method.GET);",
                        "lineNumber": 63,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/dotnet/aspnetcore/commit/e089cfc11cb86d6da786d82ee92aeef1c903f0f5?diff=split#diff-f69c44e82917810b055809e4c47c7e7dL84",
                    "lines": [
                      {
                        "line": "@Override",
                        "lineNumber": 94,
                        "lineChange": "none"
                      },
                      {
                        "line": "public Single<HttpResponse> send(HttpRequest httpRequest) {",
                        "lineNumber": 95,
                        "lineChange": "none"
                      },
                      {
                        "line": "@Override",
                        "lineNumber": 99,
                        "lineChange": "added"
                      },
                      {
                        "line": "public Single<HttpResponse> send(HttpRequest httpRequest, String bodyContent) {",
                        "lineNumber": 100,
                        "lineChange": "added"
                      },
                      {
                        "line": "    Request.Builder requestBuilder = new Request.Builder().url(httpRequest.getUrl());",
                        "lineNumber": 101,
                        "lineChange": "none"
                      },
                      {
                        "line": "    switch (httpRequest.getMethod()) {",
                        "lineNumber": 103,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Support Java 8 class files",
                  "- app requests work in tests",
                  "* Add logic to catch unranked hiscores and display them properly."
                ],
                "precision": "very-high",
                "repoDatasetSize": 233,
                "cwe": [
                  "CWE-918"
                ]
              }
            },
            {
              "id": "java/InsecureHash/test",
              "name": "InsecureHash/test",
              "shortDescription": {
                "text": "Use of Password Hash With Insufficient Computational Effort"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nSensitive information should never be stored in plain text, since this makes it very easy for unauthorized users, whether malicious insiders or outside attackers, to access. Hashing methods are used to make stored passwords and other sensitive data unreadable to users. For example, when a password is defined for the first time, it is hashed and then stored. The next time that user attempts to log on, the password they enter is hashed following the same procedure and compared with the stored value. In this way, the original password never needs to be stored in the system.\n\nHashing is a one-way scheme, meaning a hashed password cannot be reverse engineered. However, if an outdated or custom programmed hashing scheme is used, it becomes simple for an attacker with powerful modern computing power to gain access to the hashes used. This opens up access to all stored password information, leading to breached security. Therefore, it is essential for developers to understand modern, secure password hashing techniques.\n\n### Best practices for prevention\n* Use strong standard algorithms for hashing rather than simpler but outdated methods or DIY hashing schemes, which may have inherent weaknesses.\n* Use modular design for all code dealing with hashing so it can be swapped out as security standards change over time.\n* Use salting in combination with hashing (While this places more demands on resources, it is an essential step for tighter security.).\n* Implement zero-trust architecture to ensure that access to password data is granted only for legitimate business purposes.\n* Increase developer awareness of current standards in data security and cryptography.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/tita/tita/commit/398f6b776a2aea7f20bf604768b8721beff8d93a?diff=split#diff-dd34c5e6a15ca48bff6f9ca749e68243L164",
                    "lines": [
                      {
                        "line": " */",
                        "lineNumber": 161,
                        "lineChange": "none"
                      },
                      {
                        "line": "private String getHashedPassword(String pwd) throws NoSuchAlgorithmException {",
                        "lineNumber": 162,
                        "lineChange": "none"
                      },
                      {
                        "line": "    MessageDigest md = MessageDigest.getInstance(\"SHA-1\");",
                        "lineNumber": 163,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    MessageDigest md = MessageDigest.getInstance(\"SHA-256\");",
                        "lineNumber": 103,
                        "lineChange": "added"
                      },
                      {
                        "line": "    byte[] encryptMsg = md.digest(pwd.getBytes());",
                        "lineNumber": 164,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return new String(encryptMsg);",
                        "lineNumber": 165,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    return bytes2String(encryptMsg);",
                        "lineNumber": 105,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/devonfw/my-thai-star/commit/095a3fb6bb860a2411cb51e812121ec2a6b99894?diff=split#diff-4f73d1042058dd462057744068125d4eL242",
                    "lines": [
                      {
                        "line": "    + String.format(\"%02d\", ldt1.getSecond());",
                        "lineNumber": 240,
                        "lineChange": "none"
                      },
                      {
                        "line": "MessageDigest md = MessageDigest.getInstance(\"MD5\");",
                        "lineNumber": 241,
                        "lineChange": "removed"
                      },
                      {
                        "line": "MessageDigest md = MessageDigest.getInstance(\"SHA-256\");",
                        "lineNumber": 242,
                        "lineChange": "added"
                      },
                      {
                        "line": "md.update((email + date + time).getBytes());",
                        "lineNumber": 243,
                        "lineChange": "none"
                      },
                      {
                        "line": "byte[] digest = md.digest();",
                        "lineNumber": 244,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/SecurityCompass/AndroidLabs/commit/5608f75dd665beac85dbad08f80b91d73b27904a?diff=split#diff-ffc047d4a5f84de13e373f2392bfb11bL148",
                    "lines": [
                      {
                        "line": "byte[] passwordBytes = (password).getBytes(\"UTF-8\");",
                        "lineNumber": 145,
                        "lineChange": "none"
                      },
                      {
                        "line": "MessageDigest md = MessageDigest.getInstance(\"SHA-1\");",
                        "lineNumber": 147,
                        "lineChange": "removed"
                      },
                      {
                        "line": "MessageDigest md = MessageDigest.getInstance(\"SHA-256\");",
                        "lineNumber": 147,
                        "lineChange": "added"
                      },
                      {
                        "line": "md.reset();",
                        "lineNumber": 148,
                        "lineChange": "none"
                      },
                      {
                        "line": "md.update(salt);",
                        "lineNumber": 149,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Added an enum for the supported encryption algorithms",
                  "Added #hash(byte[], String)",
                  "Added support for\nsha256 and nonce token."
                ],
                "precision": "very-high",
                "repoDatasetSize": 122,
                "cwe": [
                  "CWE-916"
                ]
              }
            },
            {
              "id": "java/HardcodedPassword",
              "name": "HardcodedPassword",
              "shortDescription": {
                "text": "Use of Hardcoded Credentials"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nDevelopers may use hardcoded credentials for convenience when coding in order to simplify their workflow. While they are responsible for removing these before production, occasionally this task may fall through the cracks. This also becomes a maintenance challenge when credentials are re-used across multiple applications.\n\nOnce attackers gain access, they may take advantage of privilege level to remove or alter data, take down a site or app, or hold any of the above for ransom. The risk across multiple similar projects is even greater. If code containing the credentials is reused across multiple projects, they will all be compromised.\n\n### Best practices for prevention\n* Plan software architecture such that keys and passwords are always stored outside the code, wherever possible.\n* Plan encryption into software architecture for all credential information and ensure proper handling of keys, credentials, and passwords.\n* Prompt for a secure password on first login rather than hard-code a default password.\n* If a hardcoded password or credential must be used, limit its use, for example, to system console users rather than via the network.\n* Use strong hashes for inbound password authentication, ideally with randomly assigned salts to increase the difficulty level in case of brute-force attack.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/utluiz/spring-examples/commit/56e44932a3a004c3ac96ce1caa3e6d8817230f6e?diff=split#diff-19d771f687bc8ca37d378c39d20ed425L26",
                    "lines": [
                      {
                        "line": "  ds.setUrl(\"jdbc:mysql://localhost:3311/agenda\");",
                        "lineNumber": 23,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  ds.setUrl(\"jdbc:mysql://localhost/agenda\");",
                        "lineNumber": 20,
                        "lineChange": "added"
                      },
                      {
                        "line": "  ds.setUser(\"root\");",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "  ds.setPassword(\"root\");",
                        "lineNumber": 25,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  ds.setPassword(\"\");",
                        "lineNumber": 22,
                        "lineChange": "added"
                      },
                      {
                        "line": "  return ds;",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 27,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Evolveum/midpoint/commit/9ce1d7ff1e78ca65d6b614c52035e1971d1187cd?diff=split#diff-0003b3a408395a5640011d7c8422d19bL43",
                    "lines": [
                      {
                        "line": "      // set the password for our message.",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "      pc.setPassword(\"5ecr3t\");",
                        "lineNumber": 42,
                        "lineChange": "removed"
                      },
                      {
                        "line": "      pc.setPassword(Main.ADM_PASSWORD);",
                        "lineNumber": 42,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 43,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/theonedev/onedev/commit/ee60c786981347fc5ab6685656f3de2ea67045f7?diff=split#diff-7f6f95fdc3f39c216b4bd099d0ca65b6L60",
                    "lines": [
                      {
                        "line": "  System.exit(1);",
                        "lineNumber": 61,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 62,
                        "lineChange": "none"
                      },
                      {
                        "line": "root.setPassword(\"12345\");",
                        "lineNumber": 59,
                        "lineChange": "removed"
                      },
                      {
                        "line": "String password = Bootstrap.command.getArgs()[0];",
                        "lineNumber": 63,
                        "lineChange": "added"
                      },
                      {
                        "line": "root.setPassword(password);",
                        "lineNumber": 64,
                        "lineChange": "added"
                      },
                      {
                        "line": "accountManager.save(root);",
                        "lineNumber": 65,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Added user/password configuration from YML file.",
                  "Added ability to configure databases to run tests against."
                ],
                "precision": "very-high",
                "repoDatasetSize": 383,
                "cwe": [
                  "CWE-798",
                  "CWE-259"
                ]
              }
            },
            {
              "id": "java/WebCookieMissesCallToSetHttpOnly/test",
              "name": "WebCookieMissesCallToSetHttpOnly/test",
              "shortDescription": {
                "text": "Sensitive Cookie Without 'HttpOnly' Flag"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nThe `HttpOnly` flag is a simple parameter used when setting a user cookie to ensure that cookies with sensitive session data are visible only to the browser rather than to scripts. This helps prevent cross-site scripting attacks, in which an attacker gains access to sensitive session information and uses this information to trick legitimate web-based applications into disclosing confidential information or accepting illegitimate requests. When developers use the `HttpOnly` flag to set the cookie, they ensure that this sensitive session information is not readable or writable except by the browser (read) and server (write), respectively. While most modern browsers and versions now recognize the HttpOnly flag, some legacy and custom browsers still do not.\n\n### Best practices for prevention\n* Include the `HttpOnly` attribute in the response header when setting cookies on the client side. Be aware, however, that this crucial step provides only partial remediation.\n* Integrate client-side scripts to determine browser version; require browser compatibility or avoid transmitting sensitive data to browsers that do not support `HttpOnly`.\n* Understand and evaluate risks of third-party components or plugins, which may expose cookies.\n* Educate developers in a zero-trust approach, understanding the risks and best practices to prevent cross-site scripting, such as sanitizing all user input for code and special characters.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/417511458/jbone/commit/af32abbc24e2e27aad90f60f96cb9de5d1794a6b?diff=split#diff-a896741011f3ab283be812e19dc1cdb1L167",
                    "lines": [
                      {
                        "line": "@Bean",
                        "lineNumber": 164,
                        "lineChange": "none"
                      },
                      {
                        "line": "public SimpleCookie getCookie(){",
                        "lineNumber": 165,
                        "lineChange": "none"
                      },
                      {
                        "line": "    SimpleCookie cookie = new SimpleCookie();",
                        "lineNumber": 166,
                        "lineChange": "none"
                      },
                      {
                        "line": "    cookie.setName(\"jbone.session.id\");",
                        "lineNumber": 167,
                        "lineChange": "none"
                      },
                      {
                        "line": "    cookie.setHttpOnly(false);",
                        "lineNumber": 168,
                        "lineChange": "added"
                      },
                      {
                        "line": "    return cookie;",
                        "lineNumber": 169,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 170,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Dreampie/Resty/commit/2808658b3e7d46ebac839fa9620b84bc7eb38e55?diff=split#diff-6c1831bb7349c574c1ec5a92f5ca0072L60",
                    "lines": [
                      {
                        "line": "  }",
                        "lineNumber": 63,
                        "lineChange": "none"
                      },
                      {
                        "line": "} else {",
                        "lineNumber": 64,
                        "lineChange": "none"
                      },
                      {
                        "line": "  Cookie c = new Cookie(cookie, value);",
                        "lineNumber": 65,
                        "lineChange": "none"
                      },
                      {
                        "line": "  c.setPath(\"/\");",
                        "lineNumber": 66,
                        "lineChange": "none"
                      },
                      {
                        "line": "  c.setMaxAge(expiration);",
                        "lineNumber": 67,
                        "lineChange": "none"
                      },
                      {
                        "line": "  c.setHttpOnly(httpOnly);",
                        "lineNumber": 68,
                        "lineChange": "added"
                      },
                      {
                        "line": "  response.addCookie(c);",
                        "lineNumber": 69,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 70,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/igniterealtime/Openfire/commit/db32bf15648e53d810be358f6fe8bb914544dad9?diff=split#diff-ccf715fb4529c9f89d175d29aef63cf5L127",
                    "lines": [
                      {
                        "line": "        path = \"/\";",
                        "lineNumber": 124,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }",
                        "lineNumber": 125,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Cookie cookie = new Cookie(name, value);",
                        "lineNumber": 126,
                        "lineChange": "none"
                      },
                      {
                        "line": "    cookie.setMaxAge(maxAge);",
                        "lineNumber": 127,
                        "lineChange": "none"
                      },
                      {
                        "line": "    cookie.setPath(path);",
                        "lineNumber": 128,
                        "lineChange": "none"
                      },
                      {
                        "line": "    cookie.setHttpOnly(true);",
                        "lineNumber": 129,
                        "lineChange": "added"
                      },
                      {
                        "line": "    response.addCookie(cookie);",
                        "lineNumber": 130,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 131,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Implemented Cookie HttpOnly support."
                ],
                "precision": "very-high",
                "repoDatasetSize": 103,
                "cwe": [
                  "CWE-1004"
                ]
              }
            },
            {
              "id": "java/PT/test",
              "name": "PT/test",
              "shortDescription": {
                "text": "Path Traversal"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nBeing able to access and manipulate an arbitrary path leads to vulnerabilities when a program is being run with privileges that the user providing the path should not have. A website with a path traversal vulnerability would allow users access to sensitive files on the server hosting it. CLI programs may also be vulnerable to path traversal if they are being ran with elevated privileges (such as with the setuid or setgid flags in Unix systems).\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`.\n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/google/j2objc/commit/1b271d8b25c99a91547a19f16f71c048c3164156?diff=split#diff-33b6b27033cb88022415e8cd32b1807cL244",
                    "lines": [
                      {
                        "line": " * Extract a ZipEntry to the specified directory.",
                        "lineNumber": 241,
                        "lineChange": "none"
                      },
                      {
                        "line": " */",
                        "lineNumber": 242,
                        "lineChange": "none"
                      },
                      {
                        "line": "public File extractZipEntry(File dir, ZipFile zipFile, ZipEntry entry) throws IOException {",
                        "lineNumber": 243,
                        "lineChange": "none"
                      },
                      {
                        "line": "  File outputFile = new File(dir, entry.getName());",
                        "lineNumber": 244,
                        "lineChange": "none"
                      },
                      {
                        "line": "  File parentFile = outputFile.getParentFile();",
                        "lineNumber": 245,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if (!parentFile.isDirectory() && !parentFile.mkdirs()) {",
                        "lineNumber": 246,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    throw new IOException(\"Could not extract file to \" + dir.getPath());",
                        "lineNumber": 247,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  if (!outputFile.getCanonicalPath().startsWith(dir.getCanonicalPath() + File.separator)",
                        "lineNumber": 246,
                        "lineChange": "added"
                      },
                      {
                        "line": "      || (!parentFile.isDirectory() && !parentFile.mkdirs())) {",
                        "lineNumber": 247,
                        "lineChange": "added"
                      },
                      {
                        "line": "    throw new IOException(\"Could not extract \" + entry.getName() + \" to \" + dir.getPath());",
                        "lineNumber": 248,
                        "lineChange": "added"
                      },
                      {
                        "line": "  }",
                        "lineNumber": 249,
                        "lineChange": "none"
                      },
                      {
                        "line": "  try (InputStream inputStream = zipFile.getInputStream(entry);",
                        "lineNumber": 250,
                        "lineChange": "none"
                      },
                      {
                        "line": "      FileOutputStream outputStream = new FileOutputStream(outputFile)) {",
                        "lineNumber": 251,
                        "lineChange": "none"
                      },
                      {
                        "line": "    byte[] buf = new byte[1024];",
                        "lineNumber": 252,
                        "lineChange": "none"
                      },
                      {
                        "line": "    int n;",
                        "lineNumber": 253,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/blackducksoftware/synopsys-detect/commit/36555b9322986e9560f241d05f2262c29a17663b?diff=split#diff-bc0b5be9b9918488d8fe1dc64584df62L48",
                    "lines": [
                      {
                        "line": "Enumeration<? extends ZipEntry> entries = zipFile.entries();",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "while (entries.hasMoreElements()) {",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "    ZipEntry entry = entries.nextElement();",
                        "lineNumber": 47,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Path entryPath = destPath.resolve(entry.getName());",
                        "lineNumber": 48,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (!entryPath.normalize().startsWith(dest.toPath()))",
                        "lineNumber": 49,
                        "lineChange": "added"
                      },
                      {
                        "line": "        throw new IOException(\"Zip entry contained path traversal\");",
                        "lineNumber": 50,
                        "lineChange": "added"
                      },
                      {
                        "line": "    if (entry.isDirectory()) {",
                        "lineNumber": 51,
                        "lineChange": "none"
                      },
                      {
                        "line": "        Files.createDirectories(entryPath);",
                        "lineNumber": 52,
                        "lineChange": "none"
                      },
                      {
                        "line": "    } else {",
                        "lineNumber": 53,
                        "lineChange": "none"
                      },
                      {
                        "line": "        Files.createDirectories(entryPath.getParent());",
                        "lineNumber": 54,
                        "lineChange": "none"
                      },
                      {
                        "line": "        try (InputStream in = zipFile.getInputStream(entry)) {",
                        "lineNumber": 55,
                        "lineChange": "none"
                      },
                      {
                        "line": "            try (OutputStream out = new FileOutputStream(entryPath.toFile())) {",
                        "lineNumber": 56,
                        "lineChange": "none"
                      },
                      {
                        "line": "                IOUtils.copy(in, out);",
                        "lineNumber": 57,
                        "lineChange": "none"
                      },
                      {
                        "line": "            }",
                        "lineNumber": 58,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/azkaban/azkaban/commit/3b74a4127c9086cd525252edabc3621febab0428?diff=split#diff-c892cca6401b1e0be4cbca3261b47098L201",
                    "lines": [
                      {
                        "line": "final Enumeration<?> entries = source.entries();",
                        "lineNumber": 198,
                        "lineChange": "none"
                      },
                      {
                        "line": "while (entries.hasMoreElements()) {",
                        "lineNumber": 199,
                        "lineChange": "none"
                      },
                      {
                        "line": "  final ZipEntry entry = (ZipEntry) entries.nextElement();",
                        "lineNumber": 200,
                        "lineChange": "none"
                      },
                      {
                        "line": "  final File newFile = new File(dest, entry.getName());",
                        "lineNumber": 201,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if (!newFile.getCanonicalPath().startsWith(dest.getCanonicalPath())) {",
                        "lineNumber": 202,
                        "lineChange": "added"
                      },
                      {
                        "line": "    throw new IOException(",
                        "lineNumber": 203,
                        "lineChange": "added"
                      },
                      {
                        "line": "        \"Extracting zip entry would have resulted in a file outside the specified destination\"",
                        "lineNumber": 204,
                        "lineChange": "added"
                      },
                      {
                        "line": "if (entry.isDirectory()) {",
                        "lineNumber": 208,
                        "lineChange": "none"
                      },
                      {
                        "line": "  newFile.mkdirs();",
                        "lineNumber": 209,
                        "lineChange": "none"
                      },
                      {
                        "line": "} else {",
                        "lineNumber": 210,
                        "lineChange": "none"
                      },
                      {
                        "line": "  newFile.getParentFile().mkdirs();",
                        "lineNumber": 211,
                        "lineChange": "none"
                      },
                      {
                        "line": "  final InputStream src = source.getInputStream(entry);",
                        "lineNumber": 212,
                        "lineChange": "none"
                      },
                      {
                        "line": "  try {",
                        "lineNumber": 213,
                        "lineChange": "none"
                      },
                      {
                        "line": "    final OutputStream output =",
                        "lineNumber": 214,
                        "lineChange": "none"
                      },
                      {
                        "line": "        new BufferedOutputStream(new FileOutputStream(newFile));",
                        "lineNumber": 215,
                        "lineChange": "none"
                      },
                      {
                        "line": "    try {",
                        "lineNumber": 216,
                        "lineChange": "none"
                      },
                      {
                        "line": "      IOUtils.copy(src, output);",
                        "lineNumber": 217,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Test changed key to file.",
                  "* more code cleanup, some tests",
                  "Add option --xcode for Xcode translation testing"
                ],
                "precision": "very-high",
                "repoDatasetSize": 948,
                "cwe": [
                  "CWE-23"
                ]
              }
            },
            {
              "id": "java/InsecureHash",
              "name": "InsecureHash",
              "shortDescription": {
                "text": "Use of Password Hash With Insufficient Computational Effort"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nSensitive information should never be stored in plain text, since this makes it very easy for unauthorized users, whether malicious insiders or outside attackers, to access. Hashing methods are used to make stored passwords and other sensitive data unreadable to users. For example, when a password is defined for the first time, it is hashed and then stored. The next time that user attempts to log on, the password they enter is hashed following the same procedure and compared with the stored value. In this way, the original password never needs to be stored in the system.\n\nHashing is a one-way scheme, meaning a hashed password cannot be reverse engineered. However, if an outdated or custom programmed hashing scheme is used, it becomes simple for an attacker with powerful modern computing power to gain access to the hashes used. This opens up access to all stored password information, leading to breached security. Therefore, it is essential for developers to understand modern, secure password hashing techniques.\n\n### Best practices for prevention\n* Use strong standard algorithms for hashing rather than simpler but outdated methods or DIY hashing schemes, which may have inherent weaknesses.\n* Use modular design for all code dealing with hashing so it can be swapped out as security standards change over time.\n* Use salting in combination with hashing (While this places more demands on resources, it is an essential step for tighter security.).\n* Implement zero-trust architecture to ensure that access to password data is granted only for legitimate business purposes.\n* Increase developer awareness of current standards in data security and cryptography.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/tita/tita/commit/398f6b776a2aea7f20bf604768b8721beff8d93a?diff=split#diff-dd34c5e6a15ca48bff6f9ca749e68243L164",
                    "lines": [
                      {
                        "line": " */",
                        "lineNumber": 161,
                        "lineChange": "none"
                      },
                      {
                        "line": "private String getHashedPassword(String pwd) throws NoSuchAlgorithmException {",
                        "lineNumber": 162,
                        "lineChange": "none"
                      },
                      {
                        "line": "    MessageDigest md = MessageDigest.getInstance(\"SHA-1\");",
                        "lineNumber": 163,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    MessageDigest md = MessageDigest.getInstance(\"SHA-256\");",
                        "lineNumber": 103,
                        "lineChange": "added"
                      },
                      {
                        "line": "    byte[] encryptMsg = md.digest(pwd.getBytes());",
                        "lineNumber": 164,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return new String(encryptMsg);",
                        "lineNumber": 165,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    return bytes2String(encryptMsg);",
                        "lineNumber": 105,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/devonfw/my-thai-star/commit/095a3fb6bb860a2411cb51e812121ec2a6b99894?diff=split#diff-4f73d1042058dd462057744068125d4eL242",
                    "lines": [
                      {
                        "line": "    + String.format(\"%02d\", ldt1.getSecond());",
                        "lineNumber": 240,
                        "lineChange": "none"
                      },
                      {
                        "line": "MessageDigest md = MessageDigest.getInstance(\"MD5\");",
                        "lineNumber": 241,
                        "lineChange": "removed"
                      },
                      {
                        "line": "MessageDigest md = MessageDigest.getInstance(\"SHA-256\");",
                        "lineNumber": 242,
                        "lineChange": "added"
                      },
                      {
                        "line": "md.update((email + date + time).getBytes());",
                        "lineNumber": 243,
                        "lineChange": "none"
                      },
                      {
                        "line": "byte[] digest = md.digest();",
                        "lineNumber": 244,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/SecurityCompass/AndroidLabs/commit/5608f75dd665beac85dbad08f80b91d73b27904a?diff=split#diff-ffc047d4a5f84de13e373f2392bfb11bL148",
                    "lines": [
                      {
                        "line": "byte[] passwordBytes = (password).getBytes(\"UTF-8\");",
                        "lineNumber": 145,
                        "lineChange": "none"
                      },
                      {
                        "line": "MessageDigest md = MessageDigest.getInstance(\"SHA-1\");",
                        "lineNumber": 147,
                        "lineChange": "removed"
                      },
                      {
                        "line": "MessageDigest md = MessageDigest.getInstance(\"SHA-256\");",
                        "lineNumber": 147,
                        "lineChange": "added"
                      },
                      {
                        "line": "md.reset();",
                        "lineNumber": 148,
                        "lineChange": "none"
                      },
                      {
                        "line": "md.update(salt);",
                        "lineNumber": 149,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Added an enum for the supported encryption algorithms",
                  "Added #hash(byte[], String)",
                  "Added support for\nsha256 and nonce token."
                ],
                "precision": "very-high",
                "repoDatasetSize": 122,
                "cwe": [
                  "CWE-916"
                ]
              }
            },
            {
              "id": "java/RegexInjection",
              "name": "RegexInjection",
              "shortDescription": {
                "text": "Regular expression injection"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "\n## Details\n\nIf user input is used to build a regular expression it is possible to alter the original regex leading to unexpected results. For example, an attacker can cause the execution of a regex that takes a long time to execute, resulting in performance degradation and possibly Denial of Service (DoS).\nRegular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\n### Best practices for prevention\n* Avoid building dynamic regular expression that rely on user data\n* Escape regular expressions that are built from user data\n\n\n## References\n* [Regular expression Denial of Service](https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS)",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/BaseXdb/basex/commit/a1ecd592e626169ab12033042a337627a7e35769?diff=split#diff-476207d3b0e544152c1f0d08af6943e5L33",
                    "lines": [
                      {
                        "line": "public Uri baseUri() throws QueryException {",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "  final HTTPContext http = http();",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "  return Uri.uri(http.req.getRequestURI().replaceAll(http.req.getPathInfo(), \"\"));",
                        "lineNumber": 32,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  return Uri.uri(http.req.getRequestURI().replace(http.req.getPathInfo(), \"\"));",
                        "lineNumber": 32,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 33,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/LineageOS/android_packages_apps_Dialer/commit/f976beb4b56b9b0b1ea17c6466d79b16a4eb7477?diff=split#diff-2fcec35c6424c22dba00f5f15a205e43L73",
                    "lines": [
                      {
                        "line": " */",
                        "lineNumber": 71,
                        "lineChange": "none"
                      },
                      {
                        "line": "@Override",
                        "lineNumber": 72,
                        "lineChange": "none"
                      },
                      {
                        "line": "protected void setHighlight(ContactListItemView view, Cursor cursor) {",
                        "lineNumber": 73,
                        "lineChange": "none"
                      },
                      {
                        "line": "  view.clearHighlightSequences();",
                        "lineNumber": 74,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if (mNameMatcher.matches(cursor.getString(PhoneQuery.DISPLAY_NAME))) {",
                        "lineNumber": 75,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  if (mNameMatcher.matches(mContext, cursor.getString(PhoneQuery.DISPLAY_NAME))) {",
                        "lineNumber": 76,
                        "lineChange": "added"
                      },
                      {
                        "line": "    final ArrayList<SmartDialMatchPosition> nameMatches = mNameMatcher.getMatchPositions();",
                        "lineNumber": 77,
                        "lineChange": "none"
                      },
                      {
                        "line": "    for (SmartDialMatchPosition match : nameMatches) {",
                        "lineNumber": 78,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/magicgis/pig/commit/73379652c9496c4ae9611ee29a5f4954909a6dbf?diff=split#diff-10891392bd362181c06fadc7105fadb0L26",
                    "lines": [
                      {
                        "line": "private MenuService menuService;",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "private AntPathMatcher antPathMatcher = new AntPathMatcher();",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "@Override",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "Set<String> urls = menuService.findMenuByRole(grantedAuthorityList.get(0).getAuthority());",
                        "lineNumber": 38,
                        "lineChange": "none"
                      },
                      {
                        "line": "for (String url : urls) {",
                        "lineNumber": 39,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (antPathMatcher.match(request.getRequestURI(), url)) {",
                        "lineNumber": 40,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    if (antPathMatcher.match(url,request.getRequestURI())) {",
                        "lineNumber": 40,
                        "lineChange": "added"
                      },
                      {
                        "line": "        hasPermission = true;",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "        break;",
                        "lineNumber": 42,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Custom timemap support using CDX server with full cdx server query support",
                  "close connection on count query fail or throws exception"
                ],
                "precision": "very-high",
                "repoDatasetSize": 108,
                "cwe": [
                  "CWE-400",
                  "CWE-730"
                ]
              }
            },
            {
              "id": "java/UsageOfUnencryptedSocket/test",
              "name": "UsageOfUnencryptedSocket/test",
              "shortDescription": {
                "text": "Cleartext Transmission of Sensitive Information"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\nThis weakness occurs when software transmits sensitive information, such as passwords or credit card numbers, in unencrypted form. This information may then be intercepted by threat actors using sniffer tools or interception techniques such as man-in-the-middle (MITM) attacks (often involving social engineering). Attackers can then use information gleaned to perform a variety of actions, depending on the information type. Possible actions include gaining unauthorized access, impersonating a user, moving laterally within the organization's network, or retrieving and potentially modifying files. This weakness is almost completely avoidable through intelligent architecture and design.\n\n### Best practices for prevention\n* Build web applications around a security mindset and the awareness that sniffers may be present at any time.\n* Ensure that all sensitive data transmission uses reliable encryption.\n* Implement security measures so that sensitive results are never returned in plain text.\n* Implement multiple-factor authentication methods to validate remote instances.\n* Use SSL not only at logon but throughout communications.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/ME1312/SubServers-2/commit/9a219a7d0fd259870a94d1f875f3cbb3c942ec1e?diff=split#diff-4a76c605749ad18708be15720e8fac67L57",
                    "lines": [
                      {
                        "line": "public SubDataClient(SubPlugin plugin, InetAddress address, int port, Encryption encryption) throws IOException {",
                        "lineNumber": 58,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (Util.isNull(plugin, address, port)) throw new NullPointerException();",
                        "lineNumber": 59,
                        "lineChange": "none"
                      },
                      {
                        "line": "    socket = new Socket(address, port);",
                        "lineNumber": 56,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    socket = new NamedContainer<>(false, new Socket(address, port));",
                        "lineNumber": 60,
                        "lineChange": "added"
                      },
                      {
                        "line": "    this.plugin = plugin;",
                        "lineNumber": 61,
                        "lineChange": "none"
                      },
                      {
                        "line": "    this.writer = new PrintWriter(socket.getOutputStream(), true);",
                        "lineNumber": 58,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    this.writer = new PrintWriter(socket.get().getOutputStream(), true);",
                        "lineNumber": 62,
                        "lineChange": "added"
                      },
                      {
                        "line": "    this.encryption = encryption;",
                        "lineNumber": 63,
                        "lineChange": "none"
                      },
                      {
                        "line": "    this.queue = new LinkedList<NamedContainer<String, PacketOut>>();",
                        "lineNumber": 64,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/dddpaul/android-SimpleNetCat/commit/3235f85ae26fa31e1e36739c608668e15c53a04c?diff=split#diff-6689eedf89cc41d9c93933ea7ff5ebf4L62",
                    "lines": [
                      {
                        "line": "    int port = Integer.parseInt( params[2] );",
                        "lineNumber": 63,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Log.d( CLASS_NAME, String.format( \"Connecting to %s:%d\", host, port ) );",
                        "lineNumber": 64,
                        "lineChange": "none"
                      },
                      {
                        "line": "    socket = new Socket( host, port );",
                        "lineNumber": 61,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    result.object = new Socket( host, port );",
                        "lineNumber": 65,
                        "lineChange": "added"
                      },
                      {
                        "line": "    break;",
                        "lineNumber": 66,
                        "lineChange": "none"
                      },
                      {
                        "line": "case RECEIVE:",
                        "lineNumber": 67,
                        "lineChange": "none"
                      },
                      {
                        "line": "{",
                        "lineNumber": 110,
                        "lineChange": "none"
                      },
                      {
                        "line": "    BufferedReader reader = new BufferedReader( new InputStreamReader( input ) );",
                        "lineNumber": 111,
                        "lineChange": "none"
                      },
                      {
                        "line": "    PrintWriter writer = new PrintWriter( socket.getOutputStream() );",
                        "lineNumber": 112,
                        "lineChange": "none"
                      },
                      {
                        "line": "    transferStreams( reader, writer );",
                        "lineNumber": 113,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 114,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/rancher/cattle/commit/b06df6f37fdfe906b7804fbba41d2c02d472f8ab?diff=split#diff-125505ce5e24cbf259a0267dd1d3af77L314",
                    "lines": [
                      {
                        "line": "String[] parts = master.getConfig().getAdvertiseAddress().split(\":\");",
                        "lineNumber": 311,
                        "lineChange": "none"
                      },
                      {
                        "line": "try (",
                        "lineNumber": 312,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Socket socket = new Socket(parts[0], Integer.parseInt(parts[1]));",
                        "lineNumber": 313,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    OutputStream os = socket.getOutputStream();",
                        "lineNumber": 314,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    Socket socket = new Socket();",
                        "lineNumber": 313,
                        "lineChange": "added"
                      },
                      {
                        "line": ") {",
                        "lineNumber": 315,
                        "lineChange": "none"
                      },
                      {
                        "line": "    socket.connect(new InetSocketAddress(parts[0], Integer.parseInt(parts[1])), 5000);",
                        "lineNumber": 315,
                        "lineChange": "added"
                      },
                      {
                        "line": "    log.info(\"Connection test to master\");",
                        "lineNumber": 316,
                        "lineChange": "none"
                      },
                      {
                        "line": " } catch (IOException e) {",
                        "lineNumber": 317,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Use thread local sockets for everything except IDLE and STATUS.",
                  "- Adding a test that a locator can shut itself down\nwith SSL.",
                  "Added support for SSL secured Manager connections"
                ],
                "precision": "very-high",
                "repoDatasetSize": 108,
                "cwe": [
                  "CWE-319"
                ]
              }
            },
            {
              "id": "java/XSS/test",
              "name": "XSS/test",
              "shortDescription": {
                "text": "Cross-site Scripting (XSS)"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "## Details\n\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\n\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser's Same Origin Policy.\n\nInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\n\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they've been correctly escaped in the application code and in this way the attempted attack is diverted.\n\nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware.\n\n### Types of attacks\nThere are a few methods by which XSS can be manipulated:\n\n|Type|Origin|Description|\n|--|--|--|\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user's browser.|\n|**DOM-based**|Client|The attacker forces the user's browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\n\n### Affected environments\nThe following environments are susceptible to an XSS attack:\n\n* Web servers\n* Application servers\n* Web application environments\n\n### How to prevent\nThis section describes the top best practices designed to specifically protect your code:\n\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches.\n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents.\n* Give users the option to disable client-side scripts.\n* Redirect invalid requests.\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/lutece-platform/lutece-core/commit/5387450fe0f3cf1b705bda89d553a6f67bc342b6?diff=split#diff-015efa4f075bbbac52efd486f29f3ca5L80",
                    "lines": [
                      {
                        "line": " *             the io exception",
                        "lineNumber": 79,
                        "lineChange": "none"
                      },
                      {
                        "line": " */",
                        "lineNumber": 80,
                        "lineChange": "none"
                      },
                      {
                        "line": "protected void processRequest( HttpServletRequest request, HttpServletResponse response ) throws ServletException, IOException",
                        "lineNumber": 81,
                        "lineChange": "none"
                      },
                      {
                        "line": "{",
                        "lineNumber": 82,
                        "lineChange": "none"
                      },
                      {
                        "line": "    String strValue = request.getParameter( PARAMETER_DATA );",
                        "lineNumber": 83,
                        "lineChange": "none"
                      },
                      {
                        "line": "    String strValueReturn = ( strValue != null ) ? EditorBbcodeService.getInstance( ).parse( strValue ) : \"\";",
                        "lineNumber": 82,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    String strEscaped = StringEscapeUtils.escapeHtml( strValue );",
                        "lineNumber": 84,
                        "lineChange": "added"
                      },
                      {
                        "line": "    String strValueReturn = ( strValue != null ) ? EditorBbcodeService.getInstance( ).parse( strEscaped ) : \"\";",
                        "lineNumber": 85,
                        "lineChange": "added"
                      },
                      {
                        "line": "    OutputStream out = response.getOutputStream( );",
                        "lineNumber": 86,
                        "lineChange": "none"
                      },
                      {
                        "line": "    out.write( strValueReturn.getBytes( AppPropertiesService.getProperty( PROPERTY_ENCODING ) ) );",
                        "lineNumber": 87,
                        "lineChange": "none"
                      },
                      {
                        "line": "    out.flush( );",
                        "lineNumber": 88,
                        "lineChange": "none"
                      },
                      {
                        "line": "    out.close( );",
                        "lineNumber": 89,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/square/keywhiz/commit/b08aeb5d31e17cd3706f646c595884181813121b?diff=split#diff-37c8fdba6768ae3e9126a316519ae714L35",
                    "lines": [
                      {
                        "line": "}",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "@Override protected void doPost(HttpServletRequest req, HttpServletResponse resp)",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "    throws ServletException, IOException {",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "  String path = req.getPathInfo();",
                        "lineNumber": 36,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  String path = StringEscapeUtils.escapeHtml4(req.getPathInfo());",
                        "lineNumber": 37,
                        "lineChange": "added"
                      },
                      {
                        "line": "  if(path != null && path.equals(\"/enable\")){",
                        "lineNumber": 38,
                        "lineChange": "none"
                      },
                      {
                        "line": "    mshc.setHealthy(true);",
                        "lineNumber": 39,
                        "lineChange": "none"
                      },
                      {
                        "line": "  } else if(path != null && path.equals(\"/disable\")) {",
                        "lineNumber": 40,
                        "lineChange": "none"
                      },
                      {
                        "line": "    mshc.setHealthy(false);",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "  } else {",
                        "lineNumber": 42,
                        "lineChange": "none"
                      },
                      {
                        "line": "    resp.sendError(HttpServletResponse.SC_NOT_FOUND,",
                        "lineNumber": 43,
                        "lineChange": "none"
                      },
                      {
                        "line": "        \"Need to pass /status/enable or /status/disable, not /status\" + path);",
                        "lineNumber": 44,
                        "lineChange": "none"
                      },
                      {
                        "line": "  }",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 46,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/apereo/cas/commit/9d81e9ba85945b0d0caaab58b10bf0c3b2e0af73?diff=split#diff-d950cb17562422f18fa1b11dc72e57deL72",
                    "lines": [
                      {
                        "line": "@Override",
                        "lineNumber": 71,
                        "lineChange": "none"
                      },
                      {
                        "line": "public final boolean preHandle(final HttpServletRequest request, final HttpServletResponse response, final Object o) throws Exception {",
                        "lineNumber": 72,
                        "lineChange": "none"
                      },
                      {
                        "line": "    // we only care about post because that's the only instance where we can get anything useful besides IP address.",
                        "lineNumber": 73,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (!\"POST\".equals(request.getMethod())) {",
                        "lineNumber": 74,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return true;",
                        "lineNumber": 75,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }",
                        "lineNumber": 76,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (exceedsThreshold(request)) {",
                        "lineNumber": 78,
                        "lineChange": "none"
                      },
                      {
                        "line": "        recordThrottle(request);",
                        "lineNumber": 79,
                        "lineChange": "none"
                      },
                      {
                        "line": "        response.sendError(403, \"Access Denied for user [\" + request.getParameter(usernameParameter)",
                        "lineNumber": 79,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        final String username = StringEscapeUtils.escapeHtml4(request.getParameter(usernameParameter));",
                        "lineNumber": 81,
                        "lineChange": "added"
                      },
                      {
                        "line": "        response.sendError(403, \"Access Denied for user [\" + username",
                        "lineNumber": 82,
                        "lineChange": "added"
                      },
                      {
                        "line": "                            + \" from IP Address [\" + request.getRemoteAddr() + \"]\");",
                        "lineNumber": 83,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return false;",
                        "lineNumber": 84,
                        "lineChange": "none"
                      },
                      {
                        "line": " * @param request the request",
                        "lineNumber": 143,
                        "lineChange": "none"
                      },
                      {
                        "line": " */",
                        "lineNumber": 144,
                        "lineChange": "none"
                      },
                      {
                        "line": "protected void recordThrottle(final HttpServletRequest request) {",
                        "lineNumber": 145,
                        "lineChange": "none"
                      },
                      {
                        "line": "    logger.warn(\"Throttling submission from {}.  More than {} failed login attempts within {} seconds.\",",
                        "lineNumber": 146,
                        "lineChange": "none"
                      },
                      {
                        "line": "            new Object[] {request.getRemoteAddr(), failureThreshold, failureRangeInSeconds});",
                        "lineNumber": 147,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Also started a IT testing harness to test servlets with a live sling instance",
                  "* using properties file so that spring boot can read it too"
                ],
                "precision": "very-high",
                "repoDatasetSize": 308,
                "cwe": [
                  "CWE-79"
                ]
              }
            },
            {
              "id": "java/TooPermissiveHostnameVerifier/test",
              "name": "TooPermissiveHostnameVerifier/test",
              "shortDescription": {
                "text": "Improper Certificate Validation"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nCommunication through encrypted TLS/SSL protocols can only take place when the server bears a valid certificate associating that server with a valid public-key identity issued by a third-party authority. If certificate validation is cursory or incomplete, this creates a weakness whereby an attacker can spoof one or more certificate details (e.g., expiration date), gaining unauthorized access to confidential data and privileged actions.\n\n### Best practices for prevention\n* Verify all aspects of any certificate provided, particularly chain of trust (issuing authority), host identity, and expiration.\n* Limit the validity period for certificates.\n* Avoid using self-signed certificates, certificate pinning, and wildcard certificates, as these all add levels of convenience but can also lead to loss of control over site/app security.\n* Disable older and insecure protocols (for example, SSL 2.0/3.0, MD5, and 3DES).\n* Ensure that all team members are familiar with current best practices and approaches, such as current TLS protocols.\n* Implement automated and manual testing using current tools and techniques designed to reveal this and related SSL weaknesses (for example, web application scanners).",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/bonigarcia/webdrivermanager/commit/90dedd67b71d59a9a15a9b11892be3cd0a1c2e4e?diff=split#diff-5fd27e182b6d09ea7f5901daab03449dL114",
                    "lines": [
                      {
                        "line": "HostnameVerifier allHostsValid = new HostnameVerifier() {",
                        "lineNumber": 112,
                        "lineChange": "none"
                      },
                      {
                        "line": "    public boolean verify(String hostname, SSLSession session) {",
                        "lineNumber": 113,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return true;",
                        "lineNumber": 114,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        return hostname.equalsIgnoreCase(session.getPeerHost());",
                        "lineNumber": 114,
                        "lineChange": "added"
                      },
                      {
                        "line": "    }",
                        "lineNumber": 115,
                        "lineChange": "none"
                      },
                      {
                        "line": "};",
                        "lineNumber": 116,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/wso2-attic/product-private-paas/commit/a42df7abce437ad996fad1097a74ca7bf83da0c0?diff=split#diff-7568b7c1be7d23d9a86361e05ff18598L47",
                    "lines": [
                      {
                        "line": "if (Constants.ENABLE_SELF_CERTIFIED) {",
                        "lineNumber": 44,
                        "lineChange": "none"
                      },
                      {
                        "line": "    HttpsURLConnection.setDefaultHostnameVerifier(new HostnameVerifier() {",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "        @Override public boolean verify(String s, SSLSession sslSession) {",
                        "lineNumber": 46,
                        "lineChange": "removed"
                      },
                      {
                        "line": "            return true;",
                        "lineNumber": 47,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        public boolean verify(String hostname, SSLSession session) {",
                        "lineNumber": 40,
                        "lineChange": "added"
                      },
                      {
                        "line": "            return hostname.equals(System.getProperty(Constants.HOSTNAME));",
                        "lineNumber": 41,
                        "lineChange": "added"
                      },
                      {
                        "line": "        }",
                        "lineNumber": 48,
                        "lineChange": "none"
                      },
                      {
                        "line": "    });",
                        "lineNumber": 49,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Liberuman/SimpleProject/commit/f7afc6477bcfb9b2f78f742df913aa9a86d251d1?diff=split#diff-68c680467370001ab531d6c88431244dL95",
                    "lines": [
                      {
                        "line": ".sslSocketFactory(sslContext.getSocketFactory(), trustManager)",
                        "lineNumber": 94,
                        "lineChange": "none"
                      },
                      {
                        "line": ".hostnameVerifier(new HostnameVerifier() {",
                        "lineNumber": 95,
                        "lineChange": "none"
                      },
                      {
                        "line": "  @Override",
                        "lineNumber": 96,
                        "lineChange": "none"
                      },
                      {
                        "line": "  public boolean verify(String hostname, SSLSession session) {",
                        "lineNumber": 97,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return true;",
                        "lineNumber": 96,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    if (!TextUtils.isEmpty(baseUrl) && baseUrl.contains(hostname)) {",
                        "lineNumber": 98,
                        "lineChange": "added"
                      },
                      {
                        "line": "      return true;",
                        "lineNumber": 99,
                        "lineChange": "added"
                      },
                      {
                        "line": "    } else {",
                        "lineNumber": 100,
                        "lineChange": "added"
                      },
                      {
                        "line": "  }",
                        "lineNumber": 104,
                        "lineChange": "none"
                      },
                      {
                        "line": "})",
                        "lineNumber": 105,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "merged the rest client and test cases according to the new folder structure",
                  "workaround for SSL verify",
                  "Smarter hostname verifier"
                ],
                "precision": "very-high",
                "repoDatasetSize": 53,
                "cwe": [
                  "CWE-295"
                ]
              }
            },
            {
              "id": "java/TLS",
              "name": "TLS",
              "shortDescription": {
                "text": "Inadequate Encryption Strength"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "\n## Details\n\nImplementing encryption for the transmission and storage of sensitive information is essential. But encryption standards are constantly changing since attackers have more and more powerful resources at their disposal-along with more sophisticated attack algorithms. This means that encryption is only useful if it meets current standards appropriate for the type of data being transmitted or stored.\nWhen organizations use weakly encoded passwords or weak hashes (especially when they also utilize single-factor authentication, which places too much emphasis on passwords), attackers can potentially gain unauthorized access through a brute-force attack.\n\n### Best practices for prevention\n* Understand best practices of contemporary encryption algorithms and techniques.\n* Avoid encryption algorithms and techniques that are widely known to be outdated (for example, DES).\n* Implement multi-factor authentication to minimize reliance on a single factor, such as a password, that is too susceptible to brute-force attacks.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/apache/cloudstack/commit/91f7012b015249d9d74dace8874ee8f38b54bfc2?diff=split#diff-5604a4e589dc38cc8d80f2f4020c2a23L53",
                    "lines": [
                      {
                        "line": "public static SSLContext getSSLContext() throws NoSuchAlgorithmException {",
                        "lineNumber": 68,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return SSLContext.getInstance(\"TLSv1\");",
                        "lineNumber": 52,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    return SSLContext.getInstance(\"TLSv1.2\");",
                        "lineNumber": 69,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 70,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/MissionCriticalCloud/cosmic/commit/3a4004a34b42e30a49a1c48f1ff57e5f3ca26913?diff=split#diff-49bfef0c8d16a2c34d787d4fca65e2e7L35",
                    "lines": [
                      {
                        "line": "public static SSLContext getSSLContext() throws NoSuchAlgorithmException {",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return SSLContext.getInstance(\"TLSv1\");",
                        "lineNumber": 34,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    return SSLContext.getInstance(\"TLSv1.2\");",
                        "lineNumber": 34,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 35,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/hypercube1024/firefly/commit/e2e4d7810c9bb202bbef3d5022e3b13447f102dd?diff=split#diff-fb5cd0d3953731ed2bdb241178f1ce05L32",
                    "lines": [
                      {
                        "line": "  tmf.init(ks);",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "  sslContext = SSLContext.getInstance(\"TLS\");",
                        "lineNumber": 31,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  sslContext = SSLContext.getInstance(\"TLSv1.2\");",
                        "lineNumber": 31,
                        "lineChange": "added"
                      },
                      {
                        "line": "  sslContext.init(kmf.getKeyManagers(), tmf.getTrustManagers(), null);",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "return sslContext;",
                        "lineNumber": 33,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Configuring TSL/SSL now supports property placeholders.",
                  "support for TLS config tweaks",
                  "Temporarily peg SSL version to TLSv1.2."
                ],
                "precision": "very-high",
                "repoDatasetSize": 78,
                "cwe": [
                  "CWE-326"
                ]
              }
            },
            {
              "id": "java/HttpResponseSplitting/test",
              "name": "HttpResponseSplitting/test",
              "shortDescription": {
                "text": "Improper Neutralization of CRLF Sequences in HTTP Headers"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nCRLF is an abbreviation for the terms \"carriage return\" and \"line feed.\" These two special characters are a legacy of old-fashioned printing terminals used in the early days of computing. However, today both are still often used as delimiters between data. When this weakness exists, CR and LF characters (represented respectively in code as `\\r` and `\\n`) are permitted to be present in HTTP headers, usually due to poor planning for data handling during development.\n\nCRLF sequences in HTTP headers are known as \"response splitting\" because these characters effectively split the response from the browser, causing the single line to be accepted as multiple lines by the server (for example, the single line First Line\\r\\nSecond Line would be accepted by the server as two lines of input).\n\nWhile response splitting in itself is not an attack, and can be completely harmless unless exploited, its presence could lead to an injection attack (known as CRLF injection) and a variety of unpredictable and potentially dangerous behavior. This weakness can be exploited in a number of ways, such as page hijacking or cross-user defacement, in which an attacker displays false site content and/or captures confidential information such as credentials. It can even lead to cross-site scripting attacks, in which attackers can cause malicious code to execute in the user's browser.\n\nFor example, the following code is vulnerable:\n\n```\nprotected void doGet(HttpServletRequest request, HttpServletResponse response) {\n  Cookie cookie = new Cookie(\"name\", request.getParameter(\"name\"));\n  response.addCookie(cookie);\n}\n```\n\nbecause the user may provide a name parameter with a value like `XYZ\\r\\nHTTP/1.1 200 OK\\nATTACKER CONTROLLED`. In this case, they will produce a second HTTP response:\n\n```\nHTTP/1.1 200 OK\nATTACKER CONTROLLED\n```\n\nA possible fix is to remove all non-alphanumerical characters:\n\n```\nprotected void doGet(HttpServletRequest request, HttpServletResponse response) {\n  String name = request.getParameter(\"name\")\n      .replaceAll(\"[^a-zA-Z ]\", \"\");\n  Cookie cookie = new Cookie(\"name\", name);\n  response.addCookie(cookie);\n}\n```\n\nIn this case, the attacker would be unable to produce a second HTTP response.\n\n\n### Best practices for prevention\n* Assume all input is potentially malicious. Define acceptable responses wherever possible, and if not possible, encode CR and LF characters to prevent header splitting.\n* Replace both `\\r` (carriage return) and `\\n` (line feed) with \"\" (empty string)-many platforms handle these characters interchangeably so the weakness may still exist if one of the two is permitted.\nFollow best practices and strip all other special characters (\", /, \\, ;, etc., as well as spaces) wherever possible.\nBe sure to sanitize special characters in both directions-from the browser to the server and also in data sent back to the browser.\nIdeally, adopt current development resources, such as languages and libraries, that block CR and LF injection in headers.\nBe vigilant with all input types that could potentially be tampered with or modified at the user end (intentionally or unintentionally), which could lead to injection attacks. These include GET, POST, cookies, and other HTTP headers.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/gzsll/TLint/commit/26407f9d7fc2fcc917cca4228addd34d7b7a0339?diff=split#diff-ee1b33b10d96e72dd93d67632f828d50L34",
                    "lines": [
                      {
                        "line": "Request original = chain.request();",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "if (!TextUtils.isEmpty(mUserStorage.getCookie())) {",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Request request = original.newBuilder().addHeader(\"Cookie\", \"u=\" + mUserStorage.getCookie() + \";\").build();",
                        "lineNumber": 33,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    Request request = original.newBuilder().addHeader(\"Cookie\", \"u=\" + URLEncoder.encode(mUserStorage.getCookie()) + \";\").build();",
                        "lineNumber": 34,
                        "lineChange": "added"
                      },
                      {
                        "line": "    return chain.proceed(request);",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "} else {",
                        "lineNumber": 36,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/http-builder-ng/http-builder-ng/commit/d533d480a249d279d5d281c07304150e300ce4ce?diff=split#diff-6becea663e2a2b1de3ad29a739f25bb5L260",
                    "lines": [
                      {
                        "line": "//technically cookies are headers, so add them here",
                        "lineNumber": 258,
                        "lineChange": "none"
                      },
                      {
                        "line": "List<Cookie> cookies = e.cookies(new ArrayList());",
                        "lineNumber": 259,
                        "lineChange": "removed"
                      },
                      {
                        "line": "List<Cookie> cookies = cr.actualCookies(new ArrayList());",
                        "lineNumber": 259,
                        "lineChange": "added"
                      },
                      {
                        "line": "for(Cookie cookie : cookies) {",
                        "lineNumber": 260,
                        "lineChange": "none"
                      },
                      {
                        "line": "    cookieStore.addCookie(cookie);",
                        "lineNumber": 261,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 262,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/apache/commons-vfs/commit/e07f9edd339973fb532ecfa88928884c75794957?diff=split#diff-c81d6f105c7fe7ff1f4734a6c1a3cbf6L344",
                    "lines": [
                      {
                        "line": "    final FileSystemOptions fileSystemOptions) {",
                        "lineNumber": 341,
                        "lineChange": "none"
                      },
                      {
                        "line": "final CookieStore cookieStore = new BasicCookieStore();",
                        "lineNumber": 342,
                        "lineChange": "none"
                      },
                      {
                        "line": "final Cookie[] cookies = builder.getCookies(fileSystemOptions);",
                        "lineNumber": 343,
                        "lineChange": "none"
                      },
                      {
                        "line": "if (cookies != null) {",
                        "lineNumber": 345,
                        "lineChange": "none"
                      },
                      {
                        "line": "    for (Cookie cookie : cookies) {",
                        "lineNumber": 346,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    for (final Cookie cookie : cookies) {",
                        "lineNumber": 346,
                        "lineChange": "added"
                      },
                      {
                        "line": "        cookieStore.addCookie(cookie);",
                        "lineNumber": 347,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }",
                        "lineNumber": 348,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 349,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Support HTTP Range requests for resuming interrupted file downloads.",
                  "* integration test server post response and logging",
                  "Added usage of java Cookies and other changes"
                ],
                "precision": "very-high",
                "repoDatasetSize": 232,
                "cwe": [
                  "CWE-113"
                ]
              }
            },
            {
              "id": "java/PT",
              "name": "PT",
              "shortDescription": {
                "text": "Path Traversal"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nBeing able to access and manipulate an arbitrary path leads to vulnerabilities when a program is being run with privileges that the user providing the path should not have. A website with a path traversal vulnerability would allow users access to sensitive files on the server hosting it. CLI programs may also be vulnerable to path traversal if they are being ran with elevated privileges (such as with the setuid or setgid flags in Unix systems).\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`.\n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/google/j2objc/commit/1b271d8b25c99a91547a19f16f71c048c3164156?diff=split#diff-33b6b27033cb88022415e8cd32b1807cL244",
                    "lines": [
                      {
                        "line": " * Extract a ZipEntry to the specified directory.",
                        "lineNumber": 241,
                        "lineChange": "none"
                      },
                      {
                        "line": " */",
                        "lineNumber": 242,
                        "lineChange": "none"
                      },
                      {
                        "line": "public File extractZipEntry(File dir, ZipFile zipFile, ZipEntry entry) throws IOException {",
                        "lineNumber": 243,
                        "lineChange": "none"
                      },
                      {
                        "line": "  File outputFile = new File(dir, entry.getName());",
                        "lineNumber": 244,
                        "lineChange": "none"
                      },
                      {
                        "line": "  File parentFile = outputFile.getParentFile();",
                        "lineNumber": 245,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if (!parentFile.isDirectory() && !parentFile.mkdirs()) {",
                        "lineNumber": 246,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    throw new IOException(\"Could not extract file to \" + dir.getPath());",
                        "lineNumber": 247,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  if (!outputFile.getCanonicalPath().startsWith(dir.getCanonicalPath() + File.separator)",
                        "lineNumber": 246,
                        "lineChange": "added"
                      },
                      {
                        "line": "      || (!parentFile.isDirectory() && !parentFile.mkdirs())) {",
                        "lineNumber": 247,
                        "lineChange": "added"
                      },
                      {
                        "line": "    throw new IOException(\"Could not extract \" + entry.getName() + \" to \" + dir.getPath());",
                        "lineNumber": 248,
                        "lineChange": "added"
                      },
                      {
                        "line": "  }",
                        "lineNumber": 249,
                        "lineChange": "none"
                      },
                      {
                        "line": "  try (InputStream inputStream = zipFile.getInputStream(entry);",
                        "lineNumber": 250,
                        "lineChange": "none"
                      },
                      {
                        "line": "      FileOutputStream outputStream = new FileOutputStream(outputFile)) {",
                        "lineNumber": 251,
                        "lineChange": "none"
                      },
                      {
                        "line": "    byte[] buf = new byte[1024];",
                        "lineNumber": 252,
                        "lineChange": "none"
                      },
                      {
                        "line": "    int n;",
                        "lineNumber": 253,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/blackducksoftware/synopsys-detect/commit/36555b9322986e9560f241d05f2262c29a17663b?diff=split#diff-bc0b5be9b9918488d8fe1dc64584df62L48",
                    "lines": [
                      {
                        "line": "Enumeration<? extends ZipEntry> entries = zipFile.entries();",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "while (entries.hasMoreElements()) {",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "    ZipEntry entry = entries.nextElement();",
                        "lineNumber": 47,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Path entryPath = destPath.resolve(entry.getName());",
                        "lineNumber": 48,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (!entryPath.normalize().startsWith(dest.toPath()))",
                        "lineNumber": 49,
                        "lineChange": "added"
                      },
                      {
                        "line": "        throw new IOException(\"Zip entry contained path traversal\");",
                        "lineNumber": 50,
                        "lineChange": "added"
                      },
                      {
                        "line": "    if (entry.isDirectory()) {",
                        "lineNumber": 51,
                        "lineChange": "none"
                      },
                      {
                        "line": "        Files.createDirectories(entryPath);",
                        "lineNumber": 52,
                        "lineChange": "none"
                      },
                      {
                        "line": "    } else {",
                        "lineNumber": 53,
                        "lineChange": "none"
                      },
                      {
                        "line": "        Files.createDirectories(entryPath.getParent());",
                        "lineNumber": 54,
                        "lineChange": "none"
                      },
                      {
                        "line": "        try (InputStream in = zipFile.getInputStream(entry)) {",
                        "lineNumber": 55,
                        "lineChange": "none"
                      },
                      {
                        "line": "            try (OutputStream out = new FileOutputStream(entryPath.toFile())) {",
                        "lineNumber": 56,
                        "lineChange": "none"
                      },
                      {
                        "line": "                IOUtils.copy(in, out);",
                        "lineNumber": 57,
                        "lineChange": "none"
                      },
                      {
                        "line": "            }",
                        "lineNumber": 58,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/azkaban/azkaban/commit/3b74a4127c9086cd525252edabc3621febab0428?diff=split#diff-c892cca6401b1e0be4cbca3261b47098L201",
                    "lines": [
                      {
                        "line": "final Enumeration<?> entries = source.entries();",
                        "lineNumber": 198,
                        "lineChange": "none"
                      },
                      {
                        "line": "while (entries.hasMoreElements()) {",
                        "lineNumber": 199,
                        "lineChange": "none"
                      },
                      {
                        "line": "  final ZipEntry entry = (ZipEntry) entries.nextElement();",
                        "lineNumber": 200,
                        "lineChange": "none"
                      },
                      {
                        "line": "  final File newFile = new File(dest, entry.getName());",
                        "lineNumber": 201,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if (!newFile.getCanonicalPath().startsWith(dest.getCanonicalPath())) {",
                        "lineNumber": 202,
                        "lineChange": "added"
                      },
                      {
                        "line": "    throw new IOException(",
                        "lineNumber": 203,
                        "lineChange": "added"
                      },
                      {
                        "line": "        \"Extracting zip entry would have resulted in a file outside the specified destination\"",
                        "lineNumber": 204,
                        "lineChange": "added"
                      },
                      {
                        "line": "if (entry.isDirectory()) {",
                        "lineNumber": 208,
                        "lineChange": "none"
                      },
                      {
                        "line": "  newFile.mkdirs();",
                        "lineNumber": 209,
                        "lineChange": "none"
                      },
                      {
                        "line": "} else {",
                        "lineNumber": 210,
                        "lineChange": "none"
                      },
                      {
                        "line": "  newFile.getParentFile().mkdirs();",
                        "lineNumber": 211,
                        "lineChange": "none"
                      },
                      {
                        "line": "  final InputStream src = source.getInputStream(entry);",
                        "lineNumber": 212,
                        "lineChange": "none"
                      },
                      {
                        "line": "  try {",
                        "lineNumber": 213,
                        "lineChange": "none"
                      },
                      {
                        "line": "    final OutputStream output =",
                        "lineNumber": 214,
                        "lineChange": "none"
                      },
                      {
                        "line": "        new BufferedOutputStream(new FileOutputStream(newFile));",
                        "lineNumber": 215,
                        "lineChange": "none"
                      },
                      {
                        "line": "    try {",
                        "lineNumber": 216,
                        "lineChange": "none"
                      },
                      {
                        "line": "      IOUtils.copy(src, output);",
                        "lineNumber": 217,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Test changed key to file.",
                  "* more code cleanup, some tests",
                  "Add option --xcode for Xcode translation testing"
                ],
                "precision": "very-high",
                "repoDatasetSize": 948,
                "cwe": [
                  "CWE-23"
                ]
              }
            },
            {
              "id": "java/WebCookieMissesCallToSetSecure",
              "name": "WebCookieMissesCallToSetSecure",
              "shortDescription": {
                "text": "Sensitive Cookie in HTTPS Session Without 'Secure' Attribute"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nIn a session hijacking attack, if a cookie containing sensitive data is set without the `secure` attribute, an attacker might be able to intercept that cookie. Once the attacker has this information, they can potentially impersonate a user, accessing confidential data and performing actions that they would not normally be authorized to do. Attackers often gain access to this sensitive cookie data when it is transmitted insecurely in plain text over a standard HTTP session, rather than being encrypted and sent over an HTTPS session. This type of attack is highly preventable by following best practices when setting sensitive session cookies.\n\n### Best practices for prevention\n* Set the `secure` attribute in the response header when setting cookies on the client side, and use a test tool to verify that secure cookie transmission is in place.\n* Always use HTTPS for all login pages and never redirect from HTTP to HTTPS, which leaves secure session data open to interception.\n* Follow other best practices when it comes to session cookies, such as setting the HttpOnly flag and maintaining highly time-limited sessions.\n* Consider implementing browser checks and providing secure data only within a browser that supports tight cookie security.\n* Generate session IDs in a way that is not easily predictable, invalidate sessions upon logout, and never reuse session IDs.\n* Educate developers to use built-in secure session-management functionality within the development environment instead of taking a DIY approach.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/pippo-java/pippo/commit/baa786cf11e875461090175df964a88ac7d4ecd5?diff=split#diff-8aed5e116d7d7ad41bf04c851e1d5dc7L269",
                    "lines": [
                      {
                        "line": " */",
                        "lineNumber": 266,
                        "lineChange": "none"
                      },
                      {
                        "line": "private Cookie generateLanguageCookie(String language) {",
                        "lineNumber": 267,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Cookie cookie = new Cookie(applicationCookiePrefix + \"_LANG\", language);",
                        "lineNumber": 268,
                        "lineChange": "none"
                      },
                      {
                        "line": "    cookie.setSecure(true);",
                        "lineNumber": 269,
                        "lineChange": "added"
                      },
                      {
                        "line": "    cookie.setMaxAge(TEN_YEARS);",
                        "lineNumber": 270,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return cookie;",
                        "lineNumber": 271,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 272,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/eclipse/rap/commit/bec1d767c1435f13c923c90a578473e02aa24996?diff=split#diff-a8821336a5cc73da073db6bbfff0ae4eL87",
                    "lines": [
                      {
                        "line": "}",
                        "lineNumber": 85,
                        "lineChange": "none"
                      },
                      {
                        "line": "// (2+3) do refresh cookie, to ensure it expires in COOKIE_MAX_AGE_SEC  ",
                        "lineNumber": 85,
                        "lineChange": "removed"
                      },
                      {
                        "line": "// (2+3) do refresh cookie, to ensure it expires in COOKIE_MAX_AGE_SEC",
                        "lineNumber": 86,
                        "lineChange": "added"
                      },
                      {
                        "line": "Cookie cookie = new Cookie( COOKIE_NAME, result );",
                        "lineNumber": 87,
                        "lineChange": "none"
                      },
                      {
                        "line": "cookie.setSecure( RWT.getRequest().isSecure() );",
                        "lineNumber": 88,
                        "lineChange": "added"
                      },
                      {
                        "line": "cookie.setMaxAge( COOKIE_MAX_AGE_SEC );",
                        "lineNumber": 89,
                        "lineChange": "none"
                      },
                      {
                        "line": "ContextProvider.getResponse().addCookie( cookie );",
                        "lineNumber": 90,
                        "lineChange": "none"
                      },
                      {
                        "line": "// (2+3) update storeId stored in session",
                        "lineNumber": 91,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/InnovateUKGitHub/innovation-funding-service/commit/a770f11236a0a40bfdd1e6b181d5a80e0da970ea?diff=split#diff-e27b77e438734a64c56eb279998f82b3L80",
                    "lines": [
                      {
                        "line": "public void removeAuthentication(HttpServletResponse response) {",
                        "lineNumber": 85,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Cookie cookie = new Cookie(AUTH_TOKEN, null);",
                        "lineNumber": 86,
                        "lineChange": "none"
                      },
                      {
                        "line": "    cookie.setMaxAge(0);",
                        "lineNumber": 87,
                        "lineChange": "none"
                      },
                      {
                        "line": "    cookie.setSecure(cookieSecure);",
                        "lineNumber": 88,
                        "lineChange": "added"
                      },
                      {
                        "line": "    cookie.setHttpOnly(cookieHttpOnly);",
                        "lineNumber": 89,
                        "lineChange": "added"
                      },
                      {
                        "line": "    response.addCookie(cookie);",
                        "lineNumber": 90,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 91,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Added cookie support in HttpRequest/Response",
                  "Set secure user cookies and only for HTTP."
                ],
                "precision": "very-high",
                "repoDatasetSize": 88,
                "cwe": [
                  "CWE-614"
                ]
              }
            },
            {
              "id": "java/WebCookieMissesCallToSetHttpOnly",
              "name": "WebCookieMissesCallToSetHttpOnly",
              "shortDescription": {
                "text": "Sensitive Cookie Without 'HttpOnly' Flag"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nThe `HttpOnly` flag is a simple parameter used when setting a user cookie to ensure that cookies with sensitive session data are visible only to the browser rather than to scripts. This helps prevent cross-site scripting attacks, in which an attacker gains access to sensitive session information and uses this information to trick legitimate web-based applications into disclosing confidential information or accepting illegitimate requests. When developers use the `HttpOnly` flag to set the cookie, they ensure that this sensitive session information is not readable or writable except by the browser (read) and server (write), respectively. While most modern browsers and versions now recognize the HttpOnly flag, some legacy and custom browsers still do not.\n\n### Best practices for prevention\n* Include the `HttpOnly` attribute in the response header when setting cookies on the client side. Be aware, however, that this crucial step provides only partial remediation.\n* Integrate client-side scripts to determine browser version; require browser compatibility or avoid transmitting sensitive data to browsers that do not support `HttpOnly`.\n* Understand and evaluate risks of third-party components or plugins, which may expose cookies.\n* Educate developers in a zero-trust approach, understanding the risks and best practices to prevent cross-site scripting, such as sanitizing all user input for code and special characters.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/417511458/jbone/commit/af32abbc24e2e27aad90f60f96cb9de5d1794a6b?diff=split#diff-a896741011f3ab283be812e19dc1cdb1L167",
                    "lines": [
                      {
                        "line": "@Bean",
                        "lineNumber": 164,
                        "lineChange": "none"
                      },
                      {
                        "line": "public SimpleCookie getCookie(){",
                        "lineNumber": 165,
                        "lineChange": "none"
                      },
                      {
                        "line": "    SimpleCookie cookie = new SimpleCookie();",
                        "lineNumber": 166,
                        "lineChange": "none"
                      },
                      {
                        "line": "    cookie.setName(\"jbone.session.id\");",
                        "lineNumber": 167,
                        "lineChange": "none"
                      },
                      {
                        "line": "    cookie.setHttpOnly(false);",
                        "lineNumber": 168,
                        "lineChange": "added"
                      },
                      {
                        "line": "    return cookie;",
                        "lineNumber": 169,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 170,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Dreampie/Resty/commit/2808658b3e7d46ebac839fa9620b84bc7eb38e55?diff=split#diff-6c1831bb7349c574c1ec5a92f5ca0072L60",
                    "lines": [
                      {
                        "line": "  }",
                        "lineNumber": 63,
                        "lineChange": "none"
                      },
                      {
                        "line": "} else {",
                        "lineNumber": 64,
                        "lineChange": "none"
                      },
                      {
                        "line": "  Cookie c = new Cookie(cookie, value);",
                        "lineNumber": 65,
                        "lineChange": "none"
                      },
                      {
                        "line": "  c.setPath(\"/\");",
                        "lineNumber": 66,
                        "lineChange": "none"
                      },
                      {
                        "line": "  c.setMaxAge(expiration);",
                        "lineNumber": 67,
                        "lineChange": "none"
                      },
                      {
                        "line": "  c.setHttpOnly(httpOnly);",
                        "lineNumber": 68,
                        "lineChange": "added"
                      },
                      {
                        "line": "  response.addCookie(c);",
                        "lineNumber": 69,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 70,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/igniterealtime/Openfire/commit/db32bf15648e53d810be358f6fe8bb914544dad9?diff=split#diff-ccf715fb4529c9f89d175d29aef63cf5L127",
                    "lines": [
                      {
                        "line": "        path = \"/\";",
                        "lineNumber": 124,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }",
                        "lineNumber": 125,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Cookie cookie = new Cookie(name, value);",
                        "lineNumber": 126,
                        "lineChange": "none"
                      },
                      {
                        "line": "    cookie.setMaxAge(maxAge);",
                        "lineNumber": 127,
                        "lineChange": "none"
                      },
                      {
                        "line": "    cookie.setPath(path);",
                        "lineNumber": 128,
                        "lineChange": "none"
                      },
                      {
                        "line": "    cookie.setHttpOnly(true);",
                        "lineNumber": 129,
                        "lineChange": "added"
                      },
                      {
                        "line": "    response.addCookie(cookie);",
                        "lineNumber": 130,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 131,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Implemented Cookie HttpOnly support."
                ],
                "precision": "very-high",
                "repoDatasetSize": 103,
                "cwe": [
                  "CWE-1004"
                ]
              }
            },
            {
              "id": "java/OR",
              "name": "OR",
              "shortDescription": {
                "text": "Open Redirect"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\nAn open redirect attack takes place when a web application redirects the user to an unauthorized and untrusted site. In general, URL redirection refers to the ability of a website or application to redirect users to another site. This is often a benign and useful feature. For example, if a resource has moved to a new location, URL redirection can transfer the user to that location rather than displaying an error message.\nHowever, this ability can be exploited through social engineering, tricking the user into believing they are accessing one site when, in reality, they are being redirected to a dangerous site, such as a phishing site. Once there, the user may be further tricked into entering credentials or personally identifiable information (PII), believing they are still within the original, trusted domain. Attackers can then use these credentials to gain unauthorized access or leverage the user's PII for sale or ransom.\n\n### Best practices for prevention\n* When developing a site or web app, consider implementing a disclaimer page to remind users that they are leaving a secure site.\n* Adopt a zero-trust approach in which all input is treated with suspicion.\n* Validate all input against deny-lists to ensure it does not contain code to redirect the user. This method is good but inherently incomplete.\n* Be aware of all sources of untrusted input being sent to the server that could be used to redirect the user, such as cookies, URL components, filenames, query results, request headers, and more.\n* In particular, be aware of potential API calls that could send input indirectly to redirect the user.\n* To protect end users, use a firewall to block known malicious sites, train users to recognize basic signs of a phishing attack, and ensure that all network endpoints are patched with the most current updates.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/otto-de/edison-microservice/commit/582f8f65f5d2e68cb7ef9f0b0eba3b5cb5f81a6c?diff=split#diff-ead42f7bee67adeefd20bf881888897aL77",
                    "lines": [
                      {
                        "line": "        value = \"/internal/jobs/{jobType}\",",
                        "lineNumber": 77,
                        "lineChange": "none"
                      },
                      {
                        "line": "        method = POST)",
                        "lineNumber": 78,
                        "lineChange": "none"
                      },
                      {
                        "line": "public void startJob(final @PathVariable String jobType,",
                        "lineNumber": 79,
                        "lineChange": "none"
                      },
                      {
                        "line": "                     final HttpServletRequest request,",
                        "lineNumber": 80,
                        "lineChange": "added"
                      },
                      {
                        "line": "                     final HttpServletResponse response) throws IOException {",
                        "lineNumber": 81,
                        "lineChange": "none"
                      },
                      {
                        "line": "    final URI jobUri = jobService.startAsyncJob(jobType);",
                        "lineNumber": 82,
                        "lineChange": "none"
                      },
                      {
                        "line": "    response.setHeader(\"Location\", jobUri.toString());",
                        "lineNumber": 79,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    response.setHeader(\"Location\", baseUriOf(request) + jobUri.toString());",
                        "lineNumber": 83,
                        "lineChange": "added"
                      },
                      {
                        "line": "    response.setStatus(SC_NO_CONTENT);",
                        "lineNumber": 84,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 85,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/sakaiproject/sakai/commit/aada0a93ad5b4b1a2d0c34d6578c0ebc5fc405e2?diff=split#diff-4b464d789bfe9e583cdf0c6057df69ddL60",
                    "lines": [
                      {
                        "line": "public void handleAccess(HttpServletRequest req, HttpServletResponse res, EntityReference ref) {    ",
                        "lineNumber": 58,
                        "lineChange": "removed"
                      },
                      {
                        "line": "public void handleAccess(EntityView view, HttpServletRequest req, HttpServletResponse res) {",
                        "lineNumber": 66,
                        "lineChange": "added"
                      },
                      {
                        "line": "  M_log.debug(\"handleAccess()\");",
                        "lineNumber": 67,
                        "lineChange": "added"
                      },
                      {
                        "line": "  Map<String, String> props = entityBroker.getProperties(req.getPathInfo());",
                        "lineNumber": 68,
                        "lineChange": "none"
                      },
                      {
                        "line": "  String target = props.get(\"url\");",
                        "lineNumber": 69,
                        "lineChange": "none"
                      },
                      {
                        "line": "  M_log.debug(\"handleAccess() -> \" + target);",
                        "lineNumber": 70,
                        "lineChange": "added"
                      },
                      {
                        "line": "  String user = props.get(\"security.user\");",
                        "lineNumber": 71,
                        "lineChange": "none"
                      },
                      {
                        "line": "  String site_function = props.get(\"security.site.function\");",
                        "lineNumber": 72,
                        "lineChange": "none"
                      },
                      {
                        "line": "try {",
                        "lineNumber": 117,
                        "lineChange": "none"
                      },
                      {
                        "line": "  setNoCacheHeaders(res);",
                        "lineNumber": 118,
                        "lineChange": "added"
                      },
                      {
                        "line": "  res.sendRedirect(target);\t\t  ",
                        "lineNumber": 119,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 120,
                        "lineChange": "none"
                      },
                      {
                        "line": "catch (IOException e) {",
                        "lineNumber": 121,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/ModeShape/modeshape/commit/f6eb1262d007c5c892e99ae96b2acb8c8c30e6c9?diff=split#diff-0a0e48d9f362849b7a26faca19b1b35bL42",
                    "lines": [
                      {
                        "line": "protected void processRequest( HttpServletRequest request,",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "                               HttpServletResponse response ) throws ServletException, IOException {",
                        "lineNumber": 42,
                        "lineChange": "none"
                      },
                      {
                        "line": "    String url = request.getRequestURI();",
                        "lineNumber": 43,
                        "lineChange": "none"
                      },
                      {
                        "line": "    String servletPath = request.getServletPath();",
                        "lineNumber": 44,
                        "lineChange": "none"
                      },
                      {
                        "line": "    request.getSession(true).setAttribute(\"initial.uri\", url);",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "    logger.debug(\"Store requested uri \" + url);",
                        "lineNumber": 47,
                        "lineChange": "added"
                      },
                      {
                        "line": "    ",
                        "lineNumber": 48,
                        "lineChange": "added"
                      },
                      {
                        "line": "    String dest = url.substring(0, url.indexOf(servletPath));",
                        "lineNumber": 49,
                        "lineChange": "none"
                      },
                      {
                        "line": "    response.sendRedirect(dest);",
                        "lineNumber": 50,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 51,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Get better control of redirection after logging in.",
                  "Add Bitbucket Server pull requests ()"
                ],
                "precision": "very-high",
                "repoDatasetSize": 85,
                "cwe": [
                  "CWE-601"
                ]
              }
            },
            {
              "id": "java/OR/test",
              "name": "OR/test",
              "shortDescription": {
                "text": "Open Redirect"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\nAn open redirect attack takes place when a web application redirects the user to an unauthorized and untrusted site. In general, URL redirection refers to the ability of a website or application to redirect users to another site. This is often a benign and useful feature. For example, if a resource has moved to a new location, URL redirection can transfer the user to that location rather than displaying an error message.\nHowever, this ability can be exploited through social engineering, tricking the user into believing they are accessing one site when, in reality, they are being redirected to a dangerous site, such as a phishing site. Once there, the user may be further tricked into entering credentials or personally identifiable information (PII), believing they are still within the original, trusted domain. Attackers can then use these credentials to gain unauthorized access or leverage the user's PII for sale or ransom.\n\n### Best practices for prevention\n* When developing a site or web app, consider implementing a disclaimer page to remind users that they are leaving a secure site.\n* Adopt a zero-trust approach in which all input is treated with suspicion.\n* Validate all input against deny-lists to ensure it does not contain code to redirect the user. This method is good but inherently incomplete.\n* Be aware of all sources of untrusted input being sent to the server that could be used to redirect the user, such as cookies, URL components, filenames, query results, request headers, and more.\n* In particular, be aware of potential API calls that could send input indirectly to redirect the user.\n* To protect end users, use a firewall to block known malicious sites, train users to recognize basic signs of a phishing attack, and ensure that all network endpoints are patched with the most current updates.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/otto-de/edison-microservice/commit/582f8f65f5d2e68cb7ef9f0b0eba3b5cb5f81a6c?diff=split#diff-ead42f7bee67adeefd20bf881888897aL77",
                    "lines": [
                      {
                        "line": "        value = \"/internal/jobs/{jobType}\",",
                        "lineNumber": 77,
                        "lineChange": "none"
                      },
                      {
                        "line": "        method = POST)",
                        "lineNumber": 78,
                        "lineChange": "none"
                      },
                      {
                        "line": "public void startJob(final @PathVariable String jobType,",
                        "lineNumber": 79,
                        "lineChange": "none"
                      },
                      {
                        "line": "                     final HttpServletRequest request,",
                        "lineNumber": 80,
                        "lineChange": "added"
                      },
                      {
                        "line": "                     final HttpServletResponse response) throws IOException {",
                        "lineNumber": 81,
                        "lineChange": "none"
                      },
                      {
                        "line": "    final URI jobUri = jobService.startAsyncJob(jobType);",
                        "lineNumber": 82,
                        "lineChange": "none"
                      },
                      {
                        "line": "    response.setHeader(\"Location\", jobUri.toString());",
                        "lineNumber": 79,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    response.setHeader(\"Location\", baseUriOf(request) + jobUri.toString());",
                        "lineNumber": 83,
                        "lineChange": "added"
                      },
                      {
                        "line": "    response.setStatus(SC_NO_CONTENT);",
                        "lineNumber": 84,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 85,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/sakaiproject/sakai/commit/aada0a93ad5b4b1a2d0c34d6578c0ebc5fc405e2?diff=split#diff-4b464d789bfe9e583cdf0c6057df69ddL60",
                    "lines": [
                      {
                        "line": "public void handleAccess(HttpServletRequest req, HttpServletResponse res, EntityReference ref) {    ",
                        "lineNumber": 58,
                        "lineChange": "removed"
                      },
                      {
                        "line": "public void handleAccess(EntityView view, HttpServletRequest req, HttpServletResponse res) {",
                        "lineNumber": 66,
                        "lineChange": "added"
                      },
                      {
                        "line": "  M_log.debug(\"handleAccess()\");",
                        "lineNumber": 67,
                        "lineChange": "added"
                      },
                      {
                        "line": "  Map<String, String> props = entityBroker.getProperties(req.getPathInfo());",
                        "lineNumber": 68,
                        "lineChange": "none"
                      },
                      {
                        "line": "  String target = props.get(\"url\");",
                        "lineNumber": 69,
                        "lineChange": "none"
                      },
                      {
                        "line": "  M_log.debug(\"handleAccess() -> \" + target);",
                        "lineNumber": 70,
                        "lineChange": "added"
                      },
                      {
                        "line": "  String user = props.get(\"security.user\");",
                        "lineNumber": 71,
                        "lineChange": "none"
                      },
                      {
                        "line": "  String site_function = props.get(\"security.site.function\");",
                        "lineNumber": 72,
                        "lineChange": "none"
                      },
                      {
                        "line": "try {",
                        "lineNumber": 117,
                        "lineChange": "none"
                      },
                      {
                        "line": "  setNoCacheHeaders(res);",
                        "lineNumber": 118,
                        "lineChange": "added"
                      },
                      {
                        "line": "  res.sendRedirect(target);\t\t  ",
                        "lineNumber": 119,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 120,
                        "lineChange": "none"
                      },
                      {
                        "line": "catch (IOException e) {",
                        "lineNumber": 121,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/ModeShape/modeshape/commit/f6eb1262d007c5c892e99ae96b2acb8c8c30e6c9?diff=split#diff-0a0e48d9f362849b7a26faca19b1b35bL42",
                    "lines": [
                      {
                        "line": "protected void processRequest( HttpServletRequest request,",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "                               HttpServletResponse response ) throws ServletException, IOException {",
                        "lineNumber": 42,
                        "lineChange": "none"
                      },
                      {
                        "line": "    String url = request.getRequestURI();",
                        "lineNumber": 43,
                        "lineChange": "none"
                      },
                      {
                        "line": "    String servletPath = request.getServletPath();",
                        "lineNumber": 44,
                        "lineChange": "none"
                      },
                      {
                        "line": "    request.getSession(true).setAttribute(\"initial.uri\", url);",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "    logger.debug(\"Store requested uri \" + url);",
                        "lineNumber": 47,
                        "lineChange": "added"
                      },
                      {
                        "line": "    ",
                        "lineNumber": 48,
                        "lineChange": "added"
                      },
                      {
                        "line": "    String dest = url.substring(0, url.indexOf(servletPath));",
                        "lineNumber": 49,
                        "lineChange": "none"
                      },
                      {
                        "line": "    response.sendRedirect(dest);",
                        "lineNumber": 50,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 51,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Get better control of redirection after logging in.",
                  "Add Bitbucket Server pull requests ()"
                ],
                "precision": "very-high",
                "repoDatasetSize": 85,
                "cwe": [
                  "CWE-601"
                ]
              }
            },
            {
              "id": "java/WebCookieMissesCallToSetSecure/test",
              "name": "WebCookieMissesCallToSetSecure/test",
              "shortDescription": {
                "text": "Sensitive Cookie in HTTPS Session Without 'Secure' Attribute"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nIn a session hijacking attack, if a cookie containing sensitive data is set without the `secure` attribute, an attacker might be able to intercept that cookie. Once the attacker has this information, they can potentially impersonate a user, accessing confidential data and performing actions that they would not normally be authorized to do. Attackers often gain access to this sensitive cookie data when it is transmitted insecurely in plain text over a standard HTTP session, rather than being encrypted and sent over an HTTPS session. This type of attack is highly preventable by following best practices when setting sensitive session cookies.\n\n### Best practices for prevention\n* Set the `secure` attribute in the response header when setting cookies on the client side, and use a test tool to verify that secure cookie transmission is in place.\n* Always use HTTPS for all login pages and never redirect from HTTP to HTTPS, which leaves secure session data open to interception.\n* Follow other best practices when it comes to session cookies, such as setting the HttpOnly flag and maintaining highly time-limited sessions.\n* Consider implementing browser checks and providing secure data only within a browser that supports tight cookie security.\n* Generate session IDs in a way that is not easily predictable, invalidate sessions upon logout, and never reuse session IDs.\n* Educate developers to use built-in secure session-management functionality within the development environment instead of taking a DIY approach.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/pippo-java/pippo/commit/baa786cf11e875461090175df964a88ac7d4ecd5?diff=split#diff-8aed5e116d7d7ad41bf04c851e1d5dc7L269",
                    "lines": [
                      {
                        "line": " */",
                        "lineNumber": 266,
                        "lineChange": "none"
                      },
                      {
                        "line": "private Cookie generateLanguageCookie(String language) {",
                        "lineNumber": 267,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Cookie cookie = new Cookie(applicationCookiePrefix + \"_LANG\", language);",
                        "lineNumber": 268,
                        "lineChange": "none"
                      },
                      {
                        "line": "    cookie.setSecure(true);",
                        "lineNumber": 269,
                        "lineChange": "added"
                      },
                      {
                        "line": "    cookie.setMaxAge(TEN_YEARS);",
                        "lineNumber": 270,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return cookie;",
                        "lineNumber": 271,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 272,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/eclipse/rap/commit/bec1d767c1435f13c923c90a578473e02aa24996?diff=split#diff-a8821336a5cc73da073db6bbfff0ae4eL87",
                    "lines": [
                      {
                        "line": "}",
                        "lineNumber": 85,
                        "lineChange": "none"
                      },
                      {
                        "line": "// (2+3) do refresh cookie, to ensure it expires in COOKIE_MAX_AGE_SEC  ",
                        "lineNumber": 85,
                        "lineChange": "removed"
                      },
                      {
                        "line": "// (2+3) do refresh cookie, to ensure it expires in COOKIE_MAX_AGE_SEC",
                        "lineNumber": 86,
                        "lineChange": "added"
                      },
                      {
                        "line": "Cookie cookie = new Cookie( COOKIE_NAME, result );",
                        "lineNumber": 87,
                        "lineChange": "none"
                      },
                      {
                        "line": "cookie.setSecure( RWT.getRequest().isSecure() );",
                        "lineNumber": 88,
                        "lineChange": "added"
                      },
                      {
                        "line": "cookie.setMaxAge( COOKIE_MAX_AGE_SEC );",
                        "lineNumber": 89,
                        "lineChange": "none"
                      },
                      {
                        "line": "ContextProvider.getResponse().addCookie( cookie );",
                        "lineNumber": 90,
                        "lineChange": "none"
                      },
                      {
                        "line": "// (2+3) update storeId stored in session",
                        "lineNumber": 91,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/InnovateUKGitHub/innovation-funding-service/commit/a770f11236a0a40bfdd1e6b181d5a80e0da970ea?diff=split#diff-e27b77e438734a64c56eb279998f82b3L80",
                    "lines": [
                      {
                        "line": "public void removeAuthentication(HttpServletResponse response) {",
                        "lineNumber": 85,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Cookie cookie = new Cookie(AUTH_TOKEN, null);",
                        "lineNumber": 86,
                        "lineChange": "none"
                      },
                      {
                        "line": "    cookie.setMaxAge(0);",
                        "lineNumber": 87,
                        "lineChange": "none"
                      },
                      {
                        "line": "    cookie.setSecure(cookieSecure);",
                        "lineNumber": 88,
                        "lineChange": "added"
                      },
                      {
                        "line": "    cookie.setHttpOnly(cookieHttpOnly);",
                        "lineNumber": 89,
                        "lineChange": "added"
                      },
                      {
                        "line": "    response.addCookie(cookie);",
                        "lineNumber": 90,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 91,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Added cookie support in HttpRequest/Response",
                  "Set secure user cookies and only for HTTP."
                ],
                "precision": "very-high",
                "repoDatasetSize": 88,
                "cwe": [
                  "CWE-614"
                ]
              }
            },
            {
              "id": "java/TLS/test",
              "name": "TLS/test",
              "shortDescription": {
                "text": "Inadequate Encryption Strength"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nImplementing encryption for the transmission and storage of sensitive information is essential. But encryption standards are constantly changing since attackers have more and more powerful resources at their disposal-along with more sophisticated attack algorithms. This means that encryption is only useful if it meets current standards appropriate for the type of data being transmitted or stored.\nWhen organizations use weakly encoded passwords or weak hashes (especially when they also utilize single-factor authentication, which places too much emphasis on passwords), attackers can potentially gain unauthorized access through a brute-force attack.\n\n### Best practices for prevention\n* Understand best practices of contemporary encryption algorithms and techniques.\n* Avoid encryption algorithms and techniques that are widely known to be outdated (for example, DES).\n* Implement multi-factor authentication to minimize reliance on a single factor, such as a password, that is too susceptible to brute-force attacks.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/apache/cloudstack/commit/91f7012b015249d9d74dace8874ee8f38b54bfc2?diff=split#diff-5604a4e589dc38cc8d80f2f4020c2a23L53",
                    "lines": [
                      {
                        "line": "public static SSLContext getSSLContext() throws NoSuchAlgorithmException {",
                        "lineNumber": 68,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return SSLContext.getInstance(\"TLSv1\");",
                        "lineNumber": 52,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    return SSLContext.getInstance(\"TLSv1.2\");",
                        "lineNumber": 69,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 70,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/MissionCriticalCloud/cosmic/commit/3a4004a34b42e30a49a1c48f1ff57e5f3ca26913?diff=split#diff-49bfef0c8d16a2c34d787d4fca65e2e7L35",
                    "lines": [
                      {
                        "line": "public static SSLContext getSSLContext() throws NoSuchAlgorithmException {",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return SSLContext.getInstance(\"TLSv1\");",
                        "lineNumber": 34,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    return SSLContext.getInstance(\"TLSv1.2\");",
                        "lineNumber": 34,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 35,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/hypercube1024/firefly/commit/e2e4d7810c9bb202bbef3d5022e3b13447f102dd?diff=split#diff-fb5cd0d3953731ed2bdb241178f1ce05L32",
                    "lines": [
                      {
                        "line": "  tmf.init(ks);",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "  sslContext = SSLContext.getInstance(\"TLS\");",
                        "lineNumber": 31,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  sslContext = SSLContext.getInstance(\"TLSv1.2\");",
                        "lineNumber": 31,
                        "lineChange": "added"
                      },
                      {
                        "line": "  sslContext.init(kmf.getKeyManagers(), tmf.getTrustManagers(), null);",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "return sslContext;",
                        "lineNumber": 33,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Configuring TSL/SSL now supports property placeholders.",
                  "support for TLS config tweaks",
                  "Temporarily peg SSL version to TLSv1.2."
                ],
                "precision": "very-high",
                "repoDatasetSize": 78,
                "cwe": [
                  "CWE-326"
                ]
              }
            },
            {
              "id": "java/HardcodedPassword/test",
              "name": "HardcodedPassword/test",
              "shortDescription": {
                "text": "Use of Hardcoded Credentials"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nDevelopers may use hardcoded credentials for convenience when coding in order to simplify their workflow. While they are responsible for removing these before production, occasionally this task may fall through the cracks. This also becomes a maintenance challenge when credentials are re-used across multiple applications.\n\nOnce attackers gain access, they may take advantage of privilege level to remove or alter data, take down a site or app, or hold any of the above for ransom. The risk across multiple similar projects is even greater. If code containing the credentials is reused across multiple projects, they will all be compromised.\n\n### Best practices for prevention\n* Plan software architecture such that keys and passwords are always stored outside the code, wherever possible.\n* Plan encryption into software architecture for all credential information and ensure proper handling of keys, credentials, and passwords.\n* Prompt for a secure password on first login rather than hard-code a default password.\n* If a hardcoded password or credential must be used, limit its use, for example, to system console users rather than via the network.\n* Use strong hashes for inbound password authentication, ideally with randomly assigned salts to increase the difficulty level in case of brute-force attack.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/utluiz/spring-examples/commit/56e44932a3a004c3ac96ce1caa3e6d8817230f6e?diff=split#diff-19d771f687bc8ca37d378c39d20ed425L26",
                    "lines": [
                      {
                        "line": "  ds.setUrl(\"jdbc:mysql://localhost:3311/agenda\");",
                        "lineNumber": 23,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  ds.setUrl(\"jdbc:mysql://localhost/agenda\");",
                        "lineNumber": 20,
                        "lineChange": "added"
                      },
                      {
                        "line": "  ds.setUser(\"root\");",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "  ds.setPassword(\"root\");",
                        "lineNumber": 25,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  ds.setPassword(\"\");",
                        "lineNumber": 22,
                        "lineChange": "added"
                      },
                      {
                        "line": "  return ds;",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 27,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Evolveum/midpoint/commit/9ce1d7ff1e78ca65d6b614c52035e1971d1187cd?diff=split#diff-0003b3a408395a5640011d7c8422d19bL43",
                    "lines": [
                      {
                        "line": "      // set the password for our message.",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "      pc.setPassword(\"5ecr3t\");",
                        "lineNumber": 42,
                        "lineChange": "removed"
                      },
                      {
                        "line": "      pc.setPassword(Main.ADM_PASSWORD);",
                        "lineNumber": 42,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 43,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/theonedev/onedev/commit/ee60c786981347fc5ab6685656f3de2ea67045f7?diff=split#diff-7f6f95fdc3f39c216b4bd099d0ca65b6L60",
                    "lines": [
                      {
                        "line": "  System.exit(1);",
                        "lineNumber": 61,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 62,
                        "lineChange": "none"
                      },
                      {
                        "line": "root.setPassword(\"12345\");",
                        "lineNumber": 59,
                        "lineChange": "removed"
                      },
                      {
                        "line": "String password = Bootstrap.command.getArgs()[0];",
                        "lineNumber": 63,
                        "lineChange": "added"
                      },
                      {
                        "line": "root.setPassword(password);",
                        "lineNumber": 64,
                        "lineChange": "added"
                      },
                      {
                        "line": "accountManager.save(root);",
                        "lineNumber": 65,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Added user/password configuration from YML file.",
                  "Added ability to configure databases to run tests against."
                ],
                "precision": "very-high",
                "repoDatasetSize": 383,
                "cwe": [
                  "CWE-798",
                  "CWE-259"
                ]
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "java/Ssrf/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Unsanitized input from data from a remote resource flows into openStream, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
            "arguments": [
              "[data from a remote resource](0)",
              "[flows](1),(2),(3),(4)",
              "[openStream](5)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/io/undertow/server/handlers/SecureCookieHandlerTestCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 64,
                  "endLine": 64,
                  "startColumn": 13,
                  "endColumn": 31
                }
              }
            }
          ],
          "fingerprints": {
            "0": "26a494a686513bde6972030cbc7a4dde34116a4a698ce151b277b24f5aa719b1",
            "1": "6e03f870.1cbd3ff4.36959e99.ea4568bb.4a9c8cbc.f940a352.df7e59ba.54d46e25.19689298.cd1368cb.36959e99.e22980a8.d31a8364.c88789d5.84e2faac.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/handlers/SecureCookieHandlerTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 64,
                            "endLine": 64,
                            "startColumn": 32,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/handlers/SecureCookieHandlerTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 64,
                            "endLine": 64,
                            "startColumn": 32,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/handlers/SecureCookieHandlerTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 64,
                            "endLine": 64,
                            "startColumn": 32,
                            "endColumn": 61
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/io/undertow/util/FileUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 46,
                            "endLine": 46,
                            "startColumn": 35,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/io/undertow/util/FileUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 48,
                            "endLine": 48,
                            "startColumn": 29,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/io/undertow/util/FileUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 48,
                            "endLine": 48,
                            "startColumn": 29,
                            "endColumn": 43
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/Ssrf/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Unsanitized input from data from a remote resource flows into openStream, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
            "arguments": [
              "[data from a remote resource](0)",
              "[flows](1),(2),(3)",
              "[openStream](4)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/io/undertow/server/security/SimpleConfidentialRedirectTestCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 97,
                  "endLine": 97,
                  "startColumn": 29,
                  "endColumn": 47
                }
              }
            }
          ],
          "fingerprints": {
            "0": "31724dd524b75cff11607d199b0a98ee9f6d1064c5ca7114c46b6c8aca2c1058",
            "1": "3b542730.1cbd3ff4.6906ef50.ea4568bb.32bd8b25.f940a352.df7e59ba.0f01a149.3b542730.1cbd3ff4.bb993ef0.6c52ae28.1fe40d1a.85d83993.9695bb1e.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/security/SimpleConfidentialRedirectTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 97,
                            "endLine": 97,
                            "startColumn": 48,
                            "endColumn": 69
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/security/SimpleConfidentialRedirectTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 97,
                            "endLine": 97,
                            "startColumn": 48,
                            "endColumn": 69
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/io/undertow/util/FileUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 46,
                            "endLine": 46,
                            "startColumn": 35,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/io/undertow/util/FileUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 48,
                            "endLine": 48,
                            "startColumn": 29,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/io/undertow/util/FileUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 48,
                            "endLine": 48,
                            "startColumn": 29,
                            "endColumn": 43
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/Ssrf/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Unsanitized input from data from a remote resource flows into openStream, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
            "arguments": [
              "[data from a remote resource](0)",
              "[flows](1),(2),(3)",
              "[openStream](4)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/io/undertow/server/protocol/proxy/ProxyProtocolTestCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 292,
                  "endLine": 292,
                  "startColumn": 29,
                  "endColumn": 47
                }
              }
            }
          ],
          "fingerprints": {
            "0": "160da39a59e53c81a234e5c3e7a535c41fe35dc2052285a575c75f8bb9cc6072",
            "1": "ca9876a9.c6436c56.d8df03bf.ea4568bb.e27b77c0.f940a352.df7e59ba.0f01a149.69e5fcf2.c6436c56.bb993ef0.6c52ae28.e27b77c0.85d83993.9695bb1e.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/protocol/proxy/ProxyProtocolTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 292,
                            "endLine": 292,
                            "startColumn": 48,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/protocol/proxy/ProxyProtocolTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 292,
                            "endLine": 292,
                            "startColumn": 48,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/io/undertow/util/FileUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 46,
                            "endLine": 46,
                            "startColumn": 35,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/io/undertow/util/FileUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 48,
                            "endLine": 48,
                            "startColumn": 29,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/io/undertow/util/FileUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 48,
                            "endLine": 48,
                            "startColumn": 29,
                            "endColumn": 43
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/Ssrf/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Unsanitized input from data from a remote resource flows into openStream, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
            "arguments": [
              "[data from a remote resource](0)",
              "[flows](1),(2),(3)",
              "[openStream](4)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/io/undertow/server/protocol/proxy/ProxyProtocolTestCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 341,
                  "endLine": 341,
                  "startColumn": 29,
                  "endColumn": 47
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d1563b4ffd2459e859334f9ebccd202f5cb317179526fd660af9ac7abba45db4",
            "1": "ca9876a9.c6436c56.33fa5dbe.ea4568bb.e27b77c0.7fda7c5e.df7e59ba.0f01a149.69e5fcf2.c6436c56.bb993ef0.e22980a8.e27b77c0.85d83993.9695bb1e.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/protocol/proxy/ProxyProtocolTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 341,
                            "endLine": 341,
                            "startColumn": 48,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/protocol/proxy/ProxyProtocolTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 341,
                            "endLine": 341,
                            "startColumn": 48,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/io/undertow/util/FileUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 46,
                            "endLine": 46,
                            "startColumn": 35,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/io/undertow/util/FileUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 48,
                            "endLine": 48,
                            "startColumn": 29,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/io/undertow/util/FileUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 48,
                            "endLine": 48,
                            "startColumn": 29,
                            "endColumn": 43
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/Ssrf/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Unsanitized input from data from a remote resource flows into openStream, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
            "arguments": [
              "[data from a remote resource](0)",
              "[flows](1),(2),(3)",
              "[openStream](4)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/io/undertow/server/protocol/proxy/ProxyProtocolTestCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 381,
                  "endLine": 381,
                  "startColumn": 29,
                  "endColumn": 47
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a0134ab8f9091b4787dc1e769c312ab61923f98e7315e84a28a24ef3109436ac",
            "1": "ca9876a9.1cbd3ff4.d8df03bf.ea4568bb.e27b77c0.f940a352.df7e59ba.0f01a149.69e5fcf2.be62888c.bb993ef0.6c52ae28.e27b77c0.85d83993.df7e59ba.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/protocol/proxy/ProxyProtocolTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 381,
                            "endLine": 381,
                            "startColumn": 48,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/protocol/proxy/ProxyProtocolTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 381,
                            "endLine": 381,
                            "startColumn": 48,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/io/undertow/util/FileUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 46,
                            "endLine": 46,
                            "startColumn": 35,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/io/undertow/util/FileUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 48,
                            "endLine": 48,
                            "startColumn": 29,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/io/undertow/util/FileUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 48,
                            "endLine": 48,
                            "startColumn": 29,
                            "endColumn": 43
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/Ssrf/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Unsanitized input from data from a remote resource flows into openStream, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
            "arguments": [
              "[data from a remote resource](0)",
              "[flows](1),(2),(3),(4)",
              "[openStream](5)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "servlet/src/test/java/io/undertow/servlet/test/response/writer/ResponseWriterTestCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 75,
                  "endLine": 75,
                  "startColumn": 27,
                  "endColumn": 45
                }
              }
            }
          ],
          "fingerprints": {
            "0": "db2d355d0c0561e476f9d80507b8b13e8a7f544a0ba9ddd3fe9d27ebf98185dc",
            "1": "6e03f870.1cbd3ff4.36959e99.ea4568bb.c36a24c1.f940a352.df7e59ba.c5b28e25.19689298.1cbd3ff4.36959e99.c81e2a8c.5927d787.4450c44e.84e2faac.c5b28e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/response/writer/ResponseWriterTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 75,
                            "endLine": 75,
                            "startColumn": 46,
                            "endColumn": 62
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/response/writer/ResponseWriterTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 75,
                            "endLine": 75,
                            "startColumn": 46,
                            "endColumn": 62
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/response/writer/ResponseWriterTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 75,
                            "endLine": 75,
                            "startColumn": 46,
                            "endColumn": 75
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/io/undertow/util/FileUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 46,
                            "endLine": 46,
                            "startColumn": 35,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/io/undertow/util/FileUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 48,
                            "endLine": 48,
                            "startColumn": 29,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/io/undertow/util/FileUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 48,
                            "endLine": 48,
                            "startColumn": 29,
                            "endColumn": 43
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/Ssrf/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Unsanitized input from data from a remote resource flows into openStream, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
            "arguments": [
              "[data from a remote resource](0)",
              "[flows](1),(2),(3),(4)",
              "[openStream](5)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "servlet/src/test/java/io/undertow/servlet/test/response/writer/ResponseWriterTestCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 92,
                  "endLine": 92,
                  "startColumn": 27,
                  "endColumn": 45
                }
              }
            }
          ],
          "fingerprints": {
            "0": "08bd261b59ff46e07e226667675a41cb3027e4882da27f30bbc8f404d772142a",
            "1": "6e03f870.1cbd3ff4.36959e99.ea4568bb.c36a24c1.f940a352.df7e59ba.c5b28e25.19689298.1cbd3ff4.36959e99.c81e2a8c.5927d787.4450c44e.84e2faac.c5b28e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/response/writer/ResponseWriterTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 92,
                            "endLine": 92,
                            "startColumn": 46,
                            "endColumn": 62
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/response/writer/ResponseWriterTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 92,
                            "endLine": 92,
                            "startColumn": 46,
                            "endColumn": 62
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/response/writer/ResponseWriterTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 92,
                            "endLine": 92,
                            "startColumn": 46,
                            "endColumn": 75
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/io/undertow/util/FileUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 46,
                            "endLine": 46,
                            "startColumn": 35,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/io/undertow/util/FileUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 48,
                            "endLine": 48,
                            "startColumn": 29,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/io/undertow/util/FileUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 48,
                            "endLine": 48,
                            "startColumn": 29,
                            "endColumn": 43
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/Ssrf/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Unsanitized input from data from a remote resource flows into openStream, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
            "arguments": [
              "[data from a remote resource](0)",
              "[flows](1),(2),(3)",
              "[openStream](4)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/io/undertow/server/protocol/ajp/AjpCharacterEncodingTestCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 87,
                  "endLine": 87,
                  "startColumn": 25,
                  "endColumn": 43
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5a2449bdfec4f7e6a10522cd04c46a9c87f69788c50eadc406eaeae126cb5451",
            "1": "3b542730.1cbd3ff4.6906ef50.ea4568bb.32bd8b25.f940a352.df7e59ba.0f01a149.3b542730.1cbd3ff4.bb993ef0.6c52ae28.ae63d11c.85d83993.9695bb1e.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/protocol/ajp/AjpCharacterEncodingTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 87,
                            "endLine": 87,
                            "startColumn": 44,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/protocol/ajp/AjpCharacterEncodingTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 87,
                            "endLine": 87,
                            "startColumn": 44,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/io/undertow/util/FileUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 46,
                            "endLine": 46,
                            "startColumn": 35,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/io/undertow/util/FileUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 48,
                            "endLine": 48,
                            "startColumn": 29,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/io/undertow/util/FileUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 48,
                            "endLine": 48,
                            "startColumn": 29,
                            "endColumn": 43
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/Ssrf/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Unsanitized input from data from a remote resource flows into org.apache.http.client.methods.HttpGet, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
            "arguments": [
              "[data from a remote resource](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[org.apache.http.client.methods.HttpGet](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "servlet/src/test/java/io/undertow/servlet/test/session/ServletURLRewritingSessionTestCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 82,
                  "endLine": 82,
                  "startColumn": 23,
                  "endColumn": 30
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3c83876af2bc6dff7d0db75fb7012f9356711bd500410e927469dce9cd77a5ec",
            "1": "e6a588ec.9563a9cb.33fa5dbe.175ebfac.4a9c8cbc.7fda7c5e.cfef53f8.54d46e25.6d351a63.9563a9cb.33fa5dbe.e22980a8.f1d9f854.7fda7c5e.cfef53f8.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 29,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 29,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 20,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 29,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 29,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 16,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/session/ServletURLRewritingSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 26,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/session/ServletURLRewritingSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 20,
                            "endColumn": 62
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/session/ServletURLRewritingSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 82,
                            "startColumn": 31,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/session/ServletURLRewritingSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 82,
                            "startColumn": 23,
                            "endColumn": 30
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/Ssrf/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Unsanitized input from data from a remote resource flows into org.apache.http.client.methods.HttpGet, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
            "arguments": [
              "[data from a remote resource](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[org.apache.http.client.methods.HttpGet](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "servlet/src/test/java/io/undertow/servlet/test/session/ServletURLRewritingSessionTestCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 89,
                  "endLine": 89,
                  "startColumn": 23,
                  "endColumn": 30
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e26bdfbf190f3b3b40e1273399520a2398d40a8957a962f6346c68ec22ccae86",
            "1": "6d351a63.9563a9cb.33fa5dbe.e22980a8.f1d9f854.7fda7c5e.cfef53f8.54d46e25.6d351a63.9563a9cb.33fa5dbe.e22980a8.d31a8364.c88789d5.84e2faac.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 29,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 29,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 20,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 29,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 29,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 16,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/session/ServletURLRewritingSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 85,
                            "endLine": 85,
                            "startColumn": 19,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/session/ServletURLRewritingSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 85,
                            "endLine": 85,
                            "startColumn": 13,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/session/ServletURLRewritingSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 89,
                            "endLine": 89,
                            "startColumn": 31,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/session/ServletURLRewritingSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 89,
                            "endLine": 89,
                            "startColumn": 23,
                            "endColumn": 30
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/Ssrf/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Unsanitized input from data from a remote resource flows into org.apache.http.client.methods.HttpGet, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
            "arguments": [
              "[data from a remote resource](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[org.apache.http.client.methods.HttpGet](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "servlet/src/test/java/io/undertow/servlet/test/session/ServletURLRewritingSessionTestCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 116,
                  "endLine": 116,
                  "startColumn": 23,
                  "endColumn": 30
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d6afef0f1add0197f9c45cef5fc1a9b91bb00fdccfe40db52dbc660c82c7bd05",
            "1": "e6a588ec.9563a9cb.33fa5dbe.175ebfac.4a9c8cbc.7fda7c5e.cfef53f8.54d46e25.6d351a63.9563a9cb.33fa5dbe.e22980a8.f1d9f854.7fda7c5e.cfef53f8.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 29,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 29,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 20,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 29,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 29,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 16,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/session/ServletURLRewritingSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 110,
                            "endLine": 110,
                            "startColumn": 26,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/session/ServletURLRewritingSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 110,
                            "endLine": 110,
                            "startColumn": 20,
                            "endColumn": 62
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/session/ServletURLRewritingSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 116,
                            "endLine": 116,
                            "startColumn": 31,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/session/ServletURLRewritingSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 116,
                            "endLine": 116,
                            "startColumn": 23,
                            "endColumn": 30
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/Ssrf/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Unsanitized input from data from a remote resource flows into org.apache.http.client.methods.HttpGet, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
            "arguments": [
              "[data from a remote resource](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[org.apache.http.client.methods.HttpGet](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "servlet/src/test/java/io/undertow/servlet/test/session/ServletURLRewritingSessionTestCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 124,
                  "endLine": 124,
                  "startColumn": 23,
                  "endColumn": 30
                }
              }
            }
          ],
          "fingerprints": {
            "0": "63ab5e325d04ccc59c1126a33ca8fdc54c460fe440c9c4534a5d67d1fd80002b",
            "1": "6d351a63.9563a9cb.33fa5dbe.e22980a8.f1d9f854.7fda7c5e.cfef53f8.54d46e25.6d351a63.9563a9cb.33fa5dbe.e22980a8.d31a8364.c88789d5.84e2faac.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 29,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 29,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 20,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 29,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 29,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 16,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/session/ServletURLRewritingSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 119,
                            "endLine": 119,
                            "startColumn": 19,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/session/ServletURLRewritingSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 119,
                            "endLine": 119,
                            "startColumn": 13,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/session/ServletURLRewritingSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 124,
                            "endLine": 124,
                            "startColumn": 31,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/session/ServletURLRewritingSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 124,
                            "endLine": 124,
                            "startColumn": 23,
                            "endColumn": 30
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/Ssrf/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Unsanitized input from data from a remote resource flows into org.apache.http.client.methods.HttpGet, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
            "arguments": [
              "[data from a remote resource](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[org.apache.http.client.methods.HttpGet](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "servlet/src/test/java/io/undertow/servlet/test/session/ServletURLRewritingSessionTestCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 152,
                  "endLine": 152,
                  "startColumn": 23,
                  "endColumn": 30
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0184cac865b9fff2854fe4c076b134f2d95d13a92b012b7a044933b747a6b0e0",
            "1": "e6a588ec.9563a9cb.33fa5dbe.175ebfac.4a9c8cbc.7fda7c5e.cfef53f8.54d46e25.6d351a63.9563a9cb.33fa5dbe.e22980a8.f1d9f854.7fda7c5e.cfef53f8.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 29,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 29,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 20,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 29,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 29,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 16,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/session/ServletURLRewritingSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 147,
                            "endLine": 147,
                            "startColumn": 26,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/session/ServletURLRewritingSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 147,
                            "endLine": 147,
                            "startColumn": 20,
                            "endColumn": 62
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/session/ServletURLRewritingSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 152,
                            "endLine": 152,
                            "startColumn": 31,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/session/ServletURLRewritingSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 152,
                            "endLine": 152,
                            "startColumn": 23,
                            "endColumn": 30
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/Ssrf/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Unsanitized input from data from a remote resource flows into org.apache.http.client.methods.HttpGet, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
            "arguments": [
              "[data from a remote resource](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[org.apache.http.client.methods.HttpGet](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "servlet/src/test/java/io/undertow/servlet/test/session/ServletURLRewritingSessionTestCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 159,
                  "endLine": 159,
                  "startColumn": 23,
                  "endColumn": 30
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d4752894d44a1262169d838ed4ada6b08e0e2f3cdb2f06971fd8ad6600473249",
            "1": "6d351a63.9563a9cb.33fa5dbe.e22980a8.f1d9f854.7fda7c5e.cfef53f8.54d46e25.6d351a63.9563a9cb.33fa5dbe.e22980a8.d31a8364.c88789d5.84e2faac.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 29,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 29,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 20,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 29,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 29,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 16,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/session/ServletURLRewritingSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 155,
                            "endLine": 155,
                            "startColumn": 19,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/session/ServletURLRewritingSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 155,
                            "endLine": 155,
                            "startColumn": 13,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/session/ServletURLRewritingSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 159,
                            "endLine": 159,
                            "startColumn": 31,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/session/ServletURLRewritingSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 159,
                            "endLine": 159,
                            "startColumn": 23,
                            "endColumn": 30
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/Ssrf/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Unsanitized input from data from a remote resource flows into org.apache.http.client.methods.HttpGet, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
            "arguments": [
              "[data from a remote resource](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[org.apache.http.client.methods.HttpGet](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "servlet/src/test/java/io/undertow/servlet/test/session/ServletURLRewritingSessionTestCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 185,
                  "endLine": 185,
                  "startColumn": 23,
                  "endColumn": 30
                }
              }
            }
          ],
          "fingerprints": {
            "0": "992ef825aa4399d082611e5753af9e6fe7c5bdb32aef4da6c0ca420f7e64f400",
            "1": "e6a588ec.9563a9cb.33fa5dbe.175ebfac.4a9c8cbc.7fda7c5e.cfef53f8.54d46e25.6d351a63.9563a9cb.33fa5dbe.e22980a8.f1d9f854.7fda7c5e.cfef53f8.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 29,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 29,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 20,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 29,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 29,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 16,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/session/ServletURLRewritingSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 180,
                            "endLine": 180,
                            "startColumn": 26,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/session/ServletURLRewritingSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 180,
                            "endLine": 180,
                            "startColumn": 20,
                            "endColumn": 62
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/session/ServletURLRewritingSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 185,
                            "endLine": 185,
                            "startColumn": 31,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/session/ServletURLRewritingSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 185,
                            "endLine": 185,
                            "startColumn": 23,
                            "endColumn": 30
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/Ssrf/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Unsanitized input from data from a remote resource flows into org.apache.http.client.methods.HttpGet, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
            "arguments": [
              "[data from a remote resource](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[org.apache.http.client.methods.HttpGet](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "servlet/src/test/java/io/undertow/servlet/test/session/ServletURLRewritingSessionTestCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 192,
                  "endLine": 192,
                  "startColumn": 23,
                  "endColumn": 30
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6971c1bff701c11c5550fed470f51d4b22ad3dead8fc0eb8e143f9c49ad213d6",
            "1": "6d351a63.9563a9cb.33fa5dbe.e22980a8.f1d9f854.7fda7c5e.cfef53f8.54d46e25.6d351a63.9563a9cb.33fa5dbe.e22980a8.d31a8364.c88789d5.84e2faac.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 29,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 29,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 20,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 29,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 29,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 16,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/session/ServletURLRewritingSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 188,
                            "endLine": 188,
                            "startColumn": 19,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/session/ServletURLRewritingSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 188,
                            "endLine": 188,
                            "startColumn": 13,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/session/ServletURLRewritingSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 192,
                            "endLine": 192,
                            "startColumn": 31,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/session/ServletURLRewritingSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 192,
                            "endLine": 192,
                            "startColumn": 23,
                            "endColumn": 30
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/Ssrf/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Unsanitized input from data from a remote resource flows into org.apache.http.client.methods.HttpGet, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
            "arguments": [
              "[data from a remote resource](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[org.apache.http.client.methods.HttpGet](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/io/undertow/server/handlers/session/URLRewritingSessionTestCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 100,
                  "endLine": 100,
                  "startColumn": 23,
                  "endColumn": 30
                }
              }
            }
          ],
          "fingerprints": {
            "0": "dde995682e4058d22a4be5f42d1a728626d75ed2952b40ceb204d93f49f5b09f",
            "1": "e6a588ec.9563a9cb.33fa5dbe.175ebfac.4a9c8cbc.7fda7c5e.cfef53f8.54d46e25.6d351a63.9563a9cb.33fa5dbe.e22980a8.f1d9f854.7fda7c5e.cfef53f8.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 29,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 29,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 20,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 29,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 29,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 16,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/handlers/session/URLRewritingSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 96,
                            "endLine": 96,
                            "startColumn": 26,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/handlers/session/URLRewritingSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 96,
                            "endLine": 96,
                            "startColumn": 20,
                            "endColumn": 62
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/handlers/session/URLRewritingSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 100,
                            "endLine": 100,
                            "startColumn": 31,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/handlers/session/URLRewritingSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 100,
                            "endLine": 100,
                            "startColumn": 23,
                            "endColumn": 30
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/Ssrf/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Unsanitized input from data from a remote resource flows into org.apache.http.client.methods.HttpGet, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
            "arguments": [
              "[data from a remote resource](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[org.apache.http.client.methods.HttpGet](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/io/undertow/server/handlers/session/URLRewritingSessionTestCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 107,
                  "endLine": 107,
                  "startColumn": 23,
                  "endColumn": 30
                }
              }
            }
          ],
          "fingerprints": {
            "0": "08a011784f70096076a835ae732acce348880f5085d629dfea5bb99bf6933595",
            "1": "6d351a63.9563a9cb.33fa5dbe.e22980a8.f1d9f854.7fda7c5e.cfef53f8.54d46e25.6d351a63.9563a9cb.33fa5dbe.e22980a8.d31a8364.c88789d5.84e2faac.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 29,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 29,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 20,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 29,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 29,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 16,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/handlers/session/URLRewritingSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 103,
                            "endLine": 103,
                            "startColumn": 19,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/handlers/session/URLRewritingSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 103,
                            "endLine": 103,
                            "startColumn": 13,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/handlers/session/URLRewritingSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 107,
                            "endLine": 107,
                            "startColumn": 31,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/handlers/session/URLRewritingSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 107,
                            "endLine": 107,
                            "startColumn": 23,
                            "endColumn": 30
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/Ssrf/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Unsanitized input from data from a remote resource flows into org.apache.http.client.methods.HttpGet, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
            "arguments": [
              "[data from a remote resource](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[org.apache.http.client.methods.HttpGet](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/io/undertow/server/handlers/session/URLRewritingSessionTestCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 134,
                  "endLine": 134,
                  "startColumn": 23,
                  "endColumn": 30
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8fc6c78d430604f5e88eb946e3e20a4b16892be7ea32d4e09aa016df68896fd9",
            "1": "e6a588ec.9563a9cb.33fa5dbe.175ebfac.4a9c8cbc.7fda7c5e.cfef53f8.54d46e25.6d351a63.9563a9cb.33fa5dbe.e22980a8.f1d9f854.7fda7c5e.cfef53f8.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 29,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 29,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 20,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 29,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 29,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 16,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/handlers/session/URLRewritingSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 128,
                            "endLine": 128,
                            "startColumn": 26,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/handlers/session/URLRewritingSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 128,
                            "endLine": 128,
                            "startColumn": 20,
                            "endColumn": 62
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/handlers/session/URLRewritingSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 134,
                            "endLine": 134,
                            "startColumn": 31,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/handlers/session/URLRewritingSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 134,
                            "endLine": 134,
                            "startColumn": 23,
                            "endColumn": 30
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/Ssrf/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Unsanitized input from data from a remote resource flows into org.apache.http.client.methods.HttpGet, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
            "arguments": [
              "[data from a remote resource](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[org.apache.http.client.methods.HttpGet](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/io/undertow/server/handlers/session/URLRewritingSessionTestCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 142,
                  "endLine": 142,
                  "startColumn": 23,
                  "endColumn": 30
                }
              }
            }
          ],
          "fingerprints": {
            "0": "2aa6d59c473968c27e351ffe1540dc178478b122e83e2767141620f4eb047e5f",
            "1": "6d351a63.9563a9cb.33fa5dbe.e22980a8.f1d9f854.7fda7c5e.cfef53f8.54d46e25.6d351a63.9563a9cb.33fa5dbe.e22980a8.d31a8364.c88789d5.84e2faac.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 29,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 29,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 20,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 29,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 29,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/HttpClientUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 16,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/handlers/session/URLRewritingSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 137,
                            "endLine": 137,
                            "startColumn": 19,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/handlers/session/URLRewritingSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 137,
                            "endLine": 137,
                            "startColumn": 13,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/handlers/session/URLRewritingSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 142,
                            "endLine": 142,
                            "startColumn": 31,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/handlers/session/URLRewritingSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 142,
                            "endLine": 142,
                            "startColumn": 23,
                            "endColumn": 30
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/Ssrf/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Unsanitized input from the HTTP request body flows into openStream, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
            "arguments": [
              "[the HTTP request body](0)",
              "[flows](1),(2),(3)",
              "[openStream](4)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "servlet/src/test/java/io/undertow/servlet/test/multipart/MultiPartServlet.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "startColumn": 46,
                  "endColumn": 64
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6544ad3c57140ed771dfc4180d0198d5bd560efc1fa368ba242078c8f6ce079e",
            "1": "e6fcc0e0.1cbd3ff4.ebe68776.ea4568bb.ae63d11c.f940a352.df7e59ba.598e73ab.19689298.970ad834.bb993ef0.e22980a8.dbf467a1.c88789d5.370ae7bc.635ac41f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/multipart/MultiPartServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 65,
                            "endColumn": 84
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/multipart/MultiPartServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 65,
                            "endColumn": 84
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/io/undertow/util/FileUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 46,
                            "endLine": 46,
                            "startColumn": 35,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/io/undertow/util/FileUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 48,
                            "endLine": 48,
                            "startColumn": 29,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/io/undertow/util/FileUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 48,
                            "endLine": 48,
                            "startColumn": 29,
                            "endColumn": 43
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/Ssrf/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an HTTP parameter flows into openStream, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1),(2),(3),(4),(5)",
              "[openStream](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "servlet/src/test/java/io/undertow/servlet/test/servletcontext/ReadFileServlet.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 40,
                  "endLine": 40,
                  "startColumn": 30,
                  "endColumn": 49
                }
              }
            }
          ],
          "fingerprints": {
            "0": "35497e85fa81ee6591e40a3cfae3c30584d14f4d1b74a430afe5b21863490145",
            "1": "19689298.0864ddd1.481cbae6.4eddf48e.6dbefcdf.ea25c240.9e67987f.fdedd133.19689298.c5d10016.fdbc0497.e22980a8.4f10cfb3.95df3f17.bf4053d9.fdedd133"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/servletcontext/ReadFileServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 38,
                            "startColumn": 23,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/servletcontext/ReadFileServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 38,
                            "startColumn": 23,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/servletcontext/ReadFileServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 38,
                            "startColumn": 16,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/servletcontext/ReadFileServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 24,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/servletcontext/ReadFileServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 13,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/servletcontext/ReadFileServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 40,
                            "endLine": 40,
                            "startColumn": 30,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/servletcontext/ReadFileServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 40,
                            "endLine": 40,
                            "startColumn": 30,
                            "endColumn": 49
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 353,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/InsecureHash/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in java.security.MessageDigest.getInstance) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The {0} hash (used in {1}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[MD5](0)",
              "[java.security.MessageDigest.getInstance](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/io/undertow/server/security/DigestAuthenticationAuthTestCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 96,
                  "endLine": 96,
                  "startColumn": 32,
                  "endColumn": 57
                }
              }
            }
          ],
          "fingerprints": {
            "0": "1e6ae2d2563b0dc14232ea5838a22215da10e4e7cb948b6e4658f99259524fb1",
            "1": "19689298.da263459.e99130b3.5e6ab657.3d2bca12.b70401ce.6dbe2d3b.c4e81b6c.19689298.da263459.e99130b3.5e6ab657.3d2bca12.b70401ce.6dbe2d3b.c4e81b6c"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/security/DigestAuthenticationAuthTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 96,
                            "endLine": 96,
                            "startColumn": 58,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/security/DigestAuthenticationAuthTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 96,
                            "endLine": 96,
                            "startColumn": 32,
                            "endColumn": 57
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/InsecureHash/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in java.security.MessageDigest.getInstance) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The {0} hash (used in {1}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[MD5](0)",
              "[java.security.MessageDigest.getInstance](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/io/undertow/server/security/DigestAuthenticationAuthTestCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 129,
                  "endLine": 129,
                  "startColumn": 32,
                  "endColumn": 57
                }
              }
            }
          ],
          "fingerprints": {
            "0": "395b74b8d7067e449f76caa971c797e9090e8fe33133fea2cd232606792b4a6b",
            "1": "19689298.da263459.e99130b3.5e6ab657.3d2bca12.b70401ce.6dbe2d3b.c4e81b6c.19689298.da263459.e99130b3.5e6ab657.3d2bca12.b70401ce.6dbe2d3b.c4e81b6c"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/security/DigestAuthenticationAuthTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 129,
                            "endLine": 129,
                            "startColumn": 58,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/security/DigestAuthenticationAuthTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 129,
                            "endLine": 129,
                            "startColumn": 32,
                            "endColumn": 57
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/InsecureHash/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in java.security.MessageDigest.getInstance) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The {0} hash (used in {1}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[MD5](0)",
              "[java.security.MessageDigest.getInstance](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "websockets-jsr/src/test/java/io/undertow/websockets/jsr/test/TestMessagesReceivedInOrder.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 170,
                  "endLine": 170,
                  "startColumn": 32,
                  "endColumn": 57
                }
              }
            }
          ],
          "fingerprints": {
            "0": "df6533a62c6e6563c11f4741a627c3b44a9df29b6c25fbaac69d0dc5928ba499",
            "1": "19689298.da263459.e99130b3.5e6ab657.98fa8f9f.f53a5558.0a026dee.54d46e25.19689298.da263459.e99130b3.5e6ab657.98fa8f9f.f53a5558.0a026dee.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "websockets-jsr/src/test/java/io/undertow/websockets/jsr/test/TestMessagesReceivedInOrder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 170,
                            "endLine": 170,
                            "startColumn": 58,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "websockets-jsr/src/test/java/io/undertow/websockets/jsr/test/TestMessagesReceivedInOrder.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 170,
                            "endLine": 170,
                            "startColumn": 32,
                            "endColumn": 57
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/InsecureHash/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in java.security.MessageDigest.getInstance) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The {0} hash (used in {1}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[MD5](0)",
              "[java.security.MessageDigest.getInstance](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "servlet/src/test/java/io/undertow/servlet/test/security/digest/DigestAuthTestCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 165,
                  "endLine": 165,
                  "startColumn": 32,
                  "endColumn": 57
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c145cea13f17702ac2ab9538798dc42af2ceab741b1537bfedb49514e220555f",
            "1": "19689298.da263459.e99130b3.5e6ab657.3d2bca12.b70401ce.6dbe2d3b.c4e81b6c.19689298.da263459.e99130b3.5e6ab657.3d2bca12.b70401ce.6dbe2d3b.c4e81b6c"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/security/digest/DigestAuthTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 165,
                            "endLine": 165,
                            "startColumn": 58,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/security/digest/DigestAuthTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 165,
                            "endLine": 165,
                            "startColumn": 32,
                            "endColumn": 57
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/InsecureHash/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "The MD5 hash (used in java.security.MessageDigest.getInstance) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The {0} hash (used in {1}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[MD5](0)",
              "[java.security.MessageDigest.getInstance](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/io/undertow/server/security/DigestAuthentication2069TestCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 81,
                  "endLine": 81,
                  "startColumn": 32,
                  "endColumn": 57
                }
              }
            }
          ],
          "fingerprints": {
            "0": "64bf3f2012f293f82c7b208506a6159212ccf64c7bf97f0020623f939fd09a3a",
            "1": "19689298.da263459.e99130b3.5e6ab657.3d2bca12.b70401ce.6dbe2d3b.c4e81b6c.19689298.da263459.e99130b3.5e6ab657.3d2bca12.b70401ce.6dbe2d3b.c4e81b6c"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/security/DigestAuthentication2069TestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 81,
                            "endLine": 81,
                            "startColumn": 58,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/security/DigestAuthentication2069TestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 81,
                            "endLine": 81,
                            "startColumn": 32,
                            "endColumn": 57
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword",
          "ruleIndex": 2,
          "level": "warning",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "examples/src/main/java/io/undertow/examples/http2/Http2Server.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 120,
                  "endLine": 120,
                  "startColumn": 13,
                  "endColumn": 32
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b8e0b04aa0b3fc69118f8de79ea1b910656654667477f33a9c162b8dde68fd9a",
            "1": "3c44fde5.1cbd3ff4.075f7928.383ea08e.d31a8364.e2f0b62f.bae646e8.54d46e25.4d9dffb9.92e378d2.075f7928.383ea08e.d31a8364.ce109560.bae646e8.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "examples/src/main/java/io/undertow/examples/http2/Http2Server.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 63,
                            "endLine": 63,
                            "startColumn": 50,
                            "endColumn": 60
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword",
          "ruleIndex": 2,
          "level": "warning",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "examples/src/main/java/io/undertow/examples/http2/Http2Server.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 134,
                  "endLine": 134,
                  "startColumn": 9,
                  "endColumn": 31
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0a01982c0af67030ef1c5a4a54f055fed63009c2cf9d9072f103dde11a62da84",
            "1": "19689298.1cbd3ff4.fc7d5400.d6ab05b5.079767d0.3965381b.1854910d.54d46e25.4d9dffb9.74742047.33fa5dbe.de031890.079767d0.7fda7c5e.1854910d.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "examples/src/main/java/io/undertow/examples/http2/Http2Server.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 63,
                            "endLine": 63,
                            "startColumn": 50,
                            "endColumn": 60
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/WebCookieMissesCallToSetHttpOnly/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Cookie misses a call to setHttpOnly. Set the HttpOnly flag to true to protect the cookie from possible malicious code on client side.",
            "markdown": "Cookie misses a call to setHttpOnly. Set the HttpOnly flag to true to protect the cookie from possible malicious code on client side.",
            "arguments": []
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "servlet/src/test/java/io/undertow/servlet/test/handlers/IsSecureFilter.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 45,
                  "endLine": 45,
                  "startColumn": 29,
                  "endColumn": 35
                }
              }
            }
          ],
          "fingerprints": {
            "0": "86388e28918a7443f2ffa1fce70e938981cae3926e4401ab30bb5d4ff0e57f2b",
            "1": "19689298.b2b6b83e.59997255.6c52ae28.4483622f.99961f89.9fde09a8.c50f08e7.19689298.b2b6b83e.59997255.e22980a8.46703249.99961f89.44634474.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/handlers/IsSecureFilter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 45,
                            "endLine": 45,
                            "startColumn": 29,
                            "endColumn": 35
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an HTTP header flows into getRequestDispatcher, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[an HTTP header](0)",
              "[flows](1)",
              "[getRequestDispatcher](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "servlet/src/test/java/io/undertow/servlet/test/dispatcher/IncludeServlet.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 43,
                  "endLine": 43,
                  "startColumn": 26,
                  "endColumn": 50
                }
              }
            }
          ],
          "fingerprints": {
            "0": "db9b50cc27f6cf92e703be2506697a67069c62f0296348d170d0c0d7afc2ebcf",
            "1": "69011c36.baeaa5e2.fdbc0497.c6929563.e463ef1d.7fda7c5e.5ac02bbc.30768c91.bd5b851f.c5d10016.fdbc0497.e22980a8.20ba597e.7fda7c5e.5ac02bbc.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/dispatcher/IncludeServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 51,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/dispatcher/IncludeServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 51,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/dispatcher/IncludeServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 26,
                            "endColumn": 50
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 351,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an HTTP header flows into getRequestDispatcher, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[an HTTP header](0)",
              "[flows](1)",
              "[getRequestDispatcher](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "servlet/src/test/java/io/undertow/servlet/test/dispatcher/ForwardServlet.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 42,
                  "endLine": 42,
                  "startColumn": 26,
                  "endColumn": 50
                }
              }
            }
          ],
          "fingerprints": {
            "0": "29abda26f018f1a45c28291c06389b3746abfcdb99ce6707251f8c60c68021fc",
            "1": "69011c36.baeaa5e2.fdbc0497.c6929563.e463ef1d.7fda7c5e.5ac02bbc.ac56be65.bd5b851f.c5d10016.fdbc0497.e22980a8.f0e1baa5.7fda7c5e.5ac02bbc.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/dispatcher/ForwardServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 42,
                            "endLine": 42,
                            "startColumn": 51,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/dispatcher/ForwardServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 42,
                            "endLine": 42,
                            "startColumn": 51,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/dispatcher/ForwardServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 42,
                            "endLine": 42,
                            "startColumn": 26,
                            "endColumn": 50
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 351,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an HTTP parameter flows into getRequestDispatcher, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1)",
              "[getRequestDispatcher](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "servlet/src/test/java/io/undertow/servlet/test/session/CrossContextServletSessionTestCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 288,
                  "endLine": 288,
                  "startColumn": 13,
                  "endColumn": 97
                }
              }
            }
          ],
          "fingerprints": {
            "0": "51dc4edd738dcf9eae010eb32ec59f8e61a13efce72f290f8b5be301dc24d344",
            "1": "3b50a494.86b21940.fdbc0497.c6929563.20f04eee.f4126b24.5ac02bbc.70eeb706.81dfce33.c5d10016.fdbc0497.e22980a8.f0e1baa5.95df3f17.5ac02bbc.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/session/CrossContextServletSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 288,
                            "endLine": 288,
                            "startColumn": 98,
                            "endColumn": 114
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/session/CrossContextServletSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 288,
                            "endLine": 288,
                            "startColumn": 98,
                            "endColumn": 114
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/session/CrossContextServletSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 288,
                            "endLine": 288,
                            "startColumn": 13,
                            "endColumn": 97
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an HTTP parameter flows into getRequestDispatcher, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1)",
              "[getRequestDispatcher](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "servlet/src/test/java/io/undertow/servlet/test/session/CrossContextServletSessionTestCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 297,
                  "endLine": 297,
                  "startColumn": 13,
                  "endColumn": 97
                }
              }
            }
          ],
          "fingerprints": {
            "0": "2e1ea126bdbfd16b38c4e85508bf47f3d993e8d101516547aa4fc6e3b0a6f695",
            "1": "3b50a494.86b21940.fdbc0497.c6929563.20ba597e.f4126b24.5ac02bbc.70eeb706.81dfce33.c5d10016.fdbc0497.e22980a8.20ba597e.95df3f17.5ac02bbc.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/session/CrossContextServletSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 297,
                            "endLine": 297,
                            "startColumn": 98,
                            "endColumn": 114
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/session/CrossContextServletSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 297,
                            "endLine": 297,
                            "startColumn": 98,
                            "endColumn": 114
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/session/CrossContextServletSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 297,
                            "endLine": 297,
                            "startColumn": 13,
                            "endColumn": 97
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an HTTP parameter flows into getRequestDispatcher, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1)",
              "[getRequestDispatcher](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "servlet/src/test/java/io/undertow/servlet/test/session/CrossContextServletSessionTestCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 311,
                  "endLine": 311,
                  "startColumn": 13,
                  "endColumn": 97
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b43a08b776192fd9df27a58fd5cc82ba356f34c4c85e06fddf5cb61bba1b43aa",
            "1": "3b50a494.86b21940.fdbc0497.c6929563.20f04eee.f4126b24.5ac02bbc.70eeb706.19689298.c5d10016.fdbc0497.e22980a8.f0e1baa5.95df3f17.d11a1cde.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/session/CrossContextServletSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 311,
                            "endLine": 311,
                            "startColumn": 98,
                            "endColumn": 114
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/session/CrossContextServletSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 311,
                            "endLine": 311,
                            "startColumn": 98,
                            "endColumn": 114
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/session/CrossContextServletSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 311,
                            "endLine": 311,
                            "startColumn": 13,
                            "endColumn": 97
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an HTTP parameter flows into getRequestDispatcher, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1)",
              "[getRequestDispatcher](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "servlet/src/test/java/io/undertow/servlet/test/session/CrossContextServletSessionTestCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 326,
                  "endLine": 326,
                  "startColumn": 13,
                  "endColumn": 97
                }
              }
            }
          ],
          "fingerprints": {
            "0": "fd49aa163fc1e813d4202b3ceaa34cc570ec16fdd447b189102a871522fc4631",
            "1": "3b50a494.86b21940.fdbc0497.c6929563.20ba597e.f4126b24.5ac02bbc.70eeb706.19689298.c5d10016.fdbc0497.e22980a8.20ba597e.95df3f17.d11a1cde.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/session/CrossContextServletSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 326,
                            "endLine": 326,
                            "startColumn": 98,
                            "endColumn": 114
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/session/CrossContextServletSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 326,
                            "endLine": 326,
                            "startColumn": 98,
                            "endColumn": 114
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/session/CrossContextServletSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 326,
                            "endLine": 326,
                            "startColumn": 13,
                            "endColumn": 97
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/InsecureHash",
          "ruleIndex": 5,
          "level": "warning",
          "message": {
            "text": "The MD5 hash (used in java.security.MessageDigest.getInstance) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The {0} hash (used in {1}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[MD5](0)",
              "[java.security.MessageDigest.getInstance](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/main/java/io/undertow/server/handlers/resource/DirectoryUtils.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 400,
                  "endLine": 400,
                  "startColumn": 32,
                  "endColumn": 57
                }
              }
            }
          ],
          "fingerprints": {
            "0": "beee1b311a50e170b65a1983ef17ed4851a0a0d9dcc2071ca36492d3cc180120",
            "1": "19689298.da263459.e99130b3.5e6ab657.98fa8f9f.f53a5558.0a026dee.54d46e25.19689298.da263459.e99130b3.5e6ab657.98fa8f9f.f53a5558.0a026dee.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/io/undertow/server/handlers/resource/DirectoryUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 400,
                            "endLine": 400,
                            "startColumn": 58,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/io/undertow/server/handlers/resource/DirectoryUtils.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 400,
                            "endLine": 400,
                            "startColumn": 32,
                            "endColumn": 57
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 501,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/InsecureHash",
          "ruleIndex": 5,
          "level": "warning",
          "message": {
            "text": "The MD5 hash (used in java.security.MessageDigest.getInstance) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The {0} hash (used in {1}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[MD5](0)",
              "[java.security.MessageDigest.getInstance](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/main/java/io/undertow/server/handlers/proxy/mod_cluster/MCMPAdvertiseTask.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 118,
                  "endLine": 118,
                  "startColumn": 18,
                  "endColumn": 43
                }
              }
            }
          ],
          "fingerprints": {
            "0": "9fc94f1f2cc1de189d454f2b5ebfa84028fdec1f1a25af8dfedf8045ed7c5f93",
            "1": "ca9876a9.da263459.33fa5dbe.e22980a8.98fa8f9f.7fda7c5e.0a026dee.54d46e25.ca9876a9.da263459.33fa5dbe.e22980a8.98fa8f9f.7fda7c5e.0a026dee.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/io/undertow/server/handlers/proxy/mod_cluster/MCMPAdvertiseTask.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 118,
                            "endLine": 118,
                            "startColumn": 44,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/io/undertow/server/handlers/proxy/mod_cluster/MCMPAdvertiseTask.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 118,
                            "endLine": 118,
                            "startColumn": 18,
                            "endColumn": 43
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/InsecureHash",
          "ruleIndex": 5,
          "level": "warning",
          "message": {
            "text": "The MD5 hash (used in java.security.MessageDigest.getInstance) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The {0} hash (used in {1}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[MD5](0)",
              "[java.security.MessageDigest.getInstance](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/main/java/io/undertow/security/impl/SimpleNonceManager.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 143,
                  "endLine": 143,
                  "startColumn": 20,
                  "endColumn": 45
                }
              }
            }
          ],
          "fingerprints": {
            "0": "977b252bd0ec4a8b645978917540597911206591d8d8e4f80294d8e52660fbd7",
            "1": "19689298.1cbd3ff4.e99130b3.c923b72d.d31a8364.b70401ce.32cf1276.c4e81b6c.d6deb347.79b830a5.33fa5dbe.de031890.d31a8364.7fda7c5e.32cf1276.c4e81b6c"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/io/undertow/security/impl/SimpleNonceManager.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 65,
                            "endLine": 65,
                            "startColumn": 52,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/io/undertow/security/impl/SimpleNonceManager.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 143,
                            "endLine": 143,
                            "startColumn": 20,
                            "endColumn": 45
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/InsecureHash",
          "ruleIndex": 5,
          "level": "warning",
          "message": {
            "text": "The SHA1 hash (used in java.security.MessageDigest.getInstance) is insecure. Consider changing it to a secure hash algorithm",
            "markdown": "The {0} hash (used in {1}) is insecure. Consider changing it to a secure hash algorithm",
            "arguments": [
              "[SHA1](0)",
              "[java.security.MessageDigest.getInstance](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/main/java/io/undertow/websockets/client/WebSocket13ClientHandshake.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 213,
                  "endLine": 213,
                  "startColumn": 42,
                  "endColumn": 67
                }
              }
            }
          ],
          "fingerprints": {
            "0": "fd2051eadd087ba6f22280d42cab6f311e1fabf04156a32477fa090988ae7ac0",
            "1": "9038722f.38559511.e99130b3.21a88f68.408180c7.b70401ce.6dbe2d3b.c4e81b6c.9038722f.38559511.e99130b3.21a88f68.408180c7.b70401ce.6dbe2d3b.c4e81b6c"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/io/undertow/websockets/client/WebSocket13ClientHandshake.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 213,
                            "endLine": 213,
                            "startColumn": 68,
                            "endColumn": 74
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/io/undertow/websockets/client/WebSocket13ClientHandshake.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 213,
                            "endLine": 213,
                            "startColumn": 42,
                            "endColumn": 67
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 501,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/RegexInjection",
          "ruleIndex": 6,
          "level": "error",
          "message": {
            "text": "Unsanitized input from the request URL flows into matches, where it is used in a regular expression. This may result in a Regular Expression Injection vulnerability which could lead to a Denial of Service attack.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used in a regular expression. This may result in a Regular Expression Injection vulnerability which could lead to a Denial of Service attack.",
            "arguments": [
              "[the request URL](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12)",
              "[matches](13)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "websockets-jsr/src/main/java/io/undertow/websockets/jsr/JsrWebSocketFilter.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 113,
                  "endLine": 113,
                  "startColumn": 89,
                  "endColumn": 114
                }
              }
            }
          ],
          "fingerprints": {
            "0": "66d8fd940c6431e202200c24ce730b04c04607b14a4cae9008cdf764cb9182a0",
            "1": "daf8aa0f.c72db6e5.0a9136a9.9998adc9.dd06b926.7fda7c5e.ce1d137b.54d46e25.dcd7ff17.89d9c37c.df6d55bc.de031890.dd06b926.7fda7c5e.40993f9e.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "websockets-jsr/src/main/java/io/undertow/websockets/jsr/JsrWebSocketFilter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 108,
                            "endLine": 108,
                            "startColumn": 47,
                            "endColumn": 62
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "websockets-jsr/src/main/java/io/undertow/websockets/jsr/JsrWebSocketFilter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 108,
                            "endLine": 108,
                            "startColumn": 47,
                            "endColumn": 62
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "websockets-jsr/src/main/java/io/undertow/websockets/jsr/JsrWebSocketFilter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 108,
                            "endLine": 108,
                            "startColumn": 24,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "websockets-jsr/src/main/java/io/undertow/websockets/jsr/JsrWebSocketFilter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 108,
                            "endLine": 108,
                            "startColumn": 17,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "websockets-jsr/src/main/java/io/undertow/websockets/jsr/JsrWebSocketFilter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 110,
                            "endLine": 110,
                            "startColumn": 18,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "websockets-jsr/src/main/java/io/undertow/websockets/jsr/JsrWebSocketFilter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 111,
                            "endLine": 111,
                            "startColumn": 24,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "websockets-jsr/src/main/java/io/undertow/websockets/jsr/JsrWebSocketFilter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 111,
                            "endLine": 111,
                            "startColumn": 17,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "websockets-jsr/src/main/java/io/undertow/websockets/jsr/JsrWebSocketFilter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 113,
                            "endLine": 113,
                            "startColumn": 115,
                            "endColumn": 119
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/io/undertow/util/PathTemplateMatcher.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 52,
                            "endLine": 52,
                            "startColumn": 37,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/io/undertow/util/PathTemplateMatcher.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 22,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/io/undertow/util/PathTemplateMatcher.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 67,
                            "endLine": 67,
                            "startColumn": 31,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/io/undertow/util/PathTemplateMatcher.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 79,
                            "endColumn": 96
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/io/undertow/util/PathTemplateMatcher.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 82,
                            "startColumn": 38,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/io/undertow/util/PathTemplateMatcher.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 82,
                            "startColumn": 17,
                            "endColumn": 37
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 751,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 7,
          "level": "note",
          "message": {
            "text": "Writing to an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Writing to](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/io/undertow/server/security/SimpleConfidentialRedirectTestCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 96,
                  "endLine": 96,
                  "startColumn": 13,
                  "endColumn": 35
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f4a55fdb8bc042444a5955b310ae7ca50457214da4aa23a127b06de5562b1af3",
            "1": "3b542730.49766a9f.bb993ef0.44ab356c.390f960b.85d83993.ec290f27.54d46e25.3b542730.49766a9f.bb993ef0.44ab356c.390f960b.85d83993.9695bb1e.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/security/SimpleConfidentialRedirectTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 96,
                            "endLine": 96,
                            "startColumn": 13,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/security/SimpleConfidentialRedirectTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 96,
                            "endLine": 96,
                            "startColumn": 13,
                            "endColumn": 35
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 7,
          "level": "note",
          "message": {
            "text": "Writing to an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Writing to](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/io/undertow/server/protocol/proxy/ProxyProtocolTestCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 291,
                  "endLine": 291,
                  "startColumn": 13,
                  "endColumn": 30
                }
              }
            }
          ],
          "fingerprints": {
            "0": "aeeed30a735d19546c52de5b71a3dbbadc7fe6fdf1184a050fe8754d08f8641f",
            "1": "19689298.49766a9f.bb993ef0.44ab356c.e27b77c0.85d83993.ec290f27.54d46e25.19689298.49766a9f.bb993ef0.44ab356c.e27b77c0.85d83993.9695bb1e.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/protocol/proxy/ProxyProtocolTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 291,
                            "endLine": 291,
                            "startColumn": 13,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/protocol/proxy/ProxyProtocolTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 291,
                            "endLine": 291,
                            "startColumn": 13,
                            "endColumn": 30
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 7,
          "level": "note",
          "message": {
            "text": "Writing to an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Writing to](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/io/undertow/server/protocol/proxy/ProxyProtocolTestCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 334,
                  "endLine": 334,
                  "startColumn": 13,
                  "endColumn": 30
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ea6a254401073bf72716f0886baf2b2cedbdb3da13f9863664ca95b617673362",
            "1": "19689298.49766a9f.bb993ef0.44ab356c.e27b77c0.85d83993.ec290f27.54d46e25.19689298.49766a9f.bb993ef0.44ab356c.e27b77c0.85d83993.9695bb1e.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/protocol/proxy/ProxyProtocolTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 334,
                            "endLine": 334,
                            "startColumn": 13,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/protocol/proxy/ProxyProtocolTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 334,
                            "endLine": 334,
                            "startColumn": 13,
                            "endColumn": 30
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 7,
          "level": "note",
          "message": {
            "text": "Writing to an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Writing to](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/io/undertow/server/protocol/proxy/ProxyProtocolTestCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 379,
                  "endLine": 379,
                  "startColumn": 13,
                  "endColumn": 30
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6368c70016103c5d6136277c083da1f8f4b2f8205ce1ec3e9fcf416b47031dd3",
            "1": "ac4e7c8b.49766a9f.bb993ef0.44ab356c.e27b77c0.ba2b7f9a.ec290f27.54d46e25.19689298.be62888c.bb993ef0.44ab356c.e27b77c0.85d83993.ec290f27.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/protocol/proxy/ProxyProtocolTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 379,
                            "endLine": 379,
                            "startColumn": 13,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/protocol/proxy/ProxyProtocolTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 379,
                            "endLine": 379,
                            "startColumn": 13,
                            "endColumn": 30
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 7,
          "level": "note",
          "message": {
            "text": "Writing to an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Writing to](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/io/undertow/server/protocol/ajp/AjpCharacterEncodingTestCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 86,
                  "endLine": 86,
                  "startColumn": 9,
                  "endColumn": 31
                }
              }
            }
          ],
          "fingerprints": {
            "0": "4a95cfa734aa068b8d7d81cf44a4e62336c98dd027c34ef6446d9626850e83aa",
            "1": "3b542730.49766a9f.bb993ef0.44ab356c.390f960b.85d83993.ec290f27.54d46e25.3b542730.49766a9f.bb993ef0.44ab356c.390f960b.85d83993.9695bb1e.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/protocol/ajp/AjpCharacterEncodingTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 86,
                            "endLine": 86,
                            "startColumn": 9,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/protocol/ajp/AjpCharacterEncodingTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 86,
                            "endLine": 86,
                            "startColumn": 9,
                            "endColumn": 31
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 7,
          "level": "note",
          "message": {
            "text": "Writing to an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Writing to](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/io/undertow/server/handlers/ChunkedRequestTrailersTestCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 117,
                  "endLine": 117,
                  "startColumn": 13,
                  "endColumn": 30
                }
              }
            }
          ],
          "fingerprints": {
            "0": "71dd2666ee6690b43efa59225742f1cf1d94179f4376b6f219c2504f6a4f43fb",
            "1": "19689298.49766a9f.bb993ef0.44ab356c.e27b77c0.85d83993.ec290f27.54d46e25.19689298.be62888c.bb993ef0.44ab356c.e27b77c0.85d83993.ec290f27.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/handlers/ChunkedRequestTrailersTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 117,
                            "endLine": 117,
                            "startColumn": 13,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/handlers/ChunkedRequestTrailersTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 117,
                            "endLine": 117,
                            "startColumn": 13,
                            "endColumn": 30
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 7,
          "level": "note",
          "message": {
            "text": "Writing to an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Writing to](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/io/undertow/server/handlers/ChunkedRequestTrailersTestCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 140,
                  "endLine": 140,
                  "startColumn": 13,
                  "endColumn": 30
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7050190506569460b6356567a54641fdabe0087b0e0deb8aa9264bd39a555726",
            "1": "ac4e7c8b.49766a9f.bb993ef0.44ab356c.c41fd899.a5becf45.ec290f27.54d46e25.19689298.be62888c.bb993ef0.44ab356c.c41fd899.85d83993.ec290f27.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/handlers/ChunkedRequestTrailersTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 140,
                            "endLine": 140,
                            "startColumn": 13,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/handlers/ChunkedRequestTrailersTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 140,
                            "endLine": 140,
                            "startColumn": 13,
                            "endColumn": 30
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 7,
          "level": "note",
          "message": {
            "text": "Writing to an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Writing to](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/io/undertow/server/handlers/BadRequestTestCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 63,
                  "endLine": 63,
                  "startColumn": 13,
                  "endColumn": 30
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3b814f378050af5999e0ae530e2bdb59a9bdcf498de455b6a4c62dce0f6570fb",
            "1": "19689298.49766a9f.bb993ef0.44ab356c.c41fd899.85d83993.ec290f27.54d46e25.19689298.be62888c.bb993ef0.44ab356c.c41fd899.85d83993.ec290f27.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/handlers/BadRequestTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 63,
                            "endLine": 63,
                            "startColumn": 13,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/handlers/BadRequestTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 63,
                            "endLine": 63,
                            "startColumn": 13,
                            "endColumn": 30
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 7,
          "level": "note",
          "message": {
            "text": "Writing to an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Writing to](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/io/undertow/server/ParseTimeoutTestCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53,
                  "startColumn": 30,
                  "endColumn": 52
                }
              }
            }
          ],
          "fingerprints": {
            "0": "84e3f0222aee520bd9e352dfbc7caff49ff134ec58ecf5cfc3850d9571b3a54c",
            "1": "ac4e7c8b.d4f2791a.bb993ef0.e22980a8.5927d787.7fda7c5e.be04624c.54d46e25.ac4e7c8b.d4f2791a.bb993ef0.e22980a8.5927d787.7fda7c5e.8c5f03ec.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/ParseTimeoutTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 53,
                            "endLine": 53,
                            "startColumn": 30,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/ParseTimeoutTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 53,
                            "endLine": 53,
                            "startColumn": 30,
                            "endColumn": 52
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 7,
          "level": "note",
          "message": {
            "text": "Writing to an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Writing to](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "servlet/src/test/java/io/undertow/servlet/test/upgrade/SimpleUpgradeTestCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 68,
                  "endLine": 68,
                  "startColumn": 28,
                  "endColumn": 50
                }
              }
            }
          ],
          "fingerprints": {
            "0": "186793403c9403fb8531fd3a4249177375fd66a8a2e5c8ef9a1a85ca6dfd3dae",
            "1": "3b542730.49766a9f.bb993ef0.e1c7b7e6.390f960b.1ca6e5b4.36de4586.54d46e25.3b542730.49766a9f.bb993ef0.6c52ae28.390f960b.85d83993.9695bb1e.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/upgrade/SimpleUpgradeTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 68,
                            "endLine": 68,
                            "startColumn": 28,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/upgrade/SimpleUpgradeTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 68,
                            "endLine": 68,
                            "startColumn": 28,
                            "endColumn": 50
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 7,
          "level": "note",
          "message": {
            "text": "Writing to an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Writing to](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/io/undertow/server/handlers/sse/ServerSentEventTestCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 264,
                  "endLine": 264,
                  "startColumn": 28,
                  "endColumn": 50
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d9af3057ca4d1014972b96bce674933a59b5f703803c8eb62c8c0417371495fa",
            "1": "3b542730.49766a9f.bb993ef0.e1c7b7e6.390f960b.1ca6e5b4.36de4586.54d46e25.3b542730.49766a9f.bb993ef0.6c52ae28.390f960b.85d83993.9695bb1e.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/handlers/sse/ServerSentEventTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 264,
                            "endLine": 264,
                            "startColumn": 28,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/handlers/sse/ServerSentEventTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 264,
                            "endLine": 264,
                            "startColumn": 28,
                            "endColumn": 50
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 7,
          "level": "note",
          "message": {
            "text": "Writing to an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Writing to](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/io/undertow/server/handlers/ReceiverTestCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 187,
                  "endLine": 187,
                  "startColumn": 37,
                  "endColumn": 59
                }
              }
            }
          ],
          "fingerprints": {
            "0": "132d0d2c6a743c80391079bd81a7c4ba90ce7c00573fd793ef83d7236d87c775",
            "1": "3b542730.49766a9f.bb993ef0.8bdc56f8.390f960b.48eeb24b.ec290f27.54d46e25.3b542730.49766a9f.bb993ef0.6c52ae28.390f960b.85d83993.ec290f27.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/handlers/ReceiverTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 187,
                            "endLine": 187,
                            "startColumn": 37,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/handlers/ReceiverTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 187,
                            "endLine": 187,
                            "startColumn": 37,
                            "endColumn": 59
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 7,
          "level": "note",
          "message": {
            "text": "Writing to an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Writing to](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "servlet/src/test/java/io/undertow/servlet/test/streams/ServletInputStreamEarlyCloseClientSideTestCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 71,
                  "endLine": 71,
                  "startColumn": 45,
                  "endColumn": 67
                }
              }
            }
          ],
          "fingerprints": {
            "0": "09c9168b315bbc1dd18a5c03770615c5cf545c4a37bee718695a71e28fa1a7dd",
            "1": "3b542730.49766a9f.6906ef50.8bdc56f8.c41fd899.48eeb24b.ec290f27.54d46e25.3b542730.49766a9f.6906ef50.6c52ae28.c41fd899.85d83993.ec290f27.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/streams/ServletInputStreamEarlyCloseClientSideTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 45,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/streams/ServletInputStreamEarlyCloseClientSideTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 45,
                            "endColumn": 67
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 7,
          "level": "note",
          "message": {
            "text": "Writing to an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Writing to](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/io/undertow/server/ConnectionTerminationTestCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 84,
                  "endLine": 84,
                  "startColumn": 41,
                  "endColumn": 63
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b7ccd8776483c6a02270caea3cac95fb0aa0000f6653f077151f465a38f077cc",
            "1": "3b542730.49766a9f.bb993ef0.8bdc56f8.390f960b.48eeb24b.ec290f27.54d46e25.3b542730.49766a9f.bb993ef0.6c52ae28.390f960b.85d83993.ec290f27.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/ConnectionTerminationTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 84,
                            "endLine": 84,
                            "startColumn": 41,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/ConnectionTerminationTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 84,
                            "endLine": 84,
                            "startColumn": 41,
                            "endColumn": 63
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 7,
          "level": "note",
          "message": {
            "text": "Reading from an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Reading from](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/io/undertow/server/security/SimpleConfidentialRedirectTestCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 97,
                  "endLine": 97,
                  "startColumn": 48,
                  "endColumn": 69
                }
              }
            }
          ],
          "fingerprints": {
            "0": "4ade10da101a8621fc4168b002602f3ce9edfbe23ae95900f88eac59956e6057",
            "1": "3b542730.1cbd3ff4.bb993ef0.ea4568bb.32bd8b25.f940a352.849771a7.0f01a149.3b542730.1cbd3ff4.bb993ef0.6c52ae28.32bd8b25.85d83993.9695bb1e.53382633"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/security/SimpleConfidentialRedirectTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 97,
                            "endLine": 97,
                            "startColumn": 48,
                            "endColumn": 69
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/security/SimpleConfidentialRedirectTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 97,
                            "endLine": 97,
                            "startColumn": 48,
                            "endColumn": 69
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 7,
          "level": "note",
          "message": {
            "text": "Reading from an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Reading from](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/io/undertow/server/protocol/proxy/ProxyProtocolTestCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 292,
                  "endLine": 292,
                  "startColumn": 48,
                  "endColumn": 64
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6d591a12d79763929a21c17f45e6db458df95b363b77cd66eb2d056855f10a86",
            "1": "ca9876a9.c6436c56.bb993ef0.ea4568bb.e27b77c0.f940a352.b8060686.0f01a149.19689298.c6436c56.bb993ef0.6c52ae28.e27b77c0.85d83993.9695bb1e.0f01a149"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/protocol/proxy/ProxyProtocolTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 292,
                            "endLine": 292,
                            "startColumn": 48,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/protocol/proxy/ProxyProtocolTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 292,
                            "endLine": 292,
                            "startColumn": 48,
                            "endColumn": 64
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 7,
          "level": "note",
          "message": {
            "text": "Reading from an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Reading from](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/io/undertow/server/protocol/proxy/ProxyProtocolTestCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 341,
                  "endLine": 341,
                  "startColumn": 48,
                  "endColumn": 64
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ba3f3804c7982d474f2570c659b53866b82ad130984f67675c28855b43a260eb",
            "1": "ca9876a9.c6436c56.bb993ef0.ea4568bb.e27b77c0.7fda7c5e.b8060686.0f01a149.19689298.c6436c56.bb993ef0.6c52ae28.e27b77c0.85d83993.9695bb1e.0f01a149"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/protocol/proxy/ProxyProtocolTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 341,
                            "endLine": 341,
                            "startColumn": 48,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/protocol/proxy/ProxyProtocolTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 341,
                            "endLine": 341,
                            "startColumn": 48,
                            "endColumn": 64
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 7,
          "level": "note",
          "message": {
            "text": "Reading from an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Reading from](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/io/undertow/server/protocol/proxy/ProxyProtocolTestCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 381,
                  "endLine": 381,
                  "startColumn": 48,
                  "endColumn": 64
                }
              }
            }
          ],
          "fingerprints": {
            "0": "02a54badc9b848a4d67b3c2205a89706870669083abe67d75c64f5b3c5fd1cfa",
            "1": "ca9876a9.1cbd3ff4.bb993ef0.ea4568bb.e27b77c0.f940a352.849771a7.0f01a149.19689298.be62888c.bb993ef0.6c52ae28.e27b77c0.85d83993.8c5f03ec.0f01a149"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/protocol/proxy/ProxyProtocolTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 381,
                            "endLine": 381,
                            "startColumn": 48,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/protocol/proxy/ProxyProtocolTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 381,
                            "endLine": 381,
                            "startColumn": 48,
                            "endColumn": 64
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 7,
          "level": "note",
          "message": {
            "text": "Reading from an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Reading from](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/io/undertow/server/protocol/ajp/AjpCharacterEncodingTestCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 87,
                  "endLine": 87,
                  "startColumn": 44,
                  "endColumn": 65
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0d58382e1c10e1947ac68bf0a5d7ffabaa33f63e2e6772c3679ea4c647e328fa",
            "1": "3b542730.1cbd3ff4.bb993ef0.ea4568bb.32bd8b25.f940a352.849771a7.0f01a149.3b542730.1cbd3ff4.bb993ef0.6c52ae28.32bd8b25.85d83993.9695bb1e.53382633"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/protocol/ajp/AjpCharacterEncodingTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 87,
                            "endLine": 87,
                            "startColumn": 44,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/protocol/ajp/AjpCharacterEncodingTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 87,
                            "endLine": 87,
                            "startColumn": 44,
                            "endColumn": 65
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 7,
          "level": "note",
          "message": {
            "text": "Reading from an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Reading from](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/io/undertow/server/handlers/ChunkedRequestTrailersTestCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 123,
                  "endLine": 123,
                  "startColumn": 25,
                  "endColumn": 41
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a8fee59a8b8510798b8103bb6123011273c2ef4d51f67097a1010a63b089cdd6",
            "1": "19689298.c6436c56.bb993ef0.9d18b1f2.e27b77c0.4c287daa.ff69cc14.0f01a149.19689298.be62888c.bb993ef0.6c52ae28.e27b77c0.85d83993.ff69cc14.0f01a149"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/handlers/ChunkedRequestTrailersTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 123,
                            "endLine": 123,
                            "startColumn": 25,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/handlers/ChunkedRequestTrailersTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 123,
                            "endLine": 123,
                            "startColumn": 25,
                            "endColumn": 41
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 7,
          "level": "note",
          "message": {
            "text": "Reading from an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Reading from](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/io/undertow/server/handlers/ChunkedRequestTrailersTestCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 145,
                  "endLine": 145,
                  "startColumn": 25,
                  "endColumn": 41
                }
              }
            }
          ],
          "fingerprints": {
            "0": "1699b838e1425ca79b6079ab48890cceea3e11cee494e8d8a6623adde0d0a213",
            "1": "19689298.83dbfe52.bb993ef0.9d18b1f2.c41fd899.a5becf45.ff69cc14.0f01a149.19689298.be62888c.bb993ef0.6c52ae28.c41fd899.85d83993.ff69cc14.0f01a149"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/handlers/ChunkedRequestTrailersTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 145,
                            "endLine": 145,
                            "startColumn": 25,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/handlers/ChunkedRequestTrailersTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 145,
                            "endLine": 145,
                            "startColumn": 25,
                            "endColumn": 41
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 7,
          "level": "note",
          "message": {
            "text": "Reading from an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Reading from](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/io/undertow/server/handlers/BadRequestTestCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 69,
                  "endLine": 69,
                  "startColumn": 25,
                  "endColumn": 41
                }
              }
            }
          ],
          "fingerprints": {
            "0": "faa6a0832962b9c37d43161ada827f50299be3169208c1833ca9177e70df688b",
            "1": "19689298.c6436c56.bb993ef0.9d18b1f2.c41fd899.a5becf45.ff69cc14.0f01a149.19689298.be62888c.bb993ef0.6c52ae28.c41fd899.85d83993.ff69cc14.0f01a149"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/handlers/BadRequestTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 69,
                            "endLine": 69,
                            "startColumn": 25,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/handlers/BadRequestTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 69,
                            "endLine": 69,
                            "startColumn": 25,
                            "endColumn": 41
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 7,
          "level": "note",
          "message": {
            "text": "Reading from an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Reading from](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/io/undertow/server/ParseTimeoutTestCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "startColumn": 29,
                  "endColumn": 50
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f98a89e0ce11514977e8f13538cf0437a874c26c2c65be0d42be6fc6f7b4ed1c",
            "1": "46a2157d.c6f63401.bb993ef0.e22980a8.5927d787.7fda7c5e.e85e8836.54d46e25.46a2157d.c6f63401.bb993ef0.e22980a8.5927d787.7fda7c5e.e85e8836.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/ParseTimeoutTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 29,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/ParseTimeoutTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 29,
                            "endColumn": 50
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 7,
          "level": "note",
          "message": {
            "text": "Reading from an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Reading from](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "servlet/src/test/java/io/undertow/servlet/test/upgrade/SimpleUpgradeTestCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 67,
                  "endLine": 67,
                  "startColumn": 26,
                  "endColumn": 47
                }
              }
            }
          ],
          "fingerprints": {
            "0": "9ec866e4263046478542256a515aad7e7987c3b25b99c31cb2f91093867e9bbb",
            "1": "3b542730.83dbfe52.bb993ef0.c48320d7.6dbefcdf.85d83993.94a33612.54d46e25.3b542730.83dbfe52.bb993ef0.c48320d7.6dbefcdf.85d83993.94a33612.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/upgrade/SimpleUpgradeTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 67,
                            "endLine": 67,
                            "startColumn": 26,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/upgrade/SimpleUpgradeTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 67,
                            "endLine": 67,
                            "startColumn": 26,
                            "endColumn": 47
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 7,
          "level": "note",
          "message": {
            "text": "Reading from an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Reading from](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/io/undertow/server/handlers/sse/ServerSentEventTestCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 263,
                  "endLine": 263,
                  "startColumn": 26,
                  "endColumn": 47
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a9aa3130c221167694291aa4a87a6e3f90b1191891d0f915a29cd2a9e9416b14",
            "1": "3b542730.83dbfe52.bb993ef0.c48320d7.c41fd899.85d83993.732df176.54d46e25.3b542730.83dbfe52.bb993ef0.c48320d7.c41fd899.85d83993.9695bb1e.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/handlers/sse/ServerSentEventTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 263,
                            "endLine": 263,
                            "startColumn": 26,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/handlers/sse/ServerSentEventTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 263,
                            "endLine": 263,
                            "startColumn": 26,
                            "endColumn": 47
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 7,
          "level": "note",
          "message": {
            "text": "Reading from an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Reading from](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/io/undertow/server/handlers/ReceiverTestCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 190,
                  "endLine": 190,
                  "startColumn": 9,
                  "endColumn": 30
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8c45fe73b65c9760d7c082ca4b482fb286eafac587fcf437b698faaf339f5a71",
            "1": "ac4e7c8b.c6f63401.bb993ef0.e22980a8.c41fd899.05f431a2.be04624c.54d46e25.3b542730.83dbfe52.bb993ef0.e22980a8.c41fd899.85d83993.8c5f03ec.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/handlers/ReceiverTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 190,
                            "endLine": 190,
                            "startColumn": 9,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/handlers/ReceiverTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 190,
                            "endLine": 190,
                            "startColumn": 9,
                            "endColumn": 30
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/UsageOfUnencryptedSocket/test",
          "ruleIndex": 7,
          "level": "note",
          "message": {
            "text": "Reading from an unencrypted socket is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "markdown": "{0} an unencrypted {1} is insecure - a man-in-the-middle attacker can tamper the messages. Consider using SSL sockets.",
            "arguments": [
              "[Reading from](0)",
              "[socket](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/io/undertow/server/ConnectionTerminationTestCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 87,
                  "endLine": 87,
                  "startColumn": 13,
                  "endColumn": 34
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5fc4fd484abefb878a26ed4bdffa6b9c366c2447792267d04bf72084294c6da9",
            "1": "ac4e7c8b.c6f63401.bb993ef0.e22980a8.c41fd899.05f431a2.be04624c.54d46e25.3b542730.83dbfe52.bb993ef0.e22980a8.c41fd899.85d83993.8c5f03ec.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/ConnectionTerminationTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 87,
                            "endLine": 87,
                            "startColumn": 13,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/ConnectionTerminationTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 87,
                            "endLine": 87,
                            "startColumn": 13,
                            "endColumn": 34
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/XSS/test",
          "ruleIndex": 8,
          "level": "note",
          "message": {
            "text": "Unsanitized input from the request URL flows into write, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "arguments": [
              "[the request URL](0)",
              "[flows](1),(2)",
              "[write](3)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "servlet/src/test/java/io/undertow/servlet/test/request/RequestPathServlet.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 43,
                  "endLine": 43,
                  "startColumn": 9,
                  "endColumn": 31
                }
              }
            }
          ],
          "fingerprints": {
            "0": "844f9cf27f799ed5ec8fa66b8b7c3addf6713a550ec231d239b5e7170cea144b",
            "1": "9e748df4.49766a9f.fdbc0497.8bdc56f8.390f960b.2f4e1548.5ac02bbc.54d46e25.e6fcc0e0.c5d10016.fdbc0497.e22980a8.390f960b.95df3f17.ce1d137b.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/request/RequestPathServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 32,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/request/RequestPathServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 32,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/request/RequestPathServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 32,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/request/RequestPathServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 9,
                            "endColumn": 31
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/XSS/test",
          "ruleIndex": 8,
          "level": "note",
          "message": {
            "text": "Unsanitized input from the request URL flows into write, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "arguments": [
              "[the request URL](0)",
              "[flows](1),(2),(3)",
              "[write](4)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "servlet/src/test/java/io/undertow/servlet/test/request/RequestPathServlet.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 45,
                  "endLine": 45,
                  "startColumn": 9,
                  "endColumn": 31
                }
              }
            }
          ],
          "fingerprints": {
            "0": "91e4a76f249379e4f0d4a10ee271dc6ad81b2056f6435777748540145c28a340",
            "1": "63c12074.49766a9f.fdbc0497.8bdc56f8.390f960b.2f4e1548.5ac02bbc.54d46e25.e6fcc0e0.c5d10016.fdbc0497.e22980a8.390f960b.95df3f17.ce1d137b.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/request/RequestPathServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 45,
                            "endLine": 45,
                            "startColumn": 32,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/request/RequestPathServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 45,
                            "endLine": 45,
                            "startColumn": 32,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/request/RequestPathServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 45,
                            "endLine": 45,
                            "startColumn": 32,
                            "endColumn": 60
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/request/RequestPathServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 45,
                            "endLine": 45,
                            "startColumn": 32,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/request/RequestPathServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 45,
                            "endLine": 45,
                            "startColumn": 9,
                            "endColumn": 31
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/XSS/test",
          "ruleIndex": 8,
          "level": "note",
          "message": {
            "text": "Unsanitized input from the request URL flows into write, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "arguments": [
              "[the request URL](0)",
              "[flows](1),(2)",
              "[write](3)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "servlet/src/test/java/io/undertow/servlet/test/request/RequestPathServlet.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 46,
                  "endLine": 46,
                  "startColumn": 9,
                  "endColumn": 31
                }
              }
            }
          ],
          "fingerprints": {
            "0": "96c3ecd3ec4683c8f4acf7bf1bb04ebea36db7d45b344cfef4f33d92dcaadbbc",
            "1": "9e748df4.49766a9f.fdbc0497.f4e3d304.390f960b.2f4e1548.5ac02bbc.54d46e25.e6fcc0e0.c5d10016.fdbc0497.e22980a8.390f960b.95df3f17.5ac02bbc.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/request/RequestPathServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 46,
                            "endLine": 46,
                            "startColumn": 32,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/request/RequestPathServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 46,
                            "endLine": 46,
                            "startColumn": 32,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/request/RequestPathServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 46,
                            "endLine": 46,
                            "startColumn": 32,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/request/RequestPathServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 46,
                            "endLine": 46,
                            "startColumn": 9,
                            "endColumn": 31
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/XSS/test",
          "ruleIndex": 8,
          "level": "note",
          "message": {
            "text": "Unsanitized input from the request URL flows into write, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "arguments": [
              "[the request URL](0)",
              "[flows](1)",
              "[write](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "servlet/src/test/java/io/undertow/servlet/test/errorpage/PathServlet.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "startColumn": 9,
                  "endColumn": 31
                }
              }
            }
          ],
          "fingerprints": {
            "0": "709d0bb0a3728b910af9e8df84239afb6448f9c426f2453b8c1522b00934c120",
            "1": "c2dee455.49766a9f.fdbc0497.3519ac88.390f960b.95df3f17.5ac02bbc.54d46e25.81dfce33.c5d10016.fdbc0497.e22980a8.390f960b.95df3f17.5ac02bbc.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/errorpage/PathServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 34,
                            "endLine": 34,
                            "startColumn": 32,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/errorpage/PathServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 34,
                            "endLine": 34,
                            "startColumn": 32,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/errorpage/PathServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 34,
                            "endLine": 34,
                            "startColumn": 9,
                            "endColumn": 31
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 353,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/XSS/test",
          "ruleIndex": 8,
          "level": "note",
          "message": {
            "text": "Unsanitized input from the request URL flows into write, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "arguments": [
              "[the request URL](0)",
              "[flows](1),(2)",
              "[write](3)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "servlet/src/test/java/io/undertow/servlet/test/path/PathMappingServlet.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 37,
                  "endLine": 37,
                  "startColumn": 9,
                  "endColumn": 21
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7341cd4c8e91f33524603e5825143ac977a630d42046da896541671ab24d94d7",
            "1": "e6fcc0e0.0fbce11a.fdbc0497.25ba5c76.390f960b.2f4e1548.ce1d137b.54d46e25.e12df969.c5d10016.fdbc0497.e22980a8.c41fd899.95df3f17.ce1d137b.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/path/PathMappingServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 37,
                            "endLine": 37,
                            "startColumn": 81,
                            "endColumn": 96
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/path/PathMappingServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 37,
                            "endLine": 37,
                            "startColumn": 81,
                            "endColumn": 96
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/path/PathMappingServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 37,
                            "endLine": 37,
                            "startColumn": 22,
                            "endColumn": 98
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/path/PathMappingServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 37,
                            "endLine": 37,
                            "startColumn": 9,
                            "endColumn": 21
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 353,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/XSS/test",
          "ruleIndex": 8,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an HTTP parameter flows into write, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1),(2)",
              "[write](3)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "servlet/src/test/java/io/undertow/servlet/test/request/RequestPathServlet.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 47,
                  "endLine": 47,
                  "startColumn": 9,
                  "endColumn": 31
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3f2d1f517294e326e54f377f3ac070a1d6547fcc6a4484bd509e3a271df2426f",
            "1": "c9f51d48.49766a9f.fdbc0497.01d9a3ef.390f960b.8e98e979.0ac97cd8.54d46e25.54a059af.c5d10016.fdbc0497.e22980a8.390f960b.95df3f17.0ac97cd8.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/request/RequestPathServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 47,
                            "endLine": 47,
                            "startColumn": 68,
                            "endColumn": 86
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/request/RequestPathServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 47,
                            "endLine": 47,
                            "startColumn": 68,
                            "endColumn": 86
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/request/RequestPathServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 47,
                            "endLine": 47,
                            "startColumn": 32,
                            "endColumn": 88
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/request/RequestPathServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 47,
                            "endLine": 47,
                            "startColumn": 9,
                            "endColumn": 31
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/XSS/test",
          "ruleIndex": 8,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an HTTP parameter flows into write, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1),(2),(3)",
              "[write](4)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "servlet/src/test/java/io/undertow/servlet/test/charset/EchoServlet.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 47,
                  "endLine": 47,
                  "startColumn": 9,
                  "endColumn": 21
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8a3d96ab68e41f9da2e7b71af159522a5df1ba705b02d8a646f1d261756278f6",
            "1": "bbbd7c96.09bdbc11.33fa5dbe.0d15a08b.390f960b.7fda7c5e.ec290f27.54d46e25.bbbd7c96.c5d10016.200bef2f.0d15a08b.c41fd899.7fda7c5e.39ae56eb.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/charset/EchoServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 42,
                            "endLine": 42,
                            "startColumn": 26,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/charset/EchoServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 42,
                            "endLine": 42,
                            "startColumn": 26,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/charset/EchoServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 42,
                            "endLine": 42,
                            "startColumn": 16,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/charset/EchoServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 47,
                            "endLine": 47,
                            "startColumn": 22,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/charset/EchoServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 47,
                            "endLine": 47,
                            "startColumn": 9,
                            "endColumn": 21
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 353,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/XSS/test",
          "ruleIndex": 8,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an HTTP parameter flows into write, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11)",
              "[write](12)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "servlet/src/test/java/io/undertow/servlet/test/util/ParameterEchoServlet.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 71,
                  "endLine": 71,
                  "startColumn": 9,
                  "endColumn": 21
                }
              }
            }
          ],
          "fingerprints": {
            "0": "af6e2f7b72c8b928f848e2fabddccacddc64a4a6ffe876cb4c0d4f5a77781f3c",
            "1": "54a059af.49766a9f.bb280ba3.6c52ae28.390f960b.2f4e1548.ec290f27.54d46e25.54a059af.c5d10016.c477e1dc.20d6260d.c41fd899.95df3f17.657bb8d3.a6e3d3bc"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/util/ParameterEchoServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 37,
                            "endLine": 37,
                            "startColumn": 33,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/util/ParameterEchoServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 37,
                            "endLine": 37,
                            "startColumn": 33,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/util/ParameterEchoServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 37,
                            "endLine": 37,
                            "startColumn": 18,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/util/ParameterEchoServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 33,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/util/ParameterEchoServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 47,
                            "endLine": 47,
                            "startColumn": 27,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/util/ParameterEchoServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 47,
                            "endLine": 47,
                            "startColumn": 27,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/util/ParameterEchoServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 47,
                            "endLine": 47,
                            "startColumn": 17,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/util/ParameterEchoServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 47,
                            "endLine": 47,
                            "startColumn": 17,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/util/ParameterEchoServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 13,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/util/ParameterEchoServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 13,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/util/ParameterEchoServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 22,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/util/ParameterEchoServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 22,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/util/ParameterEchoServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 9,
                            "endColumn": 21
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 353,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/XSS/test",
          "ruleIndex": 8,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an HTTP parameter flows into write, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1),(2),(3),(4)",
              "[write](5)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "servlet/src/test/java/io/undertow/servlet/test/charset/DefaultCharsetFormParserServlet.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 35,
                  "endLine": 35,
                  "startColumn": 9,
                  "endColumn": 37
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b0735672aef92e66cde2fd54065f07755c3b77f7b65d6676c23c87c98c0e767a",
            "1": "19689298.a643119f.261a459a.b1d3f3df.ac973172.2f4e1548.ec290f27.54d46e25.19689298.c5d10016.fdbc0497.44ab356c.ac973172.2af8dcd8.5ac02bbc.e8690e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/charset/DefaultCharsetFormParserServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 34,
                            "endLine": 34,
                            "startColumn": 28,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/charset/DefaultCharsetFormParserServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 34,
                            "endLine": 34,
                            "startColumn": 28,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/charset/DefaultCharsetFormParserServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 34,
                            "endLine": 34,
                            "startColumn": 16,
                            "endColumn": 90
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/charset/DefaultCharsetFormParserServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 35,
                            "endLine": 35,
                            "startColumn": 38,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/charset/DefaultCharsetFormParserServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 35,
                            "endLine": 35,
                            "startColumn": 38,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/charset/DefaultCharsetFormParserServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 35,
                            "endLine": 35,
                            "startColumn": 9,
                            "endColumn": 37
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 353,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/XSS/test",
          "ruleIndex": 8,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an HTTP parameter flows into write, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1),(2),(3),(4)",
              "[write](5)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "servlet/src/test/java/io/undertow/servlet/test/security/form/RequestParamEchoServlet.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 41,
                  "endLine": 41,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "9a4b645dc2fb5db9c6b5da4461ef09bf1e093a847cb81cecd633967726eb04ec",
            "1": "bbbd7c96.49766a9f.69da3c2e.9d8a433f.390f960b.7fda7c5e.ec290f27.54d46e25.bbbd7c96.c5d10016.69da3c2e.cd449163.390f960b.7fda7c5e.5ac02bbc.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/security/form/RequestParamEchoServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 36,
                            "endLine": 36,
                            "startColumn": 29,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/security/form/RequestParamEchoServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 36,
                            "endLine": 36,
                            "startColumn": 29,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/security/form/RequestParamEchoServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 36,
                            "endLine": 36,
                            "startColumn": 16,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/security/form/RequestParamEchoServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 41,
                            "endLine": 41,
                            "startColumn": 18,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/security/form/RequestParamEchoServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 41,
                            "endLine": 41,
                            "startColumn": 18,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/security/form/RequestParamEchoServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 41,
                            "endLine": 41,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 353,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/XSS/test",
          "ruleIndex": 8,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an HTTP parameter flows into write, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15)",
              "[write](16)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "servlet/src/test/java/io/undertow/servlet/test/security/form/SaveOriginalPostRequestTestCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 214,
                  "endLine": 214,
                  "startColumn": 13,
                  "endColumn": 25
                }
              }
            }
          ],
          "fingerprints": {
            "0": "01e604e598b4d2cd65f47fac975a9fcbcbb82c93db06a56945ca83cbdfa1d08f",
            "1": "54a059af.49766a9f.3fb79d23.25ba5c76.390f960b.bbf4b59f.ec290f27.54d46e25.e1d7cd7c.3d7268b6.2159a181.e22980a8.390f960b.95df3f17.393e4431.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/security/form/SaveOriginalPostRequestTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 204,
                            "endLine": 204,
                            "startColumn": 50,
                            "endColumn": 71
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/security/form/SaveOriginalPostRequestTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 204,
                            "endLine": 204,
                            "startColumn": 50,
                            "endColumn": 71
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/security/form/SaveOriginalPostRequestTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 204,
                            "endLine": 204,
                            "startColumn": 33,
                            "endColumn": 73
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/security/form/SaveOriginalPostRequestTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 208,
                            "endLine": 208,
                            "startColumn": 20,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/security/form/SaveOriginalPostRequestTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 209,
                            "endLine": 209,
                            "startColumn": 40,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/security/form/SaveOriginalPostRequestTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 209,
                            "endLine": 209,
                            "startColumn": 40,
                            "endColumn": 66
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/security/form/SaveOriginalPostRequestTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 209,
                            "endLine": 209,
                            "startColumn": 24,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/security/form/SaveOriginalPostRequestTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 210,
                            "endLine": 210,
                            "startColumn": 31,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/security/form/SaveOriginalPostRequestTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 210,
                            "endLine": 210,
                            "startColumn": 31,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/security/form/SaveOriginalPostRequestTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 210,
                            "endLine": 210,
                            "startColumn": 31,
                            "endColumn": 84
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/security/form/SaveOriginalPostRequestTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 210,
                            "endLine": 210,
                            "startColumn": 17,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/security/form/SaveOriginalPostRequestTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 210,
                            "endLine": 210,
                            "startColumn": 17,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/security/form/SaveOriginalPostRequestTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 211,
                            "endLine": 211,
                            "startColumn": 17,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/security/form/SaveOriginalPostRequestTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 211,
                            "endLine": 211,
                            "startColumn": 17,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/security/form/SaveOriginalPostRequestTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 214,
                            "endLine": 214,
                            "startColumn": 26,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/security/form/SaveOriginalPostRequestTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 214,
                            "endLine": 214,
                            "startColumn": 26,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/security/form/SaveOriginalPostRequestTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 214,
                            "endLine": 214,
                            "startColumn": 13,
                            "endColumn": 25
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/XSS/test",
          "ruleIndex": 8,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an HTTP parameter flows into println, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7)",
              "[println](8)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "servlet/src/test/java/io/undertow/servlet/test/multipart/forward/MultiPartCapableServlet.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 45,
                  "endLine": 45,
                  "startColumn": 13,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0f36cd41864d30b1f5dfa804a8217bf86c84500a2115f81c97464880c92f19c9",
            "1": "e6fcc0e0.c5667b7a.6c4186e2.25ba5c76.025462d2.117e971f.df7e59ba.54d46e25.e1d7cd7c.c5d10016.fdbc0497.e22980a8.025462d2.95df3f17.5ac02bbc.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/multipart/forward/MultiPartCapableServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 44,
                            "endLine": 44,
                            "startColumn": 46,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/multipart/forward/MultiPartCapableServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 44,
                            "endLine": 44,
                            "startColumn": 46,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/multipart/forward/MultiPartCapableServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 44,
                            "endLine": 44,
                            "startColumn": 46,
                            "endColumn": 76
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/multipart/forward/MultiPartCapableServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 44,
                            "endLine": 44,
                            "startColumn": 38,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/multipart/forward/MultiPartCapableServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 45,
                            "endLine": 45,
                            "startColumn": 28,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/multipart/forward/MultiPartCapableServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 45,
                            "endLine": 45,
                            "startColumn": 28,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/multipart/forward/MultiPartCapableServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 45,
                            "endLine": 45,
                            "startColumn": 28,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/multipart/forward/MultiPartCapableServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 45,
                            "endLine": 45,
                            "startColumn": 28,
                            "endColumn": 71
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/multipart/forward/MultiPartCapableServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 45,
                            "endLine": 45,
                            "startColumn": 13,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 353,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/XSS/test",
          "ruleIndex": 8,
          "level": "note",
          "message": {
            "text": "Unsanitized input from the request URL flows into print, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "arguments": [
              "[the request URL](0)",
              "[flows](1),(2)",
              "[print](3)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "servlet/src/test/java/io/undertow/servlet/test/util/PathTestServlet.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 37,
                  "endLine": 37,
                  "startColumn": 9,
                  "endColumn": 18
                }
              }
            }
          ],
          "fingerprints": {
            "0": "9ef8c8e3ef474c12bb91f37be46de441a760ca76517a00260dee6cf5886328c2",
            "1": "f9545bfc.4d5aa63a.fdbc0497.e1c7b7e6.e463ef1d.c03eb4a8.5ac02bbc.54d46e25.f9545bfc.c5d10016.fdbc0497.e22980a8.f0e1baa5.95df3f17.5ac02bbc.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/util/PathTestServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 37,
                            "endLine": 37,
                            "startColumn": 33,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/util/PathTestServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 37,
                            "endLine": 37,
                            "startColumn": 33,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/util/PathTestServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 37,
                            "endLine": 37,
                            "startColumn": 19,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/util/PathTestServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 37,
                            "endLine": 37,
                            "startColumn": 9,
                            "endColumn": 18
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/XSS/test",
          "ruleIndex": 8,
          "level": "note",
          "message": {
            "text": "Unsanitized input from the request URL flows into print, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "arguments": [
              "[the request URL](0)",
              "[flows](1),(2)",
              "[print](3)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "servlet/src/test/java/io/undertow/servlet/test/util/PathTestServlet.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 40,
                  "endLine": 40,
                  "startColumn": 9,
                  "endColumn": 18
                }
              }
            }
          ],
          "fingerprints": {
            "0": "31b6d4d29502f17c12637849fce2c9dbbf27365d2c91d3878964a172f4f76030",
            "1": "f9545bfc.96360c9e.fdbc0497.e1c7b7e6.a4d275bb.9d655239.cab6e713.54d46e25.f9545bfc.96360c9e.fdbc0497.e22980a8.f0e1baa5.95df3f17.cab6e713.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/util/PathTestServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 40,
                            "endLine": 40,
                            "startColumn": 36,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/util/PathTestServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 40,
                            "endLine": 40,
                            "startColumn": 36,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/util/PathTestServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 40,
                            "endLine": 40,
                            "startColumn": 19,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/util/PathTestServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 40,
                            "endLine": 40,
                            "startColumn": 9,
                            "endColumn": 18
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/XSS/test",
          "ruleIndex": 8,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an HTTP parameter flows into print, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1),(2)",
              "[print](3)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "servlet/src/test/java/io/undertow/servlet/test/util/PathTestServlet.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 38,
                  "endLine": 38,
                  "startColumn": 9,
                  "endColumn": 18
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3b28db84fe6c377e4848ac97ae5767ba4114c9213109078ca719428f2f797816",
            "1": "f9545bfc.4d5aa63a.fdbc0497.e1c7b7e6.a4d275bb.2f4e1548.5ac02bbc.54d46e25.f9545bfc.c5d10016.fdbc0497.e22980a8.f0e1baa5.95df3f17.ce1d137b.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/util/PathTestServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 38,
                            "startColumn": 37,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/util/PathTestServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 38,
                            "startColumn": 37,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/util/PathTestServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 38,
                            "startColumn": 19,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/util/PathTestServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 38,
                            "startColumn": 9,
                            "endColumn": 18
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/XSS/test",
          "ruleIndex": 8,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an HTTP parameter flows into print, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7)",
              "[print](8)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "servlet/src/test/java/io/undertow/servlet/test/response/contenttype/ContentTypeServlet.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 45,
                  "endLine": 45,
                  "startColumn": 9,
                  "endColumn": 31
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a9fc60b77b1194079934bc47eee5eab5c8464cedaf57394c4135170e90c761c7",
            "1": "6ba64e3e.c5d10016.6117280a.16cb9e7e.c362615b.620b6047.16062bba.54d46e25.27fcfd04.c5d10016.200bef2f.9998adc9.c362615b.95df3f17.39ae56eb.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/response/contenttype/ContentTypeServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 36,
                            "endLine": 36,
                            "startColumn": 30,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/response/contenttype/ContentTypeServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 36,
                            "endLine": 36,
                            "startColumn": 30,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/response/contenttype/ContentTypeServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 36,
                            "endLine": 36,
                            "startColumn": 16,
                            "endColumn": 61
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/response/contenttype/ContentTypeServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 36,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/response/contenttype/ContentTypeServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 40,
                            "endLine": 40,
                            "startColumn": 13,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/response/contenttype/ContentTypeServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 45,
                            "endLine": 45,
                            "startColumn": 32,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/response/contenttype/ContentTypeServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 45,
                            "endLine": 45,
                            "startColumn": 32,
                            "endColumn": 60
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/response/contenttype/ContentTypeServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 45,
                            "endLine": 45,
                            "startColumn": 32,
                            "endColumn": 90
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/response/contenttype/ContentTypeServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 45,
                            "endLine": 45,
                            "startColumn": 9,
                            "endColumn": 31
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 353,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/XSS/test",
          "ruleIndex": 8,
          "level": "note",
          "message": {
            "text": "Unsanitized input from the HTTP request body flows into println, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "arguments": [
              "[the HTTP request body](0)",
              "[flows](1),(2)",
              "[println](3)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "servlet/src/test/java/io/undertow/servlet/test/multipart/MultiPartServlet.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 46,
                  "endLine": 46,
                  "startColumn": 17,
                  "endColumn": 31
                }
              }
            }
          ],
          "fingerprints": {
            "0": "72719643f51ca81513de8bb7b5d346e094fe52e87864522268bdad96de8ce766",
            "1": "cd801087.970ad834.cd0428dd.25ba5c76.d5deaf2a.2f4e1548.370ae7bc.54d46e25.e12df969.c5d10016.fdbc0497.e22980a8.dbf467a1.95df3f17.370ae7bc.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/multipart/MultiPartServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 46,
                            "endLine": 46,
                            "startColumn": 43,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/multipart/MultiPartServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 46,
                            "endLine": 46,
                            "startColumn": 43,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/multipart/MultiPartServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 46,
                            "endLine": 46,
                            "startColumn": 32,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/multipart/MultiPartServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 46,
                            "endLine": 46,
                            "startColumn": 17,
                            "endColumn": 31
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/XSS/test",
          "ruleIndex": 8,
          "level": "note",
          "message": {
            "text": "Unsanitized input from the HTTP request body flows into println, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "arguments": [
              "[the HTTP request body](0)",
              "[flows](1),(2),(3)",
              "[println](4)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "servlet/src/test/java/io/undertow/servlet/test/multipart/MultiPartServlet.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "startColumn": 17,
                  "endColumn": 31
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f1629d2dc763e1363f435474805a66adc0b838ba84118723bc9e0cb3fa729d00",
            "1": "ca9876a9.1cbd3ff4.bb993ef0.25ba5c76.f55c5bb6.f940a352.1e0b62f4.54d46e25.e12df969.c5d10016.bb993ef0.e22980a8.dbf467a1.c88789d5.370ae7bc.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/multipart/MultiPartServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 65,
                            "endColumn": 84
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/multipart/MultiPartServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 65,
                            "endColumn": 84
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/multipart/MultiPartServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 46,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/multipart/MultiPartServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 32,
                            "endColumn": 87
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/multipart/MultiPartServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 17,
                            "endColumn": 31
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/XSS/test",
          "ruleIndex": 8,
          "level": "note",
          "message": {
            "text": "Unsanitized input from cookies flows into print, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "arguments": [
              "[cookies](0)",
              "[flows](1),(2),(3),(4),(5),(6)",
              "[print](7)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "servlet/src/test/java/io/undertow/servlet/test/spec/ValidCookieEchoServlet.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 26,
                  "endLine": 26,
                  "startColumn": 13,
                  "endColumn": 22
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6966eccb785aeffdfc9c6a2e12cfc25defad6995a089f24c877d8c4190cbfa1d",
            "1": "f9545bfc.93eb5886.f4d57abb.e1c7b7e6.ae63d11c.05613a3f.36de4586.77438af7.8df8fa68.c5d10016.59997255.e22980a8.f0e1baa5.99961f89.5ac02bbc.77438af7"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/spec/ValidCookieEchoServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 30,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/spec/ValidCookieEchoServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 30,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/spec/ValidCookieEchoServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 21,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/spec/ValidCookieEchoServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 26,
                            "endLine": 26,
                            "startColumn": 34,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/spec/ValidCookieEchoServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 26,
                            "endLine": 26,
                            "startColumn": 34,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/spec/ValidCookieEchoServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 26,
                            "endLine": 26,
                            "startColumn": 23,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/spec/ValidCookieEchoServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 26,
                            "endLine": 26,
                            "startColumn": 23,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/spec/ValidCookieEchoServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 26,
                            "endLine": 26,
                            "startColumn": 13,
                            "endColumn": 22
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/XSS/test",
          "ruleIndex": 8,
          "level": "note",
          "message": {
            "text": "Unsanitized input from cookies flows into print, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "arguments": [
              "[cookies](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7)",
              "[print](8)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "servlet/src/test/java/io/undertow/servlet/test/spec/ValidCookieEchoServlet.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 27,
                  "endLine": 27,
                  "startColumn": 13,
                  "endColumn": 22
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6522e49a6c73fd94fde0ab3fae239f4d7bd44b3b55bd5aa654295b69e4e5f148",
            "1": "f9545bfc.93eb5886.ac00ca05.e1c7b7e6.ae63d11c.05613a3f.36de4586.441316c4.8df8fa68.c5d10016.59997255.e22980a8.f0e1baa5.99961f89.5ac02bbc.441316c4"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/spec/ValidCookieEchoServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 30,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/spec/ValidCookieEchoServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 30,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/spec/ValidCookieEchoServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 21,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/spec/ValidCookieEchoServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 26,
                            "endLine": 26,
                            "startColumn": 34,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/spec/ValidCookieEchoServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 27,
                            "startColumn": 35,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/spec/ValidCookieEchoServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 27,
                            "startColumn": 35,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/spec/ValidCookieEchoServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 27,
                            "startColumn": 23,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/spec/ValidCookieEchoServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 27,
                            "startColumn": 23,
                            "endColumn": 58
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/spec/ValidCookieEchoServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 27,
                            "startColumn": 13,
                            "endColumn": 22
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/TooPermissiveHostnameVerifier/test",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "The verify method always returns true, which means that any hostname is accepted. Such behaviour is insecure.",
            "markdown": "The {0} method always returns {1}, which means that any hostname is accepted. Such behaviour is insecure.",
            "arguments": [
              "[verify](0)",
              "[true](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/io/undertow/testutils/TestHttpClient.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 60,
                  "endLine": 60,
                  "startColumn": 24,
                  "endColumn": 30
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8be958b748276926feaaabc57a11bdcc59dc6e18d01b7d93e90f0f4e94dfa376",
            "1": "6a40580a.528e35bc.85365f17.e22980a8.0681ed2b.eacd09e2.5b1ccecb.9c4228d3.6a40580a.528e35bc.85365f17.e22980a8.0681ed2b.eacd09e2.5b1ccecb.9c4228d3"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/TestHttpClient.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 60,
                            "endLine": 60,
                            "startColumn": 24,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/TestHttpClient.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 61,
                            "endLine": 61,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 351,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/TLS",
          "ruleIndex": 10,
          "level": "error",
          "message": {
            "text": "Implement secure HTTPS communication. Consider using latest TLSv1.2 instead of javax.net.ssl.SSLContext.getInstance.",
            "markdown": "Implement secure HTTPS communication. Consider using latest TLSv1.2 instead of {0}.",
            "arguments": [
              "[javax.net.ssl.SSLContext.getInstance](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "examples/src/main/java/io/undertow/examples/http2/Http2Server.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 143,
                  "endLine": 143,
                  "startColumn": 22,
                  "endColumn": 44
                }
              }
            }
          ],
          "fingerprints": {
            "0": "267580d22df4158f376e49a03d81f4fbb776a1afe7649c38e324a696bff76ff4",
            "1": "ca9876a9.1cbd3ff4.33fa5dbe.e22980a8.178caa9c.7fda7c5e.3d39ca0c.54d46e25.ca9876a9.1cbd3ff4.33fa5dbe.e22980a8.178caa9c.7fda7c5e.3d39ca0c.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "examples/src/main/java/io/undertow/examples/http2/Http2Server.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 143,
                            "endLine": 143,
                            "startColumn": 22,
                            "endColumn": 44
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 801,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HttpResponseSplitting/test",
          "ruleIndex": 11,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an HTTP parameter flows into addHeader and reaches an HTTP header returned to the user. This may allow a malicious input that contain CR/LF to split the http response into two responses and the second response to be controlled by the attacker. This may be used to mount a range of attacks such as cross-site scripting or cache poisoning.",
            "markdown": "Unsanitized input from {0} {1} into {2} and reaches an HTTP header returned to the user. This may allow a malicious input that contain CR/LF to split the http response into two responses and the second response to be controlled by the attacker. This may be used to mount a range of attacks such as cross-site scripting or cache poisoning.",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7)",
              "[addHeader](8)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "servlet/src/test/java/io/undertow/servlet/test/session/ServletURLRewritingSessionTestCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 222,
                  "endLine": 222,
                  "startColumn": 17,
                  "endColumn": 31
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d5f624a33afe420bdee24c59e5d7b769ef4757b67a2242fb37ca692a0f3e19af",
            "1": "2d06e3d6.c5d10016.73de8b2d.a88429f2.4a9c8cbc.e0f71c03.0855e612.54d46e25.2867f9ca.c5d10016.fdbc0497.e22980a8.0681ed2b.95df3f17.d11a1cde.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/session/ServletURLRewritingSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 221,
                            "endLine": 221,
                            "startColumn": 51,
                            "endColumn": 70
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/session/ServletURLRewritingSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 221,
                            "endLine": 221,
                            "startColumn": 51,
                            "endColumn": 70
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/session/ServletURLRewritingSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 221,
                            "endLine": 221,
                            "startColumn": 51,
                            "endColumn": 81
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/session/ServletURLRewritingSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 221,
                            "endLine": 221,
                            "startColumn": 46,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/session/ServletURLRewritingSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 222,
                            "endLine": 222,
                            "startColumn": 32,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/session/ServletURLRewritingSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 222,
                            "endLine": 222,
                            "startColumn": 45,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/session/ServletURLRewritingSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 222,
                            "endLine": 222,
                            "startColumn": 45,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/session/ServletURLRewritingSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 222,
                            "endLine": 222,
                            "startColumn": 45,
                            "endColumn": 61
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/session/ServletURLRewritingSessionTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 222,
                            "endLine": 222,
                            "startColumn": 17,
                            "endColumn": 31
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 12,
          "level": "error",
          "message": {
            "text": "Unsanitized input from a web form flows into java.nio.file.Files.newInputStream, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a web form](0)",
              "[flows](1)",
              "[java.nio.file.Files.newInputStream](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "servlet/src/main/java/io/undertow/servlet/spec/PartImpl.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 66,
                  "endLine": 66,
                  "startColumn": 44,
                  "endColumn": 64
                }
              }
            }
          ],
          "fingerprints": {
            "0": "97ab1ac9031a4bd76c802b9237141f5d6b3e58b74c7eb45e813ef107b1309056",
            "1": "ca9876a9.c2910c4d.33fa5dbe.3275918b.60755f77.7fda7c5e.ae922b4a.d663145d.9cf53582.c2910c4d.33fa5dbe.64e78e25.e4d8e7d9.7fda7c5e.ae922b4a.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/main/java/io/undertow/servlet/spec/PartImpl.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 66,
                            "endLine": 66,
                            "startColumn": 65,
                            "endColumn": 82
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/main/java/io/undertow/servlet/spec/PartImpl.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 66,
                            "endLine": 66,
                            "startColumn": 65,
                            "endColumn": 82
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/main/java/io/undertow/servlet/spec/PartImpl.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 66,
                            "endLine": 66,
                            "startColumn": 44,
                            "endColumn": 64
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 801,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 12,
          "level": "error",
          "message": {
            "text": "Unsanitized input from a web form flows into java.nio.file.Files.move, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to delete arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to delete arbitrary files.",
            "arguments": [
              "[a web form](0)",
              "[flows](1)",
              "[java.nio.file.Files.move](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "servlet/src/main/java/io/undertow/servlet/spec/PartImpl.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 113,
                  "endLine": 113,
                  "startColumn": 13,
                  "endColumn": 23
                }
              }
            }
          ],
          "fingerprints": {
            "0": "43263c7f079c0818381f7e32a6b0d7d1b53cee4d9c4ae9707ca1a0efdd01822d",
            "1": "2b469796.1cbd3ff4.33fa5dbe.d1a4322a.2cb34737.7fda7c5e.df7e59ba.54d46e25.2b469796.c2910c4d.33fa5dbe.e22980a8.d31a8364.7fda7c5e.bae646e8.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/main/java/io/undertow/servlet/spec/PartImpl.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 113,
                            "endLine": 113,
                            "startColumn": 24,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/main/java/io/undertow/servlet/spec/PartImpl.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 113,
                            "endLine": 113,
                            "startColumn": 24,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/main/java/io/undertow/servlet/spec/PartImpl.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 113,
                            "endLine": 113,
                            "startColumn": 13,
                            "endColumn": 23
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 801,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 12,
          "level": "error",
          "message": {
            "text": "Unsanitized input from a web form flows into java.nio.file.Files.copy, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a web form](0)",
              "[flows](1)",
              "[java.nio.file.Files.copy](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "servlet/src/main/java/io/undertow/servlet/spec/PartImpl.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 115,
                  "endLine": 115,
                  "startColumn": 13,
                  "endColumn": 23
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b4c7a2b99132deb255b206b1ad0c291a3cfdf8aae4b9c7148fe4e4082e1b32cf",
            "1": "2b469796.c6270086.33fa5dbe.e7b1f73f.2cb34737.7fda7c5e.df7e59ba.54d46e25.2b469796.c2910c4d.33fa5dbe.e22980a8.e4d8e7d9.7fda7c5e.62adb608.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/main/java/io/undertow/servlet/spec/PartImpl.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 115,
                            "endLine": 115,
                            "startColumn": 24,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/main/java/io/undertow/servlet/spec/PartImpl.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 115,
                            "endLine": 115,
                            "startColumn": 24,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/main/java/io/undertow/servlet/spec/PartImpl.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 115,
                            "endLine": 115,
                            "startColumn": 13,
                            "endColumn": 23
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 801,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 12,
          "level": "error",
          "message": {
            "text": "Unsanitized input from a web form flows into java.nio.file.Files.delete, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to delete arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to delete arbitrary files.",
            "arguments": [
              "[a web form](0)",
              "[flows](1)",
              "[java.nio.file.Files.delete](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "servlet/src/main/java/io/undertow/servlet/spec/PartImpl.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 122,
                  "endLine": 122,
                  "startColumn": 13,
                  "endColumn": 25
                }
              }
            }
          ],
          "fingerprints": {
            "0": "32cc904add8467f8365dfd0d323e84cb9fe0916d9f254b3fe356724ff527511d",
            "1": "ca9876a9.1cbd3ff4.33fa5dbe.64e78e25.a80fd256.7fda7c5e.df7e59ba.54d46e25.1b46a441.c2910c4d.33fa5dbe.e22980a8.d31a8364.7fda7c5e.bae646e8.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/main/java/io/undertow/servlet/spec/PartImpl.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 122,
                            "endLine": 122,
                            "startColumn": 26,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/main/java/io/undertow/servlet/spec/PartImpl.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 122,
                            "endLine": 122,
                            "startColumn": 26,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/main/java/io/undertow/servlet/spec/PartImpl.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 122,
                            "endLine": 122,
                            "startColumn": 13,
                            "endColumn": 25
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 801,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/WebCookieMissesCallToSetSecure",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Cookie misses a call to setSecure. Set the Secure flag to true to protect the cookie from man-in-the-middle attacks.",
            "markdown": "Cookie misses a call to setSecure. Set the Secure flag to true to protect the cookie from man-in-the-middle attacks.",
            "arguments": []
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/main/java/io/undertow/util/Cookies.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 293,
                  "endLine": 293,
                  "startColumn": 28,
                  "endColumn": 38
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7bc38cd1f4798c2b1ba40b7b5370234298af443200e62dc4b23414e5a92224a5",
            "1": "19689298.98dbaec4.718b2a23.6c52ae28.60644571.c0ff6378.533894bc.a0332ecc.92762d9a.98dbaec4.f5bbb76a.e22980a8.a1491c54.8f39bff6.acf36df5.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/io/undertow/util/Cookies.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 293,
                            "endLine": 293,
                            "startColumn": 28,
                            "endColumn": 38
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/WebCookieMissesCallToSetHttpOnly",
          "ruleIndex": 14,
          "level": "warning",
          "message": {
            "text": "Cookie misses a call to setHttpOnly. Set the HttpOnly flag to true to protect the cookie from possible malicious code on client side.",
            "markdown": "Cookie misses a call to setHttpOnly. Set the HttpOnly flag to true to protect the cookie from possible malicious code on client side.",
            "arguments": []
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/main/java/io/undertow/util/Cookies.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 293,
                  "endLine": 293,
                  "startColumn": 28,
                  "endColumn": 38
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b5cf75e1fa5ac5c418f00e061ed668ce0bd8b78cb01641a18e82a05c4814e2be",
            "1": "19689298.98dbaec4.718b2a23.6c52ae28.60644571.c0ff6378.533894bc.a0332ecc.92762d9a.98dbaec4.f5bbb76a.e22980a8.a1491c54.8f39bff6.acf36df5.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/main/java/io/undertow/util/Cookies.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 293,
                            "endLine": 293,
                            "startColumn": 28,
                            "endColumn": 38
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/OR",
          "ruleIndex": 15,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an HTTP parameter flows into sendRedirect, where it is used as an URL to redirect the user. This may result in an Open Redirect vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as an URL to redirect the user. This may result in an Open Redirect vulnerability.",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11)",
              "[sendRedirect](12)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "servlet/src/main/java/io/undertow/servlet/compat/rewrite/RewriteHandler.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 139,
                  "endLine": 139,
                  "startColumn": 17,
                  "endColumn": 38
                }
              }
            }
          ],
          "fingerprints": {
            "0": "dfe36e1f594d7896b136f20371ceb1ea3df9eaa60fc9427b60d5e7a7d3169986",
            "1": "b98c40f6.9c16ce80.1a98fad1.b0b31044.7d73cd7b.0d476878.30a34c88.54d46e25.54a059af.a97a70b8.9f9d2026.9998adc9.53e0e770.030e07ee.9589bd2d.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/main/java/io/undertow/servlet/spec/HttpServletRequestImpl.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 299,
                            "endLine": 299,
                            "startColumn": 61,
                            "endColumn": 84
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/main/java/io/undertow/servlet/spec/HttpServletRequestImpl.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 299,
                            "endLine": 299,
                            "startColumn": 61,
                            "endColumn": 84
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/main/java/io/undertow/servlet/spec/HttpServletRequestImpl.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 299,
                            "endLine": 299,
                            "startColumn": 16,
                            "endColumn": 86
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/main/java/io/undertow/servlet/compat/rewrite/RewriteHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 112,
                            "endLine": 112,
                            "startColumn": 38,
                            "endColumn": 60
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/main/java/io/undertow/servlet/compat/rewrite/RewriteHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 112,
                            "endLine": 112,
                            "startColumn": 24,
                            "endColumn": 62
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/main/java/io/undertow/servlet/compat/rewrite/RewriteHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 114,
                            "endLine": 114,
                            "startColumn": 44,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/main/java/io/undertow/servlet/compat/rewrite/RewriteHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 129,
                            "endLine": 129,
                            "startColumn": 25,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/main/java/io/undertow/servlet/compat/rewrite/RewriteHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 129,
                            "endLine": 129,
                            "startColumn": 25,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/main/java/io/undertow/servlet/compat/rewrite/RewriteHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 136,
                            "endLine": 136,
                            "startColumn": 21,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/main/java/io/undertow/servlet/compat/rewrite/RewriteHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 249,
                            "endLine": 249,
                            "startColumn": 40,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/main/java/io/undertow/servlet/compat/rewrite/RewriteHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 139,
                            "endLine": 139,
                            "startColumn": 39,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/main/java/io/undertow/servlet/compat/rewrite/RewriteHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 139,
                            "endLine": 139,
                            "startColumn": 39,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/main/java/io/undertow/servlet/compat/rewrite/RewriteHandler.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 139,
                            "endLine": 139,
                            "startColumn": 17,
                            "endColumn": 38
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/OR/test",
          "ruleIndex": 16,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an HTTP parameter flows into sendRedirect, where it is used as an URL to redirect the user. This may result in an Open Redirect vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as an URL to redirect the user. This may result in an Open Redirect vulnerability.",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1)",
              "[sendRedirect](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "servlet/src/test/java/io/undertow/servlet/test/request/RedirectServlet.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 16,
                  "endLine": 16,
                  "startColumn": 9,
                  "endColumn": 26
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c08d3649cf4075f5f04176611a8c2cf68ccca19350d7be1e487a5b03fd78799b",
            "1": "b98c40f6.c5d10016.fdbc0497.534ed91d.c8ddf119.95df3f17.5ac02bbc.54d46e25.b98c40f6.c5d10016.fdbc0497.e22980a8.c8ddf119.95df3f17.5ac02bbc.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/request/RedirectServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 16,
                            "endLine": 16,
                            "startColumn": 27,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/request/RedirectServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 16,
                            "endLine": 16,
                            "startColumn": 27,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/request/RedirectServlet.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 16,
                            "endLine": 16,
                            "startColumn": 9,
                            "endColumn": 26
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 351,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/WebCookieMissesCallToSetSecure/test",
          "ruleIndex": 17,
          "level": "note",
          "message": {
            "text": "Cookie misses a call to setSecure. Set the Secure flag to true to protect the cookie from man-in-the-middle attacks.",
            "markdown": "Cookie misses a call to setSecure. Set the Secure flag to true to protect the cookie from man-in-the-middle attacks.",
            "arguments": []
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "servlet/src/test/java/io/undertow/servlet/test/handlers/IsSecureFilter.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 45,
                  "endLine": 45,
                  "startColumn": 29,
                  "endColumn": 35
                }
              }
            }
          ],
          "fingerprints": {
            "0": "dd30b69ae6bff6230b98ea519a793ffdc5ee23424b6ada9f15e6ce706180f70d",
            "1": "19689298.b2b6b83e.59997255.6c52ae28.4483622f.99961f89.9fde09a8.c50f08e7.19689298.b2b6b83e.59997255.e22980a8.46703249.99961f89.44634474.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "servlet/src/test/java/io/undertow/servlet/test/handlers/IsSecureFilter.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 45,
                            "endLine": 45,
                            "startColumn": 29,
                            "endColumn": 35
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/TLS/test",
          "ruleIndex": 18,
          "level": "note",
          "message": {
            "text": "Implement secure HTTPS communication. Consider using latest TLSv1.2 instead of javax.net.ssl.SSLContext.getInstance.",
            "markdown": "Implement secure HTTPS communication. Consider using latest TLSv1.2 instead of {0}.",
            "arguments": [
              "[javax.net.ssl.SSLContext.getInstance](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/io/undertow/testutils/DefaultServer.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 197,
                  "endLine": 197,
                  "startColumn": 30,
                  "endColumn": 52
                }
              }
            }
          ],
          "fingerprints": {
            "0": "00e820569963eabd63399af3cd7c829ae1a3751a90f8781602cede894dc4427c",
            "1": "ca9876a9.1cbd3ff4.33fa5dbe.e22980a8.178caa9c.7fda7c5e.3d39ca0c.54d46e25.ca9876a9.1cbd3ff4.33fa5dbe.e22980a8.178caa9c.7fda7c5e.3d39ca0c.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/DefaultServer.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 197,
                            "endLine": 197,
                            "startColumn": 30,
                            "endColumn": 52
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 19,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/io/undertow/server/handlers/JDBCLogDatabaseTestCase.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 73,
                  "endLine": 73,
                  "startColumn": 14,
                  "endColumn": 39
                }
              }
            }
          ],
          "fingerprints": {
            "0": "280c9a6f5b53ab6073ba81fbab90f21b17fb2a6c02101acc1c134fd54463d2ad",
            "1": "4c09dc00.c6f61120.33fa5dbe.e22980a8.48a1c04b.7fda7c5e.17683b34.54d46e25.4c09dc00.c6f61120.33fa5dbe.e22980a8.48a1c04b.7fda7c5e.17683b34.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/server/handlers/JDBCLogDatabaseTestCase.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 73,
                            "endLine": 73,
                            "startColumn": 86,
                            "endColumn": 96
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 19,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/io/undertow/testutils/DefaultServer.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 163,
                  "endLine": 163,
                  "startColumn": 13,
                  "endColumn": 32
                }
              }
            }
          ],
          "fingerprints": {
            "0": "df9fa03a97f1ee011435a23c842e1cd12f4a1a99b1e09665b9dd0638ea4b970f",
            "1": "3c44fde5.bbc346ee.075f7928.383ea08e.d31a8364.ed386e51.bae646e8.54d46e25.4d9dffb9.dd05ec30.075f7928.383ea08e.d31a8364.ce109560.bae646e8.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/DefaultServer.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 136,
                            "endLine": 136,
                            "startColumn": 50,
                            "endColumn": 60
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "java/HardcodedPassword/test",
          "ruleIndex": 19,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found password string",
            "markdown": "Do not hardcode passwords in code. Found password {0}",
            "arguments": [
              "[string](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "core/src/test/java/io/undertow/testutils/DefaultServer.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 177,
                  "endLine": 177,
                  "startColumn": 13,
                  "endColumn": 35
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a2c37dfe211bf90f707ce8d460b80bff1ee5a78515e7a63d60872dac369ae8bf",
            "1": "19689298.bbc346ee.fc7d5400.e22980a8.079767d0.3965381b.1854910d.54d46e25.4d9dffb9.74742047.33fa5dbe.de031890.079767d0.7fda7c5e.1854910d.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "core/src/test/java/io/undertow/testutils/DefaultServer.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 136,
                            "endLine": 136,
                            "startColumn": 50,
                            "endColumn": 60
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        }
      ],
      "properties": {
        "coverage": [
          {
            "files": 19,
            "isSupported": true,
            "lang": "XML"
          },
          {
            "files": 1285,
            "isSupported": true,
            "lang": "Java"
          },
          {
            "files": 11,
            "isSupported": true,
            "lang": "HTML"
          }
        ]
      }
    }
  ]
}
